(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1229223,      24378]
NotebookOptionsPosition[   1217132,      23987]
NotebookOutlinePosition[   1217468,      24002]
CellTagsIndexPosition[   1217425,      23999]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "0.1"], 
    RowBox[{"Log", "[", 
     RowBox[{"Cosh", "[", 
      RowBox[{"0.1", "x"}], "]"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7473248235450373`*^9, 3.747324868551731*^9}, {
  3.747325040454358*^9, 3.747325068628519*^9}, {3.747325303705927*^9, 
  3.7473253265185204`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-200, 200}, {0., 193.06852003113528`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7473248361573343`*^9, 3.747324869065481*^9}, {
  3.747325049372362*^9, 3.7473250691967297`*^9}, {3.747325319387945*^9, 
  3.747325326988326*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Log", "[", 
     RowBox[{"Cosh", "[", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], "]"}], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747325631812578*^9, 3.747325654432927*^9}, {
  3.747325709494295*^9, 3.74732576304263*^9}, {3.747325823901795*^9, 
  3.747325854665989*^9}, {3.747326812112535*^9, 3.7473268124524384`*^9}, {
  3.747327194744433*^9, 3.747327195403867*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXmcjtX7x4cxM4gvhpCxjT0k+1KjcyhLtpAtW1myK7+iZAtJqTSMNdkL
xdiX7Pdtl33LOsTX9lWPkJ3Br577+pzxfO45/pmX9+u8zrnO51znOst9nnNi
O77f9N20YWFhj6PCwsL/+bv5SI6tT560cnfER+V+GJvBbXQ25ys/HG6lr53M
9tOq3s0NH3gpe6HWNZrrvOf+803vU00M/ymQNTLb4iZ63L5cZ+smNDA88WLM
kfhqDfRfwXxqGR7197NTH+WopROC6eMM35xcYOfRsy/r+CAvbfieUiWWdH6x
lP7e4xr8uPDJXj6G75R8bnjlGp5Ryp3o2Wn4YrEzv1cvw+dLvbx8mhs+WHQQ
3TTrBj1HZi5V7dhXET49wVlPcNYTnPUEZz3BWU/wT0hP8M9JT3DWE5z1BGc9
wVlPcNaTdYOetb5u1Hr5zTQ+PcFZT3DWE5z1BGc9wVlPcKdkqJ7gu0uG6gnO
eoKznuCsJzjrCc56sm7QM330hTv51yQ7rCc46wnOeoKznuCsJzjrCV6S9ASv
THqCs57grCc46wnOeoKznqxbaH+/7dMTPPX+ftunJ3jq/f22T0/w1Pv7bZ+e
4KwneOr9/bZPT/DU+/ttn57gqff32z49PZ0DFv8MWPwzYPHPgMU/Axb/DFj8
M+Cgv3cs2bxsyZ/fjIsS3mrljn6l4844oX4bcDgOgKfutwGL3wYsfhuw+G3A
4rcBi85JFp2TLDonWXROsuicZNE5yaJzkoNxKlTnJCdPwZlNOi9bSzonOTx+
gaeuc5JF5ySLzkkWnZMsOif5dN6Wq8y3hws+fJl1BmedwaFzgugMvoB0Bo+U
eo0VncG3kM4e//NlzK/KRU+83jMsfXWPn1q3ZV/5whfdonHQGZznXZL/ul9J
Z/AMYs8E0Rl8EekMzjqDs87gFn9WFn9WFn9WFn9WFn9WFn9WFn9W8Ode4s/g
Fn9WFn9WFn9WFn9WFn9WFn9WFn9Wlvhs0Tlg0Tlg0Tlg0Tlg0Tlg0TmgEJ/n
t/gyscfJceslPqsWqcdnZYnPFp0DFp0DFp0DFp0DFp0DPp1lfPTpDG6ZV/h0
BrfMK3w6g1vmFcoyr1CWeYVPT3DLvMKnJ7hlXuHTk3Wjea/Fb5Mtfpts8dtk
i98mW/w22eK3yT49wS3zXot/Jlv8M9nin8kW/0y2+GeyT09ZX2jLukxb1mXa
si7TlnWZtqzLtGVdpi3rMm1Zl2nLukxb1mXasi7TlnWZtqzLtGXfwKcnuGXf
wKcnuGXfwKcnuGXfQFv2DbRl38CnJ7hl38CnJ7hl38CnJ+tG+1o+PcEt+1o+
PcEt+1o+PcEt+1rasq+lLftaPj3BLftaPj3BLftaPj1Zt1HB/PO6Xfasf72W
E+7+9dboUUP3PKdneVyDR7b2ONIXqXe2R2yJMPfaC9m7PJ0ePKqMx5He6xc3
nKQXQ9OD33oxNL3X7hedFm1D7QF/r22oPcKVJb3i9FKustij2B6pl7bUV3N9
RTdt0VNDz+Mts1c+VbmlO7fRdyW6t4hyO3d6dsmQjC2Nn4Nze4EvXBw29+n8
wbcJD9Unwi16pt2Up9NjnzPuYPH5//KTnj0mny6h9mibPdiP+m7Z+Y/8eqZx
lxL3yr3vHH759RZP2wm+lrjZT2jXp/W/vEN5b75drv39h5eq3XAax/z49YIz
lx2kx7o4bGVoueC5hWMdCr962HX5wLVD9zuh6fc4x5aE6gnuCO+1udlT69k9
TljWmL31wqaQPXsU0lP+KvX8k1T2s1579Qq1Uz0QO6m+ylJfhfqueqPqyYMV
+q4X3RR0o3ZRlnZR3C6YP8S19dqF/EFb/EGzP4hfafgt9Qtt6Re+OAa+kPwf
ca+I+Dn5v7b4v4b/gyM9OOxEP4KdVK5bhPIHRz6h7ZXsNBM9Q3mSU4r8Af4D
fwuNe7dVl3ah+WA8rS5xgOxnnTXrTPm4yIf8wYlrm1q5tx3YQ37uwM/BsY/B
7SV8XRxx9JdSlI9ZL7RLTc9k1Yz8FvogTg4O8kzu0QURTQedSOve0pXrrY6M
MtzT566z9ZN1gcIRKdwbF647K2t26JbuqfSe/59z3v9jbqZeUSncs2e9s6Bb
9/QN0qdwr12uqBKzG4WU+78D/aJGX32gDmdcFVLuih6TOv6ROY1eVad+SLl3
Ah/W+M+cdLrE3TEh5Qp3wRd6XIO3Ig4dCtcI1UHKdVEu0oNfJl7izaaXlox4
7CS+Vj9r36fs98bHm86sQa2DHOmh50XSU/RxoA/Sg7ciDv1nkP7CFdqF0qsZ
xNEurahdxE6Fdif71UXiUl91UOqLfEQfNUj0IT31ZWpfaRcN/6T20mgval/N
7ZuzzH/LzuwT6cbumpsvOYrtD3Ovblq4eeVT9ogfOuHPeH4Ijn5xm/oF0rPf
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
8WXEV2dqTw53h3Wa+U2V6r0VxXnNcT4xx7UVr14K15czjMua7cWJivJ3OX9J
73J6sdNlO6VeiuslOmjWQezXsB/xFnFj7M5ydadtmGvi8HLpd9l+2Bz2Wpod
hqPflXv92OkKaxdzu2hul7cju27o8WKU7jc1usGl4Vt4/eJi/QJ+deLucV0H
R7n9OveYXfn1rYrKdVEu2emyneiPqBflr5E/jbMuxlnkg37ask/FMacTjzhU
Lxf1Qnr0ozp9zpS/l2OT4ehHn8xYmmv8nG2Go180k/wpH23JR3M+mKdh3EQ/
wvej7IMbJn579bixv/+wTwsW6pmsau7L9uG0/CdMuRgvfplVYWLr0geYa3Cs
1zh//dLyKs+UPu80jW82PPv791WzAm1PtLqf5JA9DtJTPo7FTgd2Uv4O8i/5
UsLuJ7+n/F5+Va3xtX5Y3lwnzMhy+InT1Hwnzb8gW8MfxjU1HOnBb2XIs/KJ
esOkzxSb/+falxsZjvTgW4PfT+ua9Kf/zL269ry6hiM9+PhguTVN+oWrsu+o
3bWm4UgPviOYT1WTPnt4vsTRjaoajvTphe8J8hImfeaYTt/FTCuuV3vc7M+3
Seo+6V++wcvH8KtpvXziPXvM94KfxB5wc/+AcNerr0l/QuoLjvTg1z09TfoM
oic40oOP8drLpM8r7QWO9OAlPH8w6VeIP4AjPTj8B/sk7D/g7Cfg7A9mX53a
HZzbF/yG6I/2Am8/8UHC0+0Ffpnay9xjQO0CzvqDs87grCc464bvBawbOOsG
zrqBs27grBv4GdINvFCpXvFP6wbOfg7OuoGzbuCsGzjrBs66Yd+JdQNn3cBZ
N3DWDZx1A2fdwF8j3cBZN3MvAekGzrqBs27grBt46v4WsPhbwOJvAYu/BSz+
FrD4W8BBPw0L/suxAb/rL7vC+91oqB8GnPnUf8G5/4Kn7ocBix8GLH4YsPhh
wKJnkkXPJIueSRY9kyx6Jln0THIwfoXqmeQMjfF+7xyqZ5IzmcYv8NT7dZJF
zySLnkkWPZMseib59MTv6FlPcNYTPDPpCZ5EeoInkp5HmnXLu2b93ZdzkJ49
5Pf43v/zVYeef+5Lqjri1tl19/N48wTouXXs7PnTW91a9xfpid/RzyM9wY+T
nuZ3/aQnOOsJbvFPZfFPZfFPZfFPZfFPZfFPxf4JbvFPZfFPZfFPZfFPZfFP
ZfFPZfFPZYmfFj0DFj0DFj0DFj0DFj0DyhI/VcHU46eyxE9liZ8WPQMWPQMW
PQMWPQM+PfEdyjKO+/QEt4zjPj3BLeO4sozjyjKO+/zQ3AOQ+jju0w3cMo77
dAO3zBstfphs8cNkix8mW/ww2eKHyT7dwC3zRkv/Tbb4W7LF35It/pZs8bdk
n2743mpZp2jLOkVb1inask7RlnWKtqxTtGWdoi3rFG1Zp2jLOkVb1inask7R
qffTCJ9u4Kn30wifbuCp99MIn27gGEdoPa4t63H9ONV+GuHTDTz1fhrh0w08
9X4a4dMN+0uWfRWfbuCWfRKfbuCWfQ+dnXQD53kLOHSmfQyfbua8fer7Ej7d
wKEb9Nkv59lYn9yyH8j6vCPndlifn+T7DutzQ84psT7VZF+R/eqA2PPoRLHx
T+sDeziOwR7WB/awPrCH9XlJ7GF9cK6P9cH+M+tTQM7LsT5d5fsa67NEzr+x
Pvdk35jjVbzYU3f3GxOe1ue42MP6wB7WB/awPrCH9bkv9nC/qyHn+rjfTZFz
j6xbKdmXZt3Wy7ky1q2Y7Ouybu/LOUDoBn2mSrlvfX52zNP6lJZyWZ8NUi7r
g3JZH5TL+qyW/XzWJ+yhd46R9fH8+Y5Pn5/l9yCsj+ef93z67JLvmKxPGzk/
xvrkkXKrFCgc0r8WSLmsz8tSLuuDclmftlIu63NV9slZnyFy/o318fzkL58+
xeV3jqyPp/8Nnz515XccrM+JYH/527eu7y7fAXmen0n2H0rQPL+c2Bk5MtTf
nhc7Wc81YifrCTtZz5NiJ+vZU+xkPZOD/fSWT09Pt7M+PevJ71BYz17B/M/7
9Bwt58NZz0VB/7ls9IRu2WSf4SytN18Qe2L3hMaxRmIP6/ae2MO6wR7WbbHY
w7odkt85sm63gv75h0+3skH7E326lZXffbBuPwbt2ebwfkgR+V0J74c0D9b3
oE+34B99YL33/zxm32O02BP5avGQ/ttA7OF9j7liD+97FBR7WLcWYg/rNlXO
+bNuZ4N6nvDpttnjvvXRIPl9GetW1SvXtz76Xzbv9zLsb129eqlE0u1xNm/f
gP1tldjD84p+Yg/7WyWxh/0tIPbwflF3sYd1W5zN+70J66aCPNG3Prro+aFP
t83yO2jWbabn5z7dPpXfi7Fu7b1+5FtXVpffoXDcSyv7Bhz3fhc7J9I8ZKPY
yXpOFztZT9jJfthO7PTN08RO1jO3F098et7y4qFPz05y/oT1POTFW5+eNeVc
Meu51IvnisfZv6XciTQP6SDlsj4HpVzWB+X65mlSLutTQH5nzfrk9cYpnz4f
yfl21ueifB9nfZrJOXbWZ6ucg2J9KnjzB58+faVcnoecl3JZnzelXNYH5bI+
5aVc1meW/M6I9cnqzYt8+uB3OqwPznexPj3ldzGsT2E5h8D6rJTfp3B/LCrn
K3j+/1Ds2Ul+tUzsYd1gD+sGe1i3FWIP61ZY7GHdEuR3N6xbdfkdE+t2S87h
sG6J8rsh1q2znCdk3WLkdzrsV3FS7hGKSyiX93NQLuuDclkflOubV8i5Hdbn
K/mdEeuD33OxPjgnw/pcld/jsD5z5Fwc69NWfk/E+gyWcndVPjP5aX0qSbm8
b4NyWR+U65v/S7msT3Y5FwR9cN5Dy/rxf9Je4F/LOrcd8Sfyu7DT4v/UL1z0
C6R/IPPhBcRjZd6eZ2QovybzwPlSLo13zkSyJ5+MO5X2hHLJR82n9FKuQrm0
jlCRZM946V+9yX7RQZ8mLrrpdmS/7Bto7BuQH5r9DeQzTPgZ8RPwPbI/M5M4
zqW8L/uBtN/lYr8L/WK45M/nW3ZL/ivIHpzf+ED2acGjZT1brM7lb/323Hbe
kv1wzGfKy/14iXm8e96QHt+XHckf6fF7WPdd73650O8+e5ywx3mC94whn2My
z9xM+pjvdKIP5a+QP9mj2J4ack9d5ZhQ+wfJeMo6YB++iuhAemroSftv+hux
n/YJtcVPNPsJ9htxjovaV3O7iz/4OPKx7Osavw39vrlHcbvgHAvrYL7vS7uA
47412E9+pd6ifLD//D61b1nyN/Bh4lcHyK9ueusLZ+gTz37wr8VPOH1FS/5p
ab+C8vGVGx0dum4iO33lZqJ1ATjuoUou5t3zA477LvQs714g8EfZQvcHwGOi
U9cB9y2EXe8QvHeI1stxWC+D35L1GueDe6XeeezddwSOe5CY494ALhe/3+d6
4b4j1kHaS3F75Y1O3U7cxzJ0onfvDXEHHON4RdnHvkrzRvz+Yq30U3AZr928
J4ulNg93OB/8biKtxBlwmW87pWk+L+trXz64ZyOJ7HlX9ise1kx1f0P9lXo+
ivORfQzF9ZJ9TmWpl+J6yX6m4nrJfNKnM35Hk0Djr8xL3XT5PHvAsd9+PK/H
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
/+R2h53M0b7MoT/4/wPHqoLn
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmwf81tP7xp/POJ9jhuwd2WQnm0Jky0iRTSRZadjRsIqSTSl7lIiMiEQp
ISWjRRoqoRAa+L8v1/m/fq9Xp/t6znOezzjnPve4zv3d6rzLm7fPa7XaLWWt
ViC/QK6NfCTUapeAd8hqtdZJbkFbzne9qlptc/AeyL/48Qn07cqYG+k7n7aC
z035fC3yCORWXPg68Hngq/lNPcbsjTyez6uCtwVfBN4efCayia7L+DOQrWnr
0b8T8ivkobSK1oJrvsaYfRh/Dt9tSN8uyGP5/Cr9eyOPoT0NPhp5FO128O7I
Oxi7JW0Zn9vxeUfwWcgLkfvR/qX/Eq71D3Iz5D2V331P5ImVf7sXcjN+8zFj
LtX70XcpbWPacen67fhua767Hvmg5oO+i2kbqUXG0Tc2+ndr0erQTqRvIuNP
QHbg89W0NWkn8fkj+ttyvZbgB8GPaW5pn4OvpP9o2jPggfRtw3XfRP6BbIE8
k/5+yMCY1uA24Pt5h/pce1/kQtbxUPrvpn8KfUfSNqWdxuc96L8TuTHXaouc
jRzJ+A3o78Hn02mXgl9BtqK9D34a+SW/P5gWaFtxjxJ5IHI3nuEOxlygayWs
viL3b3aitaLtTJvDd1cw7oDM42uZ8ffAYyu/x1yepxF9x2bWmxPSGmj+t0xY
az09sw7tnPpOSLr6nXSHNg98auX76zkPq/xsJ1fWyX3oL5I+6n7f8t1i6RR4
KnIRrQH4a+SINM+a748KP8u6yGP4fjvadD4P4fPxyD957xn6XXqOtrQ1aKtr
3SvvnbZJ907ScyNfpG0DHlJ5nbRevzGuGfII2q/gbzOP0fMMZtwZ4JZ6D1oB
7ogcrrXJvDa78zx3MnZP5vRUPm+Qedz6la+3G3L9zM/wd833PCrdV/uvCe0H
7T3k0bSl4Mal5RnI9rQTM+tQRB5Cm8t3q1Ze562RkTYbvHPlva41qQ/OtCaZ
1+OUhDWuGd9tC94feTnX3TeznTlZ+sf3zZHXyIbR1qF15h1l74bxX5fCNu81
8LUAqdfr4OvAmL/am+DfpWvp92MYcKvmDdmdMeswZjhjzqHvF/DPtJvoXxX5
Hv3XgyvpArhbYbv6KrgHuC74DXAv8MbgD8E9weuC3wLfBd4IPBp8N3hT8Dhw
P/BW4E/B94LrgT8B38cz9KPV53Nv+jdBjqW/L3hL8ATwLeA1wGPAXcGrgz8A
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
Vtpf4uFmZ+YvxNnr7EBnDbKF8qHy5YpRxavLhi3P7F/1/d+ZfYz8inyyfIz8
i/zKb6lPuZbOBmT3dP9FqU++7pf0XLrnwsx5tcbOTfeU75qX9kir9BuN/zcz
16Hxf9J+StfU7xan355e+T3F2Ys0+zW9t9715/S+ik/mZ96PDdJciOfXNWak
66xM79kxPfuf6V6av78y2ym96z/pfRem5zs4zV/MzdNqbJZ7vGKDPLcvvzut
l+z8sjSv8kUaOzNdf1mad313VrKBsoW65+/pvi/zeWrmswzN6/Q0V5q/pen9
9K5/pPdtoxiPtpvugWyYmzOaVJqbEtc7nGttT/8hKX5YmeZhaGGudVnuvfMg
fWtiN66t7O+Ggw8TB51bVw5H3p77mY5A3pHOapoq1k/v2UTcfe53OB55XOKh
jxF3nzjjPjonzT3HH3CvHrn1r2XmsxbZojr0r8UzTOH5d9C+k20OPidVrtob
vIr8NbgZ7xHBTyrGBt+qWB88nutemuIoxVOdKsfDnZH9KtuBe4N1albSK51F
KoftR/8OOhvIzSUdoHVO8fVDyNNy68to5bHgV+SPkGfknt8W8mHpzORUnRkk
3RUnqbU6GHk1fecmXq0D8vzcueVWOkfJfZYjbvAw5JF6fvouyJ3Pnawzj9x7
Rpyh9pW4rKF6xtz6ejbt5dznDAfRutEu0b2R3XPHef2Rp+fW6w/5/Yngl5Qn
Ip/LfQ7ZSHFAbs5RvKT2rMYMoy3J/O6D+b41raLtTRuSO1fYVH6H+WzNmuTg
/uDDxOPQHgEfityeuT4DXC/xTyeBl+fWR/lc5XhjC/Me6yDH0C5RroH8UPkb
eC3kaNpFimEL+0fFOS8pV+ZzG/rrFM4blD9ob+jcU3G/Yv4nKvuu3xh/V+kz
pDtKc2PH0P+75gB8FHgJeIPKOdNviUs7Wr/VnIGbgX/NzcMdAJ6bm4c7ULEE
+B7wLrKj4D7gBuCvwY+C9wfPAV8pXch9jvixnlu+Wv5IHI1yFGQdPZ9iLfBa
4BfBJxbmLXRuIi7ptsq5ZA/meBPGvKl4ubDefJdsoA77HkU0pj8DPwZuAl4T
/Dz4+MKxk+Kie5WX8/kq+jdGbhq8Pk/Jh/L5XPCqyPdo54FXK+wr5ScVw0zg
8xXIDQvzly3A/+bmFJuDV+TmFE8H60BSvKN0oyjMcbaSGyjMibYEZ8iRymHA
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
4Do36Yxq1BUPd0D+H3YqCGw=
          "]], Polygon3DBox[CompressedData["
1:eJwtm3fgT9Ubx++9597zIU3t+iWjSHspqUiJkgYaNCUNae89lBAVLSEU2kNp
SgOljaYmKUlLKYlK/N6v3ueP8/08zz3nrnPPeZ73836eb6OeZ3c5q8iy7I2Q
ZaV+L9SfvnmWvaw2Q/LG6hyttlz612pPVlnWXOM+1rG9alm2Zsyy76VfrPOb
S99Y/Z2kD9W5P0vfUOO2U2ujc2tqq0veSm0XyX9o3DyNa6Df63T+1Rq/e+nr
ra3+wyW/qeudJL2e+jur/1Gde6xaUNtaY+7U7/5qcyQvVntL43tp/Ooa30Xj
71BfO7Uv1ferWhddc039rqXWVfLbGn++xm+i8V01fpD0Sejqu1L6YOkvSN9U
+lXSN9W1mqrtrPPXVZuo/q3VP1vH9lb/G9KPkL5S+mHSX5d+uPR/pR8qfRf9
nqL2k47tp/M3k7yj2r6SN1TbSfLJagszH9tA53eT/Jye7yadf6ieox7zqHaY
5H00trXa+dIvUJuu8V01foWOHaLxW+i3p9pnOraD+tdWfxfJE3W9Qer/n/q2
4dm5l9o76r+Q91X/4epfW33D1H5T36fMn+RRassk/6x2mcY/q/Gr6Vl+1fhC
baz09jr/Gcm3aexGavM0dpFad42/Tf0/qf8x9d+ivvpqX6lvId9c6+lw/c7X
mJrktTS+s+QnNf5G1hNzLL239Hclb642XuPv0f0XSz5F4+9V/zL1T5B+V+E1
zNr9Pfe9BqnNz33P1SQPUfte8kdqAyWvpfZJ7jUzVc/QV/qJko+WfIyuf7uu
/7Ou/7iu31v6OOl/SX9S+t3S15H+NOtT+gj9bqL2Detd7RHJg9W+lVzp97TK
87Vc5z+h8XV17Ga179T/Ye65u0ltQe45zGt+v/01/ukak6R310876U9JXkvt
JeknSJ8mebSuv67053WNbaU/LL2R9BnSW0h/XHpT6R9I30P6DOkXS99M5x/J
91d7WXoP6a9K/krzvIb0vfT7ufQHNX5z6e+wp6XfJ30T6dOl7yT9fumbYl/Y
M9I7Sb9e+hxd71Hp3+k660tvpt8Z7G/1N5E+S+N3l/6I9MbSZ0rfTfpD0htK
f1f6rtLXU3tN+im63luS11ebLv1U6W9L3oA9KP006e9IXlftVeknS39T8ihd
r770Z9kH0tdRe0X6iep/TXKo+ft2kP6s5M/L/6Y8a6nfz5j7ys//os7fXvoY
6etJfwG7J72+2hTpPXX+dMnTtIauU9+p+pbHS76x8B5jb2HDztD5D2IvNH6h
xndQ3+1qv+Res9jXY7i++oewH6R35/tKv1n6AYVtHraONXZgYRuJbWQNjdf4
jTX+VewO9kS/49VWqe9HtSMlj1NbKXmJ2jGSx6r9K3kFe0Dy8MJ9/6j1rzyf
62s+PtX1OqpvpNrS3GuYtX9v4XPZA1P0zlcXtn3tJT8seYzaX9JL/T6h622l
630keU9dr7t+71H7O/eY4wr7AGx/1O8EjW+m8R9KbqXxddSekN5V8zFZ8mpq
E6UfIf0lyZE1L72z9EmSa2oTpHeR/gL7T+1J6YdLf1FyA13/ROmvSL9N+mbS
e0h/Wfqt0o/nGdQ64N/0u6ba0MJzOVvtLr3jFP2ur/H3a/ydmqdR0l9Xa6Jj
O5e2dbn0HYNtz62FbSs2aHsdG6j+eySP0Nj+hW0WtupztVW6/gj1t9G4ieyP
9AzcGx85QK2e2sfSv1C7obCNwbZ8ptZJ8t1qf+a2gTfrek/o92nd6z72g/oe
UCvU5vLc6n+s8Nw/I3lNjXle9z9G959a872eKDwX3HMNHXtO/Uerf4rkjTR/
R0ufJP0W6avX7D+6S39FcsU7SD9Y+vOSu+k696vlhTHIwYXXDGvlB9ZMzful
k8Y/x/3VnpHeTfrL7F3dbyPpUzV+B2yjnvlsyd1Z65I3V39P9U/R+NvxRzr2
pPqe1fsvlT5Mv1+rf4yODZc8UW2C5AZq3STfpXaF+ken/vPULmGvsOYkN6x5
v5a6/gjJp+v6l4OfpH8r/SSeR+OXZvYvE3TO35nv8ZTkq9X+lf6U9Bck36vn
3YD1h89MeOA99r/6p0m+Q9eYJPk1yX+p/6LSWOMFvp3k29T/jOSXJC/Hl+p3
Z/XfoGNvSh6s/sfBeZL/UP9Q5kj6enreP6W/o+PDNf4WHXuXe6u/n+RLJH9X
8/uvL/1StfMlD1K7U/KmzLfkG0o//63YDsn9SmOT25JOP/Imud/xMl3/DsmD
dfwH/EH02v0Zmx79/JMTFpuj8dNLv+si9e+ZvlcfyY+l+Xw0eu8s1rE9JN+u
Y8dKHqljd0hurvm9CiwleUHN16sDPk3zt1Ln3Cz52tL2mfPvlr6Z2lEAaPUP
lzyEeQf/6Hdu5jFc/yr2q+RbEz6+pfT4/2F/9fwXS78+9zfj2/EcPM8/vK/k
sXq+DbFHGvsPeIM1kdtG7CT5Yh07DN8q/RyNvUL6ccEY9irp5+j+v0u+VGO/
UN85+j1F5xdq73Nv9Y+VPEryL+o/S7+9cn/TPpLPVjsZu6NrnCT5co05Nhgz
X6nrnyt9P+mjpfeSfq2uN0jytzr2kfouVDtE8sM6dpb6L2INS39E+tnSd9P4
xqwVtc0ln49PU/949Z8OtlA7WPJ2uvf7PL/avuofxfOob47aYOZCx3qxHmv2
3fhwsFrz6LUCfl8h/bKabRc27Arpl0o/Eiwl/WLpN+KjNPZh3W8J2Au7mPsZ
O2pcvWh9bMKfj+r3EXxn5nOwD9iOhpwTPO/M/+S035hn5ruRWnfJ10V/z9Fp
/i+p2Xfhwy7C96t/OfhE/V+Cr/Q7TfoDOucByQfr2J+FY7B6Gn+Uxh8NFpBe
N9rmYftCmt9OGr9U4w8Cw2v8fexjyQ+m63F95Cb4fsndwcC5Y5CWkvur3Q+u
UN9vutYFNdtubPiZut4+0r/A9kr/TWNOkrwu8QTfSOeNYX3g63TOipoxM9h5
bTCAxr+r/rfVPxM7qL7x0t/JbbPGSR6mth5YQOf/rf6+pd/tpWSfOI/zt9D4
93Xdx7EBuW1Cfc7R+e9Jf4+9rfOb1NyHbZ9Xsx3EHv5nkyVvVdlePJHsYyNs
eroW/vI91pT0htK7gy/0O1Pnz+CZGKP7HUq8AE7Ad2Kjkr/A52BvsfXY/F2i
7S3vQmy2dzCOAE8MUHs7+Ll5/kFpzYOxwdpg8LmlMR5YDx/4JbZK13xN4/dh
/0XHBMQGYOBPSvtIfCU25ovSmBvs3Yg9XBrjgnXBuJ+VxrhgXWKMT6W3rHme
me+Lo2MMYg0w+3z1j9Sxabl9QJ9oHb7hqmB7BocwkRgsM7cAJgebE1PNLh0T
EBsQEywoHWMQa4Bp55SOCYgNiEm+KR2TEJvAMcA13KNrvsnaln6B5A7q/179
e0tfqf5XSvvHu/Cxkturf6H69wKTS39O5zSSvqXGHCh5X/XPIxZR/1L1n0Zf
4bXdLnfs3ZjYILefa0MMgS55sca3lf4VsZP0P0rHYMRiW0pfKL219M+IJaT/
WhrjgnWJ2b6X3qMwpwKXwjNNirbl2+rY/pK3j/a9+OB/KmPzgwrH2mB0uIg9
1Y5PPgfuYQe1trk5iDN4N67F+6pdAa7Q8RdZf6Wx1G5qR+S2K2DhE9TqJEwM
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
4dA/kN64NLeeR9sicqLkRv8P1oDBIg==
          "]], Polygon3DBox[CompressedData["
1:eJwt13mgj1Uex/Gfe+/vXkJ21+7aFZWppChLIS2KEjEhDVHTUEpZxhImaYhU
aiYVIklaLSUVIjvJkmzZUyRKKYV5fXvmj899zud9Puec5zm/5znn3Cp39bml
d0YqldpOafrRn4ysVOqazFTqZf4BvlhOKlUZ642txcZj1bNTqZx8qVQH7DJ1
hflr8KvpmPJX+F+1e4UfqrzIIOdou0O2OJ7n2gdfhz0lM0qbV7D22BzscX4/
LeeL0T1YTbnTVEeuKZ3Aysgcx/LxV8u9hN3PnwrON6YN7vN1fjd+iK9Jw+Ta
89toN1+J+mNt+I2yM/kf3XMrLBv7mr7BatBQ7DZ+Q9wzf0SuWSqZwF10EKtO
Q6B2/A7ay+fRQOyWmKOYbPfcDHtRsQ//VYzDV6RHsJv57bSHr0wDsLb8F8Z9
jT9u3GuxHOw3Kq+/zviH2Fi+GTWlH+S34p3M+0rl8cpfaltH7qg2J2WKuLbB
Z2ND+a5y/WUqUq75u5OfQiuUb4h3Q/4x/h3ZJ/nlcuW1PYz/gp3rejP+BjYk
7k/2GH8VldZHHf5nvLDcTdgsucH8uzSOX6m/CtgR9ZtkX8d+wq7D8stUiHtU
/ghfL1PLs/0qd4S/nJ5W11HmBOVXfx32Ktaf3yf3GV+UemE1sGk0jF9ijILY
Tm22xu+JVaCHsZv4Vdo+xW+Vq4t9LzcdfxRbihXCdmEHseeVr8Rf4Idr9ytW
TvkObIG6MfxbeBvtZlGa5vBv4WNkPuXLyn2rzbt4O356fKz0Hv+TXI66VrLT
4Uf4k/hhvgFNwDrFu0ff8bVpOHY7vznefX6meWupfC3NSCdzHnN/lX6L6esQ
rZMrSw+ou1DmfBrtN1wls5Jq6uOE3E6Z82iEXGuZl2ggPz8jWVu2yi6XG4Gt
incL24O9rHIQ9gGmOvUVVlqfNVz74Zuw52TysNnYm3QvVgsrhVXnH5LbiE3E
amCLsMW0HpuATaZ/xrdhDNWpbepmY09gI5VzsW9iPDcwQ/mPeA6+ovAkuf78
e9q6pLbgReNdU26ofAUV4a+Ta0U/Ke8Q7KJtE+Va2vWi5uasFf85TVV/GFuK
TYq50+4ANlFfg/V7K38GP52ZfG/x3U3mm8S7obxA7gOqbowN2JZY07KSur5y
11I55UrGuJha8rmyNWUelt1sjOe1W4NP5HfJrJaflp28C/FO/Ki8XV1n7dYq
T1LeL3eFtr/rpzI+1XVKVjJnA2J9jeeXu4SexO7iv0wn8zFL/nrlG2JNo2+x
WvSoXId4fmOsjvWBemN1sNzsZJ2P9b5JvBf8D/hZmaY0SV3vWL/0XVH9fdhq
7EmsKFYJ+we2BhuHbUone9Nr6port6B1+nwRO+DZGsqdivcGewk7iDWK9wHb
kk7m4/Wc5HeO3/sw/RJ7ID0l1+P/fUbfx7OTb+wO+RKx/qlvrJ/adEr9fjqq
vi6NUtc55iDWa/4CehzrEvtO/Bb8xTQW6xZrGH3P16HHsDtiPmO94y+lcdjf
oq1x1/Jl6H7sglgL6Ge+Po3HuvNHYs/kG8Y7iN3Ll3Tf1dzrg9gX2LMxJv3O
N6LnsL/zJeSqyvWNvRZ7JvZA467hc6kPVjeeFdvMV6Ez2D18xfjg47vQvh6l
w+svU7mt3Jvsg9pWwsZj42LvxwrHHoOV5XvJfYY9Ee+a9u/yv/vd2mJFYo+R
KyPXE1+GjcYuo/rx+8l/gbeX2aw8S/mEttfLFVA/n56L58dqYj/HPcoWcu0U
axs2SKaKtunYG/HrKY+fiz8js07bqnG2wt+PfSHWKqwW9guWpb+Crh3xedhA
mcbUXX+9Y62jsjKD9DlG+QnaFt9g/I7YPu0uykzmsVHs9TSPP2uM9nCpeOex
+ZGhDi4lsZn0rxhTrji2T7/55C6Is1Ts41jZ2HvlHpN7X64Etj++eWxwnFOU
Rxj3PrktcR7ATsm1kTtXppr7nh/PTe/IXYVNpSFy/bACcfZ0nYWNin1R25LY
AWxjOjm3zMhJzpVxvqxljLYxJ3FGkKvNZ6rPxtph72D95E7jv/EtaSrWC7uY
/hLvv7oN+G3a5aMsbW/h35Lrq/6P2Kv5FjQFuxsrJJcrd3fs83E+je9A7iTf
nCZjPbE59DS/1nNUwY5rs1duGVaEemLVZS6lS+Kbjf0Ab6f/PcpLlc+lu+Wq
qt+NfcoXph5YNexK89iOShkjw/V817NyZ2RujLVN7r44G+izmPG7Yh9hw7A+
2cn3MwUbqK6cTAallW/F3lb3UDpZe2MNXoUNUlc+5piKKnfBFqp7VKap/rrG
OZZuiPefLyhXmu8RZxi5UXLnYCWxu7BF2EisdXz/2qRjXtTdyOeXK658J/ax
3HC5ArF+Yt2wT7AR2ArZ0fznnv14vM+x1tL7WD66HSstNy9+c+UdcqP1MSDO
zthImTlYMXV78YbYFbG+qd8U7Y1ZITtZp1qqbxFzEPdHl2Ql33l871X5D7V7
QZst+jtf/jd1b2NjY73BymHfYQuw/8bei52H/Yq9gD2CNcj681iX2hTnG+zf
2GKgDHYI+yjOMNh2rB52FluIvYxtwy7CzsSZAPtPnJmw2thJbLt7/ADLoI5Y
rsyn9AZ/SK4xVpB/jybEXonlYcfiPKHt264dspLfamzsldnJuSXOL2PjvMKP
jP1SeVK879pmx15Oz+pvZ6wb8ufF/3PGmIsdizOJXAl+WYyNHY0zElaM/yy+
JewHrAVWPPbZ+J8Qqxe/cZxt+EJUP94dysaq8UPijB7rl7attR0a96v9bO2+
xZpgheL56fF4l7FS2EFtXsWGx36CFca+xpZgM7B92OVYmn82vsvYA6iacSfy
jbOTd7GEXLU4Q/Pr08n7NM371Ci+XdqJf4zlz0z+h4n/ZZph3fR1De2KIz7/
NS2SOYe6YZXkLqcGsV+r2xhruX5X8IuVTxuznVwev5KWxD6L3YZV4Xtq09e9
DsaupC78Kny9XCHqLleP/zidzFHM1Uz3Mzr+B0gn472Sk3wn8b2sTidr1+Sc
ZF2N9fVFGoDNzfjz39vUl7HGxDoZ7zt2Yex3/GK5V+X2Yg3UZfGLaDq2B7ss
tir+E5qG7cbqx7zwO7RfgGVSJ6xMOjlzxNmjiv5bUxn3tCadrPNTcpK9Pvb8
telkv5+ak8xjzOcu/X2CFaA79VExzirp5P/F+L9xof4myPwPA641mw==
          "]], 
         Polygon3DBox[{{1605, 556, 258, 533, 340, 1620}, {1340, 1339, 1825, 
          1204, 1205, 1826}, {1638, 369, 532, 1097, 1137, 1637}, {1490, 983, 
          1150, 1820, 1344, 1345}, {1097, 532, 369, 315, 553, 1233}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{380, 1, 364, 233, 1237, 15, 1249, 29, 1262, 43, 1275, 57, 
       1287, 71, 1301, 86, 1315, 101, 1331, 1332, 116, 1357, 131, 1370, 146, 
       1383, 160, 1395, 174, 1409, 188, 1574, 266, 383, 202, 378, 280, 875, 
       203, 876, 204, 877, 205, 878, 206, 879, 207, 880, 208, 1104, 268, 384, 
       514, 679}], Line3DBox[{691, 2, 1108, 272, 380}], 
      Line3DBox[{693, 3, 691}], Line3DBox[{695, 4, 693}], 
      Line3DBox[{697, 5, 695}], Line3DBox[{699, 6, 697}], 
      Line3DBox[{701, 7, 699}], Line3DBox[{446, 8, 1083, 237, 351, 626}], 
      Line3DBox[{704, 9, 1229, 446}], Line3DBox[{706, 10, 704}], 
      Line3DBox[{708, 11, 706}], Line3DBox[{710, 12, 708}], 
      Line3DBox[{712, 13, 710}], Line3DBox[{381, 14, 375, 274, 712}], 
      Line3DBox[{1260, 28, 1554, 239, 381}], Line3DBox[{1273, 42, 1260}], 
      Line3DBox[{1285, 56, 1273}], Line3DBox[{1299, 70, 1285}], 
      Line3DBox[{1313, 85, 1299}], Line3DBox[{1328, 100, 1313}], 
      Line3DBox[{1354, 115, 1328}], Line3DBox[{1368, 130, 1355, 1354}], 
      Line3DBox[{1381, 145, 1368}], Line3DBox[{1393, 159, 1381}], 
      Line3DBox[{1407, 173, 1393}], Line3DBox[{1421, 187, 1407}], 
      Line3DBox[{881, 209, 882, 210, 883, 211, 884, 212, 885, 213, 886, 214, 
       1107, 271, 385, 215, 379, 281, 1434, 201, 1421}], 
      Line3DBox[{372, 269, 881}], Line3DBox[{373, 273, 701}], 
      Line3DBox[{372, 576}], Line3DBox[{373, 507, 602}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1237, 1550, 1833, 1435, 1236, 1834, 1436, 1238, 1835, 1437, 
       1239, 1836, 1438, 1240, 1837, 1439, 1241, 1838, 1440, 1242, 2009, 1551,
        1552, 1640, 1707, 473, 1732}], 
      Line3DBox[{1249, 1735, 1919, 1248, 1843, 1448, 1250, 1844, 1449, 1251, 
       1845, 1450, 1252, 1846, 1451, 1253, 1847, 1452, 1254, 1997, 1530, 1555,
        1593, 1708, 1710, 1713, 1722}], 
      Line3DBox[{1260, 1458, 1853, 1259, 1457, 1852, 1258, 1456, 1851, 1257, 
       1455, 1850, 1256, 1454, 1849, 1255, 1453, 1848, 1655, 1656, 1998, 1736,
        1556, 1598, 1597, 1723}], 
      Line3DBox[{1262, 1737, 1920, 1261, 1738, 1921, 1263, 1854, 1459, 1264, 
       1855, 1460, 1265, 1856, 1461, 1266, 2024, 1657, 1462, 1658, 2025, 1659,
        1531, 1582, 1633, 1634, 505, 1727}], 
      Line3DBox[{1273, 1467, 1861, 1272, 1466, 1860, 1271, 1465, 1859, 1270, 
       1464, 1858, 1269, 1463, 1857, 1268, 2045, 1740, 1700, 1699, 1267, 1999,
        1739, 1577, 1532, 1608, 1599, 1718}], 
      Line3DBox[{1275, 1741, 1922, 1274, 1742, 1923, 1276, 1743, 1924, 1277, 
       1862, 1468, 1278, 1863, 1469, 1279, 2034, 1673, 1470, 1674, 2035, 1558,
        1559, 1594, 1609, 1719}], 
      Line3DBox[{1285, 1474, 1867, 1284, 1473, 1866, 1283, 1472, 1865, 1282, 
       1471, 1864, 1281, 1925, 1745, 1280, 2022, 1744, 1692, 1646, 1647, 1818,
        2011, 1648, 1583, 1557, 1610, 1724}], 
      Line3DBox[{1287, 1746, 1926, 1286, 1747, 1927, 1288, 1748, 1928, 1289, 
       1749, 1929, 1290, 1868, 1475, 1291, 1869, 1476, 1292, 2000, 1533, 1560,
        1534, 1611, 1600, 1720}], 
      Line3DBox[{1299, 1479, 1872, 1298, 1478, 1871, 1297, 1477, 1870, 1296, 
       1931, 1751, 1295, 1930, 1750, 1294, 2026, 1661, 1693, 1660, 1694, 1293,
        1822, 2027, 1536, 1584, 1535, 1635, 1626, 1729}], 
      Line3DBox[{1301, 1752, 1932, 1300, 1753, 1933, 1302, 1754, 1934, 1303, 
       1755, 1935, 1304, 1756, 1936, 1305, 2028, 1662, 1663, 1306, 2001, 1537,
        1561, 1538, 1601, 2012, 1627, 1602, 1539, 1562, 1540, 2002, 1307, 
       1701, 1937, 1831, 1308, 1757, 1938, 1309, 1758, 1939, 1310, 1759, 1940,
        1311, 1873, 1480, 1312, 1874, 1481, 1313}], 
      Line3DBox[{1315, 1760, 1941, 1314, 1761, 1942, 1316, 1762, 1943, 1317, 
       1763, 1944, 1318, 1764, 1945, 1319, 1824, 1946, 1675, 1320, 2036, 1676,
        1677, 1585, 1613, 1612, 2021, 1321, 1628, 1629, 1578, 1687, 2042, 
       1830, 1322, 1703, 1704, 1702, 1947, 1819, 1323, 1765, 1948, 1324, 1766,
        1949, 1325, 1767, 1950, 1326, 1768, 1951, 1327, 1875, 1482, 1328}], 
      Line3DBox[{1332, 1876, 1483, 1330, 1877, 1484, 1334, 1878, 1485, 1336, 
       1879, 1486, 1338, 1880, 1487, 1340, 1826, 1881, 1488, 1679, 2037, 1563,
        1564, 1641, 1774, 2020, 1642, 1617, 1618, 1588, 1651, 2017, 1489, 
       1650, 1649, 1695, 2044, 1490, 1345, 1882, 1491, 1347, 1883, 1492, 1349,
        1884, 1493, 1351, 1885, 1494, 1353, 1886, 1495, 1355}], 
      Line3DBox[{1354, 1963, 1779, 1352, 1962, 1778, 1350, 1961, 1777, 1348, 
       1960, 1776, 1346, 1959, 1775, 1344, 1820, 1958, 1688, 1690, 1689, 1343,
        1828, 2038, 1681, 1587, 1616, 1615, 1342, 1817, 2019, 1614, 1586, 
       1680, 2016, 1827, 1341, 1678, 1957, 1825, 1339, 1956, 1773, 1337, 1955,
        1772, 1335, 1954, 1771, 1333, 1953, 1770, 1329, 1952, 1769, 1331}], 
      Line3DBox[{1357, 1780, 1964, 1356, 1887, 1496, 1358, 1888, 1497, 1359, 
       1889, 1498, 1360, 1890, 1499, 1361, 1891, 1500, 1362, 2003, 1541, 1565,
        1595, 1781, 2018, 1619, 1603, 1604, 1566, 1782, 2004, 1665, 1664, 
       1892, 1501, 1363, 1893, 1502, 1364, 1894, 1503, 1365, 1895, 1504, 1366,
        1896, 1505, 1367, 1897, 1506, 1368}], 
      Line3DBox[{1370, 1783, 1965, 1369, 1784, 1966, 1371, 1898, 1507, 1372, 
       1899, 1508, 1373, 1900, 1509, 1374, 2029, 1666, 1510, 1667, 2030, 1668,
        1542, 1589, 1636, 1638, 1637, 1832}], 
      Line3DBox[{1381, 1515, 1905, 1380, 1514, 1904, 1379, 1513, 1903, 1378, 
       1512, 1902, 1377, 1511, 1901, 1376, 2046, 1786, 1706, 1705, 1375, 2005,
        1785, 1579, 1543, 1620, 1605, 1721}], 
      Line3DBox[{1383, 1787, 1967, 1382, 1788, 1968, 1384, 1789, 1969, 1385, 
       1906, 1516, 1386, 1907, 1517, 1387, 2039, 1682, 1518, 1683, 2040, 1568,
        1569, 1596, 1621, 1717, 1734}], 
      Line3DBox[{1393, 1522, 1911, 1392, 1521, 1910, 1391, 1520, 1909, 1390, 
       1519, 1908, 1389, 1970, 1791, 1388, 2023, 1790, 1696, 1652, 1653, 1821,
        2013, 1654, 1590, 1567, 1622, 1725}], 
      Line3DBox[{1395, 1792, 1971, 1394, 1793, 1972, 1396, 1794, 1973, 1397, 
       1795, 1974, 1398, 1912, 1523, 1399, 1913, 1524, 1400, 2006, 1544, 1570,
        1545, 1623, 1712, 1716, 1711, 1733}], 
      Line3DBox[{1407, 1527, 1916, 1406, 1526, 1915, 1405, 1525, 1914, 1404, 
       1976, 1797, 1403, 1975, 1796, 1402, 2031, 1670, 1697, 1669, 1698, 1401,
        1823, 2032, 1547, 1591, 1546, 1639, 1630, 1730}], 
      Line3DBox[{1409, 1798, 1977, 1408, 1799, 1978, 1410, 1800, 1979, 1411, 
       1801, 1980, 1412, 1802, 1981, 1413, 2033, 1671, 1672, 1414, 2007, 1548,
        1571, 320, 503, 669}], 
      Line3DBox[{1421, 1529, 1918, 1420, 1528, 1917, 1419, 1985, 1806, 1418, 
       1984, 1805, 1417, 1983, 1804, 1416, 1982, 1803, 1415, 2008, 1549, 1572,
        321, 631}], 
      Line3DBox[{1434, 1576, 1575, 2014, 1433, 1996, 1815, 1432, 1995, 1814, 
       1431, 1994, 1813, 1430, 1993, 1812, 1429, 1992, 1811, 1428, 1816, 1991,
        1580, 1632, 1631, 1726}], 
      Line3DBox[{1554, 1447, 1553, 2010, 1247, 1446, 1842, 1246, 1445, 1841, 
       1245, 1444, 1840, 1244, 1443, 1839, 1243, 1442, 2043, 1691, 1643, 1644,
        1441, 2015, 1645, 1581, 1607, 1606, 1728}], 
      Line3DBox[{1574, 1573, 1102, 1422, 1807, 1986, 1423, 1808, 1987, 1424, 
       1809, 1988, 1425, 1810, 1989, 1426, 1829, 1990, 1684, 1427, 2041, 1685,
        1686, 1592, 1625, 1709, 1624, 1715, 1714, 1731}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{691, 888, 1834, 692, 900, 1843, 715, 1921, 913, 728, 1923, 
       925, 741, 1927, 937, 754, 1933, 951, 768, 1942, 964, 782, 1953, 977, 
       1877, 796, 990, 1887, 810, 1966, 1004, 824, 1968, 1016, 837, 1972, 
       1028, 850, 1978, 1041, 863, 1986, 1053, 876}], 
      Line3DBox[{693, 889, 1835, 694, 901, 1844, 716, 914, 1854, 729, 1924, 
       926, 742, 1928, 938, 755, 1934, 952, 769, 1943, 965, 783, 1954, 978, 
       1878, 797, 991, 1888, 811, 1005, 1898, 825, 1969, 1017, 838, 1973, 
       1029, 851, 1979, 1042, 864, 1987, 1054, 877}], 
      Line3DBox[{695, 890, 1836, 696, 902, 1845, 717, 915, 1855, 730, 927, 
       1862, 743, 1929, 939, 756, 1935, 953, 770, 1944, 966, 784, 1955, 979, 
       1879, 798, 992, 1889, 812, 1006, 1899, 826, 1018, 1906, 839, 1974, 
       1030, 852, 1980, 1043, 865, 1988, 1055, 878}], 
      Line3DBox[{697, 891, 1837, 698, 903, 1846, 718, 916, 1856, 731, 928, 
       1863, 744, 940, 1868, 757, 1936, 954, 771, 1945, 967, 785, 1956, 980, 
       1880, 799, 993, 1890, 813, 1007, 1900, 827, 1019, 1907, 840, 1031, 
       1912, 853, 1981, 1044, 866, 1989, 1056, 879}], 
      Line3DBox[{699, 892, 1838, 700, 904, 1847, 719, 1160, 2024, 1161, 732, 
       1192, 2034, 1193, 745, 941, 1869, 758, 1169, 2028, 1170, 772, 1946, 
       1197, 1198, 786, 1957, 1204, 1205, 1881, 800, 994, 1891, 814, 1178, 
       2029, 1179, 828, 1211, 2039, 1212, 841, 1032, 1913, 854, 1187, 2033, 
       1188, 867, 1990, 1216, 1217, 880}], Line3DBox[CompressedData["
1:eJwNyE8rAwAcxvGfpbyOnWahkalxGCkSE+3g39EL2N7HthtuuG0KhSlcNjWu
q0mRm6uLCyu7+Rw+fXue5H65WBqKiHVaiYjccMTHSMSszpGia49qnjQVanz5
q7rFBZec8+Of1wXG6NnjusgEL/aBHnHINtf8+m/0ilua7PDpv9cH7ujbS7pM
hld7UleY4phTvv0nukubR1r8+Vd1jWne7KwWmOHdrusZDfZ4YuB/1g4bbPIP
dH8siQ==
       "]], 
      Line3DBox[{704, 895, 1839, 705, 907, 1849, 722, 919, 1857, 735, 1925, 
       931, 748, 1930, 945, 762, 1938, 958, 776, 1948, 971, 790, 1959, 984, 
       1882, 804, 998, 1893, 818, 1010, 1901, 831, 1970, 1022, 844, 1975, 
       1035, 857, 1983, 1047, 870, 1993, 1059, 883}], 
      Line3DBox[{706, 896, 1840, 707, 908, 1850, 723, 920, 1858, 736, 932, 
       1864, 749, 1931, 946, 763, 1939, 959, 777, 1949, 972, 791, 1960, 985, 
       1883, 805, 999, 1894, 819, 1011, 1902, 832, 1023, 1908, 845, 1976, 
       1036, 858, 1984, 1048, 871, 1994, 1060, 884}], 
      Line3DBox[{708, 897, 1841, 709, 909, 1851, 724, 921, 1859, 737, 933, 
       1865, 750, 947, 1870, 764, 1940, 960, 778, 1950, 973, 792, 1961, 986, 
       1884, 806, 1000, 1895, 820, 1012, 1903, 833, 1024, 1909, 846, 1037, 
       1914, 859, 1985, 1049, 872, 1995, 1061, 885}], 
      Line3DBox[{710, 898, 1842, 711, 910, 1852, 725, 922, 1860, 738, 934, 
       1866, 751, 948, 1871, 765, 961, 1873, 779, 1951, 974, 793, 1962, 987, 
       1885, 807, 1001, 1896, 821, 1013, 1904, 834, 1025, 1910, 847, 1038, 
       1915, 860, 1050, 1917, 873, 1996, 1062, 886}], 
      Line3DBox[{712, 1084, 2010, 1085, 713, 911, 1853, 726, 923, 1861, 739, 
       935, 1867, 752, 949, 1872, 766, 962, 1874, 780, 975, 1875, 794, 1963, 
       988, 1886, 808, 1002, 1897, 822, 1014, 1905, 835, 1026, 1911, 848, 
       1039, 1916, 861, 1051, 1918, 874, 1105, 2014, 1106, 1107}], 
      Line3DBox[{875, 1052, 1102, 862, 1040, 1977, 849, 1027, 1971, 836, 1015,
        1967, 823, 1003, 1965, 809, 989, 1964, 795, 1876, 976, 1952, 781, 963,
        1941, 767, 950, 1932, 753, 936, 1926, 740, 924, 1922, 727, 912, 1920, 
       714, 899, 1919, 690, 1833, 887, 1079, 1108}], Line3DBox[CompressedData["
1:eJwVz78ug3EYR/FHicbOBdRoaMRgETcg6VCLXczEQipt2hCki1oEm7qBzhXp
5k8RRKppIiISky6dGhGDT4eT73POb3nf1PLa4upQRGSxPhyRGonI4CYZscIn
3B33rF3iY/YMPe3cVrGg/2HH/a5v2wfcY17v4VWf4dPuL7T4MT/FCSa1T61t
S7yIC9TR18f1Jgo8jzs08ettVL/Eizut/SQiavzA3dUObQXfelXfcr/pOXs7
+NfBd3s78vakT/FnXuaPfJfvYw8N/UMreNvkG7jGFebwD0ANM9k=
       "]], 
      Line3DBox[{882, 1058, 1992, 869, 1046, 1982, 856, 1034, 2031, 1183, 843,
        1021, 2023, 1153, 830, 1009, 2046, 1232, 817, 1892, 997, 1174, 803, 
       2044, 983, 1150, 1958, 789, 970, 1147, 1947, 775, 957, 1231, 1937, 761,
        944, 2026, 1165, 747, 930, 2022, 1144, 734, 918, 2045, 1230, 721, 
       1848, 906, 1156, 703, 2043, 894, 1141, 1229}], 
      Line3DBox[{1235, 1137, 1097, 1233, 1136, 1124, 815, 995, 2018, 1132, 
       1118, 1095, 1123, 1135, 1122, 801, 981, 2020, 1139, 1138, 1109, 1131, 
       1134, 1130, 2019, 787, 968, 1129, 1117, 1092, 1128, 1140, 2021, 1127, 
       773, 955, 1126, 1116, 1091, 1121, 2012, 1133, 1120, 759, 942, 1125, 
       1115, 1089, 1119, 1234}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztXXlATtn7f4UQlaHFWEqoUCmyy3sQWpCUPftalhEqWUIkoYhGm9JOpWwh
SvcU2dKqaKG93rdVKiTE7557zzXjzveOyTCa+TX/vPN+nJ7lc55z7jnnPfd5
FFZsMlotwuPxPnTg8dqSn9bJlmtO+woAj/5vr0KIA/WdC9/eTJwtpy9Hewbf
wcLlMW5J45DBB2DcioX3w/i274xbs/Av8dbKZyufrXy28tnK53+Dz5/vFy4/
9EKXGKVaqXO7XTncKdqrl1998f87nkfqdzb9Pb5CrX7Vt+S5YYbDy1ftjAjL
GO2OsfFPYd2FrVE3M6r+3/HMxZtEEo1fO4u+uxL0pwDI4/Z3gtF3ez79yc3z
R+q/mQQNT+DTny84ee6N8ftY/n0sX5y2B17H9lw/+795U2ihPH/veHbyHF2H
4jlnv48sGc9ApyH22reMZxb/fC7+fzTP33t+5i8+7LO5ejxh0C9+Ojk/g4wy
Uen/j/Nz67qilc9WPlv5bOWzlc+/w6fZnFMa6PNVfZ+nu4LC+E6SK73Q90Fp
GsNQ++JTvbMR/tglyRPh4cMWvEOf657ZTQvvdZY/bURQmjf5vV3k7UbUfs2r
fjMQ3unS2HSE+1yjcKC0d1xBQt1ZwvkijQ+n5cBl84/mIVwwnJZzIJXSC2TT
1FRSL4cTcljvKmyPVOPeiXd1w4iuv9L4RhoHHWmcL/rr/2zPZ9pPpe0E9Rdc
98tdPMMfhe3MwfbskOPtQ7gj9ovlL8HhL8H42wXzeeJcf8OBo8MJDcxnIu0X
VJPsYYBwa+xXxJxNa38fP0KFY6v/LJ499/g5Iz3R10akWI/w4LtXLdLyQTzQ
OIy0fnjhvJonfzfGC5OVKbtE+rTZcZ7sF1WPJ5T/a/j51t6/iwcLdfnZqP0l
2p5PeNnn9vwhfq5pGlL+ae4+lLCrKYyfrnGe8r8xMgr5Bw0/Oici3DVMm+qn
yDtWRj6/kzMl+OAOZF8sjX/yVwvjQ0T0KT9MFG/XWY3wINqvu0L53zgpDDxJ
u3qzvl+RyWqnItiucP6Wm90qgCOtF+SlvfFLIeNHFusdSdsJ7X1KfBC+BtuZ
MPdRRZ7xbCI8LTrSt74YbtIe7IbWlQ6YT9XDZf0jLDwID8ynIuZfRdmi8z1d
L6I/xgV1C0uLThgSlTKSzs47E2EXLykxr2E14Dhu35eWwz+G27Pk8xn5q3F/
jROxKA8WC+ZfdKf7K+v0DSGys8uE/TdJO4Gc10IXZKfFddpfvnsGcYeM84/Y
X7nhtL/+Mdk3EW4wlPZ3t3dA4/FDsfDMwH7jR/kVAJOTu3qai1Zy9guB+0Vd
ZOGklSmLiLEYf9mG7peN82qWJ9/3JB6a0f3CigeCiYeltJ1Q+637KaVFYcR7
bCcrbgkmbps7Lqwwz+ewHAssx5yO80/t1+M4b278c+FcdnLp5ZKjSMc5XE3H
OV8Cx/kY4xNovoFa0hvIeegMQX8KwNCnK0pQvCVP63CRjDfg7jWxI4o3Ljlv
jWg53Uf67CTnAaJJipbzBZ7/MN5ZcviMHNY45TPjlGUPwdgjn0LH+TpqPjpD
rMPzUnP7aze258HjfpVovNh+wZ5KOm6hNY7bDBy3rHmSYObJio1aTl7oedHG
bEaVoRG4ZzyL4mfotowIqSBy/ihKvJFpqAGFa4b0VfYi7Z7Zc4OHP7kucLF2
qLE1hOs6frjsd1oA1r68OtyX/Ow684m++B5D6JcRVOFJthM/kdkR/V2gqEGM
hr4G3DJhxEMk13nlWErv3K7J23izjMBGvZmUXpFOZlfRv1+9sNk1ndSrM9FD
Dv29ndO+dUivfJ86EfF9hvD4RecrSK/mFTlNpFcyIapXb1Kvas+xVUgvCwcM
rkDjsA/GJ2Dcfc14ZA+c/L7uchHJw6npRpQ9vW3sKL3++YYJDbaG4JHPCUov
/8B+hEPz3X5rRPYZgqnBxyl8dJteRUMDBbDTdKt+J3OmgoykuX6dvMk4GUDh
IPx98iPnnKnQ+QWNe6i+MEVyBMPvH0Z87rk+8BqS87CBT/Hj8vbXkemGRjA4
15iyx2vo2SPIznhie1Y5iWtJCqm4LZZxGIr8evWKqOlP8lAgklKN/DpQEkH1
y/Xrm6pJHCyPD6D6hdUeMO1thIGU/FHTZLajfulzp4SSD0fLUP3uOsRkTm/S
34K6Rqrf58tUUfbrPgmdh/DX/gMo+/1M7QsQD/fsTTNIf4G0apU/8ncazQ94
PY3iB8Zhflh8QobPc3S/gBF0v0AH3C+ZdNxCEREqbmEOjltW/0KmfxM+7C7v
6E0+H/vUZS9OnwpMB6h5DiPtUFi65fW2AAH0E5UfsObsdOCzSWP+bdKegAQq
/uHjZUk53oYaYGkUHf+eqTS+9qjrdQ8yPo1jadx5Lh23JW1DslH7a0fpuPVU
MBw0LOi38T4n3OpaJxLPORWtTOKfxnvNk87XEb4za+kaU9FZhMgw1SGLe1RC
+nshcA/ZjOwE/do0SVifnQ77RqlTdqaPyJOaajSb8EuPf7dWtBDG6wzcTP4d
eHucGnfwMh53B/C4S9tP8QD0J0X12pg+FfYLUaV4yMxxdrJJzI+ZeiAuPyLk
JqS/14AoSXr8nnjsO+uIvgaoihlOyWHJB4z8+hd7KJ6Dds9NByTPuTJDKPl6
8X6VVm8mENq9d41H/dTZZN8x9PnTvWcvEf8Xdn3oSvoFAkTuLEB+ydHzD8yk
5x/wFs8/0jY0btbV1Q3NDzUbaDyc7hewkO4XMAH3S3P5H7qL5vneniuHdpE8
xzvSPI8dJ12JeNsktSCLjB940tTNHfmVHNK0+vfPl4dJPOp5092A5u2jeMr7
pSQ/i9/TvCkXTeiAeJN+V9eE8Hb3ExIRnjfvyFVS/yd7SmXHDUZ2Y/mf8EQs
nzW+IDO+om0sfz3tO5XY2+gwGv0d/Z1c59D9Dpfgfh+B+33OlOC4TEVD4vyg
/rwrITfBpJ69qX43O5bbDcVVm9B2PBR/o+CuX1BciVhmLEbxecDnsOZv3wvZ
8x5k5j0ufljjETLjkcUbZHjj4oFrvcSaZwAzz6h7mFP9K9KoV3OCjLe3IUOo
/mXFIWTikDVvA2beftuVllNjYb7Ul5RTpkDL6U3Lhz/T8mGXUBpn9Tv8Ur/X
0vgnvx5hnBWHgBWHf+CHNd4BM96DQ9My9YdLED3uJPno93+Mvz/n7C+u9VJz
289IHNNzXZMhsbrtajdSL4wz0M9Gern6kYsHLn/Z5w/9v3BewcYVOc4xWuV8
HznNPXfaycLlWu35V9rT0uR8b/n/Fj657PxWOFcccuHM7/UP8O/1D4K/Tk4r
/mPx2hzdUbfIdUgPe7fhY33JdT7wl91Orp98ol22+fkJwJBNZxYPejYLTEwL
tPfwIfdld+3SYsh1StIMoa1jCgB7Cx0Kbbz+gEMGZ8mBjJwcDVrv3Rnt20/z
nQ6Xn/Sj9BJNh4+XKJNxuufVEquRXqBadrH78W5C8PHl9I9EiAD0dT+hIK8T
CI6NyDq25Chpv1SosbKSEKgYamalq7kCO7WT9YrSAqC2wDS2OIlcDw7ILXZY
HgDH5sbvPL2O3N8kwA0Vk8j13d1c79w3vvCwYsq5Y68FoP/GszLb35eCS5On
i++M3gzLGsR0+k0QAue4c3fdSHv7jreOtMuZBYJ+iRwVQPrTKyeUws+ucy9y
ypkFex28RuFJhW4OyO9ODXVpbeIBfKDqOpggeSkf7U7hm/Kc7xTdBqC9HY2f
6KHsvuiAAPTUjBt/XCkQRGyxtEu5TOqb+5OioEYA7myRWUXs8oPFe6dcXa5H
fn8bsfLwCgGQeHHMZYZoADzmJu0q90QA2u3JpvyqGTllPukXaAgpp/zq3eE2
1T764sZNZHvgUTuAas/iBzD83L1YMwDpfSpddIPUCx6mDKD0Zsqdpnge9/DX
URlqrnBH/CGKZ5veb/JKxYUgv4t59BwTbxjb5tal5aoCdn9Bpr9+WSdD+avu
OWcl6S8s9V9F+buu25hH29wEILvzkI/75gWCpfoLl6H4NNXYdEMnXwCW29xK
lDzqD3s7rhjpskAANoS2V9IyEgDJkc+3BPbyh1cfr1VJEvwhfuCn+Fl1G3p3
E4Ap8bIgW/EkLAtq6JcyUMjud8D0e9G7FdPq2wqAR9fDIydrHAbX9988rzVa
CFYElisivQvtn9wg9QJF6WmUXpadgLGz72Nlyq/Jyx0U988LhD+L6lF+2S1f
S8nf8fzUDW2Nw7BKKY6S30a9nOLT+MoV6bkm3kDvTATFp02WbExmTyGQlbdT
H1zrAYZ20Nr4Sl4AXu2WlXJ4Vwr2bah/LW2yii8I2KahMPEP/gLG38NZRsT2
3uR4jfO1OZHuDqImq+/eKScEwWo2iXofS4Gx/Mrrqn62wO96G9uB44VsvZDR
e+e8CSXnYXrUOFIO7LZvNCWnZsoOSo5FQh9NNT9bWH3mw14kpwHbeX++7Snv
s8uIMmynjN3SqhGjhOCQ9wGJGO8jMGhRW+uqduT+aK/97P0fBeCQatvMAA1f
MK/+meqEsQJwxe4MhaccEd9D4tCn5B2F6+qUirYj+23/cqnQpbFb4PJAucsn
yX694jqPkr+9sms2KR9kZ77bhuRP7lhJtX8eqaK3KHYLMJIeQLV/p3zaQC22
FCwzNdigtMMTGBp6R9dZCEH7k91uHCXHa4G2cqbkyqsgR4LXTcpCADQGHnYp
SyH5e3twg3+WM/AaJHhbtKQUAEX/+5pThGCGfkCjkoENfFE3dHDF61LAx/jd
KRQOajHOyNn8npIDT2E5P2O9qydTeuFtrJexs5q2E87Edhq8zdKK6lQC/IFm
pO5bZ/imyyM5/9oy4HD6JbQeQM7zTd2IEbfDQL/TClvGdhSCrenHh7wJFsA2
YkN9m8R8wf3HV+8cPUHye0puZbetueDCtXazuiqXAe1d7Xp1r8oFWRWv15M4
7F/y00yEd7P17IHwY6b33aT3loBJkuqDS60KoNKo3J4q44s+yZ/SkZIPH2D5
h7A9vu8oeyBjT+3Js2oFu0vB4vcjbOPr7KC6TKZsQ4QQlGO8pJHCwQiMbzoy
96cDikLYqLh9x0bZQ0D8lw7+V2QFYALNM6yZSfP8HPPs/XzFucQpAng1hDhY
3O4QdDxnrKXeKAB+GFcLpXDggHFGTvF0uh8ZOb9gvdnKlF7I6C1QHnHoTpYQ
XD0dn1W25RQItox5P96oFMRM2rq0PRBAi2mWPeoVlkPdJjueC08I1sk9fZRS
UwrTXTO23RBLBq8MHqy8Jy4AAaXpgTYDS+EN+U2uUw4+BqEaxUNMLEtBUvrK
0BHmAtjR5qrmnpdJoC/v8EBRp1Kgrt89vntKMUwbcOKYckEBWBP+8Jy9TxGY
0q/vrOI7AvjO/5n7HX4isJ++zPDJvFKQb54ZYatbAlaZOzjX6RTAO96vvGYG
FoGNta9yt1o/BWE79cXnXCsDTcA4r6kxF6i4mdSTODTzrO2I8PTp4tkIT6Ll
QDdaDjiP5fTYs975ysF8OCr7gIaCrZCMmw2pxbm5YNGsk+OjtwjgugMnbjn0
vgfjR92qCpEUsP2CjF/nMA9naR7gGczDh6rkmXyDEiizwddkREg2VKnooZ4y
oBQQmOePsyiegR7m+YWeweCmM6Xw2rrFqmMv3YU6srNEd+YJwLUNuzNtpEug
aa9E1Q2p2UBlzYjwCoNScO/a+46BUUJ4u8e+Ph/fRoCZKkHv0sl+LKb7Fy7x
pfs3APcv7ndoSOPwDMZ7bnnkZHhBAMPV4DWv5FQw+p3JkS11JSABy0+g5cNp
WH4hjh/505/LiV51f/3WU6XQpbfxooeXjoNNxdfuZbsLwZEP17v2LSuBJuP3
N+hFPIKLU3NeLSGfOxNxv7cNoPodHsb9HoX91aD9haOxvyz5kJHvgOVb0PLB
Qiz/tMlwP4FHKexddy2hv8dkON9nUnHVKSGYk9QwOmNRCdi8Smjd/moc6LUp
fNkH3TJQfMZWrnNAKUhvLNAO2JwK1iw8uziwhwDMPc9X8n0pBPr1Gm1ChycC
1yvKpl4iJeCi7EjVieRzts06m7pzC9Igv99FG88xpeC91y8ztkeWgOedC1+V
6d6Dnv6vf+p1QQiUTr7euEqc1MsXedJ5jCeMa1M580JVGRCpnqp1aU0pkH7i
fmlpXDKYb6+beHi/AIj226h4+awADG/YM3P1qjRYMKesjdSzEhArL6o3t7AE
5HZoWmp1JAEuanNF4o6RkK0XMHpZ7QHTnmU/YOy/vWVRY12BAFwSPpq/cGIa
UDhY/cQlsAS0x/aMoO0Bhdie+ZifPTQ/8Bjmp2L34gH7pgpBPPS5VG2ZCusS
IgO6k7x3Cdk8PGKvEGw40o93WDIVJmlq863UStj8Q4Z/Fj+Q4YfVj5Dpx749
rmdEapcA2/1uQPRUNJwbaa06xr6MzT9g+O/22ko1UboE2B0gxMJehIM+MR1f
z8/8Aw4Z/Cds/3rafnAf2z/o5Qp39Y4lwK1fdPSW7SuA+8k3JXov/2APYOwJ
cBi9K/ZBMdANEtPaIFEML+R3Un1pWgAaQPsdK0ag++2mj2NmPwN9rAT3Z6oU
AT/cXoduD67i9m9w+6t0e8i0X9lFeaLjhwpwtGfg7pH5aXBqdUHIbJNccE63
rfaN2wWwp+186UFpqWAGUTRjT3U5MDmibAVLCmFt9IybxbefgPA276UiXguB
t+ha5XYXS+DKLrr183KzQJW6/oQ0kVLQVf9s3q1RJXB7SOTbUzFZMAZsmJ2w
pxQI78RvQ3KGmvQ9T8qBcesUZZGcqS8jb60SzYd9918xFj8eB4IVb8yaE1gJ
/AblV0uOLIZXf47dpVieCe4FSPRF68+oHZ3NHloKYeAMgfqgjCfASVHMb/fB
IiB+fkOh0u0K2OVSg/TEgwlgTmDf0KLxBWBxkMJ40l9oka16EPmrMGB7BPJX
uGrhypxuVSA4NXaHZuJx4pFKlvucyDwAlg1YTuJwWOqmPQg32lbti3Alm/cA
yXG8mW5OygH3al2uITnwwkVtxKfTubvrEK66PiAM4ZuxnF7F+jY8OWf+ISxn
fal7UFlhKQzqMKop6VAWtF0h7m6TWwxG6q4qSTcuhKkWxeaav6TD47LSzgtl
yoF2XuUaA6l86GawRFVJ04W/z+Nh1ZjGSqAyO68Ite+me82WbA/y9xY4ofZJ
SZ6BSP7uhWFtkw9lgWWRSm5IvkyCi1H+xgo4e2aVapewDFh3llfxs0su6LM8
YauOQQU8Fjr/dVlkMjy2ovJQZ/sCoB2z6AXi/9iWQDOSf/jOrakf4r/6lxeD
jx8rgJm8+MclminQXGGVhTKoANe7HvM72b0cZvj8lBZqmQ6sJ4XGxMwpBPm9
auaSekF82JEepF6QNCSsDOl9NOJ+45XN5L5kinLySakC8Hya7tlhy3NB0JgV
b0gcLu1Qm4LwtNsZFK5XvdkU9bv+BKEm2e9QPc/ZF/W73JSL8Sh+Rozx+JmM
H3jMeocxih+l2vrEsYMKYNqIbQ+kpB+AI08CbAtKK8CQIFODtqPyodlmlXQj
/UvgqPlLX/mcSiDfNI6y526DNtILO7q4n0F663hPGpA9t26IpyG8UkyRsmdR
ZYkv8rfLy8Qs0l+4psziJvJXeVp+EtL7sTA6iNQL7zuq7Ed6043UZyK9bzwW
WZJ64e1rQX5Ir5WWeMdE7QIw7NwFCTHZVBCQ5zPD3aQCjF2085zW+2Kwcpv2
sdNB2SDZa6KI1dZSEDytuiRlYQXY0WNoyMieqSBZbVy0zuQCME92yPpHW0vA
PpMHPK2H5PMxYLpTp9cl4ODx2ilnrArAw+dxmX4GafDj0f6zhohVgB6LAv2z
xIuAxqZedqoqmaCnEc8ynxAC9Vdy4651EQKn6wUnZMdlwZdhv9at8igCrkMX
X2iIKgRrl8gYrFz0BFr6TnXJUysD7ePMJyP5UioPKkn5ILnslgGSn+S6IBy1
F3m1cBnZHjzbddAZtd9heHsdsjMvek9b0k7gMDzfEdlpVltfhPy6V9kpmvQL
Bmu3jUJ+vc1VD0c8ZK5N30/yABsVZNohHuI0jYKQ/QO8Zm4k7YceS+2tkf39
X166oFNfBPwTXAdGRWUBJ9Fj8ihuQduj54deLgUHr5Q8Gb0vG67aNTrw4O1i
8HLl4fiLnQpBiGes0eCOGdB+wVSj9MHlIFuhphPqF9F2MvWdZFNh56QwQ9Qv
w4LWJ6n0yQdt0ifv8RW5DUumuL7zPloJPGtX2+db54HrFjNWbxrvAKq3mHsP
618FrOHexb2r84D1mxm6bfrGgj71pp0236gEY40bbiG9Q189XEnqBboNdTOR
3hGud8KRnefM4p+SdoI25bYByM6C+puXkF89pNb8TPoFo20/KiC/xqY0LkHy
n1uc70HKh2Mao8SQ/Iax0Q5DfMn9tGrZ0EFLM8GKm53DpysWASe7lFw5sXLQ
ad+ExZZLM8AzF4urtfKFoMxs6kPk1+ynK26QfoEX6RcakV8d21XfPHojH0ww
PnarNuUBKNvNWzOhYyUwqDuyvb13HnicdUTG6t4l0EHr8c29batAUUMNJd90
3/WVpHwY7Dk/Aslf2PkyRHI0dNY4kXJgTtAiUyQnKH/bDiRnm1qfYMt7l+Cm
vuExSM59F70NY3fkgQtmXXKGnDtOSJ9ZS+wk+fzFR8ksyrUS7lCOUBrjTED/
FZKDJ+/PBx5P20qXpFeAmOANmTmND2Fy1K8vo17lA8HyJWURc4UgzcYsPCYl
E5Tub7j8y9IiwC8RChH+ombBRRKHe7Q8Kbz6dhmSD14umzwAyb+p7aSM5PsP
9E2+q14F7uaE6Q485ArXjXzgOmVyHrDnH1qH7JF4d/zmaGcCFG8OVEHt26+c
th7JcR7ePwrhTUb9BiH8pP0KWWTnzLRBZ0g7ga7F2gZkp6NcISX/5wkfgpQO
uQLHBgk3JJ/1OyaP4z72vx7nuDf+CV+u0lXl9/ipac/90HfxWq2J6Hz43Sh0
v+4g//iBuCP/49yYx5wbs+578zjugbdYfIrGlc/w2Tr6f9q+pcQP048+Yge3
Ijv7iRxP3NXkyH+wftuClthfLY23rc8qTiE7xZTR/cztfHPP7kNbeWs2b0Qr
b3+Nt07k/6L3+tXxe/12+L3+A2ZV1Pi190fvBTgRGV26/SfGb8q4rb+/181L
GHeEuoc033HCZ/ikypjVX8Nnex4vA73vbIbf33+F39//CT+/JGXRPWx74mQL
fX793fhkeGDex39DvY9tT9zFv79rYlzZJdLjcOJ+4inGdTB+frcg0erNXn5V
8Kf49ELv6ZdS7+sDPv3efg0wodcJn+z3x+sErt/9h2H86Qlaby7G+2BciW5P
3Av+jIf/XHy24/EeofhMwu/j6+H38UVxfBZkovcFHPiHvzI+GT6b6H7/lCeh
Ar+nr/JoMO+uriP/ZPB/Y/7sTP4veu9+Kn7vPhe/d/8rnj+nxqL3jBz5xf+R
+bN1/dMyeduEeZu8AL2/s4PY0MrbX+LtDN6nVL9H7985Eqmt+5S/xBtrP060
1P24Dr2P/mS/Ed5H/yjeuNYtP4q3lsYP6/4nj+P+5z/GT0sbd4XOq9D8BE+f
RvkHHPnHSj22tsRx96N4k9DXQ/MQnNGA8g8c5J9QvTqxlZ/f8JY2vloaP1zj
rjuPV+DwQpdQxuckR/E5SW3weSreti5E+ToOEr5JM/8T8ca1D20un2I83hW0
31yMz0Pe4POQUjyPXX+H8pA4Ei7/0XmMiZ+mI/T+/R0+DxFW0Pv3Dbj9Yerc
w5zfHbeX4vGGo3MPKd7Tz849uMbvMoyHUPtqK744xsvxvrshjdp3E1+7724p
8cbwWYnzQCrR5wmEy2/nRZdRvMXh843p/zvf4BfnvXUYh7hfpFn+LmuDWrtG
c+QR+uHz3rc6L5Ll8XzNq8cTAJ9vlOHzDdb45X/r8ftvPy96j58Lxn1R3iR7
fth/5LnQug75sesQ1vqWaF3ffo4/xfNS524on5gTcaiFrit+1L77YTQPnQtC
ix0oH9QOont006kfyc/roR/no88Lr1CePUf+jskft/4Z/oGeV4FdLso7d5Dv
h+dVrn0fxsFSW5Rn7yBh/wX8GR0/oFM6yrPnROzG8cO1Xq3E7cPe0s9Bpy/g
PbDe9xdRnj17vjPWy/W8YPlL+H0Bf4F5WxeO8uw5ERaYN65xwRWHGXScgN2R
KJ/edr4kjhMuvJOhP6W/pxzKE3WQ76a0iLKP67yL634LF36C/j0FfNiD8qc5
8h/j31OGiVv5/d7+JDMH6v7Qdvo8HMgp0fcB1uPz8J+oVtVaJTg/ngTOj+dN
nwODtHSUH8+JuInPgUXJpSjKLxeE8+BZ4jx47Xi8uyjPWC7OayeO89qlY34E
VP667XwJzI8I5mdbW5S/zoHvjPkh5d9H8tvh/HX9cf66MGxPsQfKX+fIf4jt
2eVG56k7N4jOU/f6VzpPHcNDJpWPTotgeLDEPOjNp38XWIt5YPFJMHxyzQ9c
cfII+2uznW4vjttz3eNqbr9z4Vz2kP0Sj/olFud/88D531jxwGfioQvuF3NP
lNfMnjiF+4XLfi45rPgnmPjnircuPF4o6ndvHFc7cVx14PHOIPtTcFxJ4Lgi
2wej9u8BHSeDcZxwyec6r+DSy7Vv4tLLtS+Q5PGUUJ6fV0PpPFQncB4qUk7G
FKPZhAvON5WM801xnQ9w8SBBestPzI9RwfmmsnC+KWa/LLa3Gw/l82f2y6Sc
QCTnMo4HTxwPpD0bUF4pTZxXqhfOK9WVx5NCeZDMcR6khzgPEilnH8p3dIKV
76gzj/cI+VUfQuc7mgDpfEckD3KIh20439HPON/RCy96/J7CeSZNcZ5JLjtJ
ObGThksQ7XG+nTCcb6cjj5dj1mRIzML5cOJxPhyu5zhrXPOZcd3cdbgaPc98
wtOZeaaZcpKwPY+PUPMkIfUFe7jON1hy+F+S87394jqf55LDhTf33izXuoiV
x4PH5PHgwrn84jrn/N5+ca3HvpVfXOcY39svrnXgt/KLa5/4vf3iWn8216/m
6uVaB34rvSsxLhlCzz+dPp9/QN+BKO/xLqIjnn+aq7e5OJc9XPZzrUubq/d7
xw/XOvZ7xw/XOvZ789PScK755Fvhc/H+5QHev5Ti/YseahSrMF6hP72OLS6g
17En3On2b/F6aT5eL3GdL/3T504c+bI+xQP73ONH31to5eczHj7hX+LnR/HG
HqcDWnn7S7y18vN14/H/W7yZqj39DB+q37+Vz7/BJ/TM+ux356fPFKnfnbfi
9u2o/fsaohdL/isKn8v/0vpKVgV6AodZRLA7f12RTRbMqLz2dL1zNSfPDP4G
y2fs3IJxUWxPnxbK8z89b/T9Qj9K4nsXl3G9y0hcb5HpX7r+4m/9y7wHFMuq
y8nYH/oX+52p1yl/p7Hzn9Tr5LHrdd5m1etk2oey4oGpIxnBquPJxAnjVx9W
/5ZHzMraVL5lHNPvK7Cccuo9Ixe++D9734Yr3v6182dz50nmnFBI9ZcVv3ML
nSdb14et68OWzE/reqaVz1be/j5v//Q9n+bypviDeZvK+n3f+Afz84PfM/pD
/PzTz8F/i1//lP0tzZ7vfQ+Ta9/H1d4C4w2sfd+3mn+Y8RjN2q+F4X2WKHU/
35k/7+/dD//b8flX90H/1PzD7IN64fsSX9oHtc4/LdP+lmYP53P8V4dp6LPf
a3Rf14sfmmdpi74f2ie8iD7N8tC9FDf+oFqZ3uj7u6vd3Ez9BdDx4OJRiwpG
AnW31cXppwVAnv8iA/17Dz/VgT1e+xHjNSTeoPqj72dR7cGxwp4XnApGQgVN
uv2H47ScdgURFxEuUb+KwlfTemEkdV/FjZDGej/OMp6OPv2p+yTexOm+5/ai
70zdTDuOuplXWXUzhxpRcqA+dW/Ei8jHcsbQOJCkcX4WxuPje1M8XL6E7nu4
8iUvFFL2DBrRnbI/Otmr/XiShz6utF89TPo+Qf+ufSbgTdxsP+J697zXiIf0
lbkUD1slKd7gxAeeRaj9W8wnn+YTMnyep/XCC9Q9EDeiI9arjvuLdx7d0/Am
XHB/dcF+ef2E7gl7Ezew/V+6J1zFug+8aJz9LWRvvuPaV5t3BvJnD7EWQ3Vn
ue5zco3T1Hg6zlffSH+0Ky2Mb+5L48k0DoVJTyh8C8aZes3yNd4TZdT63WTq
Ncd9XkebN56Fy5y3LbkivSuawbP1VlP29m5/QPRe7yBCW96D8mcytidhlosA
1cvO9KH1Ou2j3reCpxMvv0hoCiN2FtHvWzH3LjSOfH7vQhTzM6X7r91Pjgzi
f1Cj+VG7Q8t/fh+99xTGJ7BfH7H8EBO1j6hudTWWz/grl3ovaq7asJvs+tTy
rPrUDC7R9nP89pqTnRG+37kw/ml4IHFBxCwO4b7Y3+En5zo96hlOTMT2PML8
tz+QZaGcEEZs8/3z/Q7XOoQrHrj2BT31qX6BH72GZZmTceWO++WE3FxkL9yg
IOEnrhxIzJ8WTPnzkvYL3t6ZBe8MDuTXY7+W4PaFmRcvW3sGEgNwewYX0Dif
wbMxPxPE3j9Beu9iOQz/fXH8MPzbY726ytrtUfzY4/YLcL8rWqf0drYNJGbh
ccHUd5aKFXNfPPnAOHZ9Z1DiMyVvyoFxTH1nGWxn7dBMKRQ/z/RpO3VofkCu
aac45O8lzA9jZ+T9B8O6Zjp9srMt5lO7f4+7qN9tcXsDbGf3KTsuIX6mYjuZ
us/5rLrPzDi6and9jgk57phxxNRr1mHVa2bicLXTks/ikKmnvK1r/Wf1lBlc
g1VnWWnQ4Vq/pyQ/D51222nHgQf8O5EHGktBRvvF/Yz4BUCjV+Ib471JMNBc
832ZcwWIxfN8Ya+T1Dx/Gc/zx/E8362Anuen4nneEtc15lnSdY2VcF1jpt7x
QFa94/Rz1x1rQ0vg+Oj8B0G/PgXyqu7BdoNLwGBbHfe6PgIom3xxf6VTNPzo
8KJkWZ4A3FU+bU/O09BuU9eaAdkjQbZ3WT2a380X7HueESCANXUZQU2xesAj
6MPuNd6/1aW9gnlm16Vl5j2mLu2hXpQcoDLXfGu7OD14ai0txzKm0H9iUxZ4
nLNq2PibyVDSJGXxefMqIC9tdhA9Nxq2vtkgnT0SAkk52h4cny4b/XUcR6to
MfFZtvaBIo9nSBgmi/J+f++aidu0Y96TCseoaDFxq+t19CqpFzp1TBtI6gW5
8QsXIr0xld4UD+c0up6dhHhYTvOgi+v/Tsb3tMXwPe3906urED8vs8Zbkn4B
nxCXvb/nZ5bUvhtoPmTzw8yTDD+7620pfs7H+GR1JPnxAjQ/ENdpGo3rNFXh
Ok2VbYc7IH4kP1pVk/0F37cxrkN2+lSLKZDxBoXOVlS8+f/csQnFWwKuq7sb
3yePwffJ72jcikA8dH8fPATxvy2X5uFnHToexjyg+R8UQ/PQH8e5DR3n8D6O
83n2SvoSQ4uh/ut+pT6at+FIs6PG75XKP8XVNTquYA6OK2b9AOn1A2DWDzud
aB5+cVjXWYrk82J2E8UDw/MHmmfI8Kz0il6P+Sa0bYfWLRpP6PXGhL2Ld9mk
5IIVzucqjD8mgLf9O1v231sJylfS8g8PCj3Vg5SvfJGWb0rrhUdpvfA21luF
eX76geIZvMM8r1piSsWnpo5FzSYSXzO/D+XXTI+NO/kfJhHbxbSsimyyQO2o
cdl/5XdhNh7WrR1aH8Fuo1FeIzd+++VvqXUb176MSw4z3zI4M9821x5HbI9S
FsrL584XLPux9jR3P9vcfS4X3tz7nP9Vv76VnVz4hdRkan+gdAq9D+VKKAWo
X/waOczzgsHZ6xkGZ54L39svX+xXAvV+lhshi/2KxuPrrQzKy+pKSOHxztwf
iGXlEf3SfYNrf15v9KvvzXLp/bfI/1F4l/FmLqvJ54lCDa9T4g09YBY8L+dx
wG/r2DrWOvb0C1Oq/YncUZszbujBMpPP25t3+Ly9La4vuf8nur5kFK4vuQvj
e3HdyTiMr8d1JHNwHclluI7kDbzeeLWXXm/U4fUGUy9yI6teJFPXspxV1/IU
Xv8E2Ic+b19id3M2Xv+s97OapXNLCLW1QOcBOqnAWGb+6lsZxSAF18cJHChB
1cdRVKXr45im6gmsTQvA+r0HDTpsKoKd3F/o1S0pAeWxZ5L3BBTCuJ2aGheN
C0GiRcSRxYYlYCSux7ER1+M4gutxBOH6PiG4vs9dXN9nOK6bo7FLhqq/swvX
zVmD8eBq3V2onk4ExjfxYh5cNS2ADyYkjzyelAifjusk02t/BdAIb3NpqbcQ
HNulEK9yKx3kdnpwtVSzGKw9EqU8qaYYbpumXTb3ng+UO7d1t2bbcqCwrV8p
6Rf86cjJmcgv0LeC8isyfyrFz1bThRIkPxD2fb4K8WNu7az7cWURiPWwk17U
5QFcpxEetW9jOXD8mK2D8Cm1jkNJHATO2XYD4bZzLTpcXikEt/aFSidOSoXD
Ls0fkj25BETg+oMyuP6gIq4/yLUv7o/PYSSp98i8+Kn4HKa55/lz6fM0WDk6
pzFuth//AD5P4xov3+p33uaeY3/v35e/9/35v3sPisvOrz3//1b3H27g34N0
8D3JDPx7ENYL2lLtfru/txnbo/9971X+bb+41htc9xsf9rINQPvlLTcVJqN9
6/WA7YvQfo3rniFzn/AC6z7h984T5YDPW+TH0uctVvi8hTmv7oXPpfO/cj4Z
Qp9LwzOyewtl2vnx8/G5dOt88mPi9kv4974n82+3nwtn3pcfy8qD0cUi7Aq6
hxyfQZ930X/FfQ+Zy05m3oAc95PZcr7Ve5fMfeybrPvY3+r+1V/dj3/pfUOx
SJPARsc8MKRPW4ONoAjINhouJVaVtrh8xS3l999v7VdLy5f1o+btH2V/S7Hn
R98r+FbPHa78ogXPxD/Db3i++Ox9pdese01fGi/se0qTMS6J69rUsOrO6LDm
/+8dV+x9yrCvfF/jR91Tap0fWpY9P3p++Fbr6m+1jv2370e+13teX7uP+95+
zePIk2yEcebcQwvjjHz2uUdz50nmvcJ/+pykueOa2S/UcNRxU+Wo4xbCquPG
9XsKU5ftEUddtj7/cF221nnjx9rzo+aNH7XPYs4ZfFt4Pl6uvHbNzbv7rfLr
cuVta24e3ebmy+XKf8t1j5Err6A8zjP5C74XlITvBXG155LPnKvMn5fa4wQR
Mo45V1nByl/qhfOXMu1fqjcdnjMh4lP7zjgf5nB8z6onvmc1QNXDEp133cz4
/H6X1oZJb8d/mESsxfdtXuH7NmJKkxei/AzuOD9DFs7P8K3uRTT33gXjb/T4
zKuhIleivzYv2dfq3XI88zxhf+2r9Wqy8tolfyEfGleeN648zF/Sm4XzsH1J
72fnexP8ov+pfGL/B0BPLV8=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 297.0476808284038},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{-100, 100}, {-Pi, Pi}, {-0.7459314086307618, 
     99.30683853372577}}, {{-100, 100}, {-3.141592653589793, 
     3.141592653589793}, {-0.7459314086307618, 99.30683853372577}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.3303042304356608, 3.231804657465458, 0.9467511665379178},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7473256550922747`*^9, {3.7473257116742477`*^9, 3.747325763443397*^9}, {
   3.7473258265238543`*^9, 3.747325855215671*^9}, 3.7473268132267103`*^9, 
   3.747327195862377*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cosh", "[", "x", "]"}], " ", "\[Equal]", " ", "1"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7473256680333967`*^9, 3.7473256911950703`*^9}, {
  3.747325786276415*^9, 3.747325809742094*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"C", "[", "1", "]"}]}], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7473256691247597`*^9, 3.747325691882098*^9}, 
   3.747325810037057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"I", " ", "\[Pi]", " "}], "h"], "-", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "I", " ", "\[Pi]"}], "h"], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"ArcCosh", "[", 
         SuperscriptBox["E", "u"], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "1"}], "}"}]}], "]"}]}], " ", "-", " ", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Pi]", "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox["h", "2"], 
        SuperscriptBox["\[Sigma]", "2"]}]], "u"}]}], " ", "\[Equal]", " ", 
    "0"}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.7473262194590597`*^9, 3.747326323827758*^9}, {
  3.747326386380555*^9, 3.747326444051631*^9}, {3.747326704494258*^9, 
  3.747326705398139*^9}, {3.7473267397267323`*^9, 3.747326746465818*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Reduce", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Reduce. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Reduce\\\", ButtonNote -> \
\\\"Reduce::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.747326706195503*^9, 3.747326747950796*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Pi]"}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}]], " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}]], " ", "h"}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", "u"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], "\[Equal]", "0"}], ",", "u"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.7473262366957483`*^9, 3.7473262612940617`*^9}, 
   3.747326324707155*^9, {3.747326397664554*^9, 3.74732641146852*^9}, 
   3.7473264447669907`*^9, 3.747326706197006*^9, 3.7473267479517317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", "u"], " ", "\[Pi]"}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}]], " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}]], " ", "h"}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", "u"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747326777322242*^9, 3.747326791527423*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SqrtBox["2"], " ", "\[Pi]"}], 
   RowBox[{"h", " ", 
    SqrtBox["u"]}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
    SqrtBox["u"]}], 
   RowBox[{
    SqrtBox["2"], " ", "h"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", "u"}], 
   RowBox[{"2", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7473267825394297`*^9, 3.7473267918971777`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"\[Psi]", " ", "\[Equal]", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Cosh", "[", "z", "]"}], "]"}]}], ",", " ", "z"}], "]"}], ",", 
   " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", "<", 
      RowBox[{"Im", "[", "\[Psi]", "]"}], "<", " ", "\[Pi]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.747327167410211*^9, 3.747327248411146*^9}, {
  3.7473272793310547`*^9, 3.747327298786685*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"ArcCosh", "[", 
          SuperscriptBox["\[ExponentialE]", "\[Psi]"], "]"}]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ArcCosh", "[", 
         SuperscriptBox["\[ExponentialE]", "\[Psi]"], "]"}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.747327210368577*^9, {3.747327240792309*^9, 3.7473272488711977`*^9}, {
   3.747327292430787*^9, 3.747327299184992*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Cosh", "[", 
   FractionBox[
    RowBox[{"I", " ", "\[Pi]"}], "2"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.747327351692604*^9, 3.747327357607355*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{3.747327357851239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"I", " ", "\[Pi]"}], "h"], "u"}], " ", "-", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "I", " ", "\[Pi]"}], "h"], "u", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         SuperscriptBox["E", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "u"}]]}], "]"}]}], "]"}]}], "-", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["h", "2"]], 
     FractionBox[
      SuperscriptBox["u", "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.7473278802712593`*^9, 3.747327998326438*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "u"}]], " ", "\[Pi]", " ", "u"}], 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "u"}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "u"}]]}]]}], ")"}], " ", "h"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", "u"}], 
   RowBox[{"2", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "u"}]]}]]}], "]"}]}], "h"]}]], "Output",
 CellChangeTimes->{3.747327998606324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"I", " ", "\[Pi]"}], "h"], "u"}], " ", "-", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "I", " ", "\[Pi]"}], "h"], "u", " ", 
       RowBox[{"Cosh", "[", 
        SuperscriptBox["E", "u"], "]"}]}], "-", " ", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[Pi]", "2"], 
        SuperscriptBox["h", "2"]], 
       FractionBox[
        SuperscriptBox["u", "2"], 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]}], ")"}], "/.", 
    RowBox[{"u", "\[Rule]", " ", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7473283727165318`*^9, 3.7473283932139797`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
    RowBox[{"Cosh", "[", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"x", "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]}], "h"], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}]], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
    RowBox[{"Sinh", "[", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"x", "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}]], "]"}]}], "h"]}]], "Output",
 CellChangeTimes->{{3.747328382307942*^9, 3.7473283938000298`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"I", " ", "\[Pi]"}], "h"], "u"}], " ", "-", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "I", " ", "\[Pi]"}], "h"], "u", " ", 
         RowBox[{"Cosh", "[", 
          SuperscriptBox["E", "u"], "]"}]}], "-", " ", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], 
          SuperscriptBox["h", "2"]], 
         FractionBox[
          SuperscriptBox["u", "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]}], ")"}], "/.", 
      RowBox[{"u", "\[Rule]", " ", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}]}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747328426730875*^9, 3.747328461189433*^9}, {
  3.747328492211018*^9, 3.747328503265952*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Pi]"}], " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["y", "2"]}], "-", 
       RowBox[{"4", " ", "h", " ", "y", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "+", 
       RowBox[{"8", " ", "h", " ", "y", " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x"], " ", 
          RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x"], " ", 
          RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}], "+", 
       RowBox[{"8", " ", "h", " ", "x", " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x"], " ", 
          RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x"], " ", 
          RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["h", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"]}]], 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", "x", " ", "y"}], "-", 
         RowBox[{"2", " ", "h", " ", "x", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"4", " ", "h", " ", "x", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x"], " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x"], " ", 
            RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}], "-", 
         RowBox[{"4", " ", "h", " ", "y", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x"], " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "x"], " ", 
            RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}]}], ")"}]}]}], "]"}], 
    "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Pi]", " ", "x"}], "h"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", "x", " ", "y"}], 
        RowBox[{"2", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x"], " ", 
           RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x"], " ", 
           RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}], "h"], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x"], " ", 
           RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "x"], " ", 
           RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}], "h"]}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.747328440507698*^9, 3.747328461660698*^9}, 
   3.747328504869431*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"u", "-", 
     RowBox[{"2", " ", 
      RowBox[{"ArcCosh", "[", 
       SuperscriptBox["E", "u"], "]"}]}], "-", " ", 
     SuperscriptBox["u", "2"]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747328703773177*^9, 3.747328746241815*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
sNbbYc3/AenMu50=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {0., 0.005206154495626704}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.747328746803609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"ArcCosh", "[", 
     SuperscriptBox["E", "u"], "]"}], "u"], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747329345131974*^9, 3.747329374770697*^9}, {
  3.7473300561532707`*^9, 3.747330056556778*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.03},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 20}, {1.0346573597352902`, 1.4247534287916803`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747329371142664*^9, 3.7473293751576967`*^9}, 
   3.747330057074942*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"I", " ", "\[Pi]"}], "h"], "u"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "I", " ", "\[Pi]"}], "h"], 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       SuperscriptBox["u", "2"], "-", " ", "\[Epsilon]"}], "]"}]}], "-", " ", 
    
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["h", "2"]], 
     FractionBox[
      SuperscriptBox["u", "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.747329478226295*^9, 3.747329530011471*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "u"}], 
   RowBox[{"h", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["u", "2"], "-", "\[Epsilon]"}]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", "u"}], 
   RowBox[{"2", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.747329530559251*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "u"}], 
         RowBox[{"h", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["u", "2"], "-", "\[Epsilon]"}]]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "u"}], 
         RowBox[{"2", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}], " ", "\[Equal]", " ", "0"}], 
      ",", " ", "u"}], "]"}], "/.", 
    RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
   RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
  RowBox[{"\[Epsilon]", "\[Rule]", " ", "0.0000000001"}]}]], "Input",
 CellChangeTimes->{{3.747329537735051*^9, 3.747329566693493*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "4.282899221850545`*^-16"}], "-", 
      RowBox[{"5.780495637934688`*^-6", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"u", "\[Rule]", 
     RowBox[{"4.279001041468348`*^-16", "+", 
      RowBox[{"5.766532955434036`*^-6", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"u", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "5.847248130395931`*^-19"}], "+", 
      RowBox[{"0.019098591425698228`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", "\[Rule]", 
     RowBox[{"9.745428512592522`*^-19", "-", 
      RowBox[{"0.0063661820156641`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.74732954294942*^9, 3.7473295671563683`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"ArcCosh", "[", 
    SuperscriptBox["E", "u"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747329659061734*^9, 3.7473296823195133`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"Floor", "[", 
    FractionBox[
     RowBox[{"\[Pi]", "-", 
      RowBox[{"Arg", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}], "u"], "]"}], "-", 
      RowBox[{"Arg", "[", "u", "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "]"}]], " ", 
  RowBox[{"(", 
   InterpretationBox[
    RowBox[{
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox["u"]}], "+", 
     FractionBox[
      SuperscriptBox["u", 
       RowBox[{"3", "/", "2"}]], 
      RowBox[{"3", " ", 
       SqrtBox["2"]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "u", "]"}], 
       RowBox[{"5", "/", "2"}]],
      SeriesData[$CellContext`u, 0, {}, 1, 5, 2],
      Editable->False]}],
    SeriesData[$CellContext`u, 0, {
     2^Rational[1, 2], 0, Rational[1, 3] 2^Rational[-1, 2]}, 1, 5, 2],
    Editable->False], ")"}]}]], "Output",
 CellChangeTimes->{{3.747329671595171*^9, 3.747329682901252*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", " ", "\[Beta]"}], " ", 
     RowBox[{"Cosh", "[", "x", "]"}]}], "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]", ">", "0"}], ",", 
      RowBox[{"x", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7473300199446774`*^9, 3.7473300338522463`*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "\[Beta]"}], " ", 
   RowBox[{"Cosh", "[", "x", "]"}]}]]], "Output",
 CellChangeTimes->{3.747330034345522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tanh", "[", 
      RowBox[{"Sinh", "[", "x", "]"}], "]"}], ",", 
     FractionBox["x", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["10", 
         RowBox[{"-", "15"}]]}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "8"}]], ",", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747330811609453*^9, 3.747330924482373*^9}, {
  3.747330996231309*^9, 3.747331143308461*^9}, {3.7473312295258493`*^9, 
  3.74733122986357*^9}, {3.747331337522121*^9, 3.747331402271492*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Y7Kz4/8LF7Yhm40wF/7Wlez/AcVunFw=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
iKQNJE9SfGawJTM4LtuM7Lx50y7BiBm2LtnajMx5Vs99nsoM5kvmNCN1GQRO
PhFmBv0lZ5mS22NuHGH+xARiSwYT8vLBWt+sKCaoX7LJOtInY1i+KIgJ0JL7
jEiNUs7+pzuZoGzJsUYk+X2769AmJri6XL+W7PP/vFVXkAnClmy7hlTayWxY
V8gIukuuMCArrtmUjaUzgvySKQbk5p7zmgKRjCC0PP8qMsBRWc5jIyPMLX1d
O+mTpVssOKZ6GaBxyQZ65IbktESxWgaoXnLxCrKjrnNx3R0GqFgydQU5u37v
1MlwBri1ZAtdct3qU70yPAyQtORYKpn2IL9acJIe4pbMSyU/UZ/eYntLD1NL
NtEmk5RnD0xeo4d3S87RJLtzBRyH4+mhZcktGqSmtPbaXl96qF0yoUG2Cvoy
v9Cih6IlBquRCmlxo0/46f/Xv0WVjOC42lI8QwfXlkxRJSXp2y9fRnRwesmg
TPp+N9UOsqGDA8v9FckKf3dBH1062Ld8PwWSY/DQL0dhOvBbjiuQHjsz31vP
EbBzOS5PFvcU1Zi+J8BleR55kt6poUC/moAdy/eVIx3aBk+r3yTAbjkuRxbY
0IdSThGwZYlpsuTcSyknoSACLJf3J0tabzQ0YrcnYONynEJmw3a5xZUEmC7v
i0L+WBPMMiVGwJHl/ciQJ4NEul7/XsRhy5YmtXbb3HhSs4j3L99Pimx3TQzM
T17Ee5f7S5HSmyfpIiUWsedyvgSZyC/uQxlawM7LFie/vjOpfVG6gB2W9yVO
bsv3U9wfs4Btl+wlRlYGpR4XtlzANsvniZGyBg+GSKEFvDy/iSiZRNdjsbv/
D96wnC9Cfqunv8N57w82W84XIR0yVTnKD/3B65bzhUk55Ygmet4/2HA5X4gc
f1x7xu7WPF6xHBckUz54Cn7v+I3Vls1PuoTce2MU+BsrLefzkcpMvy+mMP7G
csv75iWnLli4vrsy97/zY3nIarXzUmor5rD+srnINPLTh0P1v7DO8jycpIet
Tu6Lnb+w5vK+2EmNTzG7hH/NYtXlfDbyV1ij0u60WaywnM9K1i/6Zk5Iz2LZ
ZbOQWSfp6GPu/cTSy/VMpMlV/d7z9TNYdLmegeRXfm0p7zyDhZZNTw4U76so
GprGAsumIx+uZlZaGz6N+ZfrCTKpNiejjnEaSy3HF6pcbNbQOWRMYcnlfgtV
Gp0dQf2yU1hs2fNVCzuDewKLJ7Hwcv5cVcsou+XcukksuBz/VZUblv/oeNMP
zLfsn1UHF40VBdx+YJ5lz1SZn+xOzx6ZwFzL9VNVogJhhEbkfyamqsQKWJL9
Lo9j9mX/qFpxWE/dPOI7Zl32eJVenrMJ+Xjsv/yxKv3mGAe9+VHMsezRKoPZ
G/531438lz9UZSj38qhc3DBmWfbnqtXW3zIv1Qxi5mUPVK0NF7jDy/wZMy27
v8pa/1H4Qd9P/+W/r3KdcVnf+bz/v/yeqn0PF3jWKvdhxmW/qZr+uuGxMU/v
X+uNtY02p71Z+muW9mqpChnzlvbgb/nrL0/iOdJ4qv9zXVXw0Pxr6bbs/1xb
Jc7Icj9tZbkx3bKhivW6edKUdt1/rqiy6Ryrflvd/Nf1J+pjeu+0/jUPPvAY
jLr+c3FVX4pEUuTH7r/xUpdnO3RP9Bgvk8ip2j4jOnWj5cNfNwl7XajR+fTX
1HF3Jvvdn/6el/7SNbTv4r+4U7Tj1j+L/+ID/TYsq5oH/nrTE+uwZ3Sf/8sn
iDuZlp+2rfxnriALu497Pv/ND95kjoOzPv89v42yQXPx1T/rz5leOc0w+Ld+
vtAo4o7/P3seX/PZ4No/V3sabnvx+p+T+FdqDxgM/fXoqO7VkIB/tnlG5aDL
+efia1qRZ9r+WeCQxpAUy/Dfea/1ymc7dvyz2noJx7M3vvz1aUmxZzJvv/yt
H58WXnGffeSvt70SvL523T8/LODnaTjwz2LxvEec8/852pV7dKjzn8242V8w
moz+df4Qy8qM0H9mfcp0Q/bWPzeH0h1dx/31r527ZvUP9Xz9u9+q0pk8Zt6x
v/NLp0zxn1s/9jd/YN34t5I7/xycN3Rz9NC3v/W1q/YlF7GP/42/n9xxPpf1
5984OFrUfEz98zeeW2tfy1j4zwk67s+UXv6zOUfIC3+Ghb9uRFcafkT8c6fi
9zb6nYt/PfvLMuTsJcLk/72X2hIiV/DP3b4OoWUP//lJm+fBjrZ/jrl3MFyM
m+6vGXdeO3w9/p/DLshH6Z7958Gmgqia7H9+sbos+nPVP58SrItR/fnPvy23
HK1kov/rgLjWo1aC/2zzrSc2UOefsYJ33ILxP1Ndh+LO2PxzztmAeIr7P/PV
TcSX7Pvn/wNZ0ri5
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-19.456843570583516`, -19.341714337080003`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-19.456843570583516`, 
   3.338747919625195}, {-19.341714337080003`, 0.9210340160514288}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{
  3.747330824393909*^9, {3.747330855981234*^9, 3.747330925747143*^9}, {
   3.7473309967017*^9, 3.747331035025666*^9}, {3.747331075781662*^9, 
   3.74733114372398*^9}, 3.747331230246005*^9, {3.747331342209105*^9, 
   3.747331402659431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}], "2"], "+", 
      SuperscriptBox["10", 
       RowBox[{"-", "15"}]]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      SuperscriptBox["10", 
       RowBox[{"-", "1"}]]}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747331696249186*^9, 3.747331815115321*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx9nXm8V9P6x7s3yjxELm4iN2S8pkKlJ1ODI0KkVBQlQ4SkrtKgUhodFUmD
TvPISZMOqw4ZI07d0qA0aJCKaNCVftd3fT7re/fn7PXzz3mtt9Vaa3/2s571
POu799oVWjxxR8u/lihR4ojSJUqU/O/fbjfXaDJs2DxX4dt6Mw8d2uV6+LLN
3dtofbOfZwVe4Mu2a8wzrSrWzQ98ty/bLSPPXrH0ummB1/dlezfz78YF/r4v
222Z/z8i8Dt92Rpk/vYPvKEvW038Jb8B5Zvw78jrojwL/ZDPQ7kOxkWOcdsO
XAf5TyjPxnWTv4sydDPVjXq2avfWsNlttrteoif5e6In+c+iJ/mdoie5Ez3J
G4ie5I1ET/KbRE/yHNGTfL7oSX6r6EmuepKrnqob9Zx89Eld26ze7F4UPclV
T/I9oif5XaIn+QLRk/we0ZO8mehJXlf0JL9V9CRXPclvFz3JfxE9yQtET9WN
eu7M/PsNrp/oSb5Q9CTfJ3qSNxI9yQtFT/Imoid5C9GTvJ7oSX6H6En+nuhJ
fpfoSb5H9CR/X/RU3ahny4zdrnaDRU/yT0RP8t9FT/IWoif556IneSvRk/xR
0ZO8oehJ3lT0JF8kepI3Ez3JD4ie5B+Lnqpb0j6L3MRU+yxyq1Pts8gdm5dm
n0WuU6p9Frm1qfZZ5Lql2meR651qn0Xu6VT7LHLPptpnkVuVap9FrmOqfRa5
o/PS7LPIfZNqn1ndknoWun2peha6SvvS9Cx0d6bqWegOpOpZ6G7cl6ZnoTtx
VJqehe70UWl6FrpSo9L0LHSlR6XpWehsX5qe/73eVD0L3R2peha6c/al6ZnV
jXq6M6rNr3LT+mrbcpJ6kjfZn9STfPPYpJ7kV+cl9STPOZjUk7xkflJPz7+u
VnGH161E5r92BZ4vrFZz+/I+Vxy4vwZ1Rjvzj9+R1Jn8t7eTOpPXOpjUmbxy
XlJn8u/HJnUmb7w/qTM59RS7tYjdWsRuLWK3FrFbi9itRezWInZrEbu1iN1a
xG4tYrcWsVuL2K2p3cI/WMSvWsSvWsSvWsSvWsSvWsSvWsSvWsSvWsSvWsSv
WsSvWsSvWsSvmvpVrF8WWfctsu5bZN23yLpvkXXfIuu+RdZ9i6z7Fln3LbLu
W2Tdt8i6b5F139LX/Q0WiUstEpdaJC61SFxqkbjUInGpReJSi8SlFolLLRKX
WiQutUhcapG41DQuRfxvkbzJInmTRfImi+RNFsmbLJI3WSRvskjeZJG8ySJ5
k0XyJovkTRbJm0zzJuSnFsnri+lJHsnrLZLXWySvt0heb5G83iJ5vUXy+mJ6
kkfyeovk9RbJ603zeuyfWGTfySL7ThbZd7LIvpNF9p0ssu9kkX0ni+w7WWTf
ySL7ThbZdyqmJ3lk3yno9sZZi8t3WjTHfVipy7mrZ+9wo3w56EzeE/X9/Osc
+AO+bFXwl7yacO53VUUZ/VqkX4v1e8SC9cfkVtzmWkr75DVQZv1bGt74S53c
Tchzs/XJTeqflRnnOtdG6pPXkvp+vi93XaU+eUOp79evz90cqU8+SOrvhP12
ejNZn/yON1PrW6S+aX30a5HxmI4H12WR6zW9XuhmET1N9cR9scj9Mr1fuO8W
sQejPYidW8TOLWLnFrFzqybj4fxqkW7/FrH/MB5y1hce9rfJpV/XQtrX+tKO
6mCqw4DKPd97acZct7v75sfarN7pcn2Z3CKc9S1SP3Dqz3Z6JPsN439F2uf4
X0m2E9qXdpy2I/VDv9ST+8l6H8mrps6LzcX8DPm1qfN6g3tE6pNfn+o3VmO/
SOfpauy3a/tFbmBq+0XuodT6he7cUWn1C91Bqc99g1Er/5GoDz6/Pbi0b5H2
Tdtn3hQZv+n4mRdE9LF0fTZYRH9T/RnXRe6v8f6KPVvEror5B3Laldh/sHMf
1wwJ66DPa4aEOIT8XsQbPl/p6a46ve6dFev+gH3UnqEdroOLpB3yZtLOc29P
uWb17O/dp9IO18dPpB3yltKOq3PcWbkV17svpB2um0ulHfL20o6/3pVuubTD
9fQPaYd8mrTjx7nE/SLtcJ3dsj/ZDnmzN5Pt+Pbnu8X7UtuxSDum7Xg+xtoe
Sr0ui1yX6XV53T6ys/el6mwRnU119vawzNan33eL3HfT+16YWV++ta/S7dAi
dmhqh2ccXDN1dpuN2N/oqfPCIvPCdF6sbPmvjw4d2mIfSTtcBxdIO+QNpZ0h
X/7tuzq5P4Z2uM7STgZV8OvsssVb8q47453Al3yRKdtRHUueX/qZtwI/7F+Z
sr2Q8R+TAm9yS6aMvHBM4D3HenvJx3hpV2thbz/Cnsi7oP7zvv3A70H7R/jx
BF4S4yny4w/8S4yf8QY5r1fs2dGek354jOsy2fu95L5NvnsruT8Z+BPY703u
5+S77an7jfnumtGZsuzn5Ltn96ft5+S7IzLzcYTs2+RbHczT5L5Nvh0c7cvJ
fZt8e2p/2r5Nvl2J8ST3bfJtW+q+Yr5NS92nzTfqQLvluvyXExtn7vtTmX7b
OO7nt+t73p9lmw47pZ+5F/cluQ6OsUa4L2f7drC+L5xfEe0cGPEnb4r6ubZj
iS+PzbT/TOCNTmucKfs8fli47ztuz5Sxv5Ib+PWT/L9L+skxrvIkr7/UN9Z/
PVO/qWO//b7y49mN+tShY2GyvudvVxtzR5VM/WWDR3eeubtDiANX+XLgjOuU
M35bJ/xBxGlbUusXuRJD0nih6yL8J8RL6bzItJ1WiH/S+91gOk7GM3pdjE/I
3+y19Nu6d3ZwI+7+bUfn03a6sb5sI/4oyvyt99Nh913dYId7E+Vp/q/ruv/e
ZVe+uM3lgw/G30EvPnTTroVb3XCp/+HA99/d/usmNwu8N/p56vzPLhz/z01u
EMocz6PlKrw5psV3brqM59LHGlV8t+o6NwXlCah//0Olj585eoVbiPpsf9+M
8j+fd8pyNw7l8aj/5YXD5ly3f7HbCt4ff0u89/FzF2781K1HGf/OLTyx9piq
zWa5/r0974v/X6t1nbvKtZ7u6r3ky3NwvTnv1/6TW4e/ej4Q9ef6dqwD2nkN
7e8tyPRrP6LeK/j7mR+nLUOZes55PXNd9il04PibeB14nTYD9S/2utl7qD8J
//9hr7PNTurg2vr7YkPA8/DvCv19NOr/Btof4O97qPcq/t36HRk7sTdQnoj2
fziQsSubCv4Y/o7ydmhPoAy7tbMRP68QewZ3wi0y3y0y3y0y30NetjW1frH5
bjrfJx7In/TArtbWa96Zg6tfOMpuPXJmpiz11Q+E/EjbfzDdD1jED1jED5j6
gXHJ++ImJfUP+Yj6E+YXq4UzX9iQ6peWu52pfulzd1aq/8x3z7+ayk052jFt
h/Gw9sv4VsfJeFWvi/Gn6sB4cqXozP1P5RE9LaKnRfS0iJ5hH7JCql0V09Mi
esLePjdtJ6KnRfS0iJ4W0dMieob4oc4ozxkXXVuq1lFfnjLItVrj4xvygX88
tun7HqPsihmeJ693jLEdxkWl0c7f0A55b7Szabov731w0rF/WXOD3Xf3+A69
m460+5705RYdB476+472bu3cdWWHTRjoSk3MlK3CZbk/jK55b8Fnjdsct+vU
3u6eEZly9eYtM//O3Y92PkM7jGfuuH1OzvXjerubjv7H/8YzFvF7LuYn1Q47
Yn7XnrF0e5MRu1xnlLE+uEljM9wWwp/nwT/chPpYd60P/varVaXopKO3uwFc
Z9HOjmqec73g+nDZ0tfmftZhs5vMOAHtL/nW83dk3Wn/yH9Gdtu83mE9C3HC
Sc94znXkRfydeWrBUU9OXOVeZzuo/zb4HIkTqtbutmLtC1+72bJu/n6Z59/K
Ottne786w95f4O5+0Zfno/7RCz3vfgjrIP7dlz2a9Zix9AM7B5zrYOPGnldB
O8NQf91Jj+x5+Lil5lAejvpj/3g4wxnndMXfU78aW+n3y9fYy1xHUf908Ld6
JeOWT77adfHHUzbYYIlzPgVn3MW4pcc1/WufUGOLDZX6PcGnsF+Md+3UC5o3
+mq7jUUZcZ9bBz6f9xF/J8PexqXXd/OF/+PGTL+B5yXHH+xhYlIHNw+c7Xzn
dXar0Q7v49f+frm6uF+wF4f7bs/jfqE9V93bj21B+x+gnWdLZuzNVqD9wL09
21fgS8Ev9/PCVibjNNffz69wX6CTY7w9RXR4EnH1ZLlfj3Tz8fNMxtWMPxEn
v9srac/dc308fCx0YDtXIe5t+VLSb7zTyse3E0ok26l1t49jD2KcsBfXDPHq
ItGt9Hk+Lv1a/MM5PX38yXlKzjgzP2mH7trmPp6kH6F9XuO5I2e8vdG34xi/
DuB9Q/4yFGXmIxhn8GP0P7gu9ybzGvz/G70ObiPnNa/P6+Z6lkj6gXuRRzRm
HgHezd8X2yD97vH30ZjHDcH/vwTxP6+3H/4WlfdxPvO39vg7EPF8Z5TpN7Yj
bh+YPt/dWNH5bMzTCdIO/I+j/6FfhR9zI8Wfj/F+z02Tfr/APL0Y9sl5cJL3
w/YUOOzcamCefooy14fZfl2gPYX8qKxfX4zrEf3c136dCvbGcQ7APOX1/FTm
pIJfu7R1uWvGfzBt0yg7u1ymbB/Om/3Z8kHt7Mz5x47q8O4Q1+9rX35h46L+
1a7IKZj4jxd2DL9rpPX/NVOufuqGY946smtbq3v37OYd/9vOzdt9eSjiEMYP
h9r6crWcZRn7P6L9hG93Xfuam958mb/Ooce/PbBfO9e65bOrq7/e3+37KFO2
2ict/rFftQfcznu/qfv28X1c84aZsv1exv/dDF4WfPWZr7x2bYc7rfLWOX/c
cndvt/kRXy7xn0y+4/oh3xmHfKfLWZn/765G/b6P+vqXdZt9aatWs8P+TBVf
tvVzLjn8iitmht/7Nvly4KxP7uOeGaH+eb4cOOtXAu+O/VjW74X9U3LW7w2+
IdNPXqj/vS8HzvqbwXtgf4z1/XNEwwJPtj8Mzxn1CfVf8mV7Dn9ZvwvKz+Pf
sX53lMlZ/wWU12FcrI9xB57UM8+64LpZH/vXgbN+T5TPhK6sXxFlctY/B+Xv
cN9YfyPK5KxPfinsgvWvRJmc9clpV8z31a7It4j9kF8kdkL+ktgD+Va57+T9
oD/vI3l3uY/kveR+ket9SdbP6k9+vuhMvln0VH2oG/dDqopu5NtEN/JLRTfy
/qIb+Q+iG/lA0Y28l+hG/pLoRr5ZdEvWz+pGfrHoRr5VdCO/WnTjftF1ohv5
LtGNvKroRj5UdCP/WXQjf010Ix8gupG/IrqR7xTdyHNFN/Iqoluynaxuqk/S
3opcg1R7K3Il5qbZW5G7O9XeitzUVHsrcn+dm2ZvRe6tVHsrchNS7a3ITU61
N45T7Y311d7+e72p9lbkDqXaW5G7M1W3QjcmVbdCVydVt0K3KlW3Qlc+J023
Qtc0VbdCd0lOmm6FrlJOmm7kqluha5yqW6Erl5OmW6H7JlW37PUmdSt0o0U3
vkfzZfekbuQfzEvqRj5jfVI38uvqJ3Ujn+78dVGfk9pN+PjMa9bO/2NqUh++
/3LmA0l9yKe4pD7kNeon9SGftj6pDzmvi/qQL+6ealcWsSuL2JVF7MoidmUR
uzLalX+PqXVBi69Ofn5n9f62el3TvXVfvb2G2JtF7M0i9mYRe7OIvVnE3ixi
b6b2xv38iH+ziH+ziH+ziH+ziH+ziH+ziH+ziH+ziH+ziH+ziH+ziH8z9W98
7iuynlpkPbXIemqR9dQi66lF1lOLrKcWWU8tsp5aZD21yHpqkfXU0tfTDRaJ
3ywSv1kkfrNI/GaR+M0i8ZtF4jeLxG8Wid8sEr9ZJH6zSPxmGr/x97JIvmCR
fMEi+YJF8gWL5AsWyRcski9YJF+wSL5gkXzBIvmCRfIF03yBvyeqbuSap5Nr
Pk6ueTe55tfJ+sM0XzbNl8k1L06OM0/zXNM8l1zzWXLNW8k1P+VzoZXT9z2K
6UZ+nuhG3kt0I/9edCN/UXQjfz59n8G6i27kG0Q38hdEN/KKohs5daM+z1fY
VHDoUPF9ocH+Ob1i+z9Tn8spmVtxR8h/qc8H+P3rRdFn1b/z61asu7PYvg2f
J1e76ozxqF1xPGpXHI/aFcfTQ/RZjfGoPj9jPKrPwrm18ma32VJMHzwPWWx/
46cy07fVyd1aTJ/S+D26j+hzZpuyl66evQ3tZONY9qt+6Rv0q36J/aoO/B1c
/RL7PU90qILnnzfJ/Lr1407t26z+odj+z+H1J/Vps7r4PgaeOw15PfW5cvIJ
Xx06tNH9U/TJwe/yfUWfBw7rcEpuxe/D/g/1Yb+63pVDv31EH/ar6x2fB+gt
+rDfC0Wff+G5bvXbuc3WNalYd7O7SvTxdrvG1RR98Hyv2yH6eDtcG/J96nMm
nk94WfSZMHzV73Vyv3PbRZ9c9Ktx1EL0m6v2g35/FH34XMQA0Wci+r1M9Hkf
z6v/IPos33PdDatnr3fXiD7+fi11d4g+3h6Wud9FH6//v93Nos9EPKcxSvRZ
kZkvK9xe0Yf9jhN9bka/40Uf9ntA9JmEfkeLPt+g3xtEn8PxHP5u0adyZt6t
cjeKPl6HD91roo+/3o9cZclrSmXa/9SNE31a4HmVdaLPgow9fOHOmJvUpy76
PV3yvvHo9xTJ+w5HvzUkf8HzLW6b6FOIfvuIPmfg/YIykvd5u/raNUmNw3Pd
JNln2ITnWBrLPoOP56e4ZeuS+mzDczv34rlu6rAK7R/omdRhA9pv1iipQxO0
X74gqcOPaL9qPZlHGT1nu1Lrkjo0w/sRQ0SH0zP/zrn3RQd/fc4WiJ085Nux
IWIn03y/doTowPe3r62XtJMn/HVZhYKknZyLfp8WO3kM/e4RO2G/l85L6sN+
G0F/XtcCf9+tmVyXv44ldrJcl38O5wvrK/bfGs9ZbRf7P8rbrV0v9s9+p4p/
qIh+C8Q/LEK/p4v983m5NWL/R6DfPLH/aXgP5Uq577f5+WhD5b779XqV3Sj6
4H0f+1X8p49bVlgt0WcKnjfLE306eb9nB8V/Xo1+B4k+R6LfoaLPKvS7OzVv
Wm5viD7Pod/aos+teL/mP+I/y3t/bvVFnxV+3bFqog/eq7Ltog/WNbtS9PH/
f53p+vuLXzexT5LVh/1qfLIA/Wo+zn63ij4V0K+uv7vR7xWizyK8N/Sj6OPf
u1ljNUWfV3zcYleJPnh/zTR+e9DHRXaJ6FMPzx/2E30q+7gL+yFZfdivxred
0K/Gt+z3e9GHzz1q/MZ+LxJ9yuN9KN2vKOXjyWL7Fbf5uLdY3o33BIvlj2f5
uNouFH2OxHOYGv//7ON20/if/XYVfa5Gvz1EH/Ybif+L5dfsV+P/VXjPS+Pb
Qp+PFNuXOOrS0wfNblM8v+Z7naoP8i+sG1l9+Dyq7ktM8/ld2JegPuxX8+hf
0K/m0WvQr+bR7FfzROSVxfYfhuL9Nc0TMR5HHfi8wZHgfN6AnHl3P3C5Lve8
cP4uT877wvb193q2f6WMB/fRDZL2YW+uq4wT8wK/Y/bR+RvyU9aHn3GvS334
w5CvsT78tsuX+lhfwjhZ/1bEpeflJOtjvXZTpR3EJ47xCdsph7ili3DEmTZP
2kE8bKdLfcTtNkLqI7+wcTJ+5EE4l6mP5mth35v1kVea3i/kv6Z6Ik83tSvs
JwR/K/s/YV6L3Zo+J4P9mbDvJ8/VhPpih6b2yfaVs53IPl6x+cXnUvrKePjc
hdoPnyt4RTh/Nx+eWr/IvZPKC11lsQe+V3j0tNT6pvX5u4y2z98d0sezwXT8
3DfW6+W+KPXh/hv3ebhPQg7/Dz2zz01xH6l/ur0FP0aO9SjUZ/vcP+kv/WJd
Ds+lsB3uz+h1cb9loHDECYGzfe5LDJJ+P8R+yBDpl/seQ9PnbzH74X7IEOm3
FPL94dJvPewzTJR++b6J+g3uD7whHHG1GyP9lkce/b70OxX5e6mcZL98n+Xf
0j7z7nnCke+4xdJvc+StB3KS/e5Hvrz99mS/fF/m8nrJ9v8Ov/2EzJcZyJdf
viXZ7168b/L0Xcl+MR47kJPar2m/JfP8+6612id5Y+S/D9RP9gs9rZRcL/S3
929O1dlU59si6wv2VWyj6Az7sYlyf2FvNlz6ZZ6ldsW86S3h2O8Kv1/LfLEh
0i/mlw2Sfvm+ks4j5iPDhGMfMtQX/xB+9xR/Yv2lX+YF6jcY5+cKx/5wqC/+
0PpKv/Cf1kf6ZbytfpLxs67v2LcP6zXbZ5zZW/plXK3PtTKOjcSZpusj41vW
5zp7FuZdocTzj2BeD5L9lsmYjx+uTd1HCvtpjOfzUP9K7P+QP4V9s1nves54
fj3m9eOY14znm2E+5r+bjOe3yT4S43nuXy3Ffhf5WOxHfbA2GefDXxn3D8nv
hz8ZJPsz9BsTuyfjmb/Lvpz4GRfxM45+JrnPme8qyT4n+ZrU51vy3cmyv7cz
cl/Iu85L/k5HvvcWr3/yeYN8qwj/mXzeIN9+uiV5v8g7yb7fzsj9Ii8j+6Lk
a1KfC8q3c6EPx//61G9OLdqyslrX5snxr/T7unYN9CdvCzu5G/rz+aipOA/h
qu2bM+c8k69cOev8l0oMrn4xOPvd9P+ud2PcrQ2S7Z977s3Lnzn0SkFFaf/3
JX8+l9XZ7a11yq6TZ98cON9fQLk6Od9/JOc5IcwHeX4mzwkh57mRPCeEXM/V
JNdzNcn1XE1yPVeTXM/VJNdzNcn1XE1yPVeTXM/VJNdzIMl5DiR1YzysupG/
KLqR/yq6kTcQ3cj1fFfyhiOT56uQ1xF9yOuJPuSqD3l90Yd8t+iTbCd7vorq
QN2q4PdWJ7qRvyS6ke8V3cgbim7kC0U38saiG3mO6EZeX3QjLxDdyO8U3ch/
Fd3IxX5MdaBuFZF3fCi6kQ8S3ch/E93Im4pu5B+JbuTNZZ6St5R5Sn6H6Ene
UPQkXyh6kjcSPcn3iZ7khaKn6kM91yA/WiJ6kg8XPcn/KucjkT8mepIXiZ7k
bUVP8qdFT/Lmoif5Q6In+ReiJ3lr0ZO8hJyblGwnq6fqQz3PQ165U/QkLxA9
ycuLnuTDRU/yfaIn+TjRk/x10ZP8NdEz2W9WT/JfRM9kO1k9yc8QPcm3i56q
D/W8CPH2zXJ+l1+/xxZsk/O7WL+j6BnaGZXUk/xl+f4C+UD5/gL5FPn+AvnH
E5Oc49TvXLB+S5wPRs76+v0L1i+Bc8DIWV+/i8H6XXC95Kyv38tg/R7QjZz1
9TsarH8L7gs56+v3NVi/bPL7Gqb3kff9VOQFt8l9Jy8r9528p9x38u5y38kP
l3PbyJ/AfeF48NyF6bwm13lNfqaMh/wNmdfk+2Vek3Ne067Idf6S6/wl1/lL
PkzmL7nOX3Kdv6oDdcPzRabrC/kbohu5ri/kur6Q6/pC3lZ0I28hupHrOkKu
6wi5riPkuo4k28nqpjpQN+4LLRLdyDXOIT8gcQ55M9GN/GPRjby56Eau8Qz5
PaIbucYz5I1FN/L9Es+QfyC6qQ7UjftUC0Q3co2ryTWuJr9HdCPXuJr8Xll/
ye+T9Zf8FtGT/HbRk1zjbfIGoie5xtvkGm+rPtQTz9Nq/cA1vyPX/I5cv99B
rvkdeUPRk7yp6EmueR+55n3kmveRa95HrnkfuX6/Q/Whnp2w36jf6SDX/QRy
3U8g1/0Ect1PINf9BHLdTyDX/QRy1Y1c9xPIdT+BXL8rQc79locvLpp14fvZ
/ZZHfdls5upnNlw4PfBavoznw8YHnu/LVuWTwSf/XHZU4NV82U7InE87KPCT
fRn7p8PDvseDKBeuH319/dLZfZVPUG7Q5+GrFzWcGnhjlJ8+9bS/nbHs7cDb
o1z9sYMvN+yU3VepibJ/Dn5e4MegfHlmvDPCvkdVX7bRmfNyJwQ+wZftuMx1
jA68jC/Dz+UG/h/s8y3JnMc7NuxXLEO5Bfb7yB9B+UD/go/L3vd24IdQ/iCj
R3Y/5BOUeQ45Oc8hH5z5OzHsS7zhy/aXAX+292bgpX3Z1mTGNTjw733Znrhv
34EJL0wO+wYdUe5a8v4Ox/3wVuAvouyfV3gnu7+B8slTKj3+QtW5gZ+B8q/Y
l2QefRD736VxvjH5iSh/hfONydeg/DrONyafiHLD6/s2qDpxZsgrH0W5wtAn
lrSrPyfwqijjudiQN61FeR78DOPqpojDMf8C34J4HvM18KrIC7DOBF4P+QW+
VxN4aXwHsAn8DPlFie8Adi8gL1FiX2b/9mrJj0qj/nWSB+1BHjRT8p0bMZ5a
ktdcgfH/KPnLJlzvLMlTGkGfrpKPbM1J+h/mBXvgf2rC/5Df/Y73P9Phf8g/
PMb7n6vgf0Ke8pn3P2Xgf8i3wP80hb8h7/iMLy+EvyHvvyHpf8hvfSnpf8gP
iv8h/1L8D/kb4n8Y5/cW/0O+WfwP+Q3if8gr5iX9D3nJL5L+h3yS+B/ycwck
/Q/5XvE/5B+hnAv/wzh8BvxPCfgf8pPhf1bB/5DvhP9pC39D3hflbvA35Lko
3wx/Q36/+B/yi1HmOe2Me+l/eL46eRmUv4a/Iaf/GQ5/Qz4J5XvgbxgH3o/y
2fA35OeL/2GcMx1l2I/T9Yvru/6eMh/nunNdKEycJ949+Hn/Pbju1iEz3zsH
P9zLl+1G4Q3Ay+Ev+UUo3yb8PpR93tk97EOW9WWOR/YJu8Pf9gx+eCvKPfB7
FudRJzy3UIDrpR3+iPq/4Hp53w9H+7+DU3+Mz7ZiPOQc3yy0l4xve+K583kh
Djw2eV+cxl2ob1qf5+3zPur3R8j1uza8v/p9JXL93hbvu36fhfdLvwPF+jWF
s75+H4r3sbPUJ28g9Xl/86Q++XNSn/td8+U7NeS5o5L1ue7od3DI9Ts4tKsC
aZ9c26e96fjJO8n4aYeqD7nqQzt8SOqT15T6tE/9Dg65fueIdqj2Rk57Y75D
u0JcYiMyfu7VYFc+Tn411Cdnnl6I7yDQfr7E9zBmC0c9G4/2aT/vof0irBfk
m7FedIN/IOdza3xfi3ZVDusjvm8T+B+Y13OE0/8chbiC9rYOccUu+BPy8fAn
1IH2w/1tvE8c7Oc9PMfA+sn9xv42EjrQTmaJzuT8fScP9Wkn01B/OXQjXwvd
foI+tJM9yF8+gQ7ki6FDgfAFok/wb6IP+W74VfpP6jYS/rCr/B7BuBH5XKi/
FPHVHInP70X8+ayPy0L9Eqf5OG2nxO3ch2/i471Q/y7EezdLPF8F8fA/EX+y
ft9Pffx5BK6b9/1blC9GfkzeG/UnIZ8mfxHxLZ8zIefzPI+Lf5sBPzZXdGiS
/L3A6e8Fu0QH/Y45uX7HnFy/Y07O75hzP4Tjf1W+ox3idvmONnk/+Y42ea1R
yf0Q8g6yP0xeW77Por938PssHL9+n4Wc32fh+eHk/N5KjuhwCHnWXGn/4Am+
fc7f0A7yNX4PhVy/h0LO76GcK+taK9jDrWInA8Fz5boGY/x3CG8A7sv1i+Wb
fxUdDkN9nuPKuIXnx/L8W64jPD+X53VzveB3Q5oej/NjeR9PSHxfI6yzS+Rc
a/pDnmfO74lwXVgAPvl6z+nnN/iytfH9hvlyD/rFuIL/5DhGox36wwlo52G0
Q7/3OK7na5zfzvWO33fgebMc52iUB6M9jnMxyque8X85zo/a+/J16IfjrIty
d/w7jrMPynfg/3OcDVFujfHzPnL8/F4J7+NMOaea95HnVJf04wrr4A6M813o
xvu4G+P5zV9XWNfKtE/oZqpbO6zzHGcHlKfguU+O8y3kUxvwHCM538ubiHWM
nN9h6oD1mbwryuf4vC1c78XI4+71eV7gLZD34b2uwC/3ZVuN9ZB8A8q5WLfD
Ph7Ka/B8I/lGlEfiu2bUZwry0H/ju2bk3yFvPQbfNSMvizwX53YEPgTPTU5D
XEYOv4nnX8cEjn0964R/R85zNv7m8+8wHy9FPu7fs3on8AeRv/f0+X3gQ5Hv
d/D7AYEPxv4A3tsLnOcnfIJ4h3wDyvv6Yx8U/BjsS/TBvgX5eJTL4b6R10R5
EL5nynn6KfZDPvb7JYEfwP7JH36/JfALsN+C/eDA38b+zDd+Pyfwo7Gfswnx
GnklxLeHYX+IvCrKr2I/iXwdyhdg/4m8G8prMT/IT8BzsCUQ19D/fPGcL5+D
OIf8aezLjUOcE/I4xDlX43cG8tuw79cS+4Lku1G+BHEQeQHKl+O5ZfqZheBt
4Q/IW+ck/QP9z0bxD+Rlcb2T4A/IV4p/IJ+NckX4B/qx6uIfyJ+Ef8D5QIHX
gV2thT8g/wnlwfAH5FPFP4T6KI+Af+A+Ff3DUvgH8nXwD0fDP5CfDP+A91YD
fwXzmt83JH8PZX7fkHwPyvy+ITnPozsF/oHr15nwD/XgH8jvgn/oAf9A3hf+
oT38A3k3+Ae8rxw4z7FZDH9AvhTl3+AfyA+h3A/+gBy/u8AOZgR+gfgHrr9D
4B8+gn8g/1z8A3lJ+IeH4R/In4R/WAH/QL4G+7+b4R/It6NcCv6A/CiUX4M/
IB8p/oH8CvEP5Hz/mvla+D0U+RrzMvKO2D9n/kX+APbfP/P784EvwX49/Q95
yY5J/0N+4SdJ/0M+5eik/yGvMTPpf8hbo8z3lel/OsCf/BP+h/X5Pin2JUI7
PVGmHyOH/7LayAu4bt6DPArvAwX/vwh+xr9nMjybh+J3DbwXGHhnjPMh1Kc/
fAH1cT5EsJ+X0X5b1Oc42+F3FLxPHPhruC7kraFf+uGH8LsP+c/Qszp+9yGv
Bv8/Gb/7kPfGekF7IH8Vv9fMlfy0LvJTtB/8f3W0j/EEzvXlFsnLyiEvWyB5
3OHIE5cd+vO/p0N+dMT25Zn8iO/LMC7VcwnI9bxEcj2XgFzPtUvWz34vgFzP
r0uOJ/teDLme20Cu5xKQb5TrYpx8gVwXuZ5HkYzD8+T8li3Fxkmu58uRV5Jx
kn8v50uQ8/1ujpNxtZ4LR75NxkOu54GQ63kg5FtkPOQ8D4T90g/wnDS2T365
tE++Xdonr44y6zOO/VXqk9eR9+Xpf1rJ+/K0fz1/m1zP3w77V3L+Nrmev03O
87dp5+R6zja5nrNNrudsk+s52zp+6kC+WK43PO8q78eRm7y3SD5eztMmLy/v
x5EPzknOd/KBcv4V+ZtyThT5o3I+Nvm58n4i+WNyXYx7O8p8J18s84i83Nzk
fCc/UcZJ/oHML/J2Yv/JdrL3i7yVzHfGyaNlnOT7Zb6Tvy7jIa8p4yHfI/OL
vLbMd8bDO2W+k+t8J9f5Tn6tzHfGpXoeEflVMt8ZD+g5PPSfek4ROf0b7TPp
t4dlzxOD37tG2iHX86DIeZ4n20/64az9k3PdZL/0h9dKv0l/m+2XvLLYOTnP
6Uqe27YunC/B8ST9c9auyHnuFsepfpjjJN8j4yS/UcZJPkLsnJznVXL8yd/R
/udco0S/2fEn62fnBTnPpeR1cR15SK6LvIz4GfL2cl3JeDh7XeQny/n55Dwn
gddL/qVcL/lp4pfCPo9cL/mzMk/1uqgD41h9/51c/S15JVlHyNvIOkI+TnQg
5zrC95HDvo2cr0jeq15SH/K/y3vW5HmyvpBfK+sL+ePit8n1/En9XYycfr61
ng8MzvMbeV3J9yyyfon+ua60Q75X5h05zzlk++TDxK7Id4tfot+uIf2Sq18i
V79Ern4pud/yP+e5gWt8S65+ieuF+m1y/R4BuZ7DTK7n+CXbyfolcvXz5Hpe
H3kfmafkjM95Xbre8brIN8t1kev3Asj1ewHkPH+P85G8r/gl8p5yvcn9luz1
kmt+RK75kV4XdWBerzqQaz5Lrvksueaz5JrPJutn/RK5ntNOrnlucpxZfZL7
MFl9yDXPJdfz/3Wfh+NkXsxxhnN9Ef90F874hPtCPLeB8cBQqU+u56RxnX1V
eHK9y3L6T/p5cvpDrU9/pe3TP+h4OL96Cqe96Tl+9PNPyHiYZ/H7SqxP/fWc
Geqs53FR5wGwE9Ynf1nqU2eeW05OnUdKO+RjZDzUv1A49ed5gGw/qX+2ffJC
GSfvi46HXM/p4v3S6+L90vPQeL/0fCHeF547F3tehe2zPs9F8eXW/7Nv5s8h
+T9IoOXF
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
b1fFtJnX1ZXKITLPbxd9Q+Y1dhW4WuZ5vBbcDTxa6x08L/NeV22oaubxvIb2
W8FP67vAtykeBX+ROqcTx75SPj+YN/4udy1ENZFvlD8F11MW0X6Bai3gb8GX
BXO8i5W3BnO834PPDOZs5yqGDOaflyiOAlcFzwFfFMwDL9S6zc27Hq44IXc8
qbjyJHA5cH3tG8U3WvPg37Mid+Yd7wK/oueKC8odH+o+g3LHwN/T/5Bojmh5
sG3bK7V9m5A6rlB8IdtWKbV9OzaYw1yn3CI4D12vPRTMw/+jbwrmTtfqfYJz
K3ER4qaVq27Q2ARzpGtkVxTHgEWgtgrm7f/Veg+uNWxBzw/muMQTLgjmuMRf
/Race4o/Ed+tPHcrumVwzWK77EQwT7tRezq4ZrFTeyi4ZrEjmJcXr/uX7FYw
37tZ9iOYH96EbhTNhVwnziaYrxCn9FBwXi/u677gPFp81D3BOaD4sUnBHIK4
KXEm8i1XoEcG5+Di074N5gDFeYrTkL3vmjvWV8y/WvsgmKP+Ez03dc67Vflf
MA8pLuuTYD5TnN6E4HxQPFvjaP7m+miuX7GuuJ5HkV4l83XzwM+WzHH9kDr3
/1f5dzBvKf5KPILGWZyE6g6K9c7NHYNqzRwhe0y/I9G7kAe8WMQzimtUv5BP
a49+KnF8o9jmaPrOSfybueijUse7TYPz969yc+6aI3E28rH7pPazig33Tx0f
yq/undq3KpbcL3U8KR9YObUfPCl473zJPT+lvU7q/Ewx7L6p49j3orld5R3a
a+IYxCWoVqGahTjMRcHcrHjdhcG8urjr2cFcqzjDr4I5YfGEXwTX9cQHrk7N
nwTafg3mScQHfhnMLYs/nFTkrsqhZINki8TjrQrmWMT1jQjmJcTTLg3mk8VD
Lgnmh8Vnam9rj4s/XBHMY4tXXBzMJ4vn/CmYDxGv+GMwNyge8t1oflx5Wdvg
ulsiOxTNlSt3GxtdM5P/fSC63iC/PCa6fib/Ozra5soePhhdb1NscH+0vZYN
HB5dA5OveT/YDh+vPRXtD2Rjn47mChUnXAM+K3Ou2lJ8UGb78wEyhcsTaG+T
e410076Lrvdov58ZXe+RHTgrusYjm3NPtF+RDW8RXVOUHWgVXe+RPTk1ujYp
W3FadK1INur06BqP7E/r6FqRbNp7wf7lOMWQ0XVH+fp7o32bfMoj0byMYo+Z
wT7xWPBj0XylYq2Xg/1jQ/DEgntSPDYh+vyB4oER0fVFxUg3RNfwjgLfGF3n
Oxp8V3TdUT7o0ejzDasK/y4eR3WTx6N5K8V1k6P5QcVjD0XXQRXLjYz2x/Jr
o6J9sHzWuOiaqOLAJ7TOMnNlD0fzTYq1JkVzaorBxkdzT4ptXuEbx/ONjWQf
ojlKxWxPRnNqiutOia4HywbOCI49GtD+cHBdshr4YvqckJm/uj81x6J6Wcfo
2vZutJ8fXV/cXT4XfHxmbqdDdN26LPic6Dp3BLePrm3vCj43usZcRnFpdP07
11pNzaOo5nhedK16F8UG0fXLPbQXUvMBqus9HRxHHZmbyxd3I5uwSXsy89mG
ycHx0hGKJaLro3tqfILjq7rgKVq7Jc/vE8H+og74xeD4px54ajD3Uh/8THCc
prXRL7ruqz7jg2u41XPz74olaoBPiq5xytefGF3bln9vGl3jVDzweHBN8zD6
X0t768z8w8nR9Wb5/TbRNXvZkObR5wDkW5tF1/7loycG16APpU+T6Lq14oRO
4CaZeZi20WcRVMu7Iromtb/8THR9V+9/dXRtVe9/CfjEzHxOd/nXzNxLu+jz
DUG2NrqWrPXTNbpmVAXcObrOtZ9itui62L7gLtG1pwPAV0bXbquC+0TXvDVf
N0XXejXmfaPr4kcWcZ38+c7o8zY6//QbukPwuQutt07BcabWj86xLOLv26J5
V/Gr4lZVFxXvKR8tDlBnUzZljrXFn6leKm5T50j+QXfkno1LXrfiD3XGZW3m
sz1Hgheg2wef2dB6Focs3lIc53m5eQLVW3VuRGeAVMNVfU8crThs1R103mhO
5vXbSPly5nNB4l+VT54XfD5EYy7boPM6ygF1/kTneFRrbpk71xevM7aIMRRr
iBcVd6hChGLU2shRwedqWiWu/44K3u+aL9VHVFP5Aj2A9s4l750rc+deqmW/
E13rFbfZK/jsgWxCq9yx8CXo3vr+kvfvXPCr4BO13nLHxaqDN4g+C/Yc+t7g
Pa51MjqYE9b6rB99BmdK9Pm3Bolr4sdEn9V6NrqOo9zr7+haj+o+irU65OZv
VFu/O9jOVAbXiz438Qy6S+68U7X7B4J5bK3PC3LzJarv/0m/ptxvn9wxjWIb
nUlrmzs+ugbdPzo3k/8dEJ2byZ8OjM6XmmgNR+d7stWzgjnbxuDbo/Mu4TnB
OYj665krSz7XNS743Ij2y6rMPL7W/x3R+aR85djgswzag4OiczON+a3R+af8
YI/oMyiyFXdGn+9RDtU7+qyJbGPP6DMrskvDos/TKEfuFX1mRXbylui8VD53
aPT5HsWcg6PzqKbgIdFnbhQ33hyd38rvnJ4XeXOxZnQm8Y/oukvDYv1rbHXm
YmN0TKIzbhui41TVY3WGQvUp1S/S4DMApxZ7fHbms1PaU135W8uS/ZdqOguL
eFh53Eu6Ri8Lzgf1zp9lPiOi9f9H5nM82u86n9C8sAk6r6iYV/VLneWTDfgN
vSHz2SnZE9XCdKZuGbpL8Dkc+UednVMNSs/WntX5yt+jz0HpfKBsluqJqkeU
0VrIfHZS5xWvCD7bs2sxhjpPulr+RHFacN3ksugzA5WL/SWeXHy5fLXOC+nc
kM4mqI6mepriQdUzdHZGdRzVbg4O3l/i7cXf695nFe8zNXe+ojxF8YLOyOms
nHyFznbqjKfyJnHyE4v9q9qNajjad6qLDSzyHeU+e+f2UTp7qTOYqv+qNqUa
l7ga1RRUW1AuKX5ePP0v0eNyaOEzVTPQGZ83o2vYqr/Miq6Xq7aimpHq8qrP
q96kurzq829F179VZxkeXGfQHpevU+1B56H+DzGsWS4=
          "]], 
         Polygon3DBox[CompressedData["
1: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
P8m/YuMlt0IHNf83fAr6JbyH8O/CdYVbC+9ZmXPBveA4w3T9C2ojMvc/XfIq
GlsBt87vDAeCC8Fprk/mPHCfXsLXJHMcuM5/nEj42mT7don6HqnM5zvXvD/Z
p5tp/ALJ97KHNH6L8BEaP0T/v09lzou+p2B7ie/CJvXJPuzm5Pt10PgZ6Fr0
/boIDxAeI3wRfk74bOFHo/f/UcLP5fnsxyOEn2Vc975SeA/+r/rGRutDD8nP
5/Xmvx0gfLLwndHf7iDh3sJt8THC/2R7tLvwasJ/Z/u3T16PMth+7ia8ivCf
2Z5dqPai5DvQUbh8Xs9asL1uI7y68Ipsn1sLryr8V7aXe+V4pgj2z+P1+zLv
p/9DgHi5vlc7yaXkKH52VWVbyjfmW19Q2fZhAyfAreCRkpdlPjAumr8crfu+
IPxIME+Br9yjOdeor71+G+FjNHdy9H/pp3mXVNbZIzXesrAuT1G7U/JZGr9U
Y4/p/epnfzM6Wae7af42hXUdm4LvbJb5A+9zGftS159X2SYfnuMlbPXj/GfJ
x2r8/Mq+bDT7Lz/jpmQ+3T54/z0qPDDzrcclX62+g3W/hrpHe91rZLQtaqf5
p2psRLQuEH+fgq6W5s5t4G/qu7JybMmasDavqo2AX2hssMYeio6VugmfI3yF
2g6avw57MJr7EZPUy+9E/HKzxk7T/Is1d2ywbYNfvi75YY1fLNxd8rnY3spc
rXFhftk7mes2Ud/Tkscl35f7j01eM7716iGvZfRarRb8LU7CH+raM9U3HF3A
Rwj3Q5/ByXuhkfom8i01/jj7QuOjo3kl/LKZ5ryVv9kI9Q0s/C2fwS6zn9We
hRMF2zns3f9K71HWNgbv3ceD7RL26Y3gb8ze+7f0t2dNsS3nF17rs4QfLr1n
RmnumayB8BBskHBf4ftL24xdJd8RzDPhmyOC14S9sLL0WvVHB0rvsfuibdZ9
whcWtmXYpFGlbRK26uRkLt1YfZMk36p7foZ9gENkm4VvxCZhmy4Sfqn0npkY
bXPuKO1zsEX8h7MlHx7839ABYgt0FN34Tu1pbLPGL9fYILWXS+vcpGideLr0
nkJX0MH3hB8urJs7xf9MSbE4+5Odo/NMS7I/Yc+Ol3xd4b3cKv5HQYul2b9s
IHBaYZ1Ct3aI/4V0xaLS+ZbTss6cq75tKuvEu8IPFdaVp4J9I/HDpOA9xLft
Gry3+ObnoOvBa4ENvrP0N8E2o6MjS89Bd7FB5MbGFLZNH0X/10G6/rLKOvOk
xocW1iXsJ76QfNibkqdGv9tFkodU1kG42qjCuomPeUL42sK+57HguIk1f0z9
w7OudCFGiV4DnnVS8NrwTrxb32D+uR3rL/ydrvuucgxLLPs8+R9iLrX9hMdr
zsea82Bwno983yvBdr5d9ucs3BHJurSR5j6Z7IPg8sQE+KblumbfzJeWBvsk
/EO9wr5qWvSzatl/dE3mnhtrzgTJ/+KnavY5vPMY9fUVbqH5dTT/w+j4/4Jg
vgeHOEzjbYO5xbPC19X8H46RvFW0ncZeby15W75v/q+fImvOtvgHtfHJHJP4
rnUw9/wgOv9wfjD/fj8633BeMD+fFfx+xxGjR3OgjtiaYG7Ef7o8cy3+6zPR
/PTkYP5LvuR/OZ/ys+RmyfaXHBi5MGJOvu1awfEfnIBYhRirbebL+LL1gvlh
02Tbgw3BlpAPJNeAT7yxdL4UfkRO9JbSPhpffUIwn8aGYUs7Btu2zZP1BRuE
LSJG7Jz95wHRnGHv7P/hEnAKYj9iNrjG9pXXkr2/RHJU38F6/vvqW1A6J8rc
OsHx6HPR8ckpwfHFIv3uWTOnWih5i2R/h43tm8f3yvz7j8xxDsn+Cu4DZyJ2
JCaESy0Jzu3cL/x6aY7TIfONvfL+3afmHNCyYE56iPDuwVyVPT+kZpuOLhDz
X5ljMXIB2OSbc+4FW42PHJ5zH/jOzfSs22rOGZHT3Byupt/fC+eke1XWcXLa
N+p9mmJr1b+wcM7s1uw7u5JDiF4D/lsVvDbP6BnX1Jyb6iF5muRL1b4QXsE3
knyX2lLJy9Xuxmbj23X909jSZF93MLyA9Y/OrfM+2Jt/o3NF5Fw6ZF9+lvCR
mrNBtI/Blp8Y7HvYX/junsHcEB8yT9e8Xti3wFGxdb2CuevulesBzbK+Y1On
lfZB2FpsJrl9cvzY0qZwhpptIt+DvCX5S74R70PNgHh+m+BaAvH7fsItg/M3
7Hd892HCz1T2OcQ2cGx8UUt8vO63S835S3xYq8zH8G0LS/OttYX3TPZpxEpw
bnwdnBfOQswEF35EcwbU/B8fSo5xDpXcJjj2aYDvFp5ZOAfVNvM/+By+j//M
f78wuD5zf/Bak498WfKm+A7JswvnmBrii/Q7t3AebLraZWpfF/YDPSvbAezB
DdGc68aac3twsSej8xfH694vau43GrtC7dvCOcu3ovP/A4PzCfhbdLt9zfno
d6Lt7TnB+Qg4JLq5ZnB+6+3o+sPZwfmLN6PrDQOC4/fXo+sx/YPjV4KJq/Qz
tszvk5wvID4mf3yx5h/Ht8bXCx8LH9W7tFQbkONJvvdRakOi89/Y62P4X9E5
fPLVuwpfCH+PXntykuQmmyTXqlqrXYRtSOaPf+t5/9Dgg8EcnnF8EL5oZ80/
P1m/qM10yrHDBXCkmnN05OpGJvsSfAq+7+7k2lTnHKuOSH5X3hlfs2Wy7p2M
TUvOmdePzrmQe1kKXwle772Fx0fnm46D91bO8dfLnJ/c/z3JtTJ8BPyTGOp9
9LF0bEVM01LyJ5mPXRX9vuRQyaVene1lD7Xbk3NG5Mh5JrmkffG3Neffu0mu
6fmPBtvbwRC/Oo6biZ8vEZ6v6z8PvoZrf4KzCe/If4iuGVE7omY2S/gr4a9K
15SaVc4hXybco/D6UeOg1kFOc+fKOV9qP0cVfv93sRc1c6IheX0PqDk+It8C
fyEWhqNclpxzgV9Sg7lK8oFw1Jrz/djfv3mf4L5z4PP4RMnbqZ0t3CI51qNm
cnGy/8e2Y8NYj5WV40DmDEpeMzghOsBa7pT8rfCRfL950bqHj70yOQcDd4PD
XQG/In4J9qc8j5wKuRVypDtWro8dnvkMe3Fo5ldHq10eXTNB9/+tuZYCn8S3
jK25VoKPx9dvnr8HNQ323sqaax0/40MKx2idkmue1D5fE/4puqZKbXWy8A/R
Nca52V8siK6pUludIjw/uoaEL9uwdG1pXvYvb+T7U+PFd9YvXfulZg3XSqVr
2dQQnwzO4VJbpMaIL65XuvZIjh7buU7p3D01AWzr2qVrBX9Hx6Jb4oOSazZw
kap0LSfAQTW2tdpZyTVtaoOxdK0b/byL71X4ejgoXBSdQ/eo+VL7fVXjP+pZ
M4QnBv9n/ntHtUWSF6sdnlxDoJbAM8/M+rJJsD85IOvTp8E2cSvJy9XuYX8W
fr99o30VsfXbxDTRuoxOw4X2T77XS8LvSr4jeW+wR+DityXbVmzsdfl9PgjO
mVLrWAAnDf6GB7Ef8G/B37hdcg79ieCcM7l1atrUtolh5kbXxKmNUwOfHV0D
pxZODXxOtD6y936vOTcKXyRWgiOMSo6BiCvgpOjHMmyG5Onwv+Tv8WHwHt8n
74//as1whPx+5PrZI4cK76jrPy8cg+P/qTd9j+9mDyf7E2KpuTXXiqnBUosl
p7lD5RiAXDg5RWIDOC+5dXKGcGFqAtQG8MHUYuHo43I+BG5FzmWq7t2idC7m
QbV3arbR2OofKudAiL/2g7+orSn5TvWNVPuxcg2gKfsn2qeOzfkDfD857k+C
c+LkvsnpT8z5AWrR5PAeyvkQ8gXEnOT/yNkRi3ImgLMB+Pgvos8QcJYAzvB5
NOe8Pecj4KLkVEeX5qTkWsmZjsn5FXKp5FjvzfkQ8htwNvIZxCxwOWos1FqI
aaj9UyOdlPMTxNfst9FwDziU8K+Vc5Bw3gfy/nyAmEK4T7T9XSB8hfD9wqGO
Y2Y4DdwGf7J6tD+GS1BjpNZ4tMa3kFzWccxxn/CL0f7td+FbJD4hvGv8r6u4
Lcfj2ONVo/Xn2uwfiWuwKR2y/SZOxIa1T+YbPwTblIOTa6hfBp/BoLa6QnhG
MMeAa+CPpgf7IHzR95VzVOSQic/h/NSo4ShwFfzphGAbg63hTAxnY+Bon2V7
NKP0mYwtK/MPavenCreu7E+JtVZkfgRfJmdFDgc+Sw6gzD4V3wofgcPDaYYn
n2HgLAM1xp0qn1HhrArf/8to/0bu7teaaw+cQTqxdI2Hs0mcOTmpdI2Hsyjw
Mbjy7JpzBZxBObl0zYazKZyJOaV0DYWzMtRMzxE+pDA/48zOcaU5J2d54Jxw
T2o01C85M3Ns6RofZ2keED6vdA3uopjPxJTWJ9bnSfhsac46jHhI+JrS9a5b
omuaF5auOVLrfFD4/NI1pEHRHPeC0jVfuC81UWrT5DDIZbAfxwTbJGzTE8JX
aPwY4es0Pl74SuFjha+PrkFRjzmxcH5wYuX6W0/hW4UnCF9duuZ6UzTHgevM
rDn2pAY8oPQZH2rD1Fz7lz4DRC2WGIHaIzVLYgc4P7XLUYVjATg/tTtyAMQC
xDjk28iZEftwxoOzHuRkvo4+Q8ZZMnIy06PPhHyR48Nvo89scXaLGOKT6DMk
nCUhh/RNdExBbYycDLEGMQr5uPuyfsP54H4/11x7I+dErXFM4VwUNfezSp+B
oxZ/n/DZpfXv/Oia+cDSZ66opVMzppa8X+FYlBwUuShyYvBJarSnlz6DRe2W
Gn6f0vVxavvkoKgFjy6cmyIHRa34wcK5Kc68fZnjZeJraoxnlD5zRu1xUeW8
Xt0c36wifdsmOsfaRmMr1De4sA1+Ltt+Yqc90Q/1zUl+N+7JvVcm22Z8AL6A
miNnFzjDcHTm+9QW4Rxwjz+S9x57bny2VXBh9As9w0Yhfxdsuz4pnRfB3+J3
DyvNleA38BxsGO8Gx8a2fRMcS8H34f3/JudeHsvxDpwUrl5Fc1U4F9yNGAku
ho17tnAMge37KzmXg4/AV3yanOu5N/vOrSuvNe+OrViUrMvoCLqyLDmWbpRt
K7aYWJCY8Ntgn4zvDcG+en5wbIn9/DEY716zfcfO/5isS+jYvdnXENfDn+BR
PyTvRXQO3ftIfS1yvA6v+Z4YpfCeZe9iq6nd8AyeR86xbnQMQizC9XBXvvnU
YM79keSbg7n4d8m2FhuLrf012RZhs7Bd3wq3LmyTsc1zg2PreYXPhhFPEyuT
wyeX/0bpvBj5Mc4ctKy8luxZ9u5rwXV4cszk52Yn+2p0Bt35LdlWYgOxhQuT
bRs2Fls7N1kX0Cl0q0Xl2I+9Mi77MvJs8D14HzX87qXPV1HbPy95/Wbk/QmH
JNYK0dzy45RrfaXrX3AcuOrgYO6Dz4LLDgn2ZXB4nsdz8aUvBsfGxLufcY3G
Ny1cQ6R+9kFyLoicEPUpOBXc99JgroUNITZdGWxbiInfxtYHx8pw5neEhwZz
aWwA6zEnf19irE80Pjw49iIm+xhfFByrNa8cixFjEWu9l5wLhUPAJeDo7wnf
EMzd4eTv4luCuToxGbHf08HXE9NMxZcExzrvJ+fSyKlRHzutdB5sZuE4hjN0
+BviaXT+3NJ5LuIJ4op6yWdJyHUv1vVrCh9R+Awx+b8Pk3Pxd2d9o97B/oIf
oY+/J3M3fCS+cnGyr8Mn45t/Lp03Jf4apvltS+dViYHhcAcJ/1M4poBj98zx
wB7B7/OefpvXHBNjc6jDkIej7132RHIumpw0tVd82mThy4N93avB5y6pGXC+
khj5Q/5vcOz8va5bWZivXRvs46Zgb4N9Hz6TWPKKYF+Kj2A9rw72HfhMYvGr
gn3plOBzLeTYyb/DEYkllpde7yXJXAWOAFeYkcy14FRwqxeC84TYIOwHMQa5
m7Wz/UTnvw/OqWELyCmRW9q+dO2vbrItJGdK7nRXtZGFa5DUuz5LOXYpXbvn
vM+a0TkMchmtk7kDHILa3T/JsQUxBbEF9+9Xc473Ycmfp1z7L31WYGCyf8JP
wa0fSM4Fcg35W+rn8FtqBtS75idzH3w+vp8cNrlszhyTzyNntVfey8Tm5GDI
/cDp4fZwFHJXFwdzlz2ScxnoG7lzODe5rkuCuTicEn+6czDX/ELzWxQ+I8FZ
id2T65PURKmNwhmxh62CuST5WGzbGsH7jZwl/gdfQ2zxZcpnLUqfpSCmnVOz
z4FPUj+Hu5AzIwd6aXLujBiJWImYlNiUmJTYFB1AN6lHoRvTks8LYGOxtXAu
uNef+fp5ydwHzgR3+ir5feEYcA3y3/AF4plp7KPk6+Fw1Fb/To7tiBmJHYnB
iL0420tsBkfD/u8YzN3aaP4jhWvY1LLbJnMpOBW1B+L3VaLzIeQ6iRnJxXXO
/OB/6numcM2C2gXxy2rR+RFyaeToyNUR0xHbLU0++wTnhnvvklxbp2ZP/WS5
cP/CMTKx8o7J70/Nndr7tsn1FmrG1I53SI51iXmp5ZPTwX/j+8lt/JkcaxMz
EztvL3x94Zo1teufkrkqHJbvsV1yfZkaPbV6YlZiYXK0BK79k/khPJFcAWdI
4MvkTIn5tkmu73CGg3o756Hha+Sf4IRbJ9+PMxD9s32Ej3HGA3tIDH5otu3E
5lsln5XgDAbnFb5OjrWIyYjNWibnRsiRcBaieXJuAn5KPZMYnrMC5FSJ7X9J
jqWIoYilWiWfleAMFfWomcmxITEhseEmybUl6nCcXZmebM+I+Yj9NkqulVFT
obaycXJtipoetb0GyfUy6machSEHgb+Bu5Gb2DC5FsPZNs5i1k8+68YZSc5K
7pycWyHHQj1tQfL3IcZE/2clx67EmMSaU5PtNTV4zruQ72og3K50/ufn5NiU
mBJ70Cj5rANnIDgL0Tj5e3EGgrMQmybnWtg/nCVZKzk2xP5TL2+YfHaCMzmc
zaFGu150Do5cHPlSuCQ8nvzi/wErisyX
          "]], Polygon3DBox[CompressedData["
1:eJwt13m8TfUWAPDTdV2ZUkQRMr3MKhkyJfOUMfM8UxnKLLOPOaX3khehIqV4
5kdJCUmvTCkqU2bimd5UvZK+q3P/WPfs9d1r733O3r+9fr9buOfgVoNSEonE
lyKjeMCfDhkSiTfhBPk7qYlEOdaOLWHj2NvsftaeLWXj2XJWg41jX7B34pys
BGvB5rPh7HVWnY1ln7PlbD8rw9qw19kYtoxVZU+zD9kCtp2VZW3ZG2wse4sN
YIVvSSQOsLX2NZc3ECft/1Z+WIyQlxKtbL+qbqR9Sxzbjt3m2C18sagt/1rc
bruruvLqWsY9SEskfmM34/uwb9hC0d/2WXZOlFVTRpy2fUZUct4ZakqzE/KC
trux6T4PusYdrJtrPOQcrVhR9hgrbLunusXyIqIJK8R6sEXyYqIpK8J6sdfk
p0QJNsr5mjnfwHhGrpvBZ6r4gp3xeULdn9QNU9eYPcEqqsvms4Do6nzTfH4f
11E3VF0jdf3jfOJL+4eIJ9ki+46oK6BugO1arLuao6wgG8hqsx7sMMvPnmKP
sm7sO5aX9WPVWSf2Lbub9WXVWEe2n2Vh7Vhp9hg7zoqyIawh68uOxf1iz7AG
rB8r5bcdYUdFRzaafaPuLnkfdVVZ+/hdLCtrz8qwJuwQy8N6syqsAzvAsrEO
rCxrynKyGix/+v1bEM9WVGf3sC5svvwB3yVNnkk0YWd9zhbPiev2P6q+h5rc
Uev8D8S4E9XYRVbe/sm8g+uO4pdYBTaVdWZj2A/sQTaJtWcj2Xl2P5vA2rJh
8cxZL7aaPcc2sEqsN1vDZrO/swdZF7acTWGrWAXWk61is9h6Vp51Ze+wqWw1
q8z6sLXsebaRPcyeZBvZS2wL+yeryKaxLmwsuxD3gE1k7dgIdo6VY+NZGzY8
7nd8R9tf84OipHs1i80U19TXZN3Z7bar2c7HO7v3r8hziKosL+vI5kWutrT8
JK/IlrIV4j7XfEF+zrV6yq+Kh9XM5N3ZBMdcYZXZDNaNjY/zxLFsOGvCnmRn
ohexZ1kLNpidZiXZaNacDWJnWWk2hrVkT7PLrBKbzrqycawka8kWsBHsDfZ/
9jhbwe7xvftGnxNV2DjWWt0kdVXYYLaFzWfb2NT0MRtjN4t4yD35RV1rdSvV
TVe3lP/MmrO32KToByyb2uFsH/sb25Wa7CfxXsT7kTXGj5rbxCh1X0XPVvcF
7+N8+dRtj/Emmsh7xHzESqnb53Ol/EW1c8S/bddW18u5Jqc/w3iWt8aYYH/x
+WfxH3V14j1mU9Kff4yDzDFu2VyfL4n/qqsbfYG9IH9e/IvVYj3Tku91/I7o
k9njfWG/+sxofy3f726/o36cR/wqryuysepxnrhf8kdEZlYlvpf4JXqkyMqq
xb12jbm2N7Fr8c7GGBDT2LvsUjw/+U9qEzFGWU6bteKZixRWhd3J6siLZ0zO
4zGf55HPlb8e77nfUUx+Z7yTack5JOaSotHP4t1lN3ymOV8dx+Z1jgbxG8Qt
rDLLxWrLf4uexuqxfKyh/H/OV4/9lQ1hr8RcFb3dNbbxt0VjeXbXGWF7v7pV
6j5TV4JtZJvEAXaJrVH7lGNLxhpArJbfoq6Hms2OnaduLc+QMdkPOrM99j0t
7xdzj2N3yN8Vj8VCx7Hdbb+v7mXpmugvYo/tOXyDKK7m1hiTtjtFP7avi5op
cW2fO2Nedt6p8hPyXfbPYuvEfY6tF++c446pySE6yr+KvmN/l5SkdZCPEsfZ
RyInGy2/KbrJ31NXgPWX3xCd2Ho2J8ZD3GdxQ15fZGc1Yuyp6xjfI3oWWxHz
f4wZeY0Ya87XWp7Jdxyobhd7U91H8e6wQewztoxtZctjHeaYMrbvip4R85gY
oO5TdUvVfRjvAXuCbWevsc1xvkzJOWy/48ulJJ9bVnXD1O2Vr1T3qf2prD/b
xhaz92Ncqe0cz4K9yFbG+FbXl21lC9l78cxZP/YxWxTvTrzbbAjbzd5lO6OX
saFsD1vBPmF7XSMDaxH3z3dsG/OEeCaeB3tV3Q51N+O3sAbRT1mjGPPqcrO2
rBRrx+5On8fXpCX7R/SRfOl9al1ash9FX8qb3lfWpiV7WfS0LKxQ9Brnq+x8
vdm9rCF7gfVjr7J70vvZ+rRk34r+VYDVZ7PV9VE3n+VP72cb1L0snxfni97G
Lqr7XN1p9oi6mexbtol9H/2a5XI/RsY4sK+R/EfR2Pbi6Af29Y51VPocuzot
uY6J9UxWVjj6srqHna8PKxj3g/3A/sFOxTNSd2+seVgl1ou1z5hcjx+PdbKo
G/dENFI3JyW53o51d0HWgD3P+rIFrJQY4Ji9onhKcn06Sd3P6j6xvUTd5Fh/
xHXV7IzxaF8z+W7xW6yJ431TVzN6QbyHMW+LguyRmN9YGccMZvXYENYm1oTO
9wFfGHOBfJg4ZPsJdTVjrSLfJ1JZS1aM1Y25KNaKsZ6O98i+htETRdnoXfFe
qxuamuwd0S+ib7xhX/2MyX/YMsezYfmljWMcuM+z2QX2GTvJCse4Y1fYXnae
5WCj2ddsHdvNrosfY00svLaJyvG+x5yp7gTbyr6LMc6mspPsY3aY5Yk5mB1j
W9ihmFvYRHaEbY41WszZMU/F/wAiC6sa80n8ZnVNWWHWPOYddidrw0qytvHu
x9iI58WKsBZsCPsyQ7LfR98fGvdY5GSPs+KsdfSmGM+sNSvB2rBCvt+L7HJK
su9H/8/LprFTbBs7wnKxCewwe58diHcrxjs7n5Ls+9H/r8ScLq8gYnqu4M/V
WA/E+E5J/n9dUV4k1iaOvRprGnaBFY13mV1j+9kPLDebxI6yD9hBVizWK+x6
SvJ/9ovRD9gMdobtYMfYtZgb4v1L+WOqS1SS32FjjLpDbAPbyy7HM5GXT/lj
OZF4SH67umclB9l6tifWBGw8+469x76Kvsams9NsOzvKfvIjm7FlbCJbzH4H
5dTo0Q==
          "]], Polygon3DBox[{{1302, 830, 934, 1573, 1161, 1162}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{264, 1, 260, 213, 1074, 15, 1087, 29, 1100, 43, 1113, 57, 
       1127, 71, 1141, 85, 1431, 347, 1155, 99, 1176, 114, 1182, 128, 1195, 
       142, 1208, 156, 1221, 170, 1235, 184, 1361, 244, 290, 198, 262, 254, 
       742, 199, 743, 200, 744, 201, 745, 202, 746, 203, 747, 204, 949, 247, 
       468}], Line3DBox[{562, 2, 953, 251, 264}], Line3DBox[{564, 3, 562}], 
      Line3DBox[{566, 4, 564}], Line3DBox[{568, 5, 566}], 
      Line3DBox[{570, 6, 568}], Line3DBox[{572, 7, 570}], 
      Line3DBox[{574, 8, 921, 216, 467}], Line3DBox[{576, 9, 574}], 
      Line3DBox[{578, 10, 576}], Line3DBox[{580, 11, 578}], 
      Line3DBox[{582, 12, 580}], Line3DBox[{584, 13, 582}], 
      Line3DBox[{265, 14, 261, 253, 584}], 
      Line3DBox[{1098, 28, 1344, 218, 265}], Line3DBox[{1111, 42, 1098}], 
      Line3DBox[{1125, 56, 1111}], Line3DBox[{1139, 70, 1125}], 
      Line3DBox[{1153, 84, 1139}], Line3DBox[{1173, 98, 1153}], 
      Line3DBox[{358, 113, 1174, 1173}], Line3DBox[{1193, 127, 1442, 358}], 
      Line3DBox[{1206, 141, 1193}], Line3DBox[{1219, 155, 1206}], 
      Line3DBox[{1233, 169, 1219}], Line3DBox[{1247, 183, 1233}], 
      Line3DBox[{748, 205, 749, 206, 750, 207, 751, 208, 752, 209, 753, 210, 
       952, 250, 293, 211, 263, 255, 1260, 197, 1247}], 
      Line3DBox[{413, 248, 748}], Line3DBox[{414, 252, 572}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1074, 1343, 754, 1073, 1596, 1261, 1075, 1597, 1262, 1076, 
       1598, 1263, 1077, 1599, 1264, 1078, 1600, 1265, 1079, 919, 1363, 
       1476}], Line3DBox[{1087, 1484, 1669, 1086, 1485, 1670, 1088, 1606, 
       1272, 1089, 1607, 1273, 1090, 1608, 1274, 1091, 968, 1275, 1391, 1782, 
       1345, 1365, 1477}], 
      Line3DBox[{1098, 1280, 1613, 1097, 1279, 1612, 1096, 1278, 1611, 1095, 
       1277, 1610, 1094, 1276, 1609, 1093, 1671, 1487, 1092, 1767, 1486, 1366,
        1458}], 
      Line3DBox[{1100, 1488, 1672, 1099, 1489, 1673, 1101, 1490, 1674, 1102, 
       1614, 1281, 1103, 1615, 1282, 1104, 1783, 1392, 1283, 1393, 1784, 1346,
        1367, 1478}], 
      Line3DBox[{1111, 1287, 1619, 1110, 1286, 1618, 1109, 1285, 1617, 1108, 
       1284, 1616, 1107, 1676, 1493, 1106, 1675, 1492, 1105, 1768, 1491, 1369,
        1459}], 
      Line3DBox[{1113, 1494, 1677, 1112, 1495, 1678, 1114, 1496, 1679, 1115, 
       1497, 1680, 1116, 1620, 1288, 1117, 1785, 1394, 1395, 1118, 1577, 1769,
        1347, 1368, 1348, 1469}], 
      Line3DBox[{1125, 1291, 1623, 1124, 1290, 1622, 1123, 1289, 1621, 1122, 
       1683, 1500, 1121, 1682, 1499, 1120, 1681, 1498, 1119, 1770, 1350, 1370,
        1349, 1482}], 
      Line3DBox[{1127, 1501, 1684, 1126, 1502, 1685, 1128, 1503, 1686, 1129, 
       1504, 1687, 1130, 1505, 1688, 1131, 1786, 1396, 1397, 1132, 1787, 1398,
        1351, 1371, 1463}], 
      Line3DBox[{1139, 1293, 1625, 1138, 1292, 1624, 1137, 1692, 1509, 1136, 
       1691, 1508, 1135, 1690, 1507, 1134, 1689, 1506, 1133, 1771, 1352, 1372,
        1470}], 
      Line3DBox[{1141, 1510, 1693, 1140, 1511, 1694, 1142, 1512, 1695, 1143, 
       1513, 1696, 1144, 1514, 1697, 1145, 1578, 1698, 1399, 1146, 1788, 1400,
        1401, 1373, 1464}], 
      Line3DBox[{1153, 1294, 1626, 1152, 1703, 1519, 1151, 1702, 1518, 1150, 
       1701, 1517, 1149, 1700, 1516, 1148, 1699, 1515, 1147, 1772, 1353, 1374,
        1471}], 
      Line3DBox[{1155, 1417, 1627, 1295, 1430, 1419, 1628, 1296, 1432, 1421, 
       1629, 1297, 1433, 1423, 1630, 1298, 1434, 1590, 1631, 1299, 1435, 1446,
        1799, 1594, 1443, 1447, 1449, 1300, 1448, 1593, 1797, 1429, 1377, 
       1452, 1453, 1444, 1454, 1450, 1301, 1595, 1800, 1455, 1456, 1445, 1451,
        1378, 1780, 1302, 1162, 1632, 1303, 1164, 1633, 1304, 1166, 1634, 
       1305, 1168, 1635, 1306, 1170, 1636, 1307, 1172, 1637, 1308, 1174}], 
      Line3DBox[{1173, 1716, 1525, 1171, 1715, 1524, 1169, 1714, 1523, 1167, 
       1713, 1522, 1165, 1712, 1521, 1163, 1711, 1520, 1161, 1573, 1710, 1376,
        1472}], 
      Line3DBox[{1176, 1526, 1717, 1175, 1638, 1309, 1177, 1639, 1310, 1178, 
       1640, 1311, 1179, 1641, 1312, 1180, 1581, 1642, 1313, 1404, 1789, 1354,
        1379, 1479}], 
      Line3DBox[{1182, 1528, 1718, 1181, 1529, 1719, 1183, 1648, 1320, 1184, 
       1649, 1321, 1185, 1650, 1322, 1186, 1790, 1405, 1323, 1406, 1791, 1355,
        1381, 1480}], 
      Line3DBox[{1193, 1328, 1655, 1192, 1327, 1654, 1191, 1326, 1653, 1190, 
       1325, 1652, 1189, 1324, 1651, 1188, 1720, 1531, 1187, 1774, 1530, 1382,
        1461}], 
      Line3DBox[{1195, 1532, 1721, 1194, 1533, 1722, 1196, 1534, 1723, 1197, 
       1656, 1329, 1198, 1657, 1330, 1199, 1792, 1407, 1331, 1408, 1793, 1356,
        1383, 1481}], 
      Line3DBox[{1206, 1335, 1661, 1205, 1334, 1660, 1204, 1333, 1659, 1203, 
       1332, 1658, 1202, 1725, 1537, 1201, 1724, 1536, 1200, 1775, 1535, 1384,
        1462}], 
      Line3DBox[{1208, 1538, 1726, 1207, 1539, 1727, 1209, 1540, 1728, 1210, 
       1541, 1729, 1211, 1662, 1336, 1212, 1794, 321, 322, 1014, 237, 438}], 
      Line3DBox[{1219, 1339, 1665, 1218, 1338, 1664, 1217, 1337, 1663, 1216, 
       1732, 1544, 1215, 1731, 1543, 1214, 1730, 1542, 1213, 1776, 238, 452}],
       Line3DBox[{1221, 1545, 1733, 1220, 1546, 1734, 1222, 1547, 1735, 1223, 
       1548, 1736, 1224, 1549, 1737, 1225, 1795, 1409, 1410, 1226, 1021, 1357,
        1385, 1466}], 
      Line3DBox[{1233, 1341, 1667, 1232, 1340, 1666, 1231, 1741, 1553, 1230, 
       1740, 1552, 1229, 1739, 1551, 1228, 1738, 1550, 1227, 1777, 1358, 1386,
        1473}], 
      Line3DBox[{1235, 1554, 1742, 1234, 1555, 1743, 1236, 1556, 1744, 1237, 
       1557, 1745, 1238, 1558, 1746, 1239, 1582, 1747, 1411, 1240, 1796, 1412,
        1413, 1387, 1467}], 
      Line3DBox[{1247, 1342, 1668, 1246, 1752, 1563, 1245, 1751, 1562, 1244, 
       1750, 1561, 1243, 1749, 1560, 1242, 1748, 1559, 1241, 1778, 1359, 1388,
        1474}], 
      Line3DBox[{1260, 1362, 1765, 1576, 1259, 1764, 1572, 1258, 1763, 1571, 
       1257, 1762, 1570, 1256, 1761, 1569, 1255, 1760, 1568, 1254, 1575, 1759,
        1390, 1475}], 
      Line3DBox[{1344, 1271, 923, 1085, 1270, 1605, 1084, 1269, 1604, 1083, 
       1268, 1603, 1082, 1267, 1602, 1081, 1266, 1601, 1080, 1766, 1483, 1364,
        1457}], 
      Line3DBox[{1361, 1360, 1753, 1574, 1248, 1564, 1754, 1249, 1565, 1755, 
       1250, 1566, 1756, 1251, 1567, 1757, 1252, 1583, 1758, 1414, 1253, 1584,
        1781, 1415, 1389, 1468}], 
      Line3DBox[{1431, 1416, 1704, 1585, 1154, 1418, 1705, 1586, 1156, 1420, 
       1706, 1587, 1157, 1422, 1707, 1588, 1158, 1589, 1708, 1424, 1159, 1579,
        1709, 1402, 1160, 1580, 1779, 1403, 1375, 1465}], 
      Line3DBox[{1442, 1319, 1428, 1798, 1441, 1318, 1647, 1592, 1440, 1317, 
       1646, 1591, 1439, 1316, 1645, 1427, 1438, 1315, 1644, 1426, 1437, 1314,
        1643, 1425, 1436, 1773, 1527, 1380, 1460}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{562, 755, 1596, 563, 1670, 767, 587, 1673, 779, 600, 1678, 
       791, 613, 1685, 803, 626, 1694, 815, 639, 1705, 1033, 1050, 827, 1628, 
       652, 838, 1638, 664, 1719, 847, 678, 1722, 859, 691, 1727, 871, 704, 
       1734, 883, 717, 1743, 895, 730, 1754, 907, 743}], 
      Line3DBox[{564, 756, 1597, 565, 768, 1606, 588, 1674, 780, 601, 1679, 
       792, 614, 1686, 804, 627, 1695, 816, 640, 1706, 1034, 1051, 828, 1629, 
       653, 839, 1639, 665, 848, 1648, 679, 1723, 860, 692, 1728, 872, 705, 
       1735, 884, 718, 1744, 896, 731, 1755, 908, 744}], 
      Line3DBox[{566, 757, 1598, 567, 769, 1607, 589, 781, 1614, 602, 1680, 
       793, 615, 1687, 805, 628, 1696, 817, 641, 1707, 1035, 1052, 829, 1630, 
       654, 840, 1640, 666, 849, 1649, 680, 861, 1656, 693, 1729, 873, 706, 
       1736, 885, 719, 1745, 897, 732, 1756, 909, 745}], 
      Line3DBox[{568, 758, 1599, 569, 770, 1608, 590, 782, 1615, 603, 794, 
       1620, 616, 1688, 806, 629, 1697, 818, 642, 1708, 1036, 1053, 1037, 
       1631, 655, 841, 1641, 667, 850, 1650, 681, 862, 1657, 694, 874, 1662, 
       707, 1737, 886, 720, 1746, 898, 733, 1757, 910, 746}], 
      Line3DBox[{570, 759, 1600, 571, 967, 968, 591, 972, 1783, 973, 604, 977,
        1785, 978, 617, 982, 1786, 983, 630, 1698, 987, 988, 643, 1709, 992, 
       1054, 993, 1067, 1799, 1062, 997, 998, 1642, 668, 1002, 1790, 1003, 
       682, 1007, 1792, 1008, 695, 1012, 1794, 1013, 708, 1017, 1795, 1018, 
       721, 1747, 1022, 1023, 734, 1758, 1027, 1028, 747}], 
      Line3DBox[CompressedData["
1:eJwVz90qhFEUBuA1Y8xcAqdzPpfgKriDuQDuhhNJUiRJyckMM/7LKBQKhUIN
hRryU4hnHTy9fW/f3mvtan1seLQQESMMFSPG+yImaNDhgH0+yhGTsskRxxzy
pZ+Sa5xyxqPuRE6zzgXfukt5zgwtrvnR38grZmnzpruT99wyWIqoMUB/JWJD
95Bz6PLr/zm5yTMvPPGnn5dbvOa99Ci4Y0Fu85lvyPexyE7ulHfmziyxm2fM
LjlXlMGybo93M8q+K7kbK7pV/gHKyj1S
       "]], 
      Line3DBox[{574, 761, 1601, 575, 1671, 772, 593, 1675, 784, 606, 1681, 
       796, 619, 1689, 808, 632, 1699, 820, 645, 1711, 831, 1632, 657, 1038, 
       1056, 843, 1643, 671, 1720, 852, 684, 1724, 864, 697, 1730, 876, 710, 
       1738, 888, 723, 1748, 900, 736, 1760, 912, 749}], 
      Line3DBox[{576, 762, 1602, 577, 773, 1609, 594, 1676, 785, 607, 1682, 
       797, 620, 1690, 809, 633, 1700, 821, 646, 1712, 832, 1633, 658, 1039, 
       1057, 844, 1644, 672, 853, 1651, 685, 1725, 865, 698, 1731, 877, 711, 
       1739, 889, 724, 1749, 901, 737, 1761, 913, 750}], 
      Line3DBox[{578, 763, 1603, 579, 774, 1610, 595, 786, 1616, 608, 1683, 
       798, 621, 1691, 810, 634, 1701, 822, 647, 1713, 833, 1634, 659, 1040, 
       1058, 845, 1645, 673, 854, 1652, 686, 866, 1658, 699, 1732, 878, 712, 
       1740, 890, 725, 1750, 902, 738, 1762, 914, 751}], 
      Line3DBox[{580, 764, 1604, 581, 775, 1611, 596, 787, 1617, 609, 799, 
       1621, 622, 1692, 811, 635, 1702, 823, 648, 1714, 834, 1635, 660, 1041, 
       1059, 1042, 1646, 674, 855, 1653, 687, 867, 1659, 700, 879, 1663, 713, 
       1741, 891, 726, 1751, 903, 739, 1763, 915, 752}], 
      Line3DBox[{582, 765, 1605, 583, 776, 1612, 597, 788, 1618, 610, 800, 
       1622, 623, 812, 1624, 636, 1703, 824, 649, 1715, 835, 1636, 661, 1043, 
       1060, 1044, 1647, 675, 856, 1654, 688, 868, 1660, 701, 880, 1664, 714, 
       892, 1666, 727, 1752, 904, 740, 1764, 916, 753}], 
      Line3DBox[{584, 922, 923, 585, 777, 1613, 598, 789, 1619, 611, 801, 
       1623, 624, 813, 1625, 637, 825, 1626, 650, 1716, 836, 1637, 662, 1045, 
       1061, 1798, 1046, 676, 857, 1655, 689, 869, 1661, 702, 881, 1665, 715, 
       893, 1667, 728, 905, 1668, 741, 1765, 950, 951, 952}], 
      Line3DBox[{742, 906, 946, 1753, 729, 894, 1742, 716, 882, 1733, 703, 
       870, 1726, 690, 858, 1721, 677, 846, 1718, 663, 837, 1717, 651, 1627, 
       826, 1049, 1032, 1704, 638, 814, 1693, 625, 802, 1684, 612, 790, 1677, 
       599, 778, 1672, 586, 766, 1669, 561, 754, 917, 953}], 
      Line3DBox[{748, 911, 948, 1759, 735, 899, 1778, 945, 722, 887, 1777, 
       943, 709, 875, 1776, 941, 696, 863, 1775, 939, 683, 851, 1774, 937, 
       670, 842, 1773, 1055, 1064, 1063, 656, 1780, 830, 934, 1710, 644, 819, 
       1772, 933, 631, 807, 1771, 931, 618, 795, 1770, 929, 605, 783, 1768, 
       927, 592, 771, 1767, 925, 573, 760, 1766, 920, 921}], 
      Line3DBox[{1071, 669, 1066, 1065, 1069, 1800, 1070, 1072}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
4bjZ/wGM6Cl0
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 290.02605962299464`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->NCache[{{
      Rational[-1, 10], 
      Rational[1, 10]}, {-1, 1}, {0., 0.09999998571429071}}, {{-0.1, 
     0.1}, {-1, 1}, {0., 0.09999998571429071}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.023240179341872, 0.14650045992538668`, 2.708327305171649},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.74733172703158*^9, 3.7473318157670183`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], ")"}], 
     RowBox[{"Tanh", "[", 
      RowBox[{
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Sinh", "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], "]"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74733947528745*^9, 3.7473395132677393`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVfXV4VscTLhAgaEgCCcFDErxIkSCFzkFCcYdSKO4Ud3enaHFti1uB4CWw
wYo0UCxoiia4B0kgwG1z5t3Tb2Dvvb/8k+d7n31mZ9+dnZmd3XNO7rY9G3RI
liRJkpdpkiRx++d/qfWepz9+DAw/OsPd713ueLWsbMsaawKKW+HVPPxnB+XW
eFNfa0DpxUWseacy36g2O7vGux2PjEzulsvamDbjqO5XfTWeuWYyzzne3tbB
RDleGp+xdNiQRYEprM2J7VNqfPP4ZhcL9MlhbU/EXyvgZWO2vij+1x1KkvgX
HZZ1w/pHK/+j5892e0L7JNF2+1W2fAv4hFG2/H22PhqfN9PWZ62tv8bTdbf1
n22PV+M3T59PHO9+mx+N559cJZEf5tOSfILnCekLlb045ZUaGPrTruJFgjTP
wK/XzBXfplluzTPwr3KOrpI5Yw7NM/Dm36SJWDs0s+YZ+AmP20nSxnlpnoG/
alq6RvqqqTXPwNvvjq9YLMlLzTNwyTPwPNwePAO/x/LBM/A/WB/wDLwp6w+e
gZfm8YJn4H8zP+BZ8gmeQ6bWabYt9rnqc9f60t/f4Rl4y9vH+iWr4fAMPFeB
ksvjHmbXPAPv2fCxZ/6aDs/AS3ap9WrQbodn4F08yr5rNj2V5hn40SR78/zR
JF7zDNxn7p2/Cy7LrnkGvonbg2fgrVg+eAZelPUBz8C7sf7gGXg2Hi94Bv49
8wOeJZ/gOZV39Oucex6pPKu+bjI3k8Mz8Pv10w2cVd7hGfjYc1dr/PWnwzPw
Ub8XqFU40OEZ+LCExWVPjHV41u173sjR/pW75hn4rS23O2+p9FbzDHzwZt91
Q/yTa56Bn+X24Bn4QJYPnjXO+oBnrSfrD56Bj+Txgmfgd5kf8Cz5dPUbMeq7
4S3Hz0sr/UaMGvbVg+s+xaXfiFHqatuNoaHZhd+IUeVif78X7Sb9Roy6mbi+
pN+IUT8Wz/HPOnUXfiNG7ZjbraN3t3jhN2JUiUqts65J/Yxc/UaMWs3tXf1G
jBrL8l39RoyKYn1c/UaMCmb9Xf1GjNrL43X1GzFqCPPj6jccPl3tOUo9bTq1
cL4U0p6j1JtTj7POLSjtOUr1H/mh3o6fpT1HqYT4WyP7PPYV9hylHibOu7Tn
KNW5ad5/7Efac5RKue1Xd8+gOGHPUWrSuMWP4mpdJFd7jlKvQu32rvYcpVqy
fFd7jlJ3WB9Xe45Scay/qz1Hqd48Xld7/qdf5sfVnh0+XXmOUJcf1zpaPank
OUL1/LqZV8a8kucI9UP7hPXRcyXPESp/wPZMz65LniNUfKI+kucINeWHf8eV
UvAcoYJPzrnXPOCN4DlCHa89NVXfZ9sFzxEqgNu78hyhRrF8V54j1EvWx5Xn
CJWH9XflOUJ14vG68hyhujE/rjw7fILnJPyHduAZOP/WPAPn35pn4Pxb8wyc
f2uegV866J3IC3gGHjYm38QSh15rnoF/VTnyux9/vV0WPANfy+3BM/BTLB88
A8dv8Kzl8G/wDBy/wTNw/AZ/kk9hz2SwZzLYMxnsmQz2TAZ7JoM9k8GeyWDP
ZLBnMtgzGeyZDPZMBnsmgz2TtGf2J2Twz2Twz2Twz2Twz2Twz2Twz2Twz2Tw
z2Twz2Twz2Twz2Twz2Twz2TwzyT9M8dHMuQbZMg3yJBvkCHfIEO+QYZ8gwz5
BhnyDTLkG2TIN8iQb5Ah3yBDvkGGfIM+n288IkP+TIb8mQz5MxnyZzLkz2TI
n8mQP5MhfyZD/kyG/JkM+TMZ8mcy5M9kyJ9J5s+8fyHDfpAM+0Ey7AfJsB8k
w36QDPtBMuwHybAfJMN+kAz7QTLsB8mwHyTDfpAM+0GS+0Hej5OhvkGG+gYZ
6htkqG+Qob5BhvoGGeobZKhvkKG+QYb6BhnqG2Sob5ChvkGG+gbJ+gbXl8hQ
ryNDvY4M9Toy1OvIUK8jQ72OUK9bXzPTP3heJfUU9Toy1OvIUK8jQ72ODPU6
MtTryFCv03oOGZwhrtrsgPDVdRbm79LkjZpw9+bJOREBVtpiWWfu7J5L4xsz
v937xZtcVu7uPsWu7syi8b2dNg34omVWa1GiPuk0vmpX7qzv/vSwDifqk1Tj
btH5Cxbb9ZH2J47rjgJe+vj7ES3uprPm2TgBn8/477YcC3iB27acmXa/Gv+F
+81h66nxXaynuz0uja/lcUHPjhFh1UNUrGqmCo+YXcvNgp7A+9Zb6Hckr7vW
E/hvjENP4LVZDuQH1bjRNXf+Z2rijnrxDZ4m0/KBvznz8r13qqRaPvD0Z20c
8oGPFHLs+b2v6q2NmnX80huCHOCNGEd727/dVMVT3KlQcdoz3R54EONob6/T
SHXyi6EN/kp5T7cH/gvjoj0Z2pNsz/2SQR+S+vC4yDBewngF/2Tgnwz8k4F/
Av/CfshgP2SwHzLYD8F+xHokw3okw3okw3okw3okw3okw3okw3okw3okw3ok
rEf2SxqHX4K/wrnDnCd9B2eYnU/HBazrh1X8Vq9tl1u3x3ocu2H1BL+wAB1f
0P7ghT0VCgcH6TgCfN/LVO7lCuTQ/ENOj9Z7qrU87fAP/GCT3mMzFs1qlU6U
n1HLOTli7IDOkZk0jvaZN32svXFhJj1fGFeZX2r9NGniSwKO9n5/J3+4s5wz
j2gfPXZU/j+7viHEKfS7rWH8r78uf6ztH+cI3j93a//VL9JvxKvgwSnDG2fM
YCF/gBzEC9d1/UpFL285oXuxNJbruotXa1kO4iDkXG1g6+PqB16pUj/bcmBX
kJNpjD0u4Gj/eLmtP+wN7Vevt3krbvOs/fwx5h/twWd65hPtIaf9qrZnT29N
0HLQPiPPF+Iv5O9hO4Gdo71ie4CdA+/K9iPsXMdfxGtpn2hvsmfgo719T13K
G6TzFuBHCl7aWGOQ4w9x3tGi+72VA79y/BXw1j8EfzPM3dkHQc5SluPqn5+r
ydwe8wW8IcvHuEx6Iq75tqi34q/At9ov4bxgc60sRUYvTtD7X7RPxu2hD9of
5PaudnVfTR8xs861SsnEOrqvFjDumu/dV18OOtnvr1fxIq7FqA1lrp71jYwl
13zvvgrg9q52HqNWcnvXfdBN9TSN1+lsV2+L8UapTOkeRR549JBc+bypuhWb
eabDbidOof2jtHZ71/w/UqWbkXPjzwuPCX7CVL+Fk90e7JL9hqnVjLvui8NU
g1gf/xtd58j2hPZCPvX7vBz6vJwI+mB9GxZaL0bqT9Bf8EPgR/BA4MHVzm/S
AObNdX96k57V96OCx+LkvJCcF9Q3MO9ifgnzK+yKDHZFsCu0x75+28/5G8XP
c/wz8M2ft2eCPQv7J9i/WF+E9SX8ABn8AEk/ADly3aG9wQ8Q/ICIywQ/JvYj
JPyhbg+/IeIyIS4Dx76y8bTqPRNufRKvCfEaONrvftulyeaQrDJeE+K1iO+E
+C7iNSFeA4f8dr++KXF6kof0zyT9M9rLeA0c8Vf4Z5L+Ge1lnAUu4ynkID4C
R/tmrL+Ij4T4KOIvIf6K+EiIj8AhfwfzL+ImIW4CR/v6PL8iPkq7cuoVFdSP
SQ5/kk8S8kmRH5IhPyTkh6gnAH92eeoVlc1b2wnkz7xq5xUi3yPkeyJ/I5m/
oT3yPZGnkczT0D748/kYyXwM7ZG/iXyMkI+JvItk3gUceZTIlwj5EuoVwO9z
3i7yH5L5j5wvzKO+b8PzK/yAkn4AuFzvyAMxX8DRPuJC55ptdmaS61phXaOe
o/cjbA9iHSm5joAfZfliXSi5LoBL+5f7I2H/mh/ML/Kl9Rx3XOuxN9UNjo+u
8SVCneR4DXvDueGe2x4fXhRz8gHgExgX+RIhXxLzqNep4J/Av+CNwJvIMz+J
F+Dn6zt5m7b1uk+oE2K+1i0d2Sjt/MxyXSusa9QJgadclODj9iGNhfoe8LCF
No46nq6PsXzMI/TZNj1noj5iXSisC6x35M+vT57Nn+9JIY0jH956cMfWgX09
Rf4QoZBfiXmkkyLvQnyHHNEvoV+x7ybsuwXPZOCZwLPgkwx8EvgU64uwvgTP
ZOCZwHPH8pmaBlX3C/ctcqvYz71eq0wlpqyPeuRnDUu0Q2+Ne/e69GpAx4xW
UOJ6TK1x3z8Le9ZJms46m9jvBQV84PW/zn8zOJ+1M1HP5wQ8Tf51z5/0ekXF
Eu3TzQJeIGulMmX9U1iPr3it3dndR+PDxi4vPj+vr9VmS/rtO7v7a/y7wuWs
n9b7W8sS/UmCurAhRYNhl1+oIoczLHRLl0zrA/xS7x6Pt6/21foALzq3ypOF
FeMJ7fM3bHBny7gnqke/+QfPN0qh2wM/lmNT1iU14gm4zfNdtblOw1KFjr/W
uG0/N1SnFSsnHvwnH4Z825+cUWGFQ9MUfHZOt793ur/7tMcPqFbbUpe3lYwj
jGt71/ltH6R/Tm0fVg4rHJVEjwt4dPsMj3M89NB6Ap/4dOn2hH3xWs7rR30r
eqx6SZlje6VfsTa5lgM8y87HHmUW+Gs5wG9cOhYzPvQNYd6De9bzL14+jkrU
Slp0e6O0mn/gB35vfWfYqNxaPvD6nUv5vXlYWMsH/ubJ8ifx52O1PQD/avjD
G1X6xtElL8/2QdUDNd68VOUyv40PtBiHPgq40FNBzwyJ9p9B2+3tHmlnT97s
aZWz+9Xts42w+xXjUhgX2kNOBbbbE/a4dPulPC7BgwIPaA85Kp+9LsbY7cGP
uv153hR4Q3vIieV1N8XWX7evt9fWX/CswHNWmzeNJ9SweQMO+al5vbe1/YbG
PdlvCHtTsDeMF/hGtithhwp2iPZYpx68TjFetG/+ebtVsFu0h5xcfWw/AH7Q
3ov1BI72gexPxHpUWI/QE3h/XndinSqsU7SHPwlnfwI90b5gh8+ua4V1jfaQ
M5H9FfRH+yasJ3C09z7/eLV3cUd/9j+qJvsf4PBvu4V/Q3v4K+B2fLyt6jxe
8u3YEMee2e9Rb/Z7kM9+kgaznwTOcug7liP0Iegj9KeaQh+0h3/GPDIPlFPw
ABzzIuICIS6Ieaf+n58Xmvj5OELHPj/vhHkX80iYRxHvCPFOrBfyEHENOOKg
WI+08fPrhbBeRNykop9fj4T1KNYRYR2JdUdYd+3s+A6/Ss05vov8hJCfiDyE
kIcI/0zwz8LPE/y88MMEPyzyGUI+I/w8Lf28H6bYz+c/hPxH+HmCnxd5ESEv
Ev6c4M+Ffyb45xR2vNP4NY53ws8T/Lzw5wR/jjoA4sKLvvtGdSwXpPND4LuL
RT97OTGj9cLO33R8HM35G+YLeX7WTW6rr/RPre1ZPkeD/T7kP7r65IdfJ73V
84L2WxuHvKqws6jO89E+68lDNw97eei8HfpAPuRgf7Gj0ur9I98XtDAvwFtW
tnHIh5wLES3mfFyYVuOII6uzfV8kc2gqPe/Qs/S6uLKn7jv1Uug5kfUEDvlF
TtrygUN+DMuHnUD+oBaPpix8eFvXRSF/1BWbN5FH6Xwp+02PH7tfza3jeOjC
Ue2GZgzQdTnEwduL0qRZPsvJi7D/qn918dBALzfL1W/Hql7XXiy+sShO74sh
50X00O2F5qXQvCFOXazWo1aa0c6+G+0Pcr+u8SVWLWL5WBfAq7M+4A1yAmLs
foGj35fcr2s8eqYKLxx9M3xpvN6nI24mBD3uUr3KW5HnP1PluT3syt6PH1G5
qubrF9z0pF7vjNO4EBsHz/Dzc0dlja59KV7Ex2cEfQRvBN4EzwSeoT/aD2f5
Qn+C/oIfAj+CTwKfOWz70f52G9uPyM913i78A8E/gAfEhSaFyo1JH/dK2hsZ
7I2kvUEO1qNYv4T1C37QPoj7FfZGBnsjaW+Qg3Uq1jVhXQ+y/af2tx68vxb7
X8L+F+3B53b2t+AZ+/ppfx+Y5PmPHwefaP/+1ffJXu26R4iDaJ+rre03hL8l
+Fv4T+AG/0kG/0nwn5gv9Htxre0Phd8m+G3MC/DnL239IR9ypjax/b/wqwS/
ivmS976EnyT4ScRHtPdaa8cp8A+83uqG/sen3CLU2SBHxkf451/62e3hh4Fj
vsQ8foLrfeKUTMd8hzvrCP587tWT245U8dX7XOCVS5QLOxLv7HMhH/Mu7ETB
TrDu0O/9nCOmv/gqnY7XqKOGNcxWeFEDdzm/CvMr7EfHXzGPCvMo5l1h3sU8
ajlivpScL8jBekG8Ax7XOGPL/dmd+wYyzxF+ScEvCb+h4DeEP1fw58IPK/hh
jAv7qc55OozpPOKjjiPYT2Vo1npZ6zKPtf0Dj/vOxl3zostq9rvI/R/bRon1
clnVFjjiFOIR5Nh10Y3U8W77JBOqHdPtgZ+6Y+OirkWoa7meI5+hFN9M8Bm0
KVy3x77vddMaBZ53iNbygV9mHHxi35Q2jx1/RX5CMj+B/4TdiryCkFcgfmH9
xrvaQ7hpXQNH3ivyW0J+Cz2hT/WoHev3TX9OIu/Vfknkq5/4W7RH3gv7QfuP
PF6RfxLyT5E3EvJG7BcwrnbsNxCPgM9kPwM/pvdN7JeEf9PxSJzvK5zvY7y4
N7K87vGAy82dPAr1h865+nj7X3LudePcRLZHHSBk//RDSfa91/eNEa8LJRm3
MzrayZ8RrwcMX++5qHpKfd4E/a+u6t5jxzhPfV4GP1P3exuPWuqbanZQNu1v
3WtevPjTX9mkHAU5qPMjXy3J+gg9lUFPBT3FeBXGi3UEvKHAwWcH5lPwTOBZ
tKcOAgfPkC/O0QjnaKLuRKg7CR4IPCBOYV5G83gF/wT+xfpVWL84RwM+9frW
r3KdCZD5qkK+KuoPCvUH4JBzKTJPk2Xb/XVcxj5xzfqy52qPDrTqffTb/fFj
Dt0+to/bLY/FOTUO+TXbx2XxH59T2w9w/zWl4nvsyqZxfS/u5e8Lqx3Kps9b
Id+j3dFdZb3SSz+j4GcEnwp8Cr+h4DeAI76Hc3wX/kHBP+A8F3gf1kf4DaX9
hj0ujbvxegEOfbIzD7Vs3jT+DfMGHHKeMs/CLynpl+R8iXqgQj1QxB2FuIN8
FetrwrSaHecFOPd/gM9iXMQ7ZYh36rLAcU6EeqmIy8oQl5WMy7i3Vn2jT8Pe
BU+I9mFq6wYbF/tWwr7V9R7aEbqSuvTYt6XWSPlkkE9SPuchZMhPCPmJyH/I
kP8Q8h/MI/zSCM6jMI/Aq04o37p33k/mkQzzSJhHrCOcs/eOzZlwxDOlXC+E
9SL8D8H/iHxexk19/iv9CdrDbwg/Q/AzIh4R4pHwMwQ/I855Cee8wKFPqYPL
v24zMKPcXxD2F+J8jXC+JvYpJPcp8Odt+iw+fLGRj/RvBP8m/AzBzwi/QfAb
ws8Q/IzwGwS/IfwMwc+Ic2fCuTNwyLnAcUHsLwj7C1Fno1DXOokl5x3twc/u
7Kf7XM6UTt9jkXYl6r0K9V5RZ1CoMwCHPyzG8yvk67gp9imEfQryZMjfNG/p
i2zFg/S8I/8pWDTjxUXWTRLzrjDvyHMQdzry+hL7boV9t+BHgR/hB5TBDyj4
AewLgJdl3PW+x22VtdqCayW+uy/yz8uqap4lG6uXPyP9pIKfdL33u5HcI2OL
DqjRT9wzuUGbOkavXbztmrj3GEMz22arUDouqR4X8rGvSpa6kffPD+K+3F3a
PCj1tDw7P6lbEuqWYv9O2L8L/gn8I1/S+5rQc4k8i/oGob6BfmHnz6/aeQjs
E+1nD7HnHXkC8FVLvBPtBPtxyIFdQX/9XqCnL4eOuPdRPB8Rqdat3xPXrllS
8bxnpOpap9vth7Pf6Poe4mz25K3TdF/yXOSxYfTNML8bcwomFc9Bh9GHXh/z
dr7qnIciPnoPHBHS4NkzqQ8Z9CGpD+Jg+jSrG1WY/0Leeyfcexf30wj308Q5
LOEcFvcP4Tcyv9+0+EnJHNpPgv/nceGTuv/qr3H4hzGcf8I+kU8WTjK03f7s
zvN9uC9nuGeucM9cnPMqec6LvAjnwq7rIlJtZz5dn/+NVMOZT9d61GWVi/kE
jnn/kudd8K/Av+iXDP2S7Bd1D8gX+hD0EXZI2YU+8A+4RyT2BYR9gVinCusU
OOZxUrEiG1P6Ofsd4NU3h50btdlf5xXA/z42dNDtGTktkf8o5D9ivSvDeleG
9a6w3hF/0e9l7lf4AR1fhJ9UBj+pDH5SwU+6rtMYNZHlIN6hfT6WI/y2gt8W
9S6Fepdr3SNM1WN/4voehjCVqbftT2AniCP52Z+IOKJkHIFdyXgEP4D4JeK1
9qti3gnzjnit7x++H//+ySFPGd8J8V34DYLfEPNLmF/kUcCrsh0ivgOfyHYL
u4Kd7GZ9RBwnxHHXOtt96vOwyuOu/jJexJBh3gnzjvWIOL6sXaeDsQueEc7N
kS/lHf/oZah7Fl3/0XX4mVNjcvyQVa8jnEv+Mjd0RXa/lBpH/Sd18Oz8mSuk
1Pcf4LcLsnzUQ4B/w/KFn1fw88Cxjqquze/zIkcOq1Rw5n7dr2azWu7ft3Hc
7dfq+i9zijTslV2cm9xXrZk33P/X9yhYPnDYVQ2WX9aWH87y6TbLd42zUSpd
5rvH945NKvq9rC5cHbfpXmVZX4qgsQu6lJ5f3mkP/3nCqjM0w5ME0T6KpHz4
1YKPf9pWd+t7Ag9PrvVbWfv4GzU4z8gzWYZlt1zPH2+rgRX7rNld4gNhXNye
hnN7kT8o5A/AcQ+86cbVCdOCHH1gV3Wr7Gs6ZE6CyNNiVOmV3w1bOuyDeG7i
Pj0tvKVehorpxXsb7lOdmbUKDN3uru1K1/Eiyy7vGJlcPDd6X8WwHNf3M9xX
ISwH+SH8YXOWAxz5c3Mr5/yQrCm0fJyPh0es/cV9q7OPQ/428/q1beH90+tz
HMj5vX5szx1z0ljn6t/b0m/Dp++tfTLpba9+ey7qcyjgjbNUG/JvfeDZYNf2
vr38Nz5o/O6T8yPEl91jCgxs/7NzPgX/mW3o5SX+OV+a+iX53leWo/F8vRP7
/aTOn3Nnnr7/recD5/F+8p6KyFW1N3duclqdjbLa+hR17rHsCGqe70CjCHVk
TMDdHgkvdfvSZbx7/Cv/3JgUuf97bhuydWWNM4sCrXuhC1JG/urgAd6zX+24
/P6TezhtilubvLycezLAc9k4SXyVzQ/JeRE4GeSTQb7GPTMm6vnJea6YL40H
jT65MMmxSBX57Rqv3kMd3h7smfSqf90L6sefWqXcFvwJP+HMjzPvx5IO+pdP
7x9+cTnHFHI0vsxuT7L9ars9yfah9vzSeTG/10Yl6k/nhf5i3jVexsbp8P8d
N9mViTcy6EkGPR272pX+XzskaYeCB9M60vqLdeTwzH6ydWDj7YHnnfarbD+g
pB8YVnfGqfVu53WdHHgVGyeJi/Ui8XC5joS/cuw805C6LcKc+/DAM9k4Sdxr
SEDf/95zMPgxjSOOFLR5kHxa0i8JP6MMeiqDnhoX61EZ9NG48DNkmEcyzBcZ
5svEv2m+Pnlft7Q3UxwxrWsTP6b1bvKfpvVusk+T3zD5YZN/MMU7k58xxV9T
nDKtO5N/NsUdk7812a3Jb5v8gylP+F/t3JRXmPyJaT2a8or/1f+Y8pD/dT2a
8hZTvmHye6b4a8oHTPHI5B9Mcc2Uv5nyKFNeYYqnpjzHFDdNfswUT015kSme
muKLKS6b4o4pLzXlk6a4Y8oz/9f4bsoD/9f4+GSOx4WPI53vMlSo5r7s+Pbc
Vl2uh+jvGjSOuZx6aE7r4PlMhz9+9HO+45D+7LbCP2Xh8TrPR5/g53Dt53Zj
9bh+XFx/W6f6T7k+E/7Jdy5K2O213/ZftP5lM78EKinOR7py/a1Oop7pNV6w
4g9rfrmVwSopnqc+zvocsPXXfmbNxbO+he95spwcGq9Vv9vMBd5e4EfjaaoN
ux98OkDzhvfb3Lj97Rd/rHR4Az5+5p9b3zV2eAM+4/Y3VQd0cngDXu9a9rGn
R2fielR6jUffO18vvnkGzQ/w8gPuqrPJ32t+gP+9z7Pe/egUmh/gt1gO+AFe
l/sFP1JP8AN8HI8L/EgewA/2ufWWvHgxa77DD/C57htKBJV2+AF+fezGtF0r
Ofzo7w5cvXVwaEOHH+Cd8pRuePCGh+YHeETmLxdFX3qr+QHuMyn5niJVHX6A
P8yzY0WpKx6aH+BDuV/wA/wa6wl+gM/hcYEfyYPruotRuw4teBkyTa67GPVj
JXrumUuuuxjV9UEW7z555Lr7p32ux70Cizr8AD/h9eLQdyM9xPr6R87Xk0Y3
TBkn1leMmlxjSfJne5KL9RWjjrEc1/UVo6Zwv+AHeBfWE/wAn8rjAj+SB1f7
iVKlRlVscXe8tJ8o5X201JSz6aX9RKlUtWpP3+Ap7SdKvVg18F1SH2k/UWry
0RZn7pTxsIK5XgR8g5/X29stkwu7ilJhEwdaKxe8EnYVpfbsSjm1X8Pkwq6i
1ESW72pXUeoZ6+NqV1HKnfV3taso5cXjdbUrhx9X3iLU93P87g0eLXmLUBO6
PkjV303yFqE+lstwslByyVuEmh53en6lFJK3COVeaFn9EA/JW4Sq0TXh+za+
krcIlTD6bchVt5eCtwhVjdu78hahUrB8V94cfVx5c/R35S1CjefxuvIWoZoz
P+AN9Um0A2/A+bfmDTj/1rwB59+aN+BJou1xgjfAA5LFzoxLcNO8AR80IleK
8YNiNW/AF+z6fv/7f36DN+Afbtu/wRtw/AZvwPEbvAHHb/Ah+RH2RgZ7I4O9
kcHeyGBvZLA3MtgbGeyNUiZbfTW5zyf2RgZ7I4O9kcHeyGBvJO0N9XmDfyOD
fyODfyODfyODfyODfyODfyODfyODfyODfyODfyODfyPp33BuZYibZIibZIib
ZIibZIibZIibZIibZIibZIibZIibZIib9Pm4+YgMeRcZ8i4y5F1kyLvIkHeR
Ie8iQ95FHViOyLvIkHeRIe8iQ95FMu/C++gMeTsZ8nYy5O1kyNvJkLeTIW8n
Q95OhrydDHk7GfJ2MuTtJPN27N8N+0Ey7AfJsB8k7AfF/o4M+zsy7O/IsL8j
7O+gP/a/o0YPSdyvQX/gBRp2T9zfQX/gyRbY+0HoqZ8T5H0r9NTvPWtpPz+C
fk8uTblj7/tX6tiLur892enw5sN1vxp8rxLy0d6n15mFM3Y7cQrti/Lz75A/
LVvBC/M7vlCdGlvxE1c78iP5PP3I4dd9C7V05iVH+ZsnW9eKVY8an17tN8CZ
lw58zu7D7+uDPj+y/CcnPqYuVite63Oe5V/puC1swGPHPiG//ZX760MmOfMi
5UP/+cUXP7m77LFaFN2gjttCR/98fM+8Xr3JoVEVHP139k19bXDXp+rtitpT
B9dx9A/kc9WXa6rkGdzJWXc/XNl7J8XiZ6r2pnP7lgQ4624u91un07GKq/9w
xpWH+x05e8HU5n2ccaHfv+anu7A+pTMunOde9Nrrf667s+66cb/9Dq3+o2Nz
Z93hebfj3zwuXrmus+7eve1z7dSo52re4jenG61w1p0973fUlmPbT3WY7vCz
is+dD9Y+HVYnyOGnZGJd655q9M3Ek1FFHH4O8/l1kbErfz36tcNP4y37Mxx2
f6CmPpmWKfs2x29n5H6LvLh+cllWJ66t4H5b8Xk3+CnF/bY4lnFwwlLHbx/h
fi8NLDTrYmWHnybc76u8VO9jGYefO3ze3TIhS+c7Xzr89H/+xcfG5x6qJvMv
+PWZ5/CTN3G+rqlD0V9V2zHB4SeQ7yM1er/t0Wwvh5/QRP5vqhVPZs/smtnh
pxLfx5v56+2iX/k7/JxLtPNbKmHkq3/WkcNPIPdbcsOKb+4nOHlRAPfbpcrV
6ce7O/yg30bfNcvt08zhpzL3+zBgdPkHgQ4/57nfk9+cz7Atp8NPe753US3d
gen1sjn8xCbeP4xWBVstSz3oR4cfW5/Tan+bG3Ne/ScPr8T3sk4U355+ZwqH
nzaJ8s+pwBT10pZL5fAzmu8TDmrf+aRbOoefXxLt4aLaUefw4fAgh59c3O+a
zkMGt2/l+DHifrOkrVP+YaDDT2vu99KK0i1/CHD4GcP9upe7ccTycPhZwf3e
Hp2u3tJ0Dj+H+J5MxIcfxs9K6/BzK9GurqhzoYO3/PCfvPGS17/5wBLVNsfr
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
cuQDf3yqQPjY2bl1e/0+h1GNbntmcdoDT12l1aX5U5z3HMI+D1rf9Lw6znlP
Kfxttu7zIzK5Od/hAh6yNrThbjdn3oGryPIhockdnoEPrn5n9uF0znuNgJfs
n2yffybnfVnAfdjPw06APy21cmvydM53ioEfde9fZkxyZ76AF/UbOmSxm8Mn
8BMXp81I6ubwA3yVz9Pj1Uc739PBOg05EtH+TXr5/eXL9P7phta/eDnjBe45
oc6Ke0Wd8QKfIr7TDbxeRK2cgwo54wJeMkWv6DGezrh0HjVvdGyN9M64gNex
drTOmdYZF/CMS6Ku/DHOed8y/L9PwJLJu/M6+gOvf6Fd2/edHX10fpU0r/Uq
0NEH+ItHxwq653D0Af50efyT+n6OPvq5kmy/r+//jx1Cjs6v/F9dPlLckQM8
dGqP6LkFHTnAs8xqk6/RbEeOc0/e9fvLwN2aZ/r7ZkVHDvA3qQ5Oa7XEeX8v
1i9wrAvgyVnOQbG/xvMjkIN1Cj0hB/g2HhfkAK/APJQS+2V8j7uk2Bdf4jwT
/WK9g2f0q+9F87ygX11v5HlEv8Ax7/XEvjiB82fYM/C6wn70fpztDXrC/8A+
oSfwumzP0FO3Z/uHnsBL8XqBnsDr8/oKFnFZrkfgHrx+oT/wd7zeYW/Aq7B/
MO2XMV7E5dXsZzBe4H+yX8J4gRdjP4bxAoffw3iBP2c/ifECz/J02ITiXs57
3oD7MQ4egA9kvw0egO9nPw8e9P0EjgvgQffLccS0vwY/yGfQDvwA59+aH+B4
jgv8AOffmh/gSaL5fcTMD/AByWJnxiW4aX6AL9j1/f73//wGP8A/3LZ/gx/X
+kBGzY/e1/Nv8AMcvzFuyQP40ecjHK+Bw68ivoM34OGcDxwU++VTvF/GuIC/
5XUN+fC3yDcgH3gPzk8gH3h6zmcwL/p9Duyv0C/wdpwXoV/4Z+RR6Bf4Fs67
0C/wspynoV/9HgbO69Av8KciDwQeyXkj5GPfJ/Ne4NtE3gtc5r3AZd4LXOa9
pn71vSy+/ww5+n3XLrhTT74ivsOO+NVideVOQ8Y773sE/j3jeJ+n3leK7ybD
zy/nfRDa632l+L4teEa/kAMc+1noAxz6wE4wroEBf97/aa2T30occqB/D/Fe
TeB/rjnaJvS94ycxrtIXLl57M915DzP8GL6z7Pq9+1tUltvb6zlcP9cznc/B
IR/8nOB+IQfzfo3nC+MFjnFhXQDH93MhR9+r5PNQ+Bv9/oe/n8RnGuX4Z5N8
7AfR/qCoe+A7TbBz4HgvOngDn0vEe6Hh9z7/HdK15S+MvHij+Nvz+r39+tzE
5V59uL5Xf53v1UM+5gvv3X0i7jeiLoH1Bf2xvqC/rMNg3enzINFeP/fH30OB
PmgfJL5LBTsMFusL9iPfpw37CRbfJcd6ecA8AMf8BjNvsENdD2E7gf/Rz2Xw
/EKOPEd7Iuo8OBeDnuDhreBB1q/AG3D5fTTM41y+TwX9dR2P1wvaf/5eX/gn
daQn4lwP9oD1Iu0fcvT+kfXBepHrC3EBOOot0F/Xr1zuz4Tr+zPjXO7PhOv7
Mw34HB+8afku9uncb5HvyQfe4YjvqhZlnfd167orrxfIQR4i5QDvyHLQHnYr
/SfwpeJ99Rgv/CfsBHp2YfnA0S9wyNHvYxF8on1zwRv8zCD2P67fFzhOb34/
EzLO03mfM+xn4svik5usdfJt4HhvM/wh7HActwcOO/+Lz1uhpzx3/j8kov/U

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHccV9P/xz+f+/ncdZJRlMqKIiEjCZWRvVuoCJWECCUhq0FGKHvvvbfs
iiR770iDIpRkx+/17HUej+/vj/N4v++555577rnnvPf7tBxwQo+hSaVSOSGv
VGqCj2SVyhrVSuXktFI5URVBZZKu31Gjs1SaCh+mupVVLhN+sOBbiZ/5Xs98
qz76CC5UmS/8YMEPdP99lTXVppHaPyz8cuGr613rCZ6pNp+obkPhC/XMX7oe
JfwNwaOKSmV91XXX+NZW+21Uf7Hqz1Q/Z6g8r+f+LiuVDdSmh9psoesH1aaF
yk8qjzAu3Wuqtk1Urtf1IPXZUnXd1L61+jpP+Hn1SmVj4RcJv1D4qrrXWe1/
0TuvU5899dzfurcO7xY8S20O0P39Vc7W9Z5qd6TaPKf7nVXuUN3NatNO+GXC
JwpfW/gZws8UvhbfKPwM4S2Eny58lPC2wicIv0h4I41hR/W/TH3foDH0Vv/L
mVPBg1QuEb6B2o8THKf2rYSfK/xc4S2FjxE+Rvj6wscKHyt8gL59XeEHqO8f
Vf+D8EMF++k9X+kdm/OdKk+q/KJ7bfXuHYVfoTZ/CnZRWaL6E1X/rPBlqr9b
fU5V3U/qsx4qlSnCfxR+r+qnCf9Z+Ed1/6P2gh/W/U+3EvyMeRfeUXA9jWEX
9dlV5SWN5TGVZbq3vZ6/Rvc6Cm6l9+6m+9fpvV/qmU25L/iA3vWy8MVq8znz
KHxbwS9UNhG+neAbenacnv1Izx4m/EXhfwj/TSUIP5Z6vXN1lWG6vkl9Pqtn
F6rPqr7rGeELhB+qZyfo/ufMicqqwk8QrKjNZIHv1Gaw2jzOGlT9kepnPdXv
r/pOur5d+E0az+7CHxV+r/A9hT8u/H7ht+j95+vZlVTWFf6CYAOVmuYgUTkX
XO96Se0Xqc8j1P8xev5j1e0h+Jjq71M/TfTsM2qbqfTQeEYIvqb726vcpjY3
qs3mwi8XPkn4zsLvE36H8JP0bCuVi/TMcdpfbdhnes+p6udLxib4vNq9qfaH
CB+m8injFPxLbddSGanrWwVbJH73Fhr7fYnnrip4m+A2en5n9dORf6RvmaMx
DBA+hfHqejfh5+i9W6rtzSpr63oL/o3KWuwf9bOzyi3QE43zPsEpar8171ZZ
R20aaV6OUn/vCR6g/t9W3Yt65+GqO61q/NSq8beghRpnpnKeru9IPN+fQCOY
e5WqyuYa23+696b6+FX4a8yD3t9IfbVWfWPBIYKfV/0v31G78YIfQ9N0b6Da
3yq8m8o7wl9SXT+1/7jqtTdD9a+rfj89N6T0mthQ8CFdD9f9V3V/IrRa9fsK
NtK9e9k3+vZXUo/nZcGTVHeiykxd7xvrn9O7vlHZSviOgnOh9cJvE3wrcz+0
6S/8GuFfqr6VrhurzanCWwtfXfjpwleGPqrNLGhnYvraQPce1ziaC2aC61Td
Zg1dP6X23wlvLHi27v0JHRY8S+UP9ojgdurrVuE36D07qd3daj9fdVuqXKn6
y1W/hfArhF8mfJre+4TKf9BD6KbgSNrqP12hcoOuTxHcWOVQ9bW+2qymuhFq
c46u71d5n3Wo+w0iv1tPa2VD/defBOcxj7o/TWNprbr3db8UPljwHpVXdK9Z
5jX5ldqeWvOYb2aOql6TrLnJeu901pfaDq16nmfoehN4AOtLzy5X/+8J/0Rt
TtU3bapyKfxYcCOVi1mngseoTBT+j9q/q/aH6/+vEnnybOh23fM/Dt6itl9V
zXMbq82qzAt0AfoomAt2rnrPsF/WzMw3f0j9npeq5scn6bmV4vz0zbyuP4Ge
6N1XCX9Y/+5ttX9A+FxouuqvFP6Q6j/OPLYv1H7jSANWqfr7oMPQ0L91bzXe
wx7VMxsJP0bwc7X5UXhb9pGuN4ZWC+6k+h+Et4Ffqf9zdH2a4BuCX0MPoHeZ
+eZD6vNZ6KHKPNal/uvVyAfqp5nwG4Q/IXzn0v/xKeF7qO1fwrdV2aQ039tV
8OTCvPEjwf7sDeGXCP6ud32sZ56G1hSmV08Lvq/SUfhQwTNVflP7zwRHqfzO
vhT8Vs/tWfX1POGJyg66rgh2EvyVNax2S1kbgvuqfrnqt+cfRPoJHd1Y6+F0
/aM2gvPVZorKTmpzemFeupnG31l1C1TXWqWD8PnsCZU3C+/TxwT/Kc1De7Ee
4RPCOwkuL81PD2QfsA+Fdxa8QvUD9d4LBUfrXnfVr6V5/UD3thTeBV6dWa5Y
DA8sPeZ+ajsb3iN87ygLXSj8fOHbqL8ONdPKqXp2Hz17i+6nemZv6LDgLLXb
Qff3EPxFpTd9Cn4N7RC+l+BXKjsiowkuUTkYmUdwscpB0G3BZSqHCj9C8Me6
x3+w4CKVbsIPEvwBmY9vF3xXY9m7apr1luarlfCjBb/Xvf2ZN2QtjXkO61yw
mb63pfDBarO95nxJ1c8sVLv91L6n4L9qt7u+6y/BW9R+d3iE4G/wBuH9Bf9U
OUL4kYJ/wMOEDxT8XeUw4QME5yNPIOMJvqS+9tB7bmDOBfdS6aV7HxRe1ycI
7qDx/Fr1fntbz7TR/Q6CF+nd/YVP1Dy31L88Etor/Ge1v0alOzRCsJvK/sK/
0zPbq81ugt+qbMd+EVyg0kn47oIb6fnt9I0/a1zN1edw5B/VVTS+PtAxtRml
9/YQPkb1S3W9l/DugnnuNbEInqvrvVXfI/53vreb4K4ay+Kq9YStM3/zN+p7
feFPCP85tZ6ALLpSYb0CWbRBYX2gpfDX1c93qenEgchlmXWXU4TPhs5VrdvM
rVp/Qedpkll/Ga02C1LrH6cJnqzxfhb54iJdbyI4VnBv1f0hfDuVi5F7Vb5U
3TdRnmlftW6zTuSbv1Q9/p9Yi7nl3sbIlZn7mJh6r7JnVyssey4SvjLynNq8
gLwl2DO3vL1q4T3MXm4kfEjh/95ec39M1bwNvjZB9Y+p7yX6Vx2ifHi75qeL
8KeEPyB8s8ivrxe+tfB7kSWEtxd+D2tY+IjS/PAUwR1U/7TwB9mXqWXmh6L8
ibz9COu5ajq/WNcfFqZzJ0IvU8vFQwWHas7qUR5GXnue9ayyFTqJnrulblkC
Gfse4dsKf0T43dCG1PL8w8Iv1bO9UH5rlqeRq+8qLMczthuhz7nHfL3wXVO3
eRyZKLHeV4ceaH4nCy5NrSfQf6J5m597rq7Rs7ul1o+e0LPHFf4X/JMH9WwK
DUmtV5UqH7LPoyyN/Nwzszz/q9rsn1lOnM5/SCy/Iruid9F/qvcuV/0hKmOr
1s2mqv4dtd9Vz/ZX3WThBwm/QPinyEvC10fPFDxOc/FPfLaj7j3MnGjM12rM
x1b9LVerPKn6KwWb6n2voxsI7q32r6r+mTg/R6n9CxU/N6RqGejA0rLTi6wv
tXuxYh3mqsJrjz7v1/XFrEHdv1hlImtb3/Gk6h+Ap2SWtUaqHK5n5uj6WnQW
wUfrfmd34Xulfify19/sA5UxyBal9ejt9a7n1eZ5+IXa99D9D6qeoytV3wEZ
Df1G7TLBD/WN52Sm4S0y66rwatpNSsyz0Zl3qlu/2VJtLlc/WwtvLfwn5JlI
P//TGO7UvR3U57OCz6nNLmpzp559CL4m/GnVPyj8fuGXqjTUs11ZC3G/DEqt
sw6o+vltSq/JY0vrgAOr/raheuYj4UHwPj1zqeqmR9tCr6qv701tV2ioeV41
WNe4Rd/9dNTnCpXjo17DumkR/+8VarOk8P+9rrBu9Fxcx4MS64anqPymeycL
3io4LLH8iY6J3D05sfw3IrGOiaz7R+HnbhMcqfpZwi9ReV/jfhA+JNgH25LK
INX31jcfD79T+zU1/rOF31dYNp4qvBHfAE2uWh9rp+88S9ebCR4f9cbVBeer
31J9dhacq3Kj8EsE9y0tT16gNuer3Fjx+pmge5nabAOf0RzeXzHdxHbUQ+3P
Yf3rPUuiLWlWZhmvneBKgv2qXtMrCz+s6v/dhDWlsiprQvWvR772iPq9SXUz
Mus+faq+fjj1eLZT/QGldZ2LNbZLVA4Rvr/qrq2bDu+IPB518J1VxpW2u5yH
LK9+2kPr4J+F/zu6/z3Ir8IPU5s7guXOyaXnl3nuL/y2YBniCeGzC9vgvhF8
UGW08Lbse2QJvaM3e1z4TLV/DP5QWF/9FZoQLLvvp/rHg2nQL6W/axk6Uel1
yfpEL4aOQE9WFb6gMG9dKHh54X3B/rgurs+D1GYPZFzhufC9CtsjfhCcpTIP
Pq76r3LT858K868d9P8mCg5T6ST8GsHz4KPQfuHnFt5H5wj/PjetZv+9zv4R
vpLqT1DZVs9ejU2ltD2kp+B0feMMzcOjpfdSEffWDNW/pfrHVd+n8Fr5kfGW
tnUmgksL24mYt0MKryHG/IyefZ+1KPwtbB+Z90k/Xa8muHIcA/+X/9w88V5l
v51R2M6GPL81cpvWw8Z6fpL621B4S2hRYj6N/DG+tO3uNP5h6e/luxeqzZ3C
91O5Vs/uomc317PHqLypujSzvRFZlH7b5taV0KfOL702bxMck1kXa4X9r7Qd
cjg0RGWzivdshyi7DtSzmcow4cPrtlvSZ2tdX5oaroXtmXWs+mexUQgfr7rZ
mqcJwp9S/UzV58HzwHzsW7c9qj223pp1NmTrtfj3qvtabS8oLWNjs1q/5j3G
8zemlmmXq92VUdfrWbFeMFbXzQWvhzcjn6jNzanvv8hc1TyPyNiXC+5adbtv
dO9qXV8guIGevws6r/fuXprmjBP+s8Z8oNr2FexTt+yfaY4Hqc/3qtaplhe2
fd3JXim9T9mvR6jvT6qm19jtsSE0VumlsX2pfl6p2y+Arj2nYvn0japl1F0j
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJxNnHn8VdP3xs+995xzz7mFModUpKSoDE1URCmUISJNSoZCNBiLJFKkiaSS
hAwRTYQyhEJEpopIiqgMqUREv+f9ec7v9fr+sV93r7OHM+2z9lrPetat1uPa
8/rkgyCoEAVBqN96xSC4qxAEd+aC4IM4CBYnQTBb9d9U1qn+lsrzqn+nslr1
6Rp0ieqfqjTQHEdr/G0av0JzvaW2YyQPllxSex3V3ywFQTXNW0Pt72r8a+pz
tNrn6yLaafwK9XlCbSepfoH6vqM+szT2V5W1qr+t8oLq36t8o/rn6v+Y+jdR
//bq/4XkxyWfKPl8ycfoXKeqbzWd4xvVT1LpLPkoyT+oPlT9G6he1O969X9L
5XeNfUl9RqZBUFfH71T7F5rzPB3fS/IQrk/HKqh+u/qcq/o/OnaXrucByUMl
n6LxN0r+SfKJkn/XuX7Q3H9pTD3JP0n+TvKbPCPJj+n+z9X8P6p/U8nb1L5B
7afr93nNXVvHNqheX6WB5MMkr1F9kfrU1u8JOvaezrdW45uobYuOfa+2ijrf
GLU117G9Vb9D7Qfy7HXexWrPa8w7OT9Tnu029Vmo+qG6nq2SD5V8pca21bFD
VP9b5Q3Va6v9P7W/IXmY5jtC136W5nud9SO5uuQzJY9Qn4vU/z1dzxzJVVS6
B37GPOuq6t9b87dXnyXqM1/yQLUfovbT6C+5l9rbcX1qD1iDqs9UWaT6Pbqf
S9XeUk2DJFdS/8skn0m7+h+qOS5R22W63xtVP1jtl6v9Oh3rp2PvS75f9bo6
3zlq7605NvJ8NP5j1Zeq/QG+C7Wfq/YDJffU+NPV/obm/0DyeLXXV/t5av9D
8mtqq6Lns03jX5Y8SO2V1d5S7a9IvlXyoZJbSV4vea7k1pIvkvy2fq/T+L4q
76h+pUqken+V53W+zyTfrvoQlc9VX65ym+qDVT5RfYieR0dd336Bv485Kj8E
fscfqr5MfQapfqvKR6p/p/PPVnsr1Tvo/Oskz5F8uuQLJT+q378l/5T381yo
9qGsPx1vo/bX+D4kHy75DMn/8I1r7ivVfz9dy9s6di16hHeutgWsQdWrqX/r
kt8h77Ke+ufUP8c3nrOOQddcpn451XuovKL6OxqzO3KfD9R+jN5hFd3vSI2/
TeeZpTk+VH226l+q75WSq6t9reS1ki9P/W7f07g1JesAdMEUdIbqYdHr8wwd
i4p+54+E1imshRy6S+MvVvu+ki/WtWxS21c65ytqO1PXtEj1p1VfqbE367cy
70rHXlQ9pzE71f+sbH7W3JTQOoy12FbyBMmTeGeSf9GYhgW/g59Vb6f2h9Q+
WfJitd+s+2mp9p1q26i2f/XbWnJrnXNK5PHot0vV/2+N+1vyn4H7/Kf6tyqH
q36ajt2p+h2a8zzV8/rdVPL9falrH6A+1XXsutT6b5/I+oU1PzW0zuZbOEJz
HK/6eo15TfX1KjU1drSO3af6CypL1XaBju3DWpO8XPJzut4NmrOF5l8jeYGO
f6W5u0aWu7Cmi36PvM/2mm+Y6g+p/70F67h+qXU8up5rODq2HkQfnsMeFltn
ojtbSj5W9adiv69WkifrXENVVue95/2seqBztil4TaBDjky8foeo/hv6TuN/
VP8z1H+q+h+iY+eq/SK1X6P6WYmfN8/9yez98HxbZc//SM1/i+rldayOxkxQ
n8f1O0Py12obrXu6oeA962zVa6EfJW9Weyedb4vkZ3PWCc/pXA9q/GMa/4za
V6ttrMbcnN3/QrX/LLmZ5O1ct/reKrmt5Djb/8qzJrP9rKT6wzrHX4HvEX03
Vsd6SB6u+hfo99i6+QiN+U71U9T/CZ3/WfSP+o6Krf9ZA6yFrSq72Euz/fNe
yeeqvYbkdaofoWPXF7znYU9ckXp9sk6/LVlnjNb8YwPrEvTje7q2d1Vmqs9V
6l9H/ZeyJ6l+Ifsb60ttq7L9sL3aL9A579M896r9YtW3sybZT1Q6Sk4kn59Y
H/CtYg+wZ/GceF68744aPwC9WfCanhV7X2d/H6n2zqrfgF4veI3Pjf1MebbY
DHuqfrau6WHNM439m3cZ+3qxqeaj23UPZ2d9N5dsf/Ds5vPONW6M2m+UPFXj
r1f9D43/L/A9st/P53tQ39Mk/xn7HOPUfkzkc18nuZ3kTZqrB88H/Sj5GY3Z
W/VEx6/V9Ryukqq+TX1O1Jha6tNVvz9q3kZq26T+P2G3qDSUvIFnqvpulU6S
e6ssV30Y+6/G/su8mquSfmepbY36H6T6virXSa7J/qH6SPUZrt97NOZt3rfe
SWO1LVb/Zar3UmkqeQn7meo9dc376zy1Jb8o+SON78J3pj5Xq226jlXA/pP8
L/aS+t6q+rfYtKrvStz2uuSdRe8XlXW8VmYPfMwzw87FaFbb7sR19jz2vvv4
JlhXmf4ertJR9UBjGqntE11LovnuZj7V/1H9Po0/RWWX6t005/LAe/nL2BOa
v2reNgW2xbeSa6q+WX1nqO9eOtdBar9BxyqofqjmnKf6L6xR9d9R8Ls4Xn0+
UD1EN6i+Wsci1X/Vsa2qV0c/FvwOeBe3qM8K9J7OsSdrScdmJH5GPKtj1P6e
6geEflcDVD6TXFXyal1/Lclf8M1zr6r/hM2OzlN5PO81wdp4VvOXC72+/kxc
Bqhv+dBtn+p+0oLf2QTVu+pYSXJFyU+rb+WwTEUH6yUvLdjemaT6nuxr6MLI
tut0lfWqL9GxAt+B5OXq+6TKLawd9ldNdEXovfIEdKDqn6r/IeglXqHO3UHl
P74FjZmksYPV3kf9rlb7FPZj9gvVt+lYA7UtVZmp8/4bWJ/wzjYV/L3wLp9Q
uUn1lzTnZo3dqnHnhJ6DuU5T/99Vb6o+LVWfw/pW/XrN+WzJ+6emCw7MWb+s
UqmoA/1VVmMrYn+xF6nP1KL3X5bufjnrK9bnlZJ3q09f9h7s88jnbMWzUfsZ
qm9Xe0O13c0zkvwf36nkbprj9dDPD3/gHcm/5q3Tr1b9CvU/Vm3fqc+x6v8l
31DO++2tqq/kG1X9ZJUb0MW6v7yufZGu4VH8OWxWtTVTGaD6nSrnqf6U2puV
7PPg+9Bnheof6Nhcte3WsQ6SY5WDVD9K51+otlHZ/jEu07dn6Hxb896Thqnv
XsyR8zeEf/qe+u/DXil5jeSrNKYJ+6HmOB5/QXJjyRskHyf5fewznf8PbEj1
v1rtJ2I/q/0E1oqO/YItic+s+leJfee/eGa6lvns0diC2POq75m476l5r797
eQeaa4T6LNLcnVQOV/0L/Gi1na9rfTW0Dsd/a6D2CXqeD6u00PEhRftDO1mz
6n8X/pLkXZL7SB6Y2t7ZHdt+QQehi/AvDlT9dvXvpv5/qf9Vkm+U3EHyFsmX
S75J8oXY+pKvkHyb5C6Sd0juJXmBSnXsHM0XZ/4nvsqkzD/hHfGuHpZcCXtd
409W+7c61pX5dS0H5TyeeX5T+yeBfaBnNH6uyuSc94BLdS+D1d5V7X+qb2+N
X4gdoWe5B/ahjg1Se2fV/1D9SrVP1JhRGnuqjg3ANsOm03wTsXHUZ2Vsvwv/
q0fq999afX8AB9H4vpF108s6x6O8Cx07XG0P6liT1D4CvsJR9Iltw49kfUa2
7U9Wn1V5++jNVO8fWfcuUvlM/f9l/85ZJ1+Seo9hr6kV2XdormMr8/Zh8WX7
YmOovhm9pvZ+2HfoOsk9Je/CRsxZp3ZJ7aPgq+AzdgAHwc6TXFV99lV9O/59
zt9oR/Xvgz2kvhs1X/fMfsReGaxj5VTfrbJ34GfAs+hftH38i+TLJJ+Ejtf8
3+vYLL5vnbNOzu+fdXCj5Eo5Pz/mQO+h/8arHCb5JY15hLWCX6D50sTfzlyV
JfiPidfLB+p7BOsp8fv8UHINyVclPt/H2PYl63R0e2Vd0++qFxPvFfgDYGEz
dJ63UaD4V6o31vUvk7xeh17ge8cnZW/RfLU035bEc72as/97seQ9JHeVPAZ9
p2OHaezn6l9H/Ttjn2T23zjVfy3aHsBnf0ryh+rTMnaf3yR3V3sdfAWNr1+y
TYZt9iW4EvpZ8lH4p5LrgoVIro1vILke/rvKcbHxk+vVVgLzUX0aOif186zM
3pHpowvVpy72icZ31NiOkutJ/lTyxSXfT33Jn0nuJPlJzf2mrnWHjj2s+rDI
z2eKSm31uVnywao/pNJd7W9ozPc69iTvO7U/hi13tMqrar8g8lp5RXNOkzw1
9t65LDB+eJnGVCrYh3iN96/raa62NTpXl5L7gzUmmu8R1S/VmO1qP1HyCeqT
sD4Cr6lTwJY0vhm+jNo6sxek3utm8D2ofpzKkZI/wofHHyzZzsDeWKC5zucb
VfvTki9IvR+eInmt+ndjf+Nd4gurfKl6U5Xn0Je6xvdVvxpcVm19VA7L/Otd
2X54v9r6qJRX/Rr1v15tJ6FzQ2NMj2F7goOofhU2GnhVZGwGe/Vv1VepXC25
mkqH2O9rTt576nT8a5WZkuvr/BtVn6TyvORjsWFiX//awDppher7oAMDv0Pe
ZXOVO0L7zDPYKyP7O+AdYLfPJvZdwbVeUd8HNMcTmr+u5v8RbEbP7AXJ+6jP
TGy71PYZdtpN+CL4sKExtkc1X/nYvld/jbmJ56n2wWq/Te1PqP1rnWcg8+e9
3k5VWYA/Kvma2P7qlLx9qOexwcGVJe+lchr+m0pPzd9Bch/V/+B5Sr5Y8nWS
r9c1tsPfQY/q3ONiY7v0oe9+cZnbEAzXsVvBIiQ8pPrZ2Xp5AL+M86P/1N42
ti/bRcf6ql5D93IX+lntFSXvHVs336FjA1Ufl+FH4EOf6H7f03yXqq2Synlq
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
LRdk1Q==
          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[{{2088, 1300, 1774, 2586, 1961, 1962}, {1958, 1957, 
          2558, 1444, 1445, 2559}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkbsuRFEUhtfYR7ajUSoImSh0CrW7MSRUHsED0GnVPAQJxrhLJnFNxLUR
CRIaEw3PIBmRSHwr/y5Wvv+ss866/Kc4tzA732RmfUTwyM3aYdZitkeijq7C
q6D8BtwnPtHbcCwqPwD/eG5DP8FDoqdgdgIbBO3sHHZlZv0MfEB/EZTYWVC4
XoVraZbP3CUe0ZtBfb3/OrwjVvigBpeaNWuYHQaj6sejdvI+I/CXumXm1uEB
N+4E3TgZ1eedHhXyl34f/G41K/Guip6BN0E9n+ErPSswcEuVnh/Jh2s4DYvk
F8m/8dyRySv3rJDq/bvO5IP78ZN28x2nojwvw4vkoXtZS/eeBu3qeoKa7jTL
Z5bS7e6BZdrT9x2K8r+X3BH33AfddZy8dY+3culGlL71f5jLE/fvBT9Go/Zx
v/8Bm3NJwg==
          "]], Polygon3DBox[CompressedData["
1:eJwtkb0uxFEQxcfO2rt/L0CLYt9Axfr+SKg8gu3pVJvoFB5AS0JEIiwRxEeE
CAorQWUVvIRE63cytzi5M3fOnHtmbv/SyuJyycwGQBmsVsx0sdFlNpvMmuQd
N7sBo+RHhdku8QvcvSL4H+RPYIb6J+c6/YP0X3n0K6/Cr1PfJP/h/hFMk196
1MRR71q3WYvzFoxT/0vx1hTnb094kJdW5pZp7qW+RX5YhKa0T0GH+jD5MfEd
mEihKe1X0KgEhrJf1c49Yt2180xfFjvRrNLXbvZLMYv8iC//mvUNj2MpPDl+
Ljz46n/3uJN2I3O/PbTEeSCezPOeES+k2Nm1xx9IX3/y7LFz+ZE/7b6Pz5tL
MbNmF0fcebDj4UfzS/+e/ASMpPAkb5rxgLiGzrbHm/W8c80pj/qLf/KlSqI=

          "]], 
         Polygon3DBox[{{2039, 680, 990, 962, 2470}, {2471, 1860, 1853, 945, 
          2479}, {2768, 1635, 973, 957, 2469}, {2476, 944, 1852, 1856, 
          2469}, {2471, 964, 991, 1686, 2804}, {2052, 937, 972, 566, 2307}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[{926, 1, 994, 952, 926}], 
      Line3DBox[CompressedData["
1:eJwl1FtMz2Ecx/FHOighiiYSNmamLHGF2dw5zWazGeaicaE5jNnk0IUaSSs2
pjYualaTshkx5ibqwmlmDqUph6GUU46bsXj95uLT+/P9fJ7//3l+z/+3puRv
X7VtSAgh3p8VCSGk8PP4lXwWvwZzcCMuxO24HItwHZZjAZ7C07SHv4KH8SZW
4X2sx068jFXDQthsjza+MjGELUNDKDGfiQlhkP9LD6jAXCzP4VtiQ3hs/XXz
Df4Jf1t/k2+PzmXNIV1vfAiz+Q5ZArbHhVAqr7P2qWxLRFmZLMZnu62pp07d
bp/doS/XNWCsPo7iKYGGUSIl0XBqdPZkHEEjaYnnG4Up1KAbjWMoldJoLI2j
dHpkz132qLBXI7bKnjnD5OjZdM1UqWvStcm6dIX8UVmfc+bqu2V7ZMdk/bI5
sueyGv6qfLH5hfmP571hzcvoN9Clyk+YL1gz3ndnRHco22s+Ls/jBz3LQ+sb
zQN8K/8Gm7ED6/AensQWLMVmvESFfDVuxjJci/twGW7FBZiP2bjTu7DAHpP4
Ene2wd555gpn+c3/iX5L2m+ukWfxOdF9W3/RnB3df/Re6Gfxyfx6aw565uzo
e/nhsnVYLJspO2JtkmyTu1jEz5D90j+jWkqM3nfdfN00XSm+lr+ht9RDvfSO
+qifzvnQe/xASz3bR/xEn+msbgC/0Ff6Rt/pB/2kuzTXHlPtdRCnR++bM2Ti
Hd15ytLtdaYDegi5mCnrMkzUx0V3LOtiquUTZD4eavXX5MbQo2uK3ns+1Qar
hWnmIsFL/hXdiu7XnC7PGPr/f8I/92eIdw==
       "]], 
      Line3DBox[{1063, 8, 1015, 953, 984, 954, 942, 950, 972, 937, 2477, 927, 
       959, 931, 1867, 960, 944, 2476, 957, 973, 958, 943, 956, 985, 955, 928,
        1063}], Line3DBox[{930, 15, 1021, 974, 930}], 
      Line3DBox[{933, 211, 1024, 975, 933}], 
      Line3DBox[{935, 218, 1864, 1048, 966, 978, 967, 947, 965, 991, 964, 
       2479, 945, 961, 1868, 949, 938, 932, 2478, 962, 990, 963, 946, 951, 
       977, 939, 935}], Line3DBox[{936, 225, 1051, 940, 936}], 
      Line3DBox[{969, 562, 1052, 1054, 969}], 
      Line3DBox[{980, 630, 1055, 1057, 980}], 
      Line3DBox[{986, 649, 1016, 1018, 986}], 
      Line3DBox[{988, 679, 1025, 1027, 988}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1869, 2327, 2328, 2222, 2359, 2480, 2777, 2145, 2360, 2361, 
       2223, 2362, 2746, 2047, 2147, 2363, 2364, 2224, 2566, 2747, 2048, 2241,
        2305, 2306, 2225, 2756, 2251, 2049, 2242, 2267, 2268, 2595, 2226, 
       2252, 2050, 2243, 2269, 2433, 2796, 2569, 2151, 2329, 2330, 2051, 2365,
        2570, 2760, 2270, 2152, 2253, 2472}], 
      Line3DBox[{1871, 2146, 2482, 2731, 1870, 2148, 1226, 1872, 2149, 2597, 
       2059, 1873, 2150, 2598, 2060, 1874, 2555, 2599, 2061, 2354, 2450, 1834,
        2158, 2258, 2062, 2309, 2770, 2276, 2277, 2159, 2259, 2063, 2247, 
       2752, 2278, 2279, 2160, 2260, 2483, 2759, 2310, 2280, 2281, 2161, 2484,
        2722, 2355, 2155, 2600, 2064, 1875, 2156, 2601, 2065, 1876, 2556, 
       2602, 2066, 1877, 2557, 2603, 2067, 1878, 2732, 2157, 2068, 2162}], 
      Line3DBox[{1880, 2485, 2649, 1879, 2486, 2650, 1881, 2487, 2651, 1882, 
       2604, 2069, 1883, 2605, 2070, 1884, 2723, 2118, 2347, 2372, 2373, 2163,
        2571, 2771, 2311, 2119, 2164, 2261, 2262, 2248, 2753, 2282, 2120, 
       2166, 2263, 2312, 2264, 2772, 2165, 2283, 2121, 2233, 2488, 2724, 1885,
        2467, 2468, 2489, 2803, 1886, 2606, 2071, 1887, 2607, 2072, 1888, 
       2608, 2073, 1889, 2609, 2074, 1890}], 
      Line3DBox[{1892, 2490, 2652, 1891, 2491, 2653, 1893, 2492, 2654, 1894, 
       2493, 2655, 1895, 2610, 2075, 1896, 2734, 2168, 2436, 2438, 2439, 2169,
        2572, 2761, 2122, 2170, 2349, 2350, 2348, 2580, 2775, 2123, 2173, 
       2265, 2725, 2567, 2172, 2442, 2452, 2167, 2440, 2466, 2733, 2594, 2465,
        2464, 2494, 2802, 1897, 2495, 2656, 1898, 2611, 2076, 1899, 2612, 
       2077, 1900, 2613, 2078, 1901}], 
      Line3DBox[{1903, 2496, 2657, 1902, 2497, 2658, 1904, 2498, 2659, 1905, 
       2499, 2660, 1906, 2500, 2661, 1907, 2793, 2425, 2437, 2426, 2457, 1908,
        2587, 2726, 2124, 2171, 2125, 2331, 2407, 2783, 2332, 2126, 2174, 
       2127, 2284, 2749, 1909, 2176, 2441, 2177, 2735, 1910, 2501, 2662, 1911,
        2502, 2663, 1912, 1266, 1913, 2614, 2079, 1914, 2615, 2080, 1915}], 
      Line3DBox[{1917, 2503, 2664, 1916, 2504, 2665, 1918, 2505, 2666, 1919, 
       2506, 2667, 1920, 2507, 2668, 1921, 2588, 2669, 2427, 1922, 2794, 2428,
        2128, 2175, 2129, 2333, 2408, 2784, 2334, 2130, 2178, 2131, 2429, 
       2787, 1923, 2454, 2413, 2453, 2414, 2786, 1924, 2508, 2670, 1925, 2509,
        2671, 1926, 2510, 2672, 1927, 2511, 2673, 1928, 2616, 2081, 1929}], 
      Line3DBox[{1931, 2512, 2674, 1930, 2513, 2675, 1932, 2514, 2676, 1933, 
       2515, 2677, 1934, 2516, 2678, 1935, 2590, 2679, 2443, 1936, 2591, 2754,
        2444, 2249, 2314, 2313, 1937, 2773, 2335, 2336, 2234, 2179, 2736, 
       1938, 2458, 2680, 2593, 1939, 2517, 2681, 1940, 2518, 2682, 1941, 2519,
        2683, 1942, 2520, 2684, 1943, 2521, 2685, 1944}], 
      Line3DBox[{1948, 1293, 1946, 2617, 2082, 1950, 2618, 2083, 1952, 2619, 
       2084, 1954, 2620, 2085, 1956, 2621, 2086, 1958, 2559, 2622, 2180, 2374,
        2087, 2375, 2779, 2315, 2316, 2250, 2417, 2528, 2788, 2416, 2415, 
       2455, 2799, 2088, 1962, 2623, 2089, 1964, 2624, 2090, 1966, 2625, 2091,
        1968, 2626, 2092, 1970, 2627, 2093, 1972}], 
      Line3DBox[{1971, 2697, 2533, 1969, 2696, 2532, 1967, 2695, 2531, 1965, 
       2694, 2530, 1963, 2693, 2529, 1961, 2586, 2692, 2459, 2461, 2460, 1960,
        2592, 2798, 2449, 2236, 2339, 2751, 2579, 1959, 2337, 2338, 2235, 
       2750, 2558, 1957, 2691, 2527, 1955, 2690, 2526, 1953, 2689, 2525, 1951,
        2688, 2524, 1949, 2687, 2523, 1945, 2686, 2522, 1947}], 
      Line3DBox[{1974, 2534, 2698, 1973, 1307, 1975, 2628, 2094, 1976, 2629, 
       2095, 1977, 2630, 2096, 1978, 2589, 2631, 2097, 2430, 2795, 2431, 2432,
        2181, 2376, 2098, 2445, 2797, 2377, 2378, 2182, 2420, 2535, 2790, 
       2419, 2418, 2456, 2536, 2789, 1979, 2632, 2099, 1980, 2633, 2100, 1981,
        2634, 2101, 1982, 2635, 2102, 1983, 2636, 2103, 1984}], 
      Line3DBox[{1986, 2537, 2699, 1985, 2538, 2700, 1987, 2539, 2701, 1988, 
       2637, 2104, 1989, 2638, 2105, 1990, 2737, 2183, 2409, 2106, 2184, 2573,
        2762, 2132, 2186, 2379, 2380, 2185, 2738, 2381, 2133, 2187, 2423, 
       2424, 2792, 2422, 2421, 2448, 2540, 2791, 1991, 2541, 2702, 1992, 2639,
        2107, 1993, 2640, 2108, 1994, 2641, 2109, 1995, 2642, 2110, 1996}], 
      Line3DBox[{1998, 2542, 2703, 1997, 2543, 2704, 1999, 2544, 2705, 2000, 
       2545, 2706, 2001, 2800, 2462, 2111, 2463, 2801, 2188, 2190, 2382, 2447,
        2383, 2189, 2574, 2763, 2134, 2384, 2352, 2353, 2351, 2581, 2776, 
       2135, 2385, 2266, 2727, 2568, 2237, 2405, 2193, 2356, 2546, 2739, 2002,
        2547, 2707, 2003, 1337, 2004, 2643, 2112, 2005, 2644, 2113, 2006, 
       2645, 2114, 2007}], 
      Line3DBox[{2009, 2548, 2708, 2008, 2549, 2709, 2010, 2550, 2710, 2011, 
       2551, 2711, 2012, 1345, 2013, 2728, 2136, 2191, 2137, 2285, 2340, 2575,
        2729, 2317, 2138, 2192, 2139, 2286, 2014, 2764, 2287, 2140, 2194, 
       2141, 2318, 1608, 2410, 2358, 2142, 2357, 2143, 2730, 2015, 2552, 2712,
        2016, 2553, 2713, 2017, 2646, 2115, 2018, 2647, 2116, 2019, 2648, 
       2117, 2020}], 
      Line3DBox[{2032, 2220, 2219, 2745, 2031, 2217, 1487, 2030, 2215, 2719, 
       2565, 2029, 2564, 2718, 2214, 2028, 2563, 2717, 2212, 2027, 2774, 2144,
        2196, 539, 673, 1681, 537, 601, 536, 2765, 2026, 534, 597, 533, 1680, 
       671, 532, 2195, 2740, 2554, 2025, 2206, 2716, 2562, 2024, 2561, 2715, 
       2205, 2023, 2560, 2714, 2203, 2022, 2742, 2201, 2200, 2021, 2741, 2198,
        2197, 2199}], 
      Line3DBox[{2046, 2345, 2346, 2221, 2402, 1751, 2045, 2400, 2401, 2218, 
       2584, 2744, 2399, 2044, 2397, 2398, 2216, 2767, 2304, 2303, 2043, 2325,
        2326, 2721, 2240, 2324, 2323, 2042, 2302, 1631, 2213, 2301, 2300, 
       2041, 2577, 2766, 2412, 2299, 2211, 2344, 2387, 2343, 2040, 2785, 2297,
        2298, 2210, 2296, 2473}], 
      Line3DBox[{2435, 2058, 2371, 2232, 2308, 2769, 2578, 2246, 2057, 2257, 
       2231, 2582, 2778, 2370, 2451, 2056, 2369, 2230, 2596, 2275, 2274, 2245,
        2055, 2256, 2758, 2229, 2404, 2403, 2227, 2054, 2748, 2585, 2228, 
       2273, 2272, 2244, 2053, 2782, 2406, 2255, 2154, 2367, 2368, 2366, 2434,
        2757, 2481, 2254, 2153, 2271, 2474}], 
      Line3DBox[{2446, 2388, 2389, 2238, 2320, 2319, 2755, 2033, 2288, 2289, 
       2202, 2390, 2780, 2583, 2034, 2391, 2392, 2204, 1620, 2290, 2035, 2321,
        2322, 2239, 2720, 2394, 2393, 2036, 2395, 2396, 2781, 2207, 2292, 
       2291, 2037, 2293, 2386, 2743, 2576, 2208, 2342, 2411, 2341, 2038, 1623,
        2294, 2209, 2295, 2475}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0DsohXEYBvD/waGOS7mU4lBy2Vw291Mum8tgcRlNFkdKGaROdhEpBotc
OoMMIikGJQ4bg8kkC5PVLT/Dr+d9n/dfX301kzMjyUgIIUlDTgjFuSEsUMJi
NIQyeUopt7EQUroKc4pKlu1VcooH97hc0dXKJepYsz+6NZgvqGdd1yifaWLT
nvGmxVyeF0Kz3NJ9yW/23T7lLz9su2V596bPlhGi5PDhdqWvMlcTZ0f3wqV+
V+6RMB/IfPcCYhTxri+UabdW32rj0Hyn7zC3c2TvlK90cWy/d0+YM3Rzouv5
/x/0knY/0/Wbp+nj3D4gVxnk2j4sZxnixj4qNxjjyT4h5xhnnj/+VDXf
       "]], 
      Line3DBox[{1068, 1832, 1833, 1371, 1517, 1372, 2596, 1561, 1502, 1415, 
       1416, 2602, 1080, 1242, 2607, 1092, 1254, 2611, 1104, 1266, 1117, 2672,
        1278, 1130, 2683, 1290, 1143, 2695, 1303, 2625, 1156, 1315, 2634, 
       1169, 1327, 2640, 1181, 1338, 2643, 1193, 1350, 2646, 1205, 2719, 1484,
        1485, 1486, 1632, 2767, 1392, 1531, 1393, 1696}], 
      Line3DBox[{1069, 1724, 1373, 1813, 1374, 1723, 2778, 1503, 1417, 1418, 
       2603, 1081, 1243, 2608, 1093, 1255, 2612, 1105, 1267, 2614, 1118, 2673,
        1279, 1131, 2684, 1291, 1144, 2696, 1304, 2626, 1157, 1316, 2635, 
       1170, 1328, 2641, 1182, 1339, 2644, 1194, 1351, 2647, 1206, 1487, 1488,
        1489, 2744, 1748, 1394, 1827, 1395, 1747, 1532}], 
      Line3DBox[{1070, 1662, 1663, 1518, 1639, 1638, 2769, 1504, 1419, 2732, 
       1420, 1082, 1244, 2609, 1094, 1256, 2613, 1106, 1268, 2615, 1119, 1280,
        2616, 1132, 2685, 1292, 1145, 2697, 1305, 2627, 1158, 1317, 2636, 
       1171, 1329, 2642, 1183, 1340, 2645, 1195, 1352, 2648, 1207, 1490, 2745,
        1491, 1492, 1751, 1752, 1499, 1750, 1749, 1753}], 
      Line3DBox[{1216, 1361, 1682, 1525, 1648, 2755, 1647, 1208, 1353, 2741, 
       1469, 1196, 1341, 2708, 1184, 1330, 2703, 1172, 1318, 2699, 1159, 1306,
        2698, 1146, 1293, 2686, 1133, 1281, 2674, 1120, 1269, 2664, 1107, 
       1257, 2657, 1095, 1245, 2652, 1083, 1233, 2649, 1071, 1225, 2731, 1397,
        1058, 1221, 2777, 1713, 1396, 1712, 1711, 1811}], 
      Line3DBox[{1217, 1362, 1839, 1740, 1493, 1739, 1840, 1738, 2780, 1209, 
       1354, 2742, 1470, 1197, 1342, 2709, 1185, 1331, 2704, 1173, 1319, 2700,
        1160, 1307, 1147, 2617, 1294, 2687, 1134, 1282, 2675, 1121, 1270, 
       2665, 1108, 1258, 2658, 1096, 1246, 2653, 1084, 1234, 2650, 1072, 1226,
        1399, 1059, 2746, 1222, 1716, 1398, 1715, 1714, 1510}], 
      Line3DBox[{1218, 1837, 1838, 1836, 1526, 1386, 1620, 1210, 1355, 1471, 
       2714, 1198, 1343, 2710, 1186, 1332, 2705, 1174, 1320, 2701, 1161, 2628,
        1308, 1148, 2618, 1295, 2688, 1135, 1283, 2676, 1122, 1271, 2666, 
       1109, 1259, 2659, 1097, 1247, 2654, 1085, 1235, 2651, 1073, 2597, 1227,
        1400, 1060, 2747, 1534, 1533, 1511, 1365, 1697}], 
      Line3DBox[CompressedData["
1:eJwVzz8oxHEYx/HvlbvjKP+tx+D/xF1Wl4WBwZnEJCnKKRaLIrOiLGwGWZkx
SSw2GQzKv+sGjojB5PUb3n2e5/N++vb7tc0s5QuxEMIiLipCmIiHsJoIoQb3
5mlZwmMqhCl55mZMv2yuxrU5L3cwjhN+SFcwp3BqHpFFDOOQH9C1J0Oosh95
99WeMw9ij++1l/S/9h80uK3HFpfmity3/gt1+lqsc43cC/ep/0CnvgNl3Qqf
4I/NB3LO/od3d29IunvmEnJSX0Zl9N9us/Kcy8hR/ROS0b/o9vl+8wP6kOPu
sGC+jd6Tu2565Ca6keVvcMXP2+PYdtMqN5BGV+Rx6abJN8Ui56ZFrqEZs/gH
d6w3VQ==
       "]], 
      Line3DBox[{1220, 1364, 1549, 1528, 1630, 1629, 2766, 1213, 1358, 1695, 
       1694, 2774, 1385, 1202, 1347, 2730, 1382, 1190, 1335, 2739, 1462, 1178,
        1324, 2791, 1780, 1166, 1312, 2789, 1777, 1153, 2799, 1300, 1774, 
       2692, 1140, 1287, 1841, 2680, 1127, 1275, 2786, 1771, 1114, 1263, 2735,
        1438, 1101, 1251, 1848, 2733, 1847, 1850, 1849, 1089, 1239, 2724, 
       1379, 1077, 1230, 2722, 1698, 1700, 1699, 1065, 2782, 1224, 1538, 1515,
        1560, 1559, 1637}], 
      Line3DBox[{1410, 1720, 1721, 1370, 1828, 1754, 1755, 2748, 1066, 1412, 
       1231, 2600, 1078, 1851, 2803, 1240, 1090, 1846, 2802, 1252, 1102, 2662,
        1264, 1115, 2670, 1276, 1128, 2681, 1288, 1141, 2693, 1301, 2623, 
       1154, 1313, 2632, 1167, 2702, 1325, 1179, 2707, 1336, 1191, 2712, 1348,
        1203, 2717, 1481, 1359, 1214, 1631, 1391, 1529, 1687, 1746, 1688, 
       1769}], Line3DBox[{1413, 1722, 1411, 1516, 1539, 2758, 1540, 1067, 
       1414, 1232, 2601, 1079, 1241, 2606, 1091, 2656, 1253, 1103, 2663, 1265,
        1116, 2671, 1277, 1129, 2682, 1289, 1142, 2694, 1302, 2624, 1155, 
       1314, 2633, 1168, 1326, 2639, 1180, 1337, 1192, 2713, 1349, 1204, 2718,
        1482, 1360, 1215, 1651, 2721, 1483, 1530, 1689, 1690, 1770}], 
      Line3DBox[{1494, 1743, 1745, 1388, 1826, 1387, 2781, 1744, 1476, 1475, 
       1474, 2716, 1200, 1345, 1188, 1843, 2800, 1842, 1176, 2638, 1322, 1163,
        2630, 1310, 1150, 2620, 1297, 2690, 1137, 1285, 2678, 1124, 1273, 
       2668, 1111, 1261, 2661, 1099, 2610, 1249, 1087, 2605, 1237, 1075, 2599,
        1404, 1403, 1501, 1550, 2595, 1367, 1513, 1366, 1717, 1657, 1756}], 
      Line3DBox[{1496, 1622, 1653, 1390, 1527, 1389, 1621, 2743, 1478, 1710, 
       1384, 1709, 1383, 2740, 1465, 1381, 2728, 1380, 1460, 1458, 2801, 1844,
        1457, 1845, 1764, 1452, 2737, 1451, 1164, 2631, 1801, 1800, 1151, 
       2621, 1298, 2691, 1138, 1819, 1818, 2679, 1125, 1792, 1791, 2669, 1112,
        1785, 2793, 1784, 1814, 1431, 2734, 1430, 1691, 1378, 2723, 1377, 
       1422, 1834, 1376, 1835, 1375, 1783, 1719, 1406, 2796, 1552, 1369, 1514,
        1368, 1634, 1551, 1658}], 
      Line3DBox[{1500, 1633, 1401, 1512, 1535, 2756, 1536, 1061, 1402, 1228, 
       2598, 1074, 1236, 2604, 1086, 2655, 1248, 1098, 2660, 1260, 1110, 2667,
        1272, 1123, 2677, 1284, 1136, 2689, 1296, 2619, 1149, 1309, 2629, 
       1162, 1321, 2637, 1175, 2706, 1333, 1187, 2711, 1344, 1199, 2715, 1472,
        1356, 1211, 1741, 2720, 1473, 1742, 1683, 1684, 1767}], 
      Line3DBox[CompressedData["
1:eJwV0LsuRGEUhuGlQOIKaLA1JLTcAcloCDcgWsJNOJ8ShcoIiTiLiEYjZsa5
oBQSxYxDKwQX4PmLN+/6vrWy987OhscHxqoiYgi52ojBmoi/6oh+fqiL6OMz
Oce9+DX38L1dN5/KB3yIZ90a72MPx3a3nHnuid2d+Ui3xO9YTLfyNX/aN7u7
Me/qungBnfiRR/jFzRWPYls3z2+YQ8HuQ3dhbvKcS96UZ/kVj/Yz6V5X5AY3
Jd6Qp7liX+EprOvOud5NgfPyJJfdlHkCq7qd9K140ufTN2ELK3btXNJ38Lfc
xq1YNmdctGvhL7kx/Vvv+gfetz05
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvHk81l/3NyqVSIMhoUhKhVKKRrFFpJIhRUrKLGmgKJFmQxkbiJQhInMZ
MmXLLIUMhcrsMhOiRDx7fa7Lfe7j93Wf83vOc87r+eP0j9e1Wq+1136vtd5r
7f35XJew4bmDJsxMTEw/5zIxzWSa7t8PdMF+96PxiT4ckzzef59dCw1qjTFl
m36T0/1tND4x0Ydmy6q6FG1jQSu4dh76NMaBBNv5iogcv1noN/xWYiFSPc1n
8MhAFnmU8Mz5RfQP/WTps0AKaEuP9lFdJzN0Z1Po9kYidxUUK684ch4tb2R1
pDGfRU6/qwPkEvuQT9HNOcaZQahkh/KfvtosNJ2f9e3pT4k+ZvN17DAi+tlX
bRpBP+p7LNjHP+3WzvhE7PfaVMk3Evvq35eAP3gdv1KbCfHnmIHnm4PEHw4e
yn+UdMLc8wDxX+CxfFIZ8f/XemPYL9Z76uxfu4UFsS+ZEfBllAMJ23Y+IPgg
dumnu14s0kItJY5R+y5+k5vOT5lN785/sqQh75Dola5rUpDQbQXTZ0E0NJe5
5NKFozRUynLFgZ03A5l0PzMGualdet+JnTSkLik8OJCThfivvKL07QVexmxn
oaGNJ93rae9yUYmzlTnIl+rtOn7QpxX9uRCu/3B5MYq7wGsJcrGyb5zFc9pR
3/YbpWm9FSjJZT+vdEgTusTpNr77bztiDfTVHb/ThK9sWflAl71kWpwPfbTk
U/rbjhd4bZUBfeN2Y1PQb+ozGHg/px2f92MdA/tpf0elwD63Yu1R4g/ej78+
A39qk++fAn8+BWbGEf+x/sfC7+C/y4bb1L7M6fvFaoz98jL2+7mH34bgg3M+
JV8DfAbu7jADOQNPPBXPqJxM32sONLQ14/BClg2J6NroIIXnmh2X3z47R0MD
bmJZiY5v0A5/Y0q+hUeWwl++7bkK2E933EDZOaVvUMEjTUOPFF+LKJ1/h7Kv
D1DynHKdkznNrYg2zDkDdeejCplGal/Xj2YkC3C2Iklj5626V8vQujnMnaXB
JN71KjFqym1IZMw69cGGGnxVYM+cvr+NiN+5jyV3mb7cld8ZC6T+9qF3K4we
zsz3RzK5ovlEH2f4Vj0CfQkZr8Feov+uQgrsY06NuavB/r0n8T1gn/fPaiPi
D2aLsB+XI/4ssNWi8DlN9x8/YPifxfB/G32/GDH2m8bYLwMf/IOBzzYGPgw8
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
ZQZ7EyH/o6w3UfVYX+p3BXj+V0VvP9RjVfn3ZVAvFujKTFIv2OgebwHodwjk
D0Pf1L3hdhTsx31XFAH7YwdOQP2ivZxdbdBHnjSpLoB69H9+agfU0bjOuDz4
+bUh+yH4GVQsV2FI6s6FT/MG9CNd3z4VqDsten9HZvT+jocZ/X3KfIIn5xPv
hY4LYA7haGEZZbLPwglITBTmkBWV2iuBnxP/yi9XS+xERbcxJ/Dz6bI3C4Hn
ra69u0F4HikZhgkCz78yPsoLPDybS4+F8DBS79soCjycXmu6AOYZS7MbuoRX
sVrAeYpXw7Md1wLPd1lclIH+5TZ/PAR4+OnTrEXAw3zJq9VBX8zISxj0nffM
Bp5HWSmGnGD/5TIFObB/TX27PfB8SGEKgv6YevhnHPA8LcVFAuYi96N/vUh/
QTsuaprAXOSq/NyZ9CN0o+6+EfRZ1RvuI2GEz+uq2dcDP0cXLPsKOBz3m8EM
OJweUXIn/Q4PnXu/ifQ7/KDVkup3ElZHoT9i1huj8aQ/ohJFAww8P4XP8SSf
n2DlNtp3goZkzW5E8gikI/5NHVRcPnmOVcf9aUGiIj73CoveIpWQ408G69uQ
gOt1fXhPZsIn/TjMb8Gbiik7h1O/JyWQedhsVqnteYtT6Kfz0S0vlK5Pe37v
P7S83OpML5KNjYz85lKBlx0/bfP7SST62/o5TL+0D69VqmrqSEhHp6ReOfDx
OqN7S2etnLO2D89V8BlzK32P6mM3iknxJk9r32bJgovDB3vw6L4ZIayEb1YX
VV+tibmHmHZ7niNyVPT+fjLItZr1HoGcFryt0VizF38cGHvywroCscf3Vx0P
SUXzE9sTfkR349HxEpU76Cs6VC8hd2NeFhrzifKqle1DnbOydqodTUM0mQUV
c/QLUeK1dcLET9Tt1sjvTvzcnXBoF/jZcY23nthHlaf3h4P97QmNPWA/Mi4+
idhHYUzr5MH+u6AOJbCf4R7eIDPahx3iBXlyOc4hO+8m3sSjwcg7pqqJ4IY/
vbBXAtxysHb3L4LblDnqX/PS1mm+J3LnvW/Au+Y2FP866ieTUx02TPq142L8
dyR1RTDNvonwy/VLr592daNfhsNpK7MqkdMNmUUcgl14fJ7+ywfGn/GGOFGf
1Ps1qPN8Td/7WHL+Zd4t7KfbhAZPxG5InJuHNqU92mldQs7dI5vlTu1vQ0sH
X89nry5Gn4/0xJB1cZzqSCOsm51lshjWfTBuOZ/YR8HzMxPB/qIEjpdgn/3T
p4XEH9yrl/Ue/FFrO5oP/mxWM+gm6yIrK7lVsK7qiW4ZWPdj6kYZsi56rOZG
rRv0spQf1q1VSpjN/6YJ79W4p7FqtAh1sWw8biPcgXLmt1md29WCX3FLFD7d
FYHzL5utm5fWjviEZJv43jQhxVWXboD+E6vzF0F/9iqZxXLXWpDVloIDO6W/
oOqbLBr+5By1OEWYj8gx15cQMyLHe60O7AE5f9zoIJcJDcmv5RZcrVmObuzf
5afR34J+n5GYA/4ESZcvJ/bxgbJ1J8D+FNzwJG7Dzm39gPO3D7uXkf3iGabH
N8J+N8R/m8NtQsMrsmVaVhH7ghJnvMD+ed8oGvif9mn/gAixX/LR6ArY353t
sQXw0RVdowj2z257wg32+ZcrtQOeHN93rgX74loe28D+dO/RTZnP/zW3T+EH
PMkPlqttPrn4tiMzybT35uJNaO69Q4u/tZSj9uR8b8g35l3870h8cd83UTeI
r9Gdrwsg37rMJItIPiD1+sXekA9DRc/SoR5T1JPXkHrBTkmOClAv79PtaVC/
x/tLrpD6wutjjWuhvhTWctPIuvivWk8SrJvJOfbnK1m3r+4WC+Sb1o/w72D/
Eo9bCNj/yZPWdYXkW335ly/gz0XfKwHgzy9XlWSo055dQbKw7t2ncsqwbshL
DuANpLi21h/WvVfu1gfrBkjv+0DO11jG47cjOV/j3EuyFA5CdHzwGAOfZwx8
sIfR1Vd/WnBcSp5wZtFbXOfcdXyA8G2927GdI/B9TJHNTNYlxijFJXC7pmeN
XOKtlebda3qRsqRNw5NzFeh4m+G7n7/eoeFHrnWEN5ADfqj3iescrvOVPQi8
YfDkYg3wbVbEdwfCG6hSstIe+HY6/lRebnYB+LNVbzyU8CSuXydD8eei4Piz
wJ8xTR5pIH/y9u5DkB9P6XInfIhZjSc2qh9NwwN3VhcBH57V1RQB3j6zcUML
4W38o05QHPhwUy3TWeI/znobmgP+j/E+DAL/cXVUBOF/lHRhGRfhf1z1ancU
8H+QzzDwPzIY9WkFO6s+qSn+J/4fOVHdATz5xCKaH/Y7KnN5AHhyPKoE+hRe
0Sy+3cfiFM4VUzsZSvqU2sSaAIIzitIXFvk6OBex7h2pa9tqPNkfMaM/4sn+
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
oex7d8hYn3ZsYDlRAfZ/X57TSNj/zZTeupdLn0TpcWWJ08k5oiL/VYPSyDmm
Sk+sgHMsovRUSh8xjUvvMb5uTPgBa2YnKgE/FJetTgF+aKL0RZReQOkWHV2C
5HxR8OMG5nwd87bZwPmOsg59vWEOB5sHp+ycp3kbfXW4J6JSxkGhtH7CVZ76
CdfD5jSS8Whd0ssCFc3b2NZNTRzGTzg1VRj4Z5lcP8yPrU3dN8L8TsIze3vJ
d61iQsWAfqb7vjHQT9Sud1luyEGLxzcp6erl43iny2VgN03m8j+S4fI/nkj5
/3p2oTf4q2sf+r8h+483Bscz+y/dFZYFfun+rU8Xk3PEYks8Y+EcRwuMmQD3
NyjAX5GcI1ZeHFwE5xgl+qK3jPDPsxvaHYR/UPSzj1uAf3YkGzD84/BWRJxz
IAyPkN3P8E+0/wpDuO91DhlGhH+wc6Ibc9/33B5jBHwllLloPdAPrwlaD3QZ
EW4+uy/NZ/9G89k/H7Zi5IOO/xEtmN+5aDMjH67NdmrbT+TD6h8Bb4h8QCrz
f28G+VClfDkb+HPw+Kvb4X/ZKXtEw/8qvqchD/w5RK17KvyvhXO/34T/Na1K
+h74z1MqPOEe4fpFJ7LhHvX9T77FlyjfsvnvyTz577H1Woqq3a3o2aF17uBv
71I6y/jbo+72yBB5hY5iyTqQV4eCzTpAXv3Jz1+qH2AQto2DI1YvWek0LA/N
qC8wgnfz+MOQsKLmtyg+LeHrIO+X2DKzR9Mp5QWq3fQhidDxDf3vb4D+oNBc
HOhXwyx2CvO9xoqF8n5eldVo8jzFiXdGtaPfie7ahI563VVCgX5tc9McoG+Q
G6wA/lI9T+ctZU6v0RZnzg3wl36yyhvTQOySiAdRBkKj6lDQqgurImxaUIVj
HSLjsfT5GCvwr3K2K4fDeKsdv0aT8fiNuIs1GY+d3pUthfHynKDdsB7EqbAh
38VP5WZJwXeXBqrrwHrSTg07DPR4gUPKQP9T/vvM6hGGZH/Ie/aqxHFYHv6e
XMbsz2gtnbmw/0GpvyLI/mP7KL+8gfvvyd1/fJDuf6pRxeZ7ka24RfaTiVPs
Qzy39C7jr4g17N1L3jW8tVyxnrxreEjVgUvwrvkbrlCCeAqn2dYN5o9AF5n5
Y7jzYzc6vzOdn8ZNEG/c5NSJlI4juzkoWvpZ2EP+XPRw/3gm3y0k4NjxLou3
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
/ImeVvxqywzJR/2PnCSAP1GhbQjhQ+SRrulE+BAVWonvBj5MXiKZAffOneaN
Ypo3qrbqhzHkhUmYGL8G/NVKB31V2Ic9I5qENzgTfohxLLGaU4V9J8xfvFaa
g0S6cy1hnYH+/b5wTy/Lr4+BdXpRfbLz4ocNoE9OofqkIM3fPMeTv7mFi4vD
o7m4OMRPcXGztvaNI9/Fl63unCbfRfP2Ci2B704+9CtRT4eDp1pKbfLUK0RI
o+7eISJv2Xvtw3OvQ2y3HbP3IfMLnFtkfyIFr7HxHw15l4LZv5NgHtswTzky
D/asbCyFeW7k4ba2iy1IVKfucZhKJVr/Tb7su+pbtKl50liQA1n7RSYROYC+
DVOdCPssm9M64X0UB/eur5iwMuPs7TOZY1MNyPpZfHv1886Ugfh2dnxsc1yP
nOj5v8ezOAdxHpxDk5a0sl1VK2q+Hebj8bMUBySHdYcT+mPueCzGHY8c6Xjz
0sGKZDz+0hrtS8YjdcsTPTCe5bdLPPym3D/+xZbcVnx69/P604seIIeTd4UA
vyTp7cfRJfMkXeV7uOpHKUrPPiHb8C/28v8tnc/xWVvDyXdEzxFfsOxUCzr7
6sTWoRt9kcOLpTmEjka8n+hM6Lh7VN0eoIt4l1UDfc69MGMY72Cb7Qb0K+bG
jTDPrGnW+jDeUHDqOqD/v1rnn+h/6gMrocHt9xpJ+70Oo/1eadwZsXFnKRp3
dqV+TjN7rp/TlPo5M2g/1gjaj/UF7ccq5+81bY8HBx2aPllc1jQdrd2MZsB9
ubS01G2QA3mX5uuvyWvPQp+zNDL+rb/q05OpqoArmHFHZRvgVcYNql4JuAK2
L6osT19U4XWzAD+Dxqvo3d5ldhMdWf3lHegJWz2FAW+DPMbObd32PhXhfgUz
0NMkNi6KkiFyKQD5KXe9ykQqbXu+/FvfUpafx/DwM9tvtI+n3+jL7QVtfhc4
yPKQx46/9GPRU9WOTIh37OHii9B5Lr4IDaX4oh3mD6aJnuIgg+Tr+nefJyMV
pbxjQN/asEb492HAqfnLxa3JQGHvlDoAv/SnPqFZ+glOGRoc/HYG8s89UYiq
JCcfBXzUN3xZZbI9sTvurjX7/ToLfZo8nsFTiY2asbj+Mvndekni13HhaHjE
rxiIF2Rz8VqogovXQlspXuvo8ImA70Lie14Dvgv9dMMMvmvvPLn3h8n/UrI9
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 296.0210415586762},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{-10, 10}, {Rational[-1, 2] Pi, Rational[1, 2] Pi}, {0., 
     18.135365150455634`}}, {{-10, 10}, {-1.5707963267948966`, 
     1.5707963267948966`}, {0., 18.135365150455634`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.503080281069494, -2.093030209686316, 2.6107728304353675`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7473395138168287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}], 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox["\[Pi]", "2"], 
         RowBox[{"Sinh", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}]}], "]"}]}], "]"}], ")"}], "/.", 
    RowBox[{"y", "\[Rule]", " ", 
     RowBox[{
      FractionBox["\[Pi]", "2"], "-", "0.001"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747339550811573*^9, 3.747339677792433*^9}, {
  3.747339902229336*^9, 3.7473399142424383`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJwVkHtYjHkcxUdTkctUI0akMa+KSiVPVhJfl7XoJqZH7KYyY2ukJTa6yK2V
1i427EqhmJgalUm1KuL9CiGtobsoYtiuSlTK+3vfbf84z3nOc/74POdIZNvX
/qjH4/G+H9b//vGaqN36EQNDVW6xn0TW2HRGJrAbzpkuxCJgOGOKsqjgMQPe
7bk2Z29ZYcJZavSDp8N9/+tbB4RWqDgnK/CtZuB9rkOCDqejx3llQGMtA39O
nV5L75iOJumUpquRAa3+RlV4I4WpSsrP7B0De4X+Drp7EozLkJHz/zIAZW5m
7ockGHRJqZrRzkC3NEDhu1yCVipq0K2bgQijeydCK6ehRk2lbRpkINY5NMfq
uRhPXpGt6PjKgHWlb5BphBgjs5U9kSwDgdE27w8bidEtl1r2K59AYkVn79Vl
lngvj2q9Oo5A2tSCPReqLFB1TXbC1YTAG8XDA9F7LPBIvtKtTEigZo8q1NXG
An0KqWO1IgK9AY1qp4NT8HkRNYeREMgXuvsFe07G0mLZiwQrAkaV+p51IyZj
WonykPEMAqVj4+bfKzHHzTepemrWMD9wQ3Sjgzl+uE3FrfqGQJhL1f4K60n4
lJZZV7sSOFIizKt7L8ICVD4JWEAgItf54mi1CKPLKEnEYgKC9LLUh7NFqFdO
lZ/2IKD9YKG47zURRf9QJrpAAju3v3zbnGeGrn01n4I3EfB0MmnmxZvh+qmJ
9U1yAuL+U80vpGaY+lNHWr2CQJbPL87Zg+PRUlDo8HgnAbsz8w64eY9Hm9XL
PfMPD/N15WtemghxRdSAo9MRAiO3Ra4q7TBFRbpamPM7gZBGwRiLB6Z4pXtc
4+UkAo+Eznzf/abomFSnSEklQEkdUpb0meDcZ6GHD1wlMPRALD/UbozrBs3D
SB6BoNdi8y+5xrhbUukdW0DgFhMXOn2nMRbvmD0hsphAX/hm9UlGgO7CwYzQ
MgJ7/ULUu8wF+K30tzs+dQTaawvmpUeMRWltDmPBEpCXOzjGxxvhvszwIS2P
hej9Q7oKqRFmxcz6Es9noSfA0vaYtREyU3M+tY5ioTa7X7urYhSqQrLbC8ez
8CrpVVya+SgcGlA3eNmy4LfXuTnrsSFaVWyp4+xZ+Fua+eRihiGuPmdbk+/I
gmjJ/CkDewzx0mK1dpILC1E3tOV5DobocySrXLeIBarkjrHrXwaonJxZGOfH
grO6DLb+rI+VnSH5Tv4sjIwf6jrkq48Dt23y3mxg4f7czzPeO+ijl1yVvTKI
BYVKTxfbxsf+7MtKszAW+iVlkqdyPnosvJSUs58FgbFU47NZD3uDLoa/vMLC
w4HOmPTjPOxLNpi7KZeFRIVuqDSSh1+0W8g7DQsLS2YnjviBhxzMOd5dyMLp
uC+3yQwejp12V6NHs2BcJDcIS+Ro69e63pnVw3/V3+zfxmfp9cEzY3Z9ZSFt
X+s0D7uvNB2sSRB4cZAiK3GdO66fvqEN92z24aCrNZPe/aaPvr7IzvTqGg7c
elU1b4v66ByLy+e8/Tmokxa5L5L30akNqQVHZRx8XiiLenvzM73L93DL6BgO
lg7yn0dEfqLtF29cOFLFQUvqQFQv20PbaCbz67M4mOVk6X+moYemLBseqrI5
ENvbbtyQ30NPYtb6fXeNA/ekGBv7kB7asHjl1oRSDs4aRN7lp3XTLU4uKfxq
Dh5fX7tuiUcX/TLtY2B1LQev1je9Oc7rohvGaawyGjgIXBfVYFDUST/psM1b
2syBS0ALF27VSZdmih8cbOPglNg3ecyIDrp4YtPRNZ0ciFbKS/4obqcLElLX
SrqH9wYIt86LaKevyCc042cO/J5p1B9etdGXq6oykgY4WODfomWS2+gLS5K2
BA9xcLTJptjet40+l+ftNJtwUJFgnB87qo1OFo/p4zgOvB+tErRhK/0ft7/9
dQ==
      "]], 
     LineBox[{{1.7636768193888246`, 7.449191673100458}, {
      1.7637904367008392`, -10.546779460602455`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {-10.546779460602455`, 7.449191673100458}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747339569448841*^9, 3.747339678294642*^9}, {
  3.7473399039152927`*^9, 3.747339914716078*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "z_", "]"}], " ", "=", " ", 
  RowBox[{"z", " ", 
   RowBox[{"Tanh", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.747339986520203*^9, 3.747339994839209*^9}, {
  3.747340203467751*^9, 3.7473402093872747`*^9}, {3.7473403358731318`*^9, 
  3.747340339271616*^9}}],

Cell[BoxData[
 RowBox[{"z", " ", 
  RowBox[{"Tanh", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Pi]", " ", 
    RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.747339995821971*^9, 3.747340209764247*^9, 
  3.7473403397453833`*^9, 3.747346146851495*^9, 3.747346281608726*^9, 
  3.7473472951974907`*^9, 3.7473587166919107`*^9, 3.7473619032388697`*^9, 
  3.747362061032947*^9, 3.747433140946178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], ")"}], 
      RowBox[{"Tanh", "[", 
       RowBox[{
        FractionBox["\[Pi]", "2"], 
        RowBox[{"Sinh", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}]}], "]"}]}], "]"}], "/.", 
    RowBox[{"y", "\[Rule]", " ", 
     RowBox[{
      FractionBox["\[Pi]", "2"], "-", "0.1"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.74734755449214*^9, 3.747347617282813*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
2iAx+efPHPT1Fq2Uzi/C/wAIM0Fx
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-22.459424341115064`, 28.123138826303794`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747347589778224*^9, 3.747347617728703*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"I", " ", "\[Pi]"}], "h"], 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
         RowBox[{
          FractionBox[
           SuperscriptBox["\[Pi]", "2"], 
           SuperscriptBox["h", "2"]], 
          FractionBox[
           SuperscriptBox[
            RowBox[{"\[Psi]", "[", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", " ", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ")"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "50"}]}], "/.", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{
       FractionBox["\[Pi]", "2"], "-", "0.375"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7473474589110403`*^9, 3.74734753307649*^9}, {
  3.747347629408764*^9, 3.74734771679425*^9}, {3.747347752165113*^9, 
  3.747347780093527*^9}, {3.747348841016268*^9, 3.747348847570464*^9}, {
  3.747349238831109*^9, 3.747349306996799*^9}, {3.747351262728949*^9, 
  3.747351500047921*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
9Mxv
      "]], LineBox[CompressedData["
1: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
Mgu8+fLj1XuY8Pyv7AKHw4LxgAnDcuz/ASuf7dw=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 4.7015627553783155`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {4.7015627553783155`, 8.500174994675307}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox["5000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.7473474735612783`*^9, 3.74734748952022*^9}, {
  3.747347523098002*^9, 3.747347533641276*^9}, {3.747347630360383*^9, 
  3.747347717118506*^9}, {3.7473477553368597`*^9, 3.7473477804764633`*^9}, {
  3.7473488416609583`*^9, 3.747348848187891*^9}, {3.747349239369429*^9, 
  3.747349307838262*^9}, {3.747351264016323*^9, 3.747351500462823*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]", "[", 
  RowBox[{"I", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "-", "0.4"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747347727824298*^9, 3.747347747700428*^9}, {
  3.747348958819767*^9, 3.74734895896093*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "9.393685176278794`"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747347741899663*^9, 3.747347747955421*^9}, 
   3.747348959369042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         FractionBox["\[Pi]", "h"], " ", "I", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], 
          SuperscriptBox["h", "2"]], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Psi]", "[", 
            RowBox[{"x", "+", 
             RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]}], ")"}], "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
    RowBox[{"y", "\[Rule]", " ", 
     RowBox[{
      FractionBox["\[Pi]", "2"], "-", "0.3"}]}]}], "/.", 
   RowBox[{"x", "\[Rule]", " ", 
    RowBox[{"-", "9.393685176278794`"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747348986794607*^9, 3.7473489967361526`*^9}, {
  3.747349234653776*^9, 3.747349234784761*^9}}],

Cell[BoxData["2.1366222297054036`*^6"], "Output",
 CellChangeTimes->{3.747348997954585*^9, 3.747349235300817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"I", " ", "\[Pi]"}], "h"], 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
         RowBox[{
          FractionBox[
           SuperscriptBox["\[Pi]", "2"], 
           SuperscriptBox["h", "2"]], 
          FractionBox[
           SuperscriptBox[
            RowBox[{"\[Psi]", "[", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", " ", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ")"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "100"}]}], "/.", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{
       FractionBox["\[Pi]", "2"], "-", "0.3"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.02"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747340001068096*^9, 3.7473400019689007`*^9}, {
   3.74734005966775*^9, 3.747340065041481*^9}, {3.747340109038341*^9, 
   3.747340275469771*^9}, {3.747340313034441*^9, 3.7473403628003674`*^9}, {
   3.7473403985500097`*^9, 3.7473404396921787`*^9}, {3.7473461430789137`*^9, 
   3.747346488991825*^9}, {3.7473465739002533`*^9, 3.747346702552361*^9}, {
   3.747346740977166*^9, 3.7473467653428717`*^9}, {3.74734680495852*^9, 
   3.74734689448776*^9}, {3.747347109855486*^9, 3.74734715771329*^9}, {
   3.747347213134033*^9, 3.747347241934444*^9}, 3.747347297451475*^9, {
   3.747347335238018*^9, 3.747347429547906*^9}, {3.747349358221258*^9, 
   3.747349368477499*^9}, {3.747351199836198*^9, 3.747351234671273*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVzGs0lAkYwHH2zJYiZYwhsRElpT1syi3zPLkNGmlJipYUKkJyqTGMGSaD
MIbXIDO9xnFJTRKtMiamTtLuInu6YFOJU7qxmzZxwtn2w//8vv3NDycERH2n
oaHh963/dfCYmeTozLtG7ifFXjZsfKJlmntDOcwwvdnoU2TPxrc26xMylW8Z
W3X85x7vYOMnRuPhI8o5hkntUYjyY+MsM/ZgkHIZqA1U0dnxbExjsQ7sVq6G
6eW7zTub2djRrxr0VVpDW9QX3LItDUdWfqb7KJ1AmZmoOe3KwTELYbr3A19w
eTH5TsTJQN7gkG7su0BIvhN8u6wkE5tjUgcyWSGg5jpsYT7gYR9HGJIvPQRs
W1PJhvd8XMF46nh18AhsvGTlee9TFm7KUGyk7T8K/3zaN7KdKkCjcU09s/sx
UJE8LKdtPosDd8OilizEgWBhmKu2zcFWsTRK0nESpvo3P7FkCXGcW9hPDz0F
iolG/bC9ucjJVLfGTCeBXNhtSA3OwyxGizxMkQItWukDUQn5GN/R0N3lfRpG
NYauyZLP4W8zodPqpWyoMW+ZOCQqwALPgKqyzjQYY4BBSW0h2gew0gaD0+HK
13GHm/VFuMv0+8Pt+lwQMh/Ld3eKkFl/O1OrJROSK6xsEiOKcTj1h4ecdh70
w8Mdx6aK0d0yw/JZGR8it1llSc6Isbr52aqUI1mgv9h1lzUnRnupTPMXt2xI
rHPvkwtKsCM6vJBDFcC+P2bZ2UtKccbZbTD7uQDKP7TX150txWPxgvUjHWeB
psem7V9JYB/vvm5sfg6EjbitkYsIPD4dO+8TI4TUD+ykeOMybI+zvUj1ygV2
UnV4Sk0ZzvfMTOnp58H7A/w6U3MJpvJNnCM+5sGaVs8K50sSHF/tYTahzofc
Hi2vRetypKgK7u4rOAdj1aPMJQ3lePCWfRz9eAEs2OjuSvqxAhtkz5t1HAqB
In+0t0RRgdbPJmYD6EWQF8fjLttWiRe+Tj998LoI+K5+AsfrldhjsTZje6sI
Fq/nr2qyPY+lQUHiVO9iqDaSucXeOI8qLand5NVimOVlpH6wr0J+LPWRtpkY
+tbOdzeoqtAssDJobZEYiEk7Rs1OKTptklv2/yuG0f6EprhbUpxsHvpsGVkC
OyjODRHuMjS2EtMMe0sglXQw2aKW4bp1IdRFu1LQ01/o8nC+gN29AdTC6lIw
oRkeS+q8gGPRveE3lhIwUO/5MceJRJOX/ksFywgojzv17rILicGhD5v2aBMw
Opr4fMCVxF7/vxbe6hLgTnnTZuxGYpvjmyoTOgFX2i5bN/mSmL+cMsS3/Par
i6Q/CiXRrsllD2snAbP3XLRNuCSe2Nj1xcidgLmEg2HII7G+xo185UGA7Rkf
RWQWicblPlNcbwL+HBU6XskhkcILLrjmT0BtYTGVISJx6Oek+/QwAkJC63rD
qkmk9s4kjIcTYJec3JtVQ6KfV5phcwQBwt91euprSbzjzI/2iSLA41CFYuoi
iQoLESX9BAHmKgMn7jUSX8uoCu94Ak47Wq+saSXR3EgSaHCSgJ/CKaPdv5Io
0ZHVNCURQH216tQKJYkDOWa+nBQCGl/s3GqnIlFbs/Yj8zQBKpXT33s7SfTi
WFXS2ARMMWfrzqhJ5H2+hC/TCLAIzAiW3iHxP3hcPIk=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 400.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.02}, {402.7672287201333, 2032.6526774961465`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7473402762735147`*^9, {3.7473403144307737`*^9, 3.747340324216587*^9}, {
   3.747340356781435*^9, 3.7473403634122343`*^9}, {3.7473404002516413`*^9, 
   3.747340440159067*^9}, {3.7473461437886553`*^9, 3.7473464895439043`*^9}, {
   3.747346574346805*^9, 3.747346703011671*^9}, {3.7473467415067596`*^9, 
   3.747346765868717*^9}, {3.747346811339407*^9, 3.7473468951109257`*^9}, {
   3.74734711235098*^9, 3.747347158744038*^9}, {3.747347215117812*^9, 
   3.7473472349889383`*^9}, 3.747347298199123*^9, {3.747347336201748*^9, 
   3.747347430200405*^9}, {3.747349359141438*^9, 3.7473493694814777`*^9}, {
   3.747351201408538*^9, 3.7473512355730953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"I", " ", "\[Pi]"}], "h"], 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       FractionBox["\[Pi]", "h"], " ", "I", " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[Pi]", "2"], 
        SuperscriptBox["h", "2"]], 
       FractionBox[
        SuperscriptBox[
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ")"}], "/.", 
    RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
   RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
  RowBox[{"y", "\[Rule]", " ", 
   RowBox[{
    FractionBox["\[Pi]", "2"], "-", "0.001"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"314.1592653589793`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5697963267948967`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     "x"}], ")"}]}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{
    SuperscriptBox["\[Psi]", "\[Prime]",
     MultilineFunction->None], "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5697963267948967`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     "x"}], "]"}], "]"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"628.3185307179587`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"\[Psi]", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5697963267948967`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     "x"}], "]"}]}], "+", 
  RowBox[{"24674.011002723393`", " ", 
   SuperscriptBox[
    RowBox[{"\[Psi]", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.5697963267948967`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      "x"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.747340303063017*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "'"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.7473403293394213`*^9, 3.747340331246254*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", "z", " ", 
   RowBox[{"Cosh", "[", "z", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sech", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}], "2"]}], "+", 
  RowBox[{"Tanh", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Pi]", " ", 
    RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.747340331486601*^9, 3.747340342779401*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"I", " ", "\[Pi]"}], "h"], 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      FractionBox["\[Pi]", "h"], " ", "I", " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Pi]", "2"], 
       SuperscriptBox["h", "2"]], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", " ", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7473465190490513`*^9, 3.747346538450736*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Pi]", " ", "y"}], "h"]}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Pi]", " ", "y", " ", 
       RowBox[{"Cos", "[", "y", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}]}], ")"}]}], "]"}], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "y", " ", 
    RowBox[{"Tan", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "h"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox["y", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Tan", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "+", 
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "h"], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", 
          RowBox[{"Cos", "[", "y", "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"Cos", "[", "y", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sec", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
         RowBox[{"\[Pi]", " ", "y", " ", 
          SuperscriptBox[
           RowBox[{"Sec", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
          RowBox[{"Sin", "[", "y", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sec", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"Cos", "[", "y", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"\[Pi]", " ", "y", " ", 
        RowBox[{"Cos", "[", "y", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
        RowBox[{"Cos", "[", "y", "]"}]}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
        RowBox[{"Cos", "[", "y", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Tan", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}]}], "h"], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", 
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"Cos", "[", "y", "]"}], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", "y", " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
         RowBox[{"\[Pi]", " ", 
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"Cos", "[", "y", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tan", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "3"]}]}], ")"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"], " ", 
           RowBox[{"Cos", "[", "y", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
           RowBox[{"Sin", "[", "y", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Pi]", "3"], " ", "y", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"], " ", 
           RowBox[{"Cos", "[", "y", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Tan", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
           RowBox[{"Sin", "[", "y", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Tan", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Pi]", "3"], " ", "y", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Tan", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "3"]}]}], ")"}]}], 
       RowBox[{"2", " ", "h"}]]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cos", "[", "y", "]"}]}], "+", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cos", "[", "y", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sec", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
             RowBox[{"\[Pi]", " ", "y", " ", 
              SuperscriptBox[
               RowBox[{"Sec", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sec", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cos", "[", "y", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Tan", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}]}], ")"}], 
           "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Pi]", " ", "y", " ", 
              RowBox[{"Cos", "[", "y", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sec", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}]}], ")"}], "2"]]}], 
        "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Pi]", " ", "y", " ", 
            RowBox[{"Cos", "[", "y", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Pi]", "3"], " ", "y", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "y", "]"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "-", 
           RowBox[{"4", " ", "\[Pi]", " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Pi]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
            RowBox[{"Tan", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Pi]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Tan", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
            RowBox[{"Cos", "[", "y", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "y", "]"}], " ", 
            RowBox[{"Tan", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[Pi]", "3"], " ", "y", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "y", "]"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Tan", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", "y", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Tan", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Pi]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Tan", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "3"]}]}], ")"}], "/", 
         
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Pi]", " ", "y", " ", 
              RowBox[{"Cos", "[", "y", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sec", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}]}], ")"}]}], 
          ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", 
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"]}]], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"Tan", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
         RowBox[{"2", " ", "y", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Pi]", " ", 
             RowBox[{"Cos", "[", "y", "]"}], " ", 
             RowBox[{"Tan", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
            RowBox[{"\[Pi]", " ", 
             RowBox[{"Cos", "[", "y", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "3"]}]}], ")"}]}], 
         "-", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "y", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}], " ", 
             RowBox[{"Tan", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"]}], "-", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             RowBox[{"Sin", "[", "y", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "3"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "4"]}]}], ")"}]}]}], 
        ")"}]}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.747346530703755*^9, 3.747346538892261*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"ComplexExpand", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"I", " ", "\[Pi]"}], "h"], 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         FractionBox["\[Pi]", "h"], " ", "I", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], 
          SuperscriptBox["h", "2"]], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Psi]", "[", 
            RowBox[{"x", "+", 
             RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", " ", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", ">", "0"}], ",", 
         RowBox[{"y", ">", "0"}], ",", 
         RowBox[{"\[Sigma]", ">", "0"}], ",", 
         RowBox[{"h", ">", "0"}]}], "}"}]}]}], "]"}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.747346921298135*^9, 3.747346972994609*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cosh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "-", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], " ", 
            RowBox[{"Sin", "[", "y", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cosh", "[", "x", "]"}], " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cos", "[", "y", "]"}], " ", 
            RowBox[{"Cosh", "[", "x", "]"}], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cos", "[", "y", "]"}], " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Pi]", "2"]}], " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["\[Pi]", "2"], " ", "x", " ", "y"}], "+", 
           RowBox[{
            SuperscriptBox["\[Pi]", "2"], " ", 
            SuperscriptBox["y", "2"]}], "+", 
           RowBox[{
           "4", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", "x", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"4", " ", "h", " ", "\[Pi]", " ", "y", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"8", " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["h", "2"], " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"Arg", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
               RowBox[{"Cosh", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sech", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
                "2"]}], "+", 
              RowBox[{"Tanh", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
             "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cosh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
             "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["h", "2"], " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                   RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                   RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                   RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                 "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                   RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                   RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                   RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                ")"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Pi]", " ", "x"}], "+", 
                 RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "y"}], "+", 
                 RowBox[{"4", " ", "\[ImaginaryI]", " ", "h", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox["\[Sigma]", "2"], " ", 
               RowBox[{"Log", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                    "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                   ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                   ")"}]}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{
           "8", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", "x", " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "+", 
           
           RowBox[{"8", " ", "h", " ", "\[Pi]", " ", "y", " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cosh", "[", "x", "]"}], " ", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
            RowBox[{"Cosh", "[", 
             RowBox[{"\[Pi]", " ", 
              RowBox[{"Cos", "[", "y", "]"}], " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "3"]}], 
        ")"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"x", "-", 
         RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Pi]", "2"]}], " ", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "x", " ", "y"}], "+", 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{
         "4", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", "x", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "-", 
         RowBox[{"4", " ", "h", " ", "\[Pi]", " ", "y", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "-", 
         RowBox[{"8", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Arg", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             RowBox[{"Cosh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Sech", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
              "2"]}], "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
           "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"]}], 
         "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                    ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                 RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                  RowBox[{"Sin", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                 RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                  RowBox[{"Sin", "[", "y", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                 RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                  RowBox[{"Sin", "[", "y", "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}], " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
               "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                    ")"}]}], "-", 
                 RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                  RowBox[{"Sin", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                 RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                  RowBox[{"Sin", "[", "y", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                 RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                  RowBox[{"Sin", "[", "y", "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}], " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"2", " ", "\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                 RowBox[{"Cosh", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}], 
             ")"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", "x"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "y"}], "+", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "h", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"Log", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                  "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                 ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                 ")"}]}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
         "8", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", "x", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "+", 
         RowBox[{"8", " ", "h", " ", "\[Pi]", " ", "y", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}], 
        ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cosh", "[", "x", "]"}], " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cos", "[", "y", "]"}], " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"x", "-", 
            RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"], " ", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "x"}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "y"}], "+", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "-", 
         RowBox[{"8", " ", "\[ImaginaryI]", " ", "h", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "+", 
         RowBox[{"8", " ", "h", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "-", 
         RowBox[{"8", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["h", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Arg", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             RowBox[{"Cosh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Sech", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
              "2"]}], "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
           "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "-", 
         RowBox[{"8", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"x", "+", 
            RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", "x"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "y"}], "+", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "h", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox["\[Sigma]", "2"], " ", 
             RowBox[{"Log", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                  "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                 ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                 ")"}]}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"8", " ", 
            SuperscriptBox["h", "2"], " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"Cosh", "[", "x", "]"}], " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
               RowBox[{"Cosh", "[", 
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"Cos", "[", "y", "]"}], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], " ", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                     "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                     ")"}]}], ")"}], "/", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "5"]}],
                 ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
                    "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                 ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", 
                RowBox[{"Cos", "[", "y", "]"}], " ", 
                RowBox[{"Cosh", "[", "x", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "y"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                  "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                   " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                  ")"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cosh", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Pi]", " ", 
                 RowBox[{"Cosh", "[", "x", "]"}], " ", 
                 RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
               RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cosh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                RowBox[{"Sin", "[", "y", "]"}], " ", 
                RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
               RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                RowBox[{"Sin", "[", "y", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                RowBox[{"Sinh", "[", "x", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sinh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
               RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                RowBox[{"Sin", "[", "y", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                RowBox[{"Sinh", "[", "x", "]"}], " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"], 
            "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", 
                RowBox[{"Cos", "[", "y", "]"}], " ", 
                RowBox[{"Cosh", "[", "x", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "x"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                  "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                  ")"}]}], "-", 
               RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cosh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                RowBox[{"Sin", "[", "y", "]"}], " ", 
                RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
               RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                RowBox[{"Sin", "[", "y", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                RowBox[{"Sinh", "[", "x", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sinh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
               RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                RowBox[{"Sin", "[", "y", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                RowBox[{"Sinh", "[", "x", "]"}], " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
               RowBox[{"Sinh", "[", 
                RowBox[{"2", " ", "\[Pi]", " ", 
                 RowBox[{"Cos", "[", "y", "]"}], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "+", 
            RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", "x"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "y"}], "+", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "h", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"8", " ", 
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox["\[Sigma]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], " ", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                     "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                     ")"}]}], ")"}], "/", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "5"]}],
                    ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
                    "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], " ", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"4", " ", "\[Pi]", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
                    RowBox[{"4", " ", "\[Pi]", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Pi]", "2"], " ", "y", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "y", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", "x", "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                    ")"}]}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                  RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                   RowBox[{"Sin", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                  RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                   RowBox[{"Sin", "[", "y", "]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                  RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                   RowBox[{"Sin", "[", "y", "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}], " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                  RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                   RowBox[{"Sin", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                  RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                   RowBox[{"Sin", "[", "y", "]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                  RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                   RowBox[{"Sin", "[", "y", "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}], " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
               ")"}]}]}], ")"}]}], "-", 
         RowBox[{"8", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Pi]", " ", 
             RowBox[{"Cosh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Sech", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
              "2"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sech", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"],
              " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cosh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sech", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"],
              " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}], 
           ")"}], " ", 
          RowBox[{
           SuperscriptBox["Arg", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
             RowBox[{"Cosh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Sech", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
              "2"]}], "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
           "]"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cosh", "[", "x", "]"}], " ", 
            RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"Cos", "[", "y", "]"}], " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], 
      ")"}]}]}], ")"}], " ", 
  RowBox[{
   SuperscriptBox["Re", "\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Pi]", "2"]}], " ", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "x", " ", "y"}], "+", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{
        "4", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", "x", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "-", 
        RowBox[{"4", " ", "h", " ", "\[Pi]", " ", "y", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "-", 
        RowBox[{"8", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"], " ", 
         RowBox[{"Arg", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sech", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], 
             "2"]}], "+", 
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"x", "+", 
               RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "]"}],
          " ", 
         SuperscriptBox[
          RowBox[{"Cosh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"]}], 
        "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["\[Sigma]", "2"], " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"Cos", "[", "y", "]"}], " ", 
                 RowBox[{"Cosh", "[", "x", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "y"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                   "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                   ")"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cosh", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Pi]", " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cosh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                 RowBox[{"Sin", "[", "y", "]"}], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                 RowBox[{"Sin", "[", "y", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Sinh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                 RowBox[{"Sin", "[", "y", "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}], " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"], 
             "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"Cos", "[", "y", "]"}], " ", 
                 RowBox[{"Cosh", "[", "x", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "x"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                   "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                   ")"}]}], "-", 
                RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cosh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                 RowBox[{"Sin", "[", "y", "]"}], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                 RowBox[{"Sin", "[", "y", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Sinh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                 RowBox[{"Sin", "[", "y", "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cosh", "[", "x", "]"}], " ", 
                   RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                 RowBox[{"Sinh", "[", "x", "]"}], " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"Cos", "[", "y", "]"}], " ", 
                   RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"2", " ", "\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cosh", "[", "x", "]"}], " ", 
                  RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                RowBox[{"Cosh", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"Cos", "[", "y", "]"}], " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}], 
            ")"}]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sinh", "[", 
            RowBox[{"x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Pi]", " ", "x"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "y"}], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "h", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["h", "2"], " ", 
            SuperscriptBox["\[Sigma]", "2"], " ", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], "+", "y"}], 
                    ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "y"}], ")"}], 
                    " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}]}], "+", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                   RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
                   RowBox[{"4", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                   RowBox[{"2", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}], "2"],
                 "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], 
                    "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
                    RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"x", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}],
                     ")"}]}], "-", 
                   RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cosh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
                   RowBox[{"4", " ", "\[Pi]", " ", "y", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sinh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                   RowBox[{"2", " ", "\[Pi]", " ", "x", " ", 
                    RowBox[{"Sin", "[", "y", "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}], " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}],
                ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}], " ", 
                    RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
                   RowBox[{"Cosh", "[", 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"Cos", "[", "y", "]"}], " ", 
                    RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "4"]}],
                ")"}]}], "]"}]}]}], ")"}]}], "-", 
        RowBox[{
        "8", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]", " ", "x", " ", 
         SuperscriptBox["\[Sigma]", "2"], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sinh", "[", 
            RowBox[{"x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}], "+", 
        RowBox[{"8", " ", "h", " ", "\[Pi]", " ", "y", " ", 
         SuperscriptBox["\[Sigma]", "2"], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sinh", "[", 
            RowBox[{"x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]}], 
       ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["\[Sigma]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Cosh", "[", "x", "]"}], " ", 
           RowBox[{"Sin", "[", "y", "]"}]}], "]"}], "+", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Cos", "[", "y", "]"}], " ", 
           RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], ")"}]}],
    "]"}]}]], "Output",
 CellChangeTimes->{3.747346924895262*^9, 3.747347019343655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"I", " ", "\[Pi]"}], "h"], 
            RowBox[{"(", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            FractionBox["\[Pi]", "h"], " ", "I", " ", 
            RowBox[{"\[Psi]", "[", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[Pi]", "2"], 
             SuperscriptBox["h", "2"]], 
            FractionBox[
             SuperscriptBox[
              RowBox[{"\[Psi]", "[", 
               RowBox[{"x", "+", 
                RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"\[Psi]", "'"}], "[", " ", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ")"}], "/.", 
         RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
       RowBox[{"y", "\[Rule]", " ", 
        FractionBox["\[Pi]", "3"]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[Pi]", "2"], 
            SuperscriptBox["h", "2"]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"\[Psi]", "[", 
              RowBox[{"x", "+", 
               RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], "/.", 
         RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
       RowBox[{"y", "\[Rule]", " ", 
        FractionBox["\[Pi]", "3"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747358741143836*^9, 3.747358888068959*^9}, {
  3.7473590076994667`*^9, 3.747359058804503*^9}, {3.7473592432731323`*^9, 
  3.7473592565319653`*^9}, {3.7473599082831697`*^9, 3.747359929943398*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVl3k8lN8XxyUkSyWRUNmTEhXyRY471plQthISkWhBEVlHimTJFkWSsiTJ
VirK8kSRyDaDZN/XGeuMLX7P75/neb1fd+65Z/mcc58Rv+RmepmVhYXFGn/8
/y26QvRu+vUFaH+8iDzGfuhT0zF9/X0VwCpf3p134zayvNfVWRVRDUMlV+y5
LhuhHX0yh6+8rIYAT3Fupd2n0E+NmwFcn6oh3C04v6XOAKkx2MVMBqph19PU
h2EqOkjEReFyj+p38PfOvsqLVFCPcTB9afg7VH08/vAhXQ5zFJZlO6JVA1ms
HOPuD8wxUe9bFs0WNVDMNX7qcqwFRm39muV5rQa2EX/s0U8+i+lFmRC/JNbA
/J+LKz+zLbEDLH6PDKZrYEyR/jL6sw02Mdwg5JBcC2K8325knrmEuRV6yD9d
+Ak5LGkZxt9dMJpGf+tPzjoIxcIFXytcxa7XGvuuitZBqZrwQbekq5hz78Ea
W906MGIICxteu4bZ8fbZSSfWQcbrXoVDnDewMy6Gj4tO/IJ3aYMV3PzumKK4
9Gq9bz1svnLz86alW1hebtzL9Uf1MPKisqVS0gM7rMpioJheD1kZ2azHTntg
sqf/Po7/VQ/CWxa15TI9MLGA2CNWog1gmlXLcDPyxPj+/LMfLWuAQ17PXVH0
bWwupq1206ZG2BVX0Vjd7o19vV4IQ4KNYEV5cTZ4zRt7YBD58cfhRtDwJAYO
it3BRFkIGRGWjUC8vXkmxvkOpuv2jixQ0AhU47tXk+fvYPUyhGePFZogmV4S
4b/kgxU+zm8LUWuCOp+xq4G7fbFE1r07vXWbgMXBI0RaxRez72GGnbduAq7W
mA2HW74YI+Gd174HTZDT9tk4a8QXE2PfY5rd0wSex0KNncr9MHaP0Kik8SY4
FXoisLHdD5vom68NX2iC/wxffe6b8cOKv/6GG1zNsLe6S2ZN3B8jed6XP6bS
DKWT93fsDfLHFAZmnSVRM2gX+3+sT/THdp25mLHLsBk2V7Yck3nnj/UeUhNh
2jdDIrdKVnuHP+Y5SOf8GtUMQbofXdUPB2DnTS7ovHvaDKlDnJ+1tAIwzYo6
cmp6M9Qwk7tnzQKwrc8yGUElzWCSYttk6RuApZpaD+kON0NPSSkbqgrAarEf
FY0aLRB20P5VqW4gllW/NhSl3wK933SyrMwDsZD2Y1yGpi3wzseNI+9SIEaY
TjWvvdICPa4vuNwDA7GvQt7jlXEtIB7EDHcpCsSSJd9tIz9vAY7+AGpueSDm
c2Tw+MnsFqBsfT6WWReIqeicDiwpa4FxoZLs0v5ArMDtAH/RWAtsO0u95s1D
xh75XlB1n2+Bf+H/Wm4KkrEbIfEXjqy3ADVPMFpKjIzJPdt4ncPfCiKnC80/
HCNjnFnKDc77WqFwLZgjTp2MjRZcm5M52ArBYv0XDuqQsYwf7Rrpmq1w96C8
aag5GQtu5r1kT2yFucSAZEMbMmbfpf1gv3krHP0t3NvgQMb2zeU3P3NphUvL
/Z9Yb5GxtbVhxnnPVrBlKK18vEPG/m4RFRUitwJJQSLhAJmMPd0b5vT4cSuc
jH2qBBFkzEu2PML0Bb6uXzM+EkPGLI4vFOzIwe21tFkaJpKxnUS71ciKVggS
X601SSNjM2aJYqfqWiGsf9x/LoOMNdrW626ltsIot8sZ0zdkLNJTNSZkohVe
nb9XfqaQjF0luxZrL7aC4PcR3pkPZIwYntG5iYUC58acRk5/JmOyCZ0bFVwU
cNOZfeX+hYxxpO2QDhSgwP37Wamm5WRsKEePpCFGAf9rHUqMSjJWVezvtiJH
gdTqLZh1FRl7VVn0+LMyBXosB1LvfSdjQb/GSry0KFA6qiXnWkPGbNv29Sqd
osCglHSFyE8ydrLfnG3eggJQ8qkkso6MiU6FHyy0o8CkgZ4X9ouMrTAqjd2u
UeCPHzIprSdjHZuYHvJeFOjiUX/t3UDGPvHIJ00GUaCjc5CyjHPibofyNxEU
mF/fegL9JmOeEkmDVxIpMDWSKGeMs6l8I6fMSwp89IjiEcf5qCr7kaG3FPgk
wqlWiu/foa1u9uojBVb4TuwQxplmdPOOHUaBKnfbKS38/AbL18/31VNA04Vy
SAH3L9eh+1tXGwWSvDYODePxhLvyjyX3UyA9wZzkUEvGXHyIvOenKHAryGLo
zQ8yliPCd8GWQYHuoES3rmoyNlXWkevAQgXpUF5S7zcyJm+XtubMRYXLCx8q
ivD8urI6G7ruosKdHxGi5/D8F2QopHjso0Kh7ePcerw+s3rMyTuyVJA81/qF
vwSPNyI04p4GFdomuMJ2vydjH+WN/4bp4fasebsp+WSM2Shw6NEZKvRGnet3
zCVjvrsy6546UuGKwOcD67h+vny8LpzqSoVrMl83cb7E9WupdDX9DhVCNftL
h1PIGPl51da8SCqIBQqv7H1Mxioh4vz7RCqcFure7RNNxlgHTN98TqPCjbsi
Om/Cydh9mQGDqg9UcLSZYDwMwvOTzxLW0UUFJvUXl8VVMlZvUtvePUKFTb8+
9ts5kjHehegDgzNUeNJ9SlLHlozFqO6vmWZrg65CZf44EzKWgJ3k2CzfBtn+
9zrNVMhYmwP7Wc4TbaCsjKlLKpAxIY6GTF7UBg4qVNv6A2QsmWSjK2TRBpe/
Hdv1ToiMpbX63pcPaIO9M6TzBUuB2NvhT6yWDW3waLtI83phIDb1gGx6ob0N
Dj68MBeZHYgdkdN/dam/DZ775t5YTsXnjWsburHYBlG2IfGuEYHYR+ZCUPDe
dhAyzPdtxucbtvXYRu6NduDQeib6mTsQkzVX/BR+px2Uwt8GWWwEYDGpR9yc
77VDB80yvmkuALM7fqhXMqkdPN9dl7H/E4Ct20hVJFe3g+bG/peLGQGYWoEg
OUykA6oV9gyfUAnAPpxdXXf42QH3xZue3NT2x0RfLn9ElA74sz6QcfW4P3Zv
kum6v7cDsuokuk5J+mOmQQs9nQsd4JWZzVrL6o/NvJkuNxH7A7vnUvPyK/0w
+X+9geD9BxQX/hqRVf2wrPTqdWHpTmgNOTMnIeyLuYeY94NCJxi8lfec4vTF
1K8MVTn+1wnbUkdE3jB9sCY5tod5Rp2gaNBWvEbxwZYLtfkJXp3w/PzU7M5o
H8yw8tsBl5pOIBfwhB/c5IPNd1We+eTyF0jd0usXe7wxLcGyV2Z5XSD0fmSR
/cFtTL6m6/MPuV74uvOOyNUJd4yiZUZ7Q+uDn4IrzW9DnbGVF4PPi+b7gPpM
QVzSyRkT3/Aw+rLUB3Fp67m5us6YaxneF6z9YBX0sJzB5oxtUWu7Shfshz9n
PiY637+CqR0/P6oE/fCDzJveFOqEpUlf7KuI7ofe59k1O5Idsetc11qoigOw
6VaxXuCaHZZVJviRpDIAfrGZLHE9dliv+7ekCvUBOCHNOltWaYeZtu+xf6M3
AItGVcG2IXaYakYt3d9mALJosWXfttthbJoyvFJhAzCxnkA5ZmqLpdzs17/V
OwC8f0dPcXRZYW1SUYdGhwYgRvemmVaWFba9Q3W7zcQAHDEKaM5xt8KCNWPa
dBcHwFuHJMTHYYU5c8PlPdyDEDxRt13i+HlMKTMluFJlEKymCQ+NE89hvzrO
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
uRc3NjbgroQRa9BuG/Q/l4KPmQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
+ynb29ugo3OtP5dmgv4HQ8ew9A==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {-3.3553422892373234`*^7, 2.8631236591516428`*^7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747358728448687*^9, {3.7473587591883993`*^9, 3.7473588889631243`*^9}, {
   3.747359011855208*^9, 3.747359059268351*^9}, {3.7473592517134657`*^9, 
   3.747359257039939*^9}, {3.747359925237034*^9, 3.74735993062013*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox["\[Pi]", "2"], 
        SuperscriptBox[
         RowBox[{"(", "0.001", ")"}], "2"]], 
       FractionBox[
        SuperscriptBox[
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", "0.375"}], ")"}]}]}], "]"}], 
         "2"], 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", "10", ")"}], "2"]}]]}], ",", "x"}], "]"}], " ", 
    "\[Equal]", " ", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747358902480626*^9, 3.747358969263977*^9}}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"77515.69170074954`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.1957963267948966`", " ", "\[ImaginaryI]"}]}], ")"}], 
         "+", "x"}], ")"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"], " ", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}], "-", 
     RowBox[{"49348.022005446786`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.1957963267948966`", " ", "\[ImaginaryI]"}]}], ")"}], "+",
         "x"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Tan", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}]}], 
    "\[Equal]", "0"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{{3.7473589104009438`*^9, 3.747358972533133*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[Pi]", "2"], "-", "0.375"}], ")"}]}]}], "]"}], "//",
        "Expand"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ">", "0"}], "}"}]}]}], "]"}], " ", "\[Equal]", " ", 
    "0"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7473590994586763`*^9, 3.747359174833551*^9}}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.8783524777242533`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
        RowBox[{"1.5707963267948966`", " ", "x"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.1957963267948966`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}]}], 
    "\[Equal]", "0"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{{3.74735911200498*^9, 3.747359175946621*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "3"]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.747359263290111*^9, 3.7473592706932487`*^9}}],

Cell[BoxData[
 RowBox[{"-", "4.902390140274013`"}]], "Output",
 CellChangeTimes->{{3.747359267677799*^9, 3.747359271116555*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["\[Pi]", "2"], "-", "0.375"}], ")"}]}]}], "]"}], "2"], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.25"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7473594067260523`*^9, 3.7473594235531483`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"55.42543497186311`\\\"}], \
\\\"-\\\", RowBox[{\\\"23.206495243834055`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\)\[NoBreak] is not a real number at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.25`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMinimum\\\", ButtonNote -> \
\\\"FindMinimum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7473594239480047`*^9}],

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["\[Pi]", "2"], "-", "0.375`"}], ")"}]}]}], "]"}], "2"], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.25`"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.747359423954577*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Psi]", "[", 
  RowBox[{"0.1", "+", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "[", 
  RowBox[{"0.1", "-", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747359619348291*^9, 3.747359654209341*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.235686980060362`"}], "+", 
  RowBox[{"2.176816319409294`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747359623501904*^9, 3.74735965478627*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.235686980060362`"}], "-", 
  RowBox[{"2.176816319409294`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747359623501904*^9, 3.747359654788908*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", 
        RowBox[{"(", 
         FractionBox["\[Pi]", "3"], ")"}]}]}], "]"}], "]"}], " ", "\[Equal]", 
    " ", "0"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747361585581483*^9, 3.747361629519247*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
NSolve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747361620378611*^9, 3.747361630107973*^9}}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], 
       " ", 
       RowBox[{"Tan", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "\[Equal]", "0"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{{3.747361607014495*^9, 3.747361630109202*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", 
           RowBox[{"(", 
            FractionBox["\[Pi]", "3"], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "-", 
          RowBox[{"I", " ", 
           RowBox[{"(", 
            FractionBox["\[Pi]", "3"], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], " ", 
    "\[Equal]", " ", "0"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747361664802918*^9, 3.74736170989754*^9}, {
  3.747361744741167*^9, 3.7473618041696157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.26281729034313434`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.2628172903431344`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.7473616800285463`*^9, 3.747361710251679*^9}, 
   3.747361757083146*^9, 3.74736180477626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["\[Pi]", "3"], "//", "N"}]], "Input",
 CellChangeTimes->{{3.747361729195952*^9, 3.747361733855254*^9}}],

Cell[BoxData["1.0471975511965976`"], "Output",
 CellChangeTimes->{{3.747361731084992*^9, 3.747361734286911*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"I", " ", "\[Pi]"}], "h"], 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         FractionBox["\[Pi]", "h"], " ", "I", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], 
          SuperscriptBox["h", "2"]], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Psi]", "[", 
            RowBox[{"x", "+", 
             RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", "z", "]"}], "/.", 
          RowBox[{"z", "\[Rule]", " ", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}]}]}], "]"}]}], ")"}], "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
    RowBox[{"y", "\[Rule]", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", " ", "0.2628172903431344`"}]}]], "Input",
 CellChangeTimes->{{3.747361844391266*^9, 3.747361877022546*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.8969256492984086`*^7"}]], "Output",
 CellChangeTimes->{{3.747361842019108*^9, 3.747361877284919*^9}, 
   3.747361908325142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"I", " ", "\[Pi]"}], "h"], 
          RowBox[{"(", "z", ")"}]}], "-", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"\[Psi]", "[", "z", "]"}]}], "+", " ", 
         RowBox[{
          FractionBox[
           SuperscriptBox["\[Pi]", "2"], 
           SuperscriptBox["h", "2"]], 
          FractionBox[
           SuperscriptBox[
            RowBox[{"\[Psi]", "[", "z", "]"}], "2"], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", "z", "]"}], "]"}]}], ")"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
     RowBox[{"z", "\[Rule]", " ", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}]}]}], "/.", 
    RowBox[{"y", "\[Rule]", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747361944243504*^9, 3.747361957499268*^9}, {
   3.747362089641533*^9, 3.747362259884183*^9}, 3.747362313136086*^9}],

Cell[BoxData[
 RowBox[{"ComplexExand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"31415.926535897932`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}]}], 
   "-", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "6"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "+", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}]}], "]"}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"62831.853071795864`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], " ", 
    
    RowBox[{"Tan", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["\[Pi]", "6"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}], "-", 
   RowBox[{"2.46740110027234`*^6", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], 
     "2"], " ", 
    SuperscriptBox[
     RowBox[{"Tan", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Pi]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", 
         RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.7473619578283253`*^9, 3.7473620735034647`*^9, {3.747362117763094*^9, 
   3.747362257293796*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "z_", "]"}], " ", "=", " ", 
   RowBox[{"z", " ", 
    RowBox[{"Tanh", "[", 
     RowBox[{
      FractionBox["\[Pi]", "2"], 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Im", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"I", " ", "\[Pi]"}], "h"], 
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           FractionBox["\[Pi]", "h"], " ", "I", " ", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"x", "+", 
             RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[Pi]", "2"], 
            SuperscriptBox["h", "2"]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"\[Psi]", "[", 
              RowBox[{"x", "+", 
               RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Psi]", "'"}], "[", "z", "]"}], "/.", 
            RowBox[{"z", "\[Rule]", " ", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}]}]}], "]"}]}], ")"}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
      RowBox[{"y", "\[Rule]", " ", 
       FractionBox["\[Pi]", "3"]}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Approx\>\"", ",", " ", "\"\<Exact\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.747362279889207*^9, 3.74736237771275*^9}, {
   3.747363766776956*^9, 3.747363770213767*^9}, {3.747363896134286*^9, 
   3.747364082630328*^9}, {3.7473641717161283`*^9, 3.747364172424498*^9}, 
   3.747364233731462*^9, {3.747364306329803*^9, 3.747364308498239*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-1, 1}, {-5.128149203802977*^7, 5.172553681916492*^7}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Approx\"", "\"Exact\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.747362302545043*^9, 3.747362378202927*^9}, {
   3.7473637427761707`*^9, 3.7473637708366413`*^9}, 3.747363896597365*^9, {
   3.7473639373857327`*^9, 3.747363993201293*^9}, {3.747364040506403*^9, 
   3.74736408303926*^9}, 3.747364173440917*^9, 3.747364236716778*^9, 
   3.747364309159977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"Series", "[", " ", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], 
         SuperscriptBox["h", "2"]], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", 
             FractionBox["\[Pi]", "3"]}]}], "]"}], "2"], 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0.2628172903431344", ",", "2"}], "}"}]}], " ", 
      "]"}]}], "/.", 
    RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
   RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747363781249604*^9, 3.7473637856638947`*^9}, {
  3.747363950930861*^9, 3.7473639790687437`*^9}, {3.7473640486231127`*^9, 
  3.747364078197235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.9174047341339547`*^7"}], "+", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.594474416479003`*^8"}], "+", 
       RowBox[{"2.978068420124497`*^8", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.2628172903431344`"}], "+", "x"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.5881609439864762`*^9", "+", 
       RowBox[{"1.6996584579943112`*^8", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.2628172903431344`"}], "+", "x"}], ")"}], "2"]}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.747363788155257*^9, {3.747363951503286*^9, 3.7473639794282207`*^9}, {
   3.747364049396031*^9, 3.74736407864089*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%5", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747361979398458*^9, 3.7473619887338877`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Out", "::", "intm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Machine-sized integer expected at position \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Out\\\", \\\"[\\\", \\\"5.`\\\", \
\\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/intm\\\", ButtonNote -> \
\\\"Out::intm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.747361989839767*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Out", "::", "intm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Machine-sized integer expected at position \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Out\\\", \\\"[\\\", \\\"5.`\\\", \
\\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/intm\\\", ButtonNote -> \
\\\"Out::intm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7473619898701277`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Out", "::", "intm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Machine-sized integer expected at position \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Out\\\", \\\"[\\\", \\\"5.`\\\", \
\\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/intm\\\", ButtonNote -> \
\\\"Out::intm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.747361989900779*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Out\\\", \\\"::\\\", \\\"intm\\\"}], \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.747361989917863*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.747361989925152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"I", " ", "\[Pi]"}], "h"], 
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        FractionBox["\[Pi]", "h"], " ", "I", " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], 
         SuperscriptBox["h", "2"]], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Psi]", "'"}], "[", "z", "]"}], "/.", 
         RowBox[{"z", "\[Rule]", " ", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}]}]}], "]"}]}], ")"}], "/.", 
     RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
   RowBox[{"y", "\[Rule]", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747362043766521*^9, 3.747362046494269*^9}}],

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"31415.926535897932`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}]}], 
   "-", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "6"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "+", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}]}], "]"}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"62831.853071795864`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], " ", 
    
    RowBox[{"Tan", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["\[Pi]", "6"], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}], "-", 
   RowBox[{"2.46740110027234`*^6", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", "x"}], ")"}], 
     "2"], " ", 
    SuperscriptBox[
     RowBox[{"Tan", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Pi]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", 
         RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.747362047050152*^9, 3.747362066041347*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"I", " ", "\[Pi]"}], "h"], 
            RowBox[{"(", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            FractionBox["\[Pi]", "h"], " ", "I", " ", 
            RowBox[{"\[Psi]", "[", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[Pi]", "2"], 
             SuperscriptBox["h", "2"]], 
            FractionBox[
             SuperscriptBox[
              RowBox[{"\[Psi]", "[", 
               RowBox[{"x", "+", 
                RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"\[Psi]", "'"}], "[", " ", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ")"}], "/.", 
         RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
       RowBox[{"y", "\[Rule]", " ", 
        FractionBox["\[Pi]", "10"]}]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"I", " ", "\[Pi]"}], "h"], 
            RowBox[{"(", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            FractionBox["\[Pi]", "h"], " ", "I", " ", 
            RowBox[{"\[Psi]", "[", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[Pi]", "2"], 
             SuperscriptBox["h", "2"]], 
            FractionBox[
             SuperscriptBox[
              RowBox[{"\[Psi]", "[", 
               RowBox[{"x", "+", 
                RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"\[Psi]", "'"}], "[", " ", 
             RowBox[{"x", "+", 
              RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ")"}], "/.", 
         RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "/.", 
       RowBox[{"y", "\[Rule]", " ", 
        FractionBox["\[Pi]", "10"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Re\>\"", ",", " ", "\"\<Im\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.747433108787466*^9, 3.747433112766217*^9}, {
  3.7474331640363693`*^9, 3.747433198417919*^9}, {3.747433254155902*^9, 
  3.747433270365541*^9}, {3.7474370475935907`*^9, 3.747437233389598*^9}, {
  3.747437284298971*^9, 3.747437285627987*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aT7XSab8DzHkgAI=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fdBCIf4H4n9pmg==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {-246184.54286302088`, 2.0199417836931134`*^6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Re\"", "\"Im\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.747433113841263*^9, 3.7474331510280046`*^9, {3.747433181801804*^9, 
   3.747433190272687*^9}, {3.747433250498341*^9, 3.747433271144772*^9}, {
   3.747437050407721*^9, 3.747437233951906*^9}, 3.747437286155189*^9, 
   3.747437810903956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xval", " ", "=", " ", 
  RowBox[{
   RowBox[{"Re", "[", 
    SuperscriptBox[
     RowBox[{"\[Psi]", "[", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", 
        FractionBox["\[Pi]", "20"]}]}], "]"}], "2"], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", " ", "0.2628172903431344`"}]}]}]], "Input",
 CellChangeTimes->{{3.74743333807898*^9, 3.7474333691534567`*^9}, {
  3.747434185361001*^9, 3.747434212672235*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.009404612003079117`"}]], "Output",
 CellChangeTimes->{
  3.747433369953175*^9, {3.747434186991496*^9, 3.7474342131223392`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"Re", "[", 
    RowBox[{"Normal", "@", 
     RowBox[{"Series", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "20"]}]}], "]"}], "2"], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xval", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.74743379382666*^9, 3.747433854828301*^9}, {
  3.747433890425795*^9, 3.7474339400223637`*^9}, {3.747433970912774*^9, 
  3.747434024719343*^9}, {3.747434114549066*^9, 3.747434149727029*^9}, {
  3.74743420181558*^9, 3.747434223976802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox[
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "20"]}]}], "]"}], "2"], "]"}], ",", " ", 
     RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747433396201674*^9, 3.7474334169167833`*^9}, {
  3.747433510417927*^9, 3.747433540259212*^9}, {3.7474335749829063`*^9, 
  3.747433575147743*^9}, {3.747433869185338*^9, 3.747433875955814*^9}, {
  3.7474339064099503`*^9, 3.74743391153181*^9}, {3.747433961389217*^9, 
  3.747433977789254*^9}, {3.74743401466094*^9, 3.747434019062455*^9}, {
  3.7474341209199953`*^9, 3.747434152551125*^9}, {3.747434217858354*^9, 
  3.7474342181698313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
l312lfjGCfwPGDepzw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
3XGO/hHfMheuGuwN3GpRyamn0iE5C0OhGvwbbL9L59TfTfsbO7U21mBfQXLl
hyFOPw92/VaVrkGH08/4bk69NvRHRorur4F9a2b+MKe+462GzJZr1cCxvmmI
1cPR16ux/d/JGizYMnouidMPfV0/inqtalDosaZjrpUiP1oNJ1NDOXGhnPIM
Fidf2mvy4E4NdrjzL/7C5OTbwnM77FENwqsHvy6qpsiCphxJ17c1sHK+euxf
Cad/2SLGe9pqYJJjv6U/l5PPSVeJHQM1CLaJVrPOpsjdmspR0bEaPKaL6zIz
KLKR4XXjH3ct/KmWNadTKSJb3p5XtqMW7xoPNp25x+mnUcfvkSq1UBSttC2J
pQjXmtnNZw7W4kee85pVkZz9z68LHTOqhXvPbwvjYIr4zBudFaFqIea+MC2M
M99stw5E9YbWYu1ClrzQRYqc0nErS4urxZmsoClfW4pI3o+W10irhXiDeefM
aYowVGoXODTXgj4Xv+ruIY5+M/Pdyr21uOBYlKK8nzP/Ar47zI/UYmHOocfZ
KhT58JXH4fgCFljvGozPSHPmyW7J+g5hFpSvV7w7yE8RlbpzyYsPseCmdCdD
v8afvLR5QRyPsjC177QHX5k/2Tg99pmlw4KEnVZPUr4/4RWnCzwwYcHsW76M
a5o/ab+U6CF/iQVbmnpA7E1/EsjXetw0noWNRhBhqvmT6YTN1vmJLBgHfE7x
V/AnTgoX/CSespDR9pd/tZQ/MTX5kzXymoVjha+H61f6E5lkYTGqmAV5jUfB
QZV00nDQYDR1lAXnxNLr7vx0MvOoLzFrkoXJjBze47/8yOZ/V058/MNCzBu3
Z50dfsQpPzaNwc3GzjNFZvrpfmSJWpPDmDAbVl/Phxjr+BE1JdqgMtgIHRN0
eO7jS85FD8UdOMKG99bUxFhLX3JjwlNL6zgbD9rUOjW0fEnDm/vJJgZsRDhL
f2oT8CWXZNqtvOzYOFM9kb0kkfM+2GrRTSI4vO3WmjWvvUlZ4FhERSwbJsm3
5ofDvMn3PjrY99ggmy920J28idqTpIe9T9lQ9Vj7rkPOm9Rv7DXjyWNjxaFG
/YtpXmSxiM1n7W42+kbUTqbe9yQXlzrWNSrUoXztxngc8iAp+cI52rvrsPq+
2MwvYQ/S5fLpHtlXB4sBDzHjYXei37zOMlWrDlaB5L5gjDvZ86xizMesDt4K
iUeudl4li9SllkverMPhOVnN59ZuJMG15+jlrjrk9om8GpJxJU2SYTsH++uw
5EfoP+MpF7KiZc8Ks291MCiNz7IhLuS6emST5q869E1t2GJ7yoXYL+M8rZbV
I9jtrUVzmxNRTk64Xri7Hk6+k+H3ZR1JdYtJvkB4PRZfFizg229FrrcOrnGI
qUeTgfDHZ3nnyZ52D6fS+HpI8bvHXFM+T5513d3k87QewkcMCyq2WxKfL83U
UF49Xs++vvdnjTmR/WmiVdJXD+Yi+XQ3XSMSscK01nNvA+zp5T3pKpJEa9XX
bY3qDWA5vJk/VyRE/gpe81c40gCu+7fedYbWFtgLx+8a1G1AvFe5iK/zFhzc
0BJjaN0AneCc7L2/D2Bih6mpfEQDDLZ5B+mO68FAy7Snv78BXjPBzxYKWePD
6l21fUMNWCpgvK+30BoSPXz5vaMN0D62aP1tJxv88P4Y3/2nAVVj1vTDDFtE
Zm481c7fCAcz4acnoi6AITZQUK/ciB2Ht7qoHHLGkUnXhE+BjThrkTF25PFV
pBVq3yoKaYTmZLZq6yJ3rA7fcq0wvBHLM9Pp7fbu6JVuNCiIb0Rj45N5aUUP
+JvvWfYhrRHMWV/Nr5XXkF8575nZ0Ij8+elQZQEf7E4KNUmSbEJwbmZ+41UK
GUV0z2U7mmDu22Dj85bCzr4rD9zlmyB1x/mJ3QQFcSmzLh21Jji18bvzO13H
sjQZu+mTTZB4NFYf4xCA7lymu753E6IVd/746BKE0NoVcYvqmiC3NmT0RlYI
uudjGuzpzaCH1y12uRUF/hFWqEdgMyi94PLyN1HY83n54eCQZiRP6DM1GqMQ
+fZG5tOYZtBUx4YTxKNx0N47vPN5Mw4/WnpqIi8aj9nnjxmyOOvvXonbPB6D
8892/Q+bW7C967/xtZ5xGDhe+1S4uAUhtwMcpKYfQDJ0W0RURQvszBUsvHYm
wJpB9+KvaUHxrl+vZs8moFdXQY/7cwsGBGNeBBcnoNMgav77aAvebal5WRiZ
iJazBrTS9Z9RqbWjskXpEapcmwXcLn/GfNBywUTdx8i41+XJ3tyKaNnigmGu
ZFzcLtaquK0VB/0kRG5tSob0e1O1WJlWiEVPr9dQT8ajFvaMsWorMjbZaE97
JyN8bYl3u04rUtavCI/5k4xLd174Dnq04rKh+iPPqRTsiHKl5pitKKF1rzXj
SUXyzYUh273acN3yot/Cy68h2H/TT47ehnMb1Le9iH0Nfwi4KQW2QXCRAtM6
9zVOT4lYHAhvg9m0lKrU3GussJZT0XvShoqJlOiqkHR4gtZzraoN/fsGBh8/
f4MTU+l7K9a3w7Wo7e3gTAZ+WZ3+ZvuxHb10SZVtzm+x7EiwfubaTkzwPUl1
9HoPn5UD/D1mXbCKn1IxXVYI/oKdXM0nusF4kKA+X16MA+4n54pnurHRjHaX
17UCCc9uP92S0IMfHXNXHtkzYW6kzOT7rxcx2ruYs5/YnP+oTUzBVC/+LjE4
Xri9EXsZGdxf4vpwQqTM6WpeC8Q1bX/FHOnHhdlVHbeXdEBFWSUq+0s/jA4H
tT4v7EbXj7DKp0EDWK1V56cr04cRJb2gdYpfYL5gY+zEqi+QGpb9tqD+C4qX
ZPP8XTqEEsmrdS7UIM7F68UKxI4goqHRSl/yK9adGf/oLDKOMYPCKO6Sr/hT
fbHlOM8PZBmtObzXdQjuB9ZW3dH+iafMgMRewW9Y6WLwwujuFH6Xm3kLfvqG
gmq72x7a0+iOIr9WOg0j1alE+972v7i3J41HwXkYTfdqDIvl/uL/AFQ4LVc=

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.00967726505769037, 1.7614167511725234`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747433410176547*^9, 3.7474334176016893`*^9}, {
   3.7474335130235043`*^9, 3.7474335409506083`*^9}, 3.747433575675095*^9, {
   3.7474338710580597`*^9, 3.747433876438377*^9}, {3.747433913151038*^9, 
   3.747434027566544*^9}, {3.747434117963851*^9, 3.7474341531656103`*^9}, {
   3.747434205360319*^9, 3.7474342268585253`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.001", ",", "200000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747434041631022*^9, 3.747434094251958*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
YBQDl/cWzqqcmwNb+8OrvrUtw/8AdiShYQ==
      "]], LineBox[CompressedData["
1:eJwVzWk81HkcwHFrGGc51yDGuGb+I4nkiPT/5iiiwSBHGGY0kiNbqi0dwrYN
SevoVZIztS1irBDVb2SaHKtydSohrUZJrqSGbR98Xu+HH0P2XuYuaSkpKf8f
/e8zn+rC0aYuRL7pSHfQogiylZZXw7outCIsh6CvqCb4s35zoD6nE4UzXFiD
fykKWsPSUxdzO5C+YY++Sz9R8IL4oPqpsB15ERJyidYygpkahef1cw/Qfrq/
It9CWqAc7CWTQ32AhtRMFAg8KYGpdPbavYEiVFanGFPuuoQ2VfaEeJ2+j1qu
qGcdefwNBfprnqLfEqKWF0EaG4u+okTJDj5R3IYKnM5sNSj6gsq8B+VaPe+h
O7ukqY6Ks6hlgWxddLQVHfGz4TZFT6P+0sjw5GoBentgxQXmsymkPN4dE0u+
i8YCzrhkiiZQv+Vom39FIyp+FEj2rXiDiGm7dVXkGpDDDNfTfuAlsh/4mNix
ux5xUwZ+ywx/ggoPL+hvMucje5K417VBhNrTV00xuBWoO+ix3dJ9ER4V4VRk
sXASP0Dpqm/JncQHHqqLd4rP4lVVx6+0Tk/h5eTZAtfJfPx2YmbI95JpPEMU
NWOfWIpHnhz+2Vl5Hl9c74Bz2TdwCr8hXqgpwT+e3hcbYXwbL99uGq3WKwsU
xGIqX72D/xI46hFzgwj+c14bmjCEUzdNvidmysHr2lyCPKkVL3oV6SlyVQA3
/YQelp4Q725Xnc5oUgbNeaN4FVonPry/QDWmSw2e+21h2pH78OaeoZb2VG04
JFvLO289hBfPZZHOXTaC8oM+rFr+B/xYtK3SPeO10LDjAnGraBafONT0aZeV
DdTlMvsY9xfxiZ4r1GgzB3iv3dn+T5kUmPNkzqyJwEG48KjsbiUBtIMP202q
OkNQR01pQgURkublzPaFucLxbX46giEFMMPaVt8a2AKJgy+VXo8oQyFHp/ud
gQckq+S1MDRUIVviKBd3wRN06dfSsqrVwMyIHJdGYIBBlzlvnbkGrNGuthQb
+kC8m6Yn1qUJ1yh8++VgXzB0T9iWztCCw8YVdJVjTLBysQnFO0kQ8jlGZkOB
H2RohZt5cnVA+oT6q1OP/MFj31ebO+90wS6pcUFuKgB8r85LTvyuBxu+OhGb
sUBAbC7hujIZhkujxqu8goBHcllllWEAbzv4qW/2BAOjV/BFJo8Cx2WqtbeX
hoBi2MUUkwBDOO9uWyPdthMm+sqi46hGYOlMM5n5HgqLopGnozNGEBj1wZtu
FQ4bl15yz/5tDMszNisrfVhQbkj0j0wzAXqnddx61whw4r1nRbuZQmKDHPfW
QATIxhPmCglU6H41NhwZFQmfNzLGF3uo0Ky/9xy2HAmqvszFzBwaqCiFnMzP
ZoP8fFHfv/k0qGMOROnmsEHq0kSVy0UaqLd6uxfnseHz23TWt2Ia8EnOKtcv
sqH310bhnmoaFPXpXb5dzoa8Er1sj3YaWDdVNo02soE09c5YbokGid72n6ze
sEE131rC/gkDW8Kl3oaRHz+HlCd3ZTAYJEpuOo6xYSFNh3dQCQOWNDrqJmbD
M5LX5Jg2BivFDorBs2wowPlNQmsMtJM0TFPkOZDzVvIHxQ6DicpYeVklDmTw
tsUedcCA7tY2wVvBgeS+Uf31mzFQK0msy1XnQGi0Vlo5AwOKphC/pscBf2VO
6LIvBpL9JGNzAw548WtsdgZgwHHaQ+QbcsDpm/u4eigG9aoru5upHLAtyW9N
YGGQq8eqxekcsHAbKehkYzCUX5MrXM0BqtgiicrFIOvY8kEPCw6Qs5O3p8Zg
kNPPCHloyYH/APflXKM=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.86344663619994, -16.527064084386026`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-7.86344663619994, 13.161764002747978`}, {-16.527064084386026`,
    161.6229159099302}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.508657738524219`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.914122846632385`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.201804919084164`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.424948470398375`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.60727002719233, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.761420707019587`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {15.89495209964411, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.012735135300492`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {69.07755278982137, 
       FormBox[
        TemplateBox[{"10", "30"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {115.12925464970229`, 
       FormBox[
        TemplateBox[{"10", "50"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {161.1809565095832, 
       FormBox[
        TemplateBox[{"10", "70"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {92.10340371976183, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {138.15510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.747434047131455*^9, 3.747434094854651*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "5"]}]}], "]"}], "2"], "]"}], ",", " ", "x"}],
      "]"}], " ", "\[Equal]", " ", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747433601430296*^9, 3.7474336505872803`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
NSolve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747433648110289*^9, 3.747433651255795*^9}}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "5"], "+", "x"}], ")"}],
           "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "5"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sec", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "5"], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"], 
         " ", 
         RowBox[{"Tan", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["\[Pi]", "5"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "5"], "+", "x"}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"Tan", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "5"], "-", 
              RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}]}],
        ")"}]}], " ", 
     RowBox[{
      SuperscriptBox["Re", "\[Prime]",
       MultilineFunction->None], "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "5"], "+", "x"}], ")"}], 
        "2"], " ", 
       SuperscriptBox[
        RowBox[{"Tan", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "5"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}], 
      "]"}]}], "\[Equal]", "0"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{{3.7474336358484983`*^9, 3.747433651257103*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    SuperscriptBox[
     RowBox[{"\[Psi]", "[", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", 
        FractionBox["\[Pi]", "5"]}]}], "]"}], "2"], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ","}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474334378329973`*^9, 3.747433472985508*^9}, {
  3.747433591598917*^9, 3.747433596360601*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
7ccGkUrF1clsXIoJPu+xph/STe06nFQ2+H8l3bRBP7zLBbc43WUjbOOT18bW
/bgh5+xjn8mG2D+UFt2z/dgRHqBDz2bjZt1Xtmp4P1Lu7Xmv8IgNBcVB+aX3
+9FqvfNQbw4bmaentwsV9yO7I07c6Akb6u8kjpNf+7E3WUXjQC4bz0XWBPXS
uPM9sj6NcmNdW730JqEBxI3ns7bmsVH6+E9KmRI3Fu+pW82NDTmOXc90ByAY
MXr4LXd8jYnfvLvmA1j26k3YJDf/4eSIVTHuA5jc4XmS+piNtsH0vf8ED2CT
QOzPv7nrObHtpcuZlAH0z6xt//iQjYGwTyHHXw1ARa18Vym3Hq+WjgemdQPo
OHu714NbL0N1/NP2/gEEZqdl1HL78bff/CE1vkEYn8pAXxobgpVyi+TlBqEn
ZRP6+g4bEUs01i/QGsSuuKgtBrfYkDy55yDLZBAd25bNj0hg4/YryzP9Ttzx
1+QyY2LYUJ7vEd0cOAiZ98Pv/opkQyMz/svLvEHcnFcwpBLMhvStTUxK1SB8
UhVXlf/NBieidnlt7yAkE+6sULrIxiffP9yo8kNwq/PZLe7JhqNBwIxM6BCm
zLuGpczZMNoqq7Ly3hDWRPzrW2HMxkb1V8Ya74Zg4b060mAPG1OSowmGE0O4
v0p2b6YWG4ndjup+9r8RTaoPbZBgI7B51iz40m/4aA+aOwlz81enXIhO/A1B
v2gt71kWNJ43v3/w+TcWNzAOLaGx8OmKiXXL1mG0OS3RLK7g/l/KWv9uE6dh
57bq+JRzLHRL1+fsU6dhZm3qztFTLFQJezaYG9JgF+h5QcOehZtjWcvcA2k4
IaGs5GfMwiaK3PPkARpUR04tNlNgwcmev5NDGUH+wQpZ4Q9MUP90W96pO4ZN
eytLBUWZkK7wVAnaN4ZmY6PBqHlM7Nl5dr2CxRieMtSMlFgMZKhf2nHMYwxy
W0THbHsYsBWOtP2eOgZ2U07U4SIGGt8/TamfN45mi4GRLHcG+Le9zDwjNo6j
7m5vJxwY2JRf+ER0+ThEvvyjYWHFQFTa++IDOuM4+MiJ2LOXAaOApo5K13GY
tb7T5FdioESbuZxSM46FIp+uW7aQoD3mqNi3jsPunvjqvnoSy1fxbZihjmPH
soaUqEoS/hILdu7g3iNm9lvrV78moT0if7xQk45rtfVNIUkknFyUXKx20ZHm
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
zfAsmVjDnp3l+T9kN9G6
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
y38unJCZW1n5z/8H6hDz0A==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {-4.902390140271065, 9.999999795918367}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Re\"", "\"Im\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.747433441249407*^9, 3.747433473728321*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", 
           RowBox[{"(", 
            FractionBox["\[Pi]", "5"], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "-", 
          RowBox[{"I", " ", 
           RowBox[{"(", 
            FractionBox["\[Pi]", "5"], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], " ", 
    "\[Equal]", " ", "0"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747433767379587*^9, 3.7474337701454372`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.3607763850884711`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3607763850884711`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.747433761205412*^9, 3.747433770565731*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"I", " ", "\[Pi]"}], "h"], 
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     FractionBox["\[Pi]", "h"], " ", "I", " ", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], 
      SuperscriptBox["h", "2"]], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"\[Psi]", "'"}], "[", " ", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ","}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747437332450042*^9, 3.747437340342917*^9}, {
  3.747437387204685*^9, 3.747437409913823*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "3"]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "+", 
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "-", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "3"]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], " ", 
    "\[Equal]", " ", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747437681014501*^9, 3.747437703262212*^9}, {
  3.7474377555931873`*^9, 3.747437797407463*^9}, {3.747437977475359*^9, 
  3.747437980439742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.26281729034313434`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.2628172903431344`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.747437752588438*^9, 3.74743779773311*^9}, 
   3.7474379807222443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            RowBox[{"(", 
             FractionBox["\[Pi]", "3"], ")"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "+", 
      RowBox[{"Normal", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "-", 
           RowBox[{"I", " ", 
            RowBox[{"(", 
             FractionBox["\[Pi]", "3"], ")"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], " ", 
     "\[Equal]", " ", "0"}], ",", " ", "x"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7474378602486362`*^9, {3.747437955766807*^9, 3.747437959041073*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.362242211223068`"}], "-", 
      RowBox[{"0.15105241115472198`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.362242211223068`"}], "+", 
      RowBox[{"0.15105241115472198`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.3425917112924361`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.2563899591237776`"}], "-", 
      RowBox[{"0.3484928073360655`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.2563899591237776`"}], "+", 
      RowBox[{"0.3484928073360655`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.25638995912377754`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.3484928073360655`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.25638995912377754`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.3484928073360655`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3425917112924361`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.36224221122306793`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.15105241115472198`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.36224221122306793`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.15105241115472198`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.747437862737462*^9, 3.747437960009816*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox[
       RowBox[{"\[Psi]", "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "50"]}]}], "]"}], "2"], "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exact\>\"", ",", " ", "\"\<Approx\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7474379003613033`*^9, 3.747437946769458*^9}, {
  3.7474379840179453`*^9, 3.747437999404064*^9}, {3.7474381769710827`*^9, 
  3.7474381772422523`*^9}, {3.74743851403415*^9, 3.747438524283558*^9}, {
  3.747438567157298*^9, 3.7474385897898397`*^9}, {3.7474402370913067`*^9, 
  3.747440273169218*^9}, {3.747440346368381*^9, 3.747440398448007*^9}, {
  3.747440429501154*^9, 3.74744050814373*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
S6s/eYlYkTVzdPq/flP0zwkLvMT/ABQDS5A=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 2}, {-0.00029555170318229843`, 31.42306756196927}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact\"", "\"Approx\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.747437894436326*^9, 3.747437947203702*^9}, {
   3.747437984723525*^9, 3.747437999971204*^9}, 3.74743817765063*^9, {
   3.74743851547744*^9, 3.7474385249777403`*^9}, {3.747438591535241*^9, 
   3.7474386191799173`*^9}, {3.747440237925049*^9, 3.7474402736523523`*^9}, {
   3.747440331313182*^9, 3.7474405085576353`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{"Normal", "@", 
      RowBox[{"Series", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            FractionBox["\[Pi]", "50"]}]}], "]"}], "2"], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0.1", ",", "12"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7474385330070753`*^9, 3.7474385640917253`*^9}, {
  3.747438599290493*^9, 3.747438616435916*^9}, {3.747440267237463*^9, 
  3.74744030750378*^9}, {3.7474403869324017`*^9, 3.747440405108548*^9}, {
  3.747440459557972*^9, 3.747440471120492*^9}, {3.7474405023930073`*^9, 
  3.747440502512039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"f", "[", "x", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747440198954617*^9, 3.747440227027433*^9}, {
  3.747440317200198*^9, 3.747440318661263*^9}, {3.7474404174463882`*^9, 
  3.7474404200905933`*^9}}],

Cell[BoxData["0.8330377620918321`"], "Output",
 CellChangeTimes->{{3.74744021758593*^9, 3.7474402275216913`*^9}, 
   3.747440319074368*^9, {3.7474404121732397`*^9, 3.747440420572151*^9}, 
   3.7474404801504183`*^9, 3.747440518430729*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"I", " ", "\[Pi]"}], "h"], 
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{"I", " ", "y"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               FractionBox["\[Pi]", "h"], " ", "I", " ", 
               RowBox[{"\[Psi]", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
              RowBox[{
               FractionBox[
                SuperscriptBox["\[Pi]", "2"], 
                SuperscriptBox["h", "2"]], 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"\[Psi]", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{
                FractionBox["\[Pi]", "h"], 
                RowBox[{
                 RowBox[{"\[Psi]", "'"}], "[", " ", 
                 RowBox[{"x", "+", 
                  RowBox[{"I", " ", "y"}]}], "]"}]}], "]"}]}], ")"}], "/.", 
            RowBox[{"y", "\[Rule]", " ", 
             FractionBox["\[Pi]", "50"]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0.1", ",", "12"}], "}"}]}], "]"}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.001"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747440688086135*^9, 3.747440810043249*^9}, 
   3.747441406941669*^9, {3.747441438347672*^9, 3.7474414426533318`*^9}}],

Cell[BoxData["5.06112951692186577364313159258719465214`15.954589770191005*^\
346"], "Output",
 CellChangeTimes->{{3.747440719476129*^9, 3.747440810803329*^9}, {
  3.7474414159115353`*^9, 3.747441443208672*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"I", " ", "\[Pi]"}], "h"]}], 
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{"I", " ", "y"}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               FractionBox["\[Pi]", "h"], " ", "I", " ", 
               RowBox[{"\[Psi]", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"I", " ", "y"}]}], "]"}]}], "+", " ", 
              RowBox[{
               FractionBox[
                SuperscriptBox["\[Pi]", "2"], 
                SuperscriptBox["h", "2"]], 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"\[Psi]", "[", 
                  RowBox[{"x", "+", 
                   RowBox[{"I", " ", "y"}]}], "]"}], "2"], 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{
                FractionBox["\[Pi]", "h"], 
                RowBox[{
                 RowBox[{"\[Psi]", "'"}], "[", " ", 
                 RowBox[{"x", "+", 
                  RowBox[{"I", " ", "y"}]}], "]"}]}], "]"}]}], ")"}], "/.", 
            RowBox[{"y", "\[Rule]", " ", 
             RowBox[{"-", 
              FractionBox["\[Pi]", "50"]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0.1", ",", "12"}], "}"}]}], "]"}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.001"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7474409755037603`*^9, {3.747441069021212*^9, 3.747441078960204*^9}, 
   3.74744141143521*^9, {3.74744144928689*^9, 3.747441452955924*^9}}],

Cell[BoxData["5.06112951692186577364313159258719465214`15.954589770191005*^\
346"], "Output",
 CellChangeTimes->{
  3.7474409761381693`*^9, {3.747441070756317*^9, 3.747441079583444*^9}, 
   3.747441412391107*^9, 3.747441453361402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}], "2"], "/.", 
       RowBox[{"y", "\[Rule]", " ", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "50"]}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}], "2"], "/.", 
       RowBox[{"y", "\[Rule]", " ", 
        FractionBox["\[Pi]", "50"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747441010064104*^9, 3.747441059119499*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13k0Vd/7B3DuvVKGksxkLjLfe5Ck+5iSocwypAylhKIyRIiQRMYoEb6S
SghluJNNmTInSUifZEplSCSS3/n9ddZr7bX22evs53nvfWQ8/W29CGxsbDbs
bGz//yycoQV2xZOpM339fVRjElzfxV9dJcAHxfbblffi5tcLeZgiIA3yJ49o
SuP28PKab5ZUhHKepNk/RiRwan2yM1JAAya8+5ybcLONSBtli2rCyl2F4Ku4
H83f8X4hqQMRrbeNlHFbcmxL7pHTg0jFXS9bDUmwxvPKOUhAH+L/TCzY47a8
E/mdIGwI6dGTfX0GJCiU0b2aKmoMvNt1vAxwLz9d2i4pYQIf2WcfF+iTwFy7
suippCk41+7MmwcS5DX47d0nYw5H8kaNybh/miu2t8gdhjUV8/ueVBJ0Pev5
HSBgDf1maSfv6OHzBao21graQNvikzf39pNAWjfx5j8hW1gPn1pI1iVBYJPJ
ziRRe6B1epiZ6eDzJxRN9ok5QPbqt6hte0nQZkmoEJU4CsEDWr4tWiSQ+MAy
fCTpBPXdNKdNGAlM8sR5ZqWcgTfPxjWFTIKAk6HvNGVcQDb61I4tGiRo+qHp
/VLOFfZbd+V2q5BAm32g5byAO1g1fpAt3EWCji+xyvyZ7kDK9WmrkCOBewuW
Wi3oAV1iVnIVMiS4mZjm/FfIE3o2dq1G7STBqOCR7wmip+CtPUHTV4AEl1bW
rFXvnYLrayJJG9tJsHm4pLpXzAsMyaM5sdtIQCnYfFVY4jR8v9D2xZ2LBHFK
TdsfSnqDwPlhSc8NIojxXgo2zfcG/wvC1PC/RCifkxn+JnUWJg99Eo7/Q4TB
F1eLKDI+YPvy0d/zi0RQgf17G+T84PPBB1nxk0SY2eNcfk4gAN4sq/qPvCbC
svdWT0WXANChVbeVNxOB8PiV4Jf8ANjjxaHj30gE0d1qEU7KF6Ay7rELvY4I
prLEw0aGF+F0o9Wr0GIiFIuVfRUJCISMuG/N9yOJUOXsef9tdSB4E2bf2IQS
of6usE3yWiBMjZRvLF4iwjuha3XE+CC4WNvxinCWCKQdjvGz94Ph0MCzTea2
RPDkZt/V1HEZMkLNDaNkiHDevGYwcnsojFeZvBMSJ0JYgm/SPsdQ8ChvvZsj
QIQ0zoHF8rFQaJn1rfbnJEID8enL7D9hkCF+xtPwOwEk/9q7+ytEQPGnsoj0
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
3wb+DzAd8jc=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13k0Vd/7B3DuvVKGksxkLjLfe5Ck+5iSocwypAylhKIyRIiQRMYoEb6S
SghluJNNmTInSUifZEplSCSS3/n9ddZr7bX22evs53nvfWQ8/W29CGxsbDbs
bGz//yycoQV2xZOpM339fVRjElzfxV9dJcAHxfbblffi5tcLeZgiIA3yJ49o
SuP28PKab5ZUhHKepNk/RiRwan2yM1JAAya8+5ybcLONSBtli2rCyl2F4Ku4
H83f8X4hqQMRrbeNlHFbcmxL7pHTg0jFXS9bDUmwxvPKOUhAH+L/TCzY47a8
E/mdIGwI6dGTfX0GJCiU0b2aKmoMvNt1vAxwLz9d2i4pYQIf2WcfF+iTwFy7
suippCk41+7MmwcS5DX47d0nYw5H8kaNybh/miu2t8gdhjUV8/ueVBJ0Pev5
HSBgDf1maSfv6OHzBao21graQNvikzf39pNAWjfx5j8hW1gPn1pI1iVBYJPJ
ziRRe6B1epiZ6eDzJxRN9ok5QPbqt6hte0nQZkmoEJU4CsEDWr4tWiSQ+MAy
fCTpBPXdNKdNGAlM8sR5ZqWcgTfPxjWFTIKAk6HvNGVcQDb61I4tGiRo+qHp
/VLOFfZbd+V2q5BAm32g5byAO1g1fpAt3EWCji+xyvyZ7kDK9WmrkCOBewuW
Wi3oAV1iVnIVMiS4mZjm/FfIE3o2dq1G7STBqOCR7wmip+CtPUHTV4AEl1bW
rFXvnYLrayJJG9tJsHm4pLpXzAsMyaM5sdtIQCnYfFVY4jR8v9D2xZ2LBHFK
TdsfSnqDwPlhSc8NIojxXgo2zfcG/wvC1PC/RCifkxn+JnUWJg99Eo7/Q4TB
F1eLKDI+YPvy0d/zi0RQgf17G+T84PPBB1nxk0SY2eNcfk4gAN4sq/qPvCbC
svdWT0WXANChVbeVNxOB8PiV4Jf8ANjjxaHj30gE0d1qEU7KF6Ay7rELvY4I
prLEw0aGF+F0o9Wr0GIiFIuVfRUJCISMuG/N9yOJUOXsef9tdSB4E2bf2IQS
of6usE3yWiBMjZRvLF4iwjuha3XE+CC4WNvxinCWCKQdjvGz94Ph0MCzTea2
RPDkZt/V1HEZMkLNDaNkiHDevGYwcnsojFeZvBMSJ0JYgm/SPsdQ8ChvvZsj
QIQ0zoHF8rFQaJn1rfbnJEID8enL7D9hkCF+xtPwOwEk/9q7+ytEQPGnsoj0
KgKcC+4/cqsxCiaV4PMEmQBt7lPq4mNRoMyT+PD9HgLIW6xuf0KIhuLOp0S6
DAFGpKQHmoyiYX/x5zTr7QQ4/Nr3xN/maIi52C3YPMcOShJEf9/2a7BFQKWh
8wk7TDaSU83exkJR/DbMjZ8dDEuNL75fjIVbG/YxpzezQ16Wo72XQByM7lPP
PPGPDRx8I0SiHeLg3KoiUWaGDZoEXhfUvY8DMysX9bkGNig8416pMHIdDi7/
2VzlywZuvCl9HBM3wMKGdbrOd4NKlXHUnSclQN8dn+RA+w2qpJZU4ZB8AnSp
ajfvOLBBHXV9duHZqQSQFMz0W+PdoJ4o7eFzHk8AbS7TVf/yf9QTFnxWpV9u
ghVV5uP813Wqa0Jah+1YEswkunz3tvhLLSOYj/X4p8K1vrzQlboV6taouKNS
0anApTiS+O/OCvX8ekP7+fRUoAvl5H0JXqGqrex9zludCoyOa0PmmivUih+7
Yi1WU6Gp8hwkl/2mVg2y726NTYOb7qq+P7KXqTXltLP12ekQKND7FnP5RW1w
2bNQ+uo2tI+BqOWvWWrietST/re3YavJPb2KR7PUowWDHn+/3IbeWsvAYZdZ
6o+J+D4LUiZYX06xuNXwgyp2YfL5jHEmSOo3trglfKcGxj8IVmzJBLHpc0Gv
+Waoii92/n3QlgW3/+1MXV8ep6by8nPmdN0Fa5evqhMm/dSg3PcUUbX7kLxN
VdtO8L/6OdX/cQmwCuC3q0Ce9IPlesL+Yxty9YVwJv1JmHE/AUnXEDeuzBSB
QXFxbtxjbpQ7qnFtZKEY/jaPRb3V5UfH8ivcOeYeQ5wz/4jCKyEk3y1pHiz8
FJIjLvGrfhJHFiXba+fEyoD9oYD3qoc0ivj1U63S7Bn4mGXq7ueXQ6G+O6J3
1lZAwuez5oY1u5Dnc//SyZpKEO/jioqQV0TWFKOPdp1VsLZn06HwF0roB+cH
q4M9z6GS/CHEb10FpQhMtg5NvQARRmQil6U6sjuXe85+rRo6z6qe436mgfis
db2cNqphpeL0npIqDdRNGXR1JdbA3P5bIodqNJD5yo7Dp7hrQJPmdPMKSwMZ
xiQqBYrXgFvAcFZ3hwbSyA6bythfA1XNPkoS0xqIp9nJ4+2VGqjJVZmykCKj
FglBB9u/NbBN+L/jVfFk5D7SNlLKVgsfRT4WCiWS0WpO+ClOjlr4GWV56nIy
GamJj19i8taCr26ig2YmGWWKPk/fLVULEq+NG24VktEpIZveVYNa8POIVWlm
khGB75bFg/hakPkis7Fvjoxye/Tfrifi8wfHnDH/SUbaKb9cnFJrQTfy2Q6n
JTLy2erqw5tdC2obBzR818joDY9yQkgJ/n6uTaYBnBRUsOV1i0VXLdA7Btx+
SVIQlchh+Iu/Dtitu269t6AgSicaIgnXwTtLHy43SwpSyAy7JCheB5Oedj+/
WFMQn8J8kbZcHWSxhP9NOFDQF/NhzlCsDqRv1g+3u1HQjfTKrnW7OohbCvIQ
ukRBfTInnDkz6yAq6pZYyR0KapkR+SmcXQcNCybiI9kUxHj+9qbi/Trob7N2
5M6loKKDZkyzh3XQde3QFY8CCgo5qymVVF0Hu8dsTL8/piCJSq4JvoE6ONvz
uDCMRkFe+rUBYsI0OHfG86n/IAXdLFe8JyROg1n5oz/0hiioQuLeK34pGsTw
6DlyjlDQ6kq4ELcCDTjjt93P+ERByZWGzDVtGnwmy7YlTFJQrWw358ejNEip
rnH4tkhBI6lA/uBCAzXv3d43lyiIsFHh8u4EDS63ayXu/k1Bh4czyrpO08CS
6LTusEpB/2U429UH06Bm7L53GhuGtnBM5OVn0eDftl38oTwYUrt0tC3nHg2O
ifhETvNiyP5z68KdPBqsWr3+Yr8NQ3msEuPUYhoUrfzIkOfHECU4YCaqhgbW
zT7u+cIYOja1puU5QIM7N9xPsMtiKMrhnNuJIRrMZD4sATkMFb8aveEySoOC
uMODYfIYms9vHLadpEEiT8ebqd0YinWKjzZapsGB0s4ducoYKnvN3yUvRIdb
Uofj/DQxVC5w73qIGB3Gr3s3J2thqMJNRr9dkg5h/HYHyrQxVLWk/txfgQ5M
46nOUR0M1cgcyabr0IEz54iWwAEM1fr12/IeoMO+dMl/wlQM1dUe43E3wMd/
u80JA4YYR3yucpjToYwYZcRjgKGG0Hgv62N0uNaxL7zFGEONTVulHrjRQZZ2
2/bpQQy93JY1uHSSDqTVeYMkEww1PyyyyPHDxxvnTxqaYqj9TSN5MoIOghbv
Iq9aYKhDwuybzjU6tOeRpowPY6jzTG9R4nU6NPS9cNp0BEM966PC5BQ6bI3s
s46wxFD/nr/rVwrosBtLPr7fBkPvAmNqu4vocKHeZvg/3AOI64LMEzrEniXZ
XbPF0AcH0fGWSjqoSZ5VpNlhaKig4L5oDR3eh2HXLO0xNPJNwdGPToeL93d2
f8I9Gq3dvv0VHXaOR2ouO2DoUycr5lQrHUowHosrRzH0n/DBA7UddFAsmLD4
i/tLmV2Faz8dzpCLST8dMTT9ISDr0QTu3gDxUmcMfZVfsVr9SofAuEtH+Fww
NON/dcuRWTok7dzqEoD7B0dy+M9lOqwh5TW5YxiatRbUPrhGB5OY+sQQ3PM5
uXN3NugQnbN5rgX3T/JTzwObGTBv9mmXsyuGFsMpEqk8DDAPDF3Kwf2rlfZu
jI8BP8UnU4ZwL/EbpGgJMuCBm/KiwHEMLR9vM70hyoASUaudFrh/P7YiDO9k
QN+nozwRuFcWBxiqsgyIJZrWl+BepZ4IitrNgKI0BXI/7rWECbW3Sgxosl31
/IP76OilP8NqDFAJzNEXOYHXG4XQNE5hANkn8jSGe2t8avIPbQaEum16a47b
Z1jSeVmXAd/Ns2JP4G5RL5PboOLrm0sNPY9bNnb/LKcRA0ZGnCrCcEcOvq7j
O8QAzfPWCjG4h1ScYkQtGHCh48NIPG7t6MkjslYMyJ8+2nMDd/q7QBFlOwYo
Xd+zHod7dg/xC+bIgAqN56eu4jaPTCvTO8YAioEDKQh3cZ/U5YNuDNj0MWDo
NG6CQrmh5UkGdC+dnrDHfeKKHq/jGQbkmd2VA9z0nvb3br4MGPD0ytiFW0je
udDbnwFWd9WwzbgvXp7yu3CJAZa89uxT+Pfp7gzaGxbCAO9Krb+NuJVkSISY
Kwxo0cdks3FfD0rvTLzKgGWj0gt+uMdeS9+5HcMAbj62r/tx37t4QKU4kQHB
Di9Me/D9XG7pWC5PYUBASJ9qBm5bcZfG2gwGpD030bTDzdUUfPR1DgOyMkvy
WvF6OS3CIdOXz4Abpkc3ruB+6ZfxbegBA96r94ap4A4TrIj6/pQBrlFFjGi8
HgfOUi2WnuH7fYwWsRs3pb5T8N9zfP1W2+1b8XqeOf21ZBuTAW/V17XXnTBk
wggJEmlgAOmXmX467sJtm/Rlmhjw8qqFoxxulzrZd5ROBnCdHXm0D++PGp7K
/P29DBAhyY3W4/3D7wE+xv0MoH1OEtfH3b7FdcNhhAH3S7UfauP9t+9Y5p7Q
73i9mHQ1L+L9fPuZ3K/oeQboyolxOuOeJ1bV3/zFACg4bkjH+/9xabdd7l8G
pLurFQRYY0jkH2ck4mFC/9bq9lI8TwJts0zb+JgQ6hNctoDnTW+x/I43AkwQ
YV8Kp+C+YWXweEyCCUKnEoYfmeP9UBDWx6HKhGNRBd4ehzCk0Sep6kVmwsCz
0vGLeL55E1/FN2kxIXgpMv4qnn+DXtwHYqhMsK1b17lphOepUu4jNmsmkCN4
+LzwPJ0/pk9wt2dCzZPF61Z43ireGndFTkzYSn+yQwvP47tzKvyRHkz4yWA/
vaCLocsvWOFrF5nQE9hZpYbnecWEx3uXECa8+HAndwHP/2mhTRT6Ffz9wXsS
n2EYcgq1nLocywSufsHzEmQM6VA/2SxnMmHc3GAbHT8//rSyKSzUMSEOC/hE
kMb3909RtDWLCfl3FwSCJPH+VDIbedbIhNjCRZUxCbzfktLSzrczoblxdK1U
FK9/G9m/34aZ8LGP4wNpB14/w0ZvJv8xQcnduYxBwvufZ1rZhMiCMEx98zAB
r5cDSdcfcrKAq21Vdgk/X10K+vef4mNBOXdriug6Bel6eRV/lmGBbof/Fjn8
vF6dvX5lxJgF2hP/MrXHKciz+fNpBTMWlO66YME9RkEdOXq2F4+wQKdwqWcI
vw/kmv5U3HyUBZts5g/4DOP3o8LjA9gZFvgVMS6Z91FQjIMmOTGBBU35tsFb
EQV9V06RGLjFghYtK/kUJgXZE2Y4ZdJZkGqsGsVFp6Ddz/JHa+6x4Nq8zr6F
FxTUtpk7aewpCxSeqAVHllDwUvo8ua+bBdIpzYeyblNQYLpeX2wfC2bFvD40
pFHQR+87rJ4BFnRsD/49kUxB5YJHbnt9YsHm/PheqQQKsvavM0ibZ4Eadw7D
JoKCbsum5E7z1+P/k0Z5pacoaGeCnu0dx3qYHG3pVlfH7yfeeZZ3j9WD+Tvt
wXFl/L5lymaR7VYPU5SP07cVKUhpc5NRzpl6OOI+LjIpQ0E68RZa+SH1kPQ5
MOawAAXZxrmIPLpTD/Mmrf8UVsjoevTl0Zr39dCyNOTFi99XzTyGhmqH6yH5
xdgfqToy4jHQe1/3qR4qPKKPq74goww2tl76VD10nYhJ0iklo4Kr8Y31v+uh
Nj/ZiS+XjBgRWUUtwghUy3ukmsLIaD70hc+AI4KT6ZOiGppklKqt8lvVFYGR
gEajljoZqS8+iIlzR/CA3sStpURG5/0ycjXPIkhWb4qWliajbycudqeHIXCe
q68s4SajSSMNitV9BKnSP3bd/KyBRnhL/7SOIci9GRbodUMDhbfLXZeaQrAQ
yiGVc00Dicfn8Id8Q1D+dLN8e7gGcmFLVN79C4H8n8OaAhc0kN+fF2ovCQ2Q
FpSh6uSsgb5+y3CXFmgAa5nwqPuKGmi816ZpRLsB2MREeMRj1dFnbHvGF50G
0CD0ZtWEqKPRrF6PGd0GCDj+ktvEVx0Nulpt/KY2wMu3+x7q26qjzunDujsO
NQDXepZKkZQ6qmYzrTBzbADDhTk9mTo1dF2DmlsT0gC/rvD3Dn5SRYqpSoGp
dQ3g3f7ux5ktKoh18CD3LXoDaOfahqqtKiPbNbfCBGYDlD4uDZ+eUUYRpzN7
rzXg6w08NaLdqYz69NhUg9oawMWrKVsvGR//+m7CebABDj/XG5reho8bRjvK
reBWvNJbskUJRSy9163Z2wh+K5oXNw0ooKjsddHRfY3gare0Za1RAcUekPvD
odcIIltN2z+VKaCbcedrHfQbgXQ2uzI0TgHdFeTQXDJtBAnx2MxZTAFVaVFU
NV0aQUC8JW7w1m40HZQkVRXeCHwkrsRErV3IflmfVN7YCHr0/3W528miGNnE
2TOGL8HJouz4h0siSHMmdXix6yW4l4h6/F5lRwc+hnw1sH4FbLUnNS+//Ed1
DMa2Enpfgb7IMEnikBgslpRo3XZpAvfF8wXTiYowxUWMnB5uAumjTNJJAwoc
3yT8eqt3M5h6bPezvboPxh9tKD1aaIbISvbV8Gp9eBX4uoz9Ygu0NO2zaG8z
BvmPlpjaegtwXXhgO/rADD4GVH+QuNoKAsSwtqB7lqBxVvfjr5VWuBtQ7Hyv
3wb+DzAd8jc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.2}, {-0.00029555168233808855`, 0.001088286144841388}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747441021419284*^9, 3.747441059840723*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "x"], 
    RowBox[{
     RowBox[{"\[Psi]", "'"}], "[", "x", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74744209719768*^9, 3.747442105688383*^9}, {
  3.747442178650193*^9, 3.7474421797252483`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
t5o1GhonWNp6SY/5YvgfmuOEmA==
      "]], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.1},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {0.10000000408163282`, 1.2384410654357403`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7474421063142347`*^9, 
  3.747442180174363*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
0aP8/l1w3X8DymN9+A==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "[", "x", "]"}], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"\[Psi]", "[", "x", "]"}]}], "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "2"], "[", "x", "]"}]}], "]"}], 
     RowBox[{
      RowBox[{"\[Psi]", "'"}], "[", "x", "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "x"}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747449762142786*^9, 3.7474498188608522`*^9}, 
   3.7474498493165083`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7474498195023117`*^9, 3.747449853683303*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "[", "x", "]"}], 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"\[Psi]", "[", "x", "]"}]}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"-", " ", 
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", "x", "]"}], "2"]}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "x"}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747449861341215*^9, 3.747449921410419*^9}, {
  3.747449956190577*^9, 3.747449962008741*^9}, {3.7474500213263273`*^9, 
  3.747450034144603*^9}, {3.747450069110141*^9, 3.747450069349662*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Jh3Cw7VTjQb///1f+P/v/8L/AW+WOeI=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.2742089363438956, 0.2742090236095397}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747449862320816*^9, 3.7474499218243103`*^9}, {
   3.747449957726007*^9, 3.747449962489243*^9}, 3.7474500345574617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "'"}], "[", 
  RowBox[{"0.1", "+", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747450522580428*^9, 3.747450555001295*^9}}],

Cell[BoxData[
 RowBox[{"12.516315590132445`", "\[VeryThinSpace]", "+", 
  RowBox[{"18.43723970025238`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.747450555466352*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "'"}], "[", 
  RowBox[{
   RowBox[{"-", "0.1"}], "-", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474505456245604`*^9, 3.747450558335162*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "12.516315590132445`"}], "-", 
  RowBox[{"18.43723970025238`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747450547541607*^9, 3.747450558915471*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "[", "z_", "]"}], " ", "=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "z"}], "h"], "+", 
   RowBox[{"Log", "[", 
    RowBox[{
     FractionBox["\[Pi]", "h"], 
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[Psi]", "[", "z", "]"}], "]"}]}], "]"}], "+", 
   RowBox[{"Log", "[", 
    RowBox[{
     FractionBox["\[Pi]", "h"], 
     RowBox[{
      RowBox[{"\[Psi]", "'"}], "[", "z", "]"}]}], "]"}], "-", " ", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Psi]", "[", "z", "]"}], "2"], " ", 
     SuperscriptBox["\[Pi]", "2"]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     SuperscriptBox["h", "2"]}]], "-", " ", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "h"], " ", 
    RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.747450793978889*^9, 3.747450921890479*^9}, {
  3.7474510392639227`*^9, 3.7474510883923807`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "z"}], "h"]}], "+", 
  
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{"z", " ", 
       RowBox[{"Tanh", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]]}], "h"], "]"}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Pi]", " ", "z", " ", 
        RowBox[{"Cosh", "[", "z", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sinh", "[", "z", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{"Tanh", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}], ")"}]}], "h"], "]"}], 
  "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "z", " ", 
    RowBox[{"Tanh", "[", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}], "h"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Tanh", "[", 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Sinh", "[", "z", "]"}]}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.747451089369707*^9, 3.747489143390082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"exp", "[", "z", "]"}], "/.", 
         RowBox[{"z", "\[Rule]", " ", 
          RowBox[{"x", "+", " ", 
           RowBox[{"I", " ", 
            FractionBox["\[Pi]", "30"]}]}]}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", " ", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"approx", "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", " ", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exact\>\"", ",", "\"\<Approx\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.747451091953969*^9, 3.747451360425452*^9}, {
   3.747451392587246*^9, 3.747451455209702*^9}, 3.7474519128412037`*^9, {
   3.747451970702217*^9, 3.747452040219454*^9}, {3.747452075453425*^9, 
   3.747452153701501*^9}, {3.747452221201775*^9, 3.7474522437235603`*^9}, {
   3.7474524428863173`*^9, 3.7474524460235567`*^9}, {3.747452504088526*^9, 
   3.747452549920866*^9}, {3.747452760238249*^9, 3.747452760464163*^9}, {
   3.7474849238889923`*^9, 3.747484955282556*^9}, {3.747485662578575*^9, 
   3.7474856675775547`*^9}, {3.747485722447852*^9, 3.7474857231751738`*^9}, {
   3.747485834128764*^9, 3.747485834303905*^9}, {3.747485869631637*^9, 
   3.74748588775632*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qj2DgazJ2yb1EuhXatAbQfXnMPeA343uxZJoevhCcIdRJUTqpd0TOi6FFKJ1
reJsq2AsXuR5S4U0ogOLPT7YvgBFqeUexA8Z9PWVJbtjIwlvleMMepRlkSpL
zY9VRoL29vai7XpyKGSyZUupTjWY2wz73Tdchqyn9OfmVVfD4+3jr2vM5FHk
8ivDrgY14PHFyD9jnQLS6me1jzfWgKpA65aZRQy07ZP/D7SnFkx8V7+iuQz0
4KVwv75VLXzNDf54rZ6B5lUk94N1LZTyuizVGxmo6U7twLb9teBsW3f18BsG
ctqzaHizUy2ccVBUquxgoPO1GWPrfWrBYDzcTHmUgeofvf+jyKqFbc2bOqqW
MpHtGU0x/le1oJa44Mu8w0yktve1zZo3tdClfOLw8aNMNLPW+57Nu1ooDL33
5bUrE6X+yF6X01oLcY1pXbe8mKjfYfle6+5aSEAd5fxnmCjUUPxuxlgt5Mb0
7Q65xETpi0cUTaXYsNpFW/FHDhMFDMV4nJZhw8+bnoZieUxkUq9WdE+WDUrC
myzW5zPRcOQxowkFNiTm84iTxUy06eenY8kqbHiZY3y35TkTNXxqyBnRYUOU
rLYuNDLReHa29q0DbNCybjzpN8hEpxY2XIh3YEOM2Al37WEmGjs+1JLiyAbG
/CVnJ0aw160LeuTCBpvNBO01jl1aUlXlwYb9ZoYCO6aZiK4hd/wIYsNUaUl2
swCBhto+2OklsqEXnlidWEwgL91f2YbJbLidc59eK06gwWTZmZ332GCb9P0G
/b+dHFL2PmSDiPCOLyeWYH/r7nHLYUPzXIOcQ9IE6h8b9Lz5jA1L10XHicsT
6LuwQGhfOxt2Gvq3F6sQ6N2BtTKynWygCyeHDq8kUE22ff6uLjYk/OZvElcl
UIpJcU/2VzaYcSwm3VcRyOby0R3Hh9hwUsLug8gaArEX1C0e+8eGhlCza1Lr
CVRoN/Fo+RwOvIm0NS/ATn1EGO4V4EBElOB70w0EOrsr8HTxfA40FDfphGgS
SDNare3MYg6sHCzY+VqbQA+Erj78o8iBWJtoI70tBGLtL9ddo8yBVJGNlhR2
aFbvewcVDiR+usncvZVAB3bqCVWpcQBd65210SWQ+KURr3BNDjh+OsW21yNQ
+HyrjYLbOXDW/MmCVQYEOmEb2qy9gwMO04Vzk7EdMrPdju3iwLER72eLDAmk
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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Kej/K6l4Cw==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 0.2}, {-2.530972910429192*^6, 535354.6789271691}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact\"", "\"Approx\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.747452232424304*^9, 3.747452268693384*^9, {3.747452486560741*^9, 
   3.74745255458953*^9}, 3.747452848445127*^9, 3.747484928618823*^9, 
   3.7474849586673098`*^9, 3.747485670310659*^9, {3.74748582286272*^9, 
   3.747485888184617*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"%263", "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", " ", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exact\>\"", ",", "\"\<Approx\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.747452400459168*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.747452409189033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{
   RowBox[{"%263", "/.", 
    RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", " ", 
   RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]], "Input"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "74278.11486666366`"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"2.8577520727776005`*^6", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    "x"}], "+", 
   RowBox[{"4.152673973873561`*^7", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"2.739020837693162`*^8", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "3"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"7.46720117361991`*^8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "4"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"5.525165350264105`*^8", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "5"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.0473903073457028`*^9", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "6"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"7.231226394914271`*^8", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "7"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.0807715583629787`*^9", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "8"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"7.388906483099878`*^8", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "9"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"9.343513450891258`*^8", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "10"]}]}]]], "Output",
 CellChangeTimes->{3.747452386029367*^9, 3.7474524342608147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"%276", "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.001"}]}], "/.", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.747452281172791*^9, 3.747452289742422*^9}, {
  3.747452340297757*^9, 3.747452371455553*^9}, {3.747452570611656*^9, 
  3.747452571880886*^9}, {3.747452860030623*^9, 3.7474528601294413`*^9}, {
  3.747453442264193*^9, 3.747453463352406*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.747452372157218*^9, 3.747452572700882*^9, 3.747452861074648*^9, {
   3.747453443195015*^9, 3.7474534643101187`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"0.16628701594533024`\\\"}], \\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.253010505253128`15.954589770191005*^2480\\\"}], \\\"+\\\", \
RowBox[{\\\"2.514119596745644`15.954589770191005*^2480\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"4.679139429094998`15.954589770191005*^2480\\\"}\
]\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.747452372157218*^9, 3.747452572700882*^9, 3.747452861074648*^9, {
   3.747453443195015*^9, 3.7474534643527937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "-", "2.2530105052531282555925401187084306418769983214216544`15.\
954589770191005*^2480"}], "+", 
  RowBox[{
  "2.5141195967456442437081234935096106724427625572564483`15.954589770191005*^\
2480", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.747452372383182*^9, 3.747452572702091*^9, 3.7474528610757933`*^9, {
   3.74745344322075*^9, 3.7474534643533173`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"exp", "[", "z", "]"}], "/.", 
       RowBox[{"z", "\[Rule]", " ", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "30"]}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0.19", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7474521833692017`*^9, 3.747452204946357*^9}, {
  3.747452238013208*^9, 3.747452239172975*^9}, {3.747452497166004*^9, 
  3.7474524976729517`*^9}, {3.747452739994326*^9, 3.747452741844717*^9}, {
  3.7474848927933617`*^9, 3.747484918201674*^9}, {3.747485680867347*^9, 
  3.7474857097926483`*^9}, {3.747485807793621*^9, 3.747485880312708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", 
        FractionBox["\[Pi]", "3"]}]}], ")"}], " ", 
     RowBox[{"Tanh", "[", 
      RowBox[{"10", " ", "\[Pi]", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "3"]}]}], "]"}]}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747451470779271*^9, 3.74745148179388*^9}, {
  3.747451527304655*^9, 3.747451567166483*^9}, {3.747453720969783*^9, 
  3.747453722201226*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-1.1814173838069189`, 1.181437522824393}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747451477317464*^9, 3.747451482250136*^9}, {
   3.747451544129175*^9, 3.747451567750843*^9}, 
   3.747453722886364*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
+Ki4UKn0ROVUfOqPPZw3BK1MqHhnY9p/Ac8xIkg=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tanh", "[", 
      RowBox[{
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], ",", 
     RowBox[{"Tanh", "[", 
      RowBox[{"10", "\[Pi]", " ", 
       RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747453573588436*^9, 3.747453647699443*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV03s0lAkABXCPVUtG6hQ7bYc1a7VpqRVaJbddIkktKrVbXkUsot2U19qd
QomiMUcRxY5Hj1mGVCrlubF5hjGjhGHMe77Pazg5Ymf/uOee3zn332sWFOUd
rKWhoeGpzv+9N1jypl56yEmzTq9zzC7QSVx+OGiYagtK0hkdk2zAaAX32kOq
C6z7B9r4jAOwdlhTUkA9iPeSaV41wx/bu7dyGNSTSFTephcwolB/q8nuKvUs
Et30gxMZf+AiPT32CjUZeVXM1UaMTJw8S1LTqEzsp7KJ9Kw7+JTpXjQxWQwe
f8Gg+DQHT7pt3NxMKnC4X8+IGViDIxcH3zalV8PnZiqtaFU9oip/s7o58xTb
A78zrEIzprL6WzU16+C36ehKD5NWtDa8qutybMTnIQnJh3e3IyzOnXJU0Yzf
/RskP1t0o0HXZokd2YKsrYr4bzV7UMpqXlz31WsEuLqpmAu92GX04i+f8nYM
Nl54ktnJhVXLYM0ryy4463s65WTy0LfLh7hHdENHY1gWEzmACL3wHu6WHojm
5tlrae/Qxvd9YXCtF0fzKaVPJgbh43pEIBT2gZ32YkfBgyHYF6b7Fpr3Y2TO
xpFqOoKRxey+0D94SO251pY8PYJx9y6WURMfFFeHc8bVAnByh+PemL2FqdQy
+lTSKEoua6dtjH8HeWWZVoLTGFQnfpKFPB/EOJ/+7Jl8DCtcUr0rjYfwdxVn
8pMiIRINx/UFx4ahiM/xMnYZh/7LTRo8zxG82tZaTBsax85zBz42zY9gLM52
4mmSCPnFGawv8wWoWsNzSDAQw++QbYeuxyg+2G5wvs8S4xE3OPvl7Cj2hDy2
SdwsgUM7R0uUMwZaY5GfLluCL3aHqLJdhNCZOJ/W8Y0UdrZ216tFQpTGXHpg
fUeK4amr/7JSxhE6nRwxoyuDYqtXCtVGBIZK+MvkeRks5FYyzV4RcqTFDOsB
GZrNY3qi6WJwxXR7gaMcmX3cE97mEhRmtAkbmHKQPvXXtZolSHetGrcUyVF1
aK2zwxkp0BwmOOigAKvjYsHoahnu8qVb3C8oMNdyLGF1owwb/vFZ+rVdgZHr
dSrD03Lkhl/y/NNQidk3O6gXDBQQTvs+EnsoEc2k1cfVKsDU2Bi88rISxh00
Q6GfEqGRN6ghtUr4cNkL6xeVcAmYtt+rUGLKvyhi8D6BChPJzrz1BOoCKlIM
9pGYlH+YinQl8KwrwmNoPwlnp/JeMzcCj50sV5V7kbicuBTLVZu9viTf05fE
8w2cVY7uBPL4eQ8zgkjMijsSl+0jEPNjqkAvjoRodo1rlheBTbuO71xeSsI4
PEQn9hgBi4p12ry7JCgOCUzz4wRoJvzW0gckCq1E0m61P1vwPuhaSaIxWCX+
2p/Aspo94Sm1JMI7Y236AwkINtvmaveS0E2hUCxOERi8PenXyyVRNU8u71Kb
T6kwZ/HV+3jt1+dDCXTKN3J+GCKxaDHDag0jUFtm2kKXktg7EMc5FUGgxuh9
hpeCRNK+IJFBJIGHKXneZiSJ+RbJ2CO1759YO1Q/QyIXy+y1owiU9PSwsuZI
ZEbUXLmnduH3WWEB8yQitFF2IJpAPsdz85aPJOi5ZekqtW+YrlAtLZHqvy5t
u3WGwH/7oIEm
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
FzUqh+hoSzDlPA+h8B/m5VjZ6RVKOSo5uS37cTmaZ4U+Un6ysPG4+utyBCl3
xFI23qn3cFNgOfID2RIpq5+biKZHkPlcXJxMWSiIg9s6uxw7bWMy5up5SIXx
gVGOw5dDi+b2p3qElzBXQMAqu5Qym1StPsFRgUunnCrn6hG/VnDljgqY9C6q
pSwldv6bOCrgMnukYS5epHfQOZUKZBaSKZI2EmrWsbxegZ0bmFrn9m++1Jb+
vAK1XR2dlKt4OjRYEitQzrekhzIrp27DibYKsIx79VPet6Ln7Av2SnA5+zMo
Gy4yqKzZWYmDIeLfKS+Q3rJEwL4Saq+fj1L2vdUuf7u1EusVAicoiwf5Ps6Q
rILos7KflIvrz6UudanC9w3qU5SfL1Mvs9hXDYeT22coq8ipt3d1VcOgYPUs
5SPDt3yzntTgc92TOUv6O57zF6hFT1D6nB3LlnkuqKzFDbTNuW3GvfqGVR3u
XRqc85X3u1LAV4/ykfE5dx8vC+TIrodHy+Sci27VLTW93YDq2ek5R3m1WlTw
NSKEfXbO211vWU/TGqFk98tB9vOfCVo24XjuLyuMfdxXsK4Z6zp+eVTnQt+1
5GZUDv4yk+pNHie9L0ib+OXFR2yVP61tgePULx8JjRM9ntQCuZlfvr+8+592
jVYIzP7yCTk/W/mpVrj99j9pO5jqFNpQ+NsC3qkPFd634etvHzRTms7+2YaR
3zZcYlx+52Q7fv6273unQH7fdkz/dqx35g2m6HbM/HbJizHhL/l/PX1fO9Fz
uB2zv611Vpy28GTHH8fV6LqnjXWAae4ZxL6SKOavnp1/vPHotVH3I11/LCEu
4Rr79a9bh5wLA592/zFd7MxTrt1f/3hLv3DfvKq/zhG4W3nT+tsfP6+u0VEW
6PljQiXDlTnnr6PPrjm871bvHwfSbN50rOz74/F8jXsrs/66zTV9dLlx/x+P
VezneryU/sc3PTZlWKT89VrapuVdWgN/rFITPsU989dDl94ZNocy/jhdO/Lp
0lPEH+84pHmQLfivX/Eunuuj//t/l6QGqw==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7474536106050158`*^9, 
  3.7474536482732687`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "approx", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747484970399404*^9, 3.747485039094933*^9}, {
  3.7474851742920437`*^9, 3.747485188548191*^9}, {3.74748539426359*^9, 
  3.747485403947432*^9}, {3.747485576373848*^9, 3.747485584521446*^9}, {
  3.747485904903853*^9, 3.747485935266591*^9}, {3.747485967905345*^9, 
  3.7474859734654617`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.00024887683040966126`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.00016814834194727048`", " ", "\[ImaginaryI]"}]}], ")"}], 
       "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.05031973660242223`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.04997852760662934`", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", "h", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5695460166847055`", "\[VeryThinSpace]", "-", 
          RowBox[{"2.2701042360560275`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["h", "3"], " ", 
        SuperscriptBox["\[Sigma]", "4"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2.747919594237628`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.7254385679606092`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["h", "4"], " ", 
        SuperscriptBox["\[Sigma]", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.08968083919015166`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.10018092105373085`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.22802230672179497`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.3871360735422027`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           SuperscriptBox["\[Sigma]", "4"]}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.01813756333858894`"}], "+", 
           RowBox[{"0.06889925485037637`", " ", "\[ImaginaryI]"}]}], ")"}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.14328297837008522`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.14182318934401392`", " ", "\[ImaginaryI]"}]}], ")"}], 
          " ", "h", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"1.`", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.009005894296771884`"}], "-", 
        RowBox[{"0.007467036143423373`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.05355124013145045`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.1752777060807373`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       "h", " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.38011197217786`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.2823497327904942`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.2967196533293383`*^-18"}], "-", 
           RowBox[{"1.9136233266969087`*^-19", " ", "\[ImaginaryI]"}]}], 
          ")"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.4795186509273295`*^-17", "+", 
            RowBox[{"7.483226605353644`*^-18", " ", "\[ImaginaryI]"}]}], 
           ")"}], " ", "h", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4.769093999444437`*^-17", "+", 
            RowBox[{"1.5212301630895858`*^-18", " ", "\[ImaginaryI]"}]}], 
           ")"}], " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
       RowBox[{"Erfi", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.11418038346231071`"}], "+", 
            RowBox[{"0.17595167021181093`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3.2329930688904436`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.5879293676354762`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", "h", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5.820997883447967`", "\[VeryThinSpace]", "+", 
             RowBox[{"6.179790003326111`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", 
           SuperscriptBox["h", "2"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12.914722982204385`", "\[VeryThinSpace]", "-", 
              RowBox[{"18.072409409338483`", " ", "\[ImaginaryI]"}]}], ")"}], 
            "+", 
            FractionBox[
             RowBox[{"0.7126267678483174`", "\[VeryThinSpace]", "+", 
              RowBox[{"4.421075849324231`", " ", "\[ImaginaryI]"}]}], "h"], 
            "+", 
            FractionBox[
             RowBox[{"1.01093393556429`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.2176042604157002`", " ", "\[ImaginaryI]"}]}], 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], "]"}]}]}], ")"}]}], ")"}], "/", 
  
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["h", "2"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"12.914722982204385`", "\[VeryThinSpace]", "-", 
        RowBox[{"18.072409409338483`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      FractionBox[
       RowBox[{"0.7126267678483174`", "\[VeryThinSpace]", "+", 
        RowBox[{"4.421075849324231`", " ", "\[ImaginaryI]"}]}], "h"], "+", 
      FractionBox[
       RowBox[{"1.01093393556429`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2176042604157002`", " ", "\[ImaginaryI]"}]}], 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.005864828549760937`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.02400074079498255`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.3115212372116077`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.2297211726722923`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       "h", " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "+", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.747485021520859*^9, 3.747485041868536*^9}, {
   3.747485183421082*^9, 3.747485195054286*^9}, 3.747485411706532*^9, 
   3.747485589344301*^9, 3.747485928804208*^9, 3.7474859618410673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["approx"], "Input",
 CellChangeTimes->{{3.747485939234371*^9, 3.7474859402864437`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"0.8479022689688369`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.3207103023526983`", " ", "\[ImaginaryI]"}]}], "h"], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.19`"}], "+", "x"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "12.914722982204385`"}], "+", 
       RowBox[{"18.072409409338483`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     FractionBox[
      RowBox[{"0.712626767848317`", "\[VeryThinSpace]", "+", 
       RowBox[{"4.421075849324231`", " ", "\[ImaginaryI]"}]}], "h"], "-", 
     FractionBox[
      RowBox[{"1.0109339355642897`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.2176042604157002`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.19`"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"7.451985273414552`", "\[VeryThinSpace]", "-", 
       RowBox[{"4.774480191347309`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     FractionBox[
      RowBox[{"0.9050605634885956`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.8628096533445093`", " ", "\[ImaginaryI]"}]}], "h"], "-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "h"], "-", 
     FractionBox[
      RowBox[{"0.032251555090808244`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.23432885203334472`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"0.004991996564727367`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.012051456096631705`", " ", "\[ImaginaryI]"}]}], 
   RowBox[{
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"0.7470947449621417`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.39933250177316093`", " ", "\[ImaginaryI]"}]}], "h"], "]"}], 
  "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"1.8628096533445098`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.9050605634885956`", " ", "\[ImaginaryI]"}]}], "h"], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.7474859408307953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Log10", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["h", "\[Pi]"], ")"}], "2"], 
     RowBox[{"Abs", "[", "%315", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.0001", ",", "0.01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0.1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474860775801163`*^9, 3.7474861187153807`*^9}, {
   3.7474864607792*^9, 3.747486474027545*^9}, {3.747486651464045*^9, 
   3.747486654995278*^9}, 3.747486688268688*^9, {3.747486823972447*^9, 
   3.747486862284984*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
hf72qi1i0t28IORQzoNVI/d0VIeifyjnYbVTrxY9C0Of4KfW0OitapsFxmfg
5xeIeFc1W2G7J0cM5Nl0SzMzfGqXSvlZoU8oT/Gdi0GSvb4Yn4H3yGc3lF/3
x35yV0PRrCxBibFLyHATNw5Az3BfCNmGOV7WpvMZ4JfXr0wYLIzCein/UP0y
+7M6syS/YfOP1Gj0D/1E7oHqsfVHb3JsLnCKG/3ysV+V7azqH8f3pR7mscAd
5FqWK836Xu/W6f/0TkIBxlsP20GBDVaDeH+x4yfcX+z2As8Ql3qNhzv2h5tj
vwWfu4wv7hy/3AJ9QtwQCZ1T+ivTB/sneFv4aNnTnNd+6A3XTUaxW34sDsP+
CX42SgWIdjyg624foUjNMff+t+fmhr2XJ2jHcdUL1i9/8/hSsnMoh/mJjm7O
bT1RyqH/eJheOKeR08113sD4gcLrmXe7uM4bRLgoZIuNphzWL3EGu5lRhu+4
zhuIxppuTDN6y3XewMn2S4G9LI1XsH45dIdzNe/1K67zBvFzi265rH/JNV5/
3jr63lq9F1zPtS/6nygrezaA/INBzRLpO2Fcz8H37b93+YhCMNdz25jdyTcM
O/y5njO6GS8XPjTch+fzsgL5WoXaLjHk+Qb9Y0+EeHE999EqG3nVXsuL6zlF
fq73lze9nlz76l/HTF45v9qTax/Y2PtS76tpnlz7lpK7Rr4fo+TJtc/2ck07
f8gTD659Ib4et9sJozy59jFCfPq7rlp5cq27zV5qNZT81z/bph9X2/W/9c+N
iQ6fOj5P46xMmbJBaRfl+TO1+CKqZnJE5f+5jQqkfE6Czgy9Q5mcwy8MJu96
Q/uhzkrD578Wz+Z0exiNXhZJ+eWThbr6k+ZxDDb1ZEqfpP2wZ77gyEaFbI5u
Xa/pqn7aD7MufLnb9CaH45u06OQ4Kcqt7LUT7A4u4fQOZUfeH0f7Z4HW3XeS
FnmcEAGOaMcw2j9vZwbddtqQz5FbdrHR/g7tn1fc+kcd+VLA0XymMF58Ke2f
DzYXZgWKhHMcEx8XqM7/gTzz2xLxL9oxnInLpZ5ssf2GPNxlz9tYn1DOYJKN
8/JiPvScHDQ08n5wEOeL9OivLy4JIhcYN1+yN9ufs8rKv+qk4AjkY1Su3Ps3
2Ytz5/AjNd8o2t/0mR/KCzu8ORUas6f9m0n7rcI9rXsxpl6cx18kToYY0H6o
ELfx3Le/nhzFESpDBr/GIpebktEgcdmT01rnePnXVdoPt9dELpHK9eSIm9TN
fl9K+6Go4hNVJ0tPzs9NfGoaU2g/PP2yK77fwZGzftJiZlwlXc/WKcwyHcji
cBTPnFoW+5H2z/rvIT3aXp6ciJjn29/00X4oqiTRt2iBI4c/ffX+kX70dwYO
qis5BTpyrZe/pT8ZOUKbw3Hy4Uu/cZ/+/te6DULy3hyudRavOMOr3XnFK179
h1fc49UPecVPXv2ZVxzmdV/wiue87i9e4wKv+5TX+MLrfuc1TvGKG7zGO17x
h9e4ySuO8RqXecVDXuM1rzjAa/ziFU94jWu84gmv8Y5XnOE1DvKKP7zGR17x
h9e4ySuO8RpPecUxXuMsr/jGa/zlFfd4jcu84iGv8ZpXnOQ1jv9P4x6veMtr
PvA/jZO84vb/dF7BK87nn04wC1jlznUfwfqCzWcLLPi+SiiGa30N83ZeHH7n
of6Oe74RqYzH43HbrulN57oeOFy/uKL0UFR2PGNK9kPY1wOH69cHX58c/CGK
WR0WtTtXO4vreuBw/acP/zwcNocyAjzOA893OjxPyYr7PLAA61zrADnXCtcD
r4vgC+Qc92P6LNtffri0gPvcL+Fw/aTN0Zc2TvBi4sb/8T7nmcN1PXC43lRv
u6Dsfjfmobrm6cK7i7muBw7XZ608vaTgkTOjPUp77aFq7vPJwOF640d9sUpr
HZkXQjZXJb9wn1sGDtevXXUrqmgyh6ng9/u9wIL7PDNwuF5LtX/GoJkd9kN2
vIX+Bjzr367bGuFJ2K+A1/wcktwgMgX7D3BNz9CzF/4FYz8Bvv2g4axRev7Y
H/Cc6tvZ91LeemL7An9FztNC+wKvsFz89scYJ2xH4E9Vvo07PuiA7QW8stbg
xo7HNtguwFeJW5XumG+J/vH3H5Q1fTlgjp6B2y6yGxHrY4o+gad22Fy4626M
PtnjEdzXwNctEVklOjINPQPnm7Wmo8QnBj0Dv6aXd3ZgXQh6Bt5+sXDnF8dJ
6Bm4r+Zl/YL77ugZuPQozfCKJif0DPwLOU8LnoEzq957+byxQs/A+zPLh67t
NUfPwMcEpCvtsDBBz1iek/sz9zYZomc837vuzJO/YrroGbiL1eDQRwlN9Axc
/8nnUoEDquiZPY6DZ+BpJ8dcq9BJRs/AlxqO2zJ2SiR6Bu6do/C1TiEAPQOv
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
zxz7gpcj3yp6fQ9HloyOxVfwvj0yx0hX6zzyjEfk4/itMveUpH3D9Wn0OSH3
F/8WrN9TsE/U3rui6BhS+Dn0vfJ37Jl6P+7N96Tu+73geysy1nDkB8HxruLe
obRmiffrn+CbguNq7as6qX3rTTxrROozMwR5aD5PzUtnSLGuztFV/FY3cfw2
IHMc3j2X8/j9wqLPa8c8z2pCv4/R34P+vDx2l01qAa6XOJ7/NrNvOYLvp+RP
cX5v+i/i+rrUZ0p5lM6T4ocqtMvA76NrzRitaFl+vvdLfH7uDf5mOteDaOco
LkVODo7NDwWfTPu74JylTm7rFLfMi7YvG2WnU8cqVxZt9/rmtk/vp/fUt9b6
lMttRfk89p+cxzayJTVzW1s2n5vmXCbxOdHzD0r87KGpsWJp5Q3l8nUfmfp9
r1TMErwOmzKPUTcfR2tXM7Gv75g5BzkGeXnq/Tk8tR/RvRpjd/5sPbdpHoMp
J5KP6CI7EBzXVE98LT9zMrJM0bZNzxqQ20m996X83imzb5KPkr5q/i2q5VL7
WftH9r1N0e+rb3I6+E7wGYnP6m25/VHOrrlpXmNl8xm/fmJf0zi1/5lYtL88
KY+1Gub7XGe7dOqYZEg+/tHyrTqveZ8+BfuXxonPS9N8vRSLzor2Wxv4fXa0
b/sEPCfa33ya2X/0zm2IcvXq4GfyMeRH5BfFDWh8xU/KQS5RPhb9rU7M10ix
4SX83oi53Zj6e9+Qen1b53tbsYHme6w4isT3zin4DLXJsWxJ88T5aqv8Xu2N
LD8jyvH+H1shyxYdj+rZ4jH0PZrl36RDvr+1t6VvmNuN6dF++iPumxbtaz8A
d8ucB33NONOD12tg5jXsmZivmZx6vEnI/XO/Jv/WK++jvuIq2tEGa41kExLn
uY9HcwrvgadGx/Tvg0ulfm/1VzwjP1pXMbPeIzEfMTM6Fvk4cx5xl3K/aFvU
J7dd96TmeYZpbWjdEvv3R6Lz9rfzuWhusptPRMcuH2bu3zUxR9QlMe6dfzft
M8UHmzPHvzW4r1fm76Pv9HB0br8e3aPRfMQ74AnIDvSpUDRXcU5+BhbSp0fq
GGBBtM/7CvxkdEzwBXhiNM+i2HtSNDehmPzSaD83Xfcmzk+Vp96c5zXPob8/
mgdZB54Szd28BX4wmrN4E3wreItiacWieQ7yPPjuaC5mjb5nNK+hOOeBaF7j
DfBLud+U/xyH/nvF5+iPC+bu3kb+kJoTex48ODNntRg8JDNPtQR8kewb+Dlw
DI4fHkSXaR+DHwBfmJkTewbdBZn5rqfBM3h2Be0L5NDMHNqz6Ock5uXmyo8l
5r7mI59MzMs9hZyVmH+bjbwpz4OezWNj5ZvLkHdEx0kva69Fc2QrZSuic62n
ZJOj44lZ4Guic6EF4BuV76e27ddG52kLwSOj47k54CuiY7W5imui87onwWW5
7zHm0I/rMuBHwecWnWfK1ouruVJ2J3WcdlV0rjhfZxfcP3WuNz6aR1ulOC7P
TRYpBszzl8XyvdFx0gxwjOYllZ8Oj46ZZoJH0Nbxna7X/GnrwTfoDKb+/hPB
e1LbzHvBY7n3W8WkmfPd2uh/k5+M5j6UayvnboI+IP9K3WeyfHjqvP4+8Og8
b3o6c/4i29cUXYtoXkk5pnLNibI/yGHRMdw09BdHx5RTtSeLzpE7a+w8Nj5d
PiQ4JtR61YzmdpWzt0Y/sOD5i7sboHcTPxGcd+t81QiOXbWOTYLjc33PRsFx
u+bcIPiM6JvXDI5Xtdalg2P4R8B1i/bjytMPi+ZkxVcoXlPc9o32a3Ru8GWu
V9ypGHF+dB71eeY8VH5SOc2w3AZ2SJ2bKudRbKnYSTGP7Hm94NhYe/io4JhZ
e68uuFvBe6l+cJysfTs5mkt9LTOnou9TD1kqOO94GP0BwWv6ELhCNI8pPmFI
dNyv91VMKT+uGPM6+j9esJ05iLEXgC/h99Ojz8Bq9O2CuQXZFvE6Y8BtkQ2i
6wfieQYE63VOL8pzg8fls4LXXfZNuc8Vyq+jOT75OMUmlwbnQToj4q7FeS6X
bw/eVzrvbaP50xWyW8G5jM7LwcH5l/ZYzTynuJt+5YPzI81BnMqpiv+QhwXn
MjpTB6bOKc5Bf3hwTiQbUjmaoxevkqX+Pv25bhvM7cg+nxjMC8leHRKcf2nP
i4/R2lVFVgp+rnxEpWiucH0wt6GYRLFJIZg/FKeheofiDXE1yne0PsoJJkSv
jdZCNRT5xXO0D4PrCOJtqgXHFKqzqP6iOFM8xn+CfZ84nP2DYxVxO3+k5jzF
z+xKzZeKn9mZmlMVP7MvNQcu3uPn1PyquJpfwPUL5nn2puY8xSPtTs21Kl8r
E7z/9b79o3Nm2RNxp8q1SiGfzfMTrfWEYN5e/vEY+Unw7dzzEPqXC45V7gze
n/Kng6PzUu358cF1EPnTHtGc5rvylcF1B8UAS6K5APmU7am532XKKTJzBeJt
LojOk3V2akXzhx8F86rKWRRX/JmaExaHppxEcb7ykvuDaxaKbUoEx/bisorB
XLH4qySYIxWn1Dq6fvCz1id6L/4Jfiz6/TX/TtG+5y/0GxUvyI4gx/HbssQ8
6heKccC1FeNH8+l7tR+jawa/6HxE1zB2gY/O442N2pvR9Yw9Ok/RvPzvOh/R
vP8f2i/RtYrfxLtE1wwSntsmmtPfqXeNrkn8Cs6ia3L6tmdF1xsK9D8juq7w
N/pG0XW1zeI0ojnx74P9ivyLaihNousZW8D/pubexafdGX0mZQeOj65Zfidb
Hl132QpuHl3/2KazFV1X2C5fEV3n+Ed7M5pH2AduFV23+Ck4t1T+qTVtGV3D
2CG/EV3n+BfcMLqGukmxUnR99Ftw/ei66efgW4Pzd9nqaqn38LX81ia4lqp9
JQ5IXNBXyLG0Zwoe//Zg/l/fTVyPOB+N2bDovGYU410bXIvR3lCeo9qWco8x
wby93lG1LunFkQ4MrrnoHQcF13S0924MrhFoXS4IrsVoTRvThhXMozYNfq64
027BNR297+XBNSPtmeHBNSPtpU60qwveY+KLlFOJn1Cdojtzf4jv9N/gOpT2
/D20NTIFiveC6xHaY1OCayIBPDG4VlJUjBdct9LaidcQv3Er4w4Ljtm0VzsE
18I+0/cOrk9pP4+kzSz4jPSL5uwU85wUXPv+GDmYdn/B5+XU4Pqv6hSnBNfN
xdWLTxT3oNpcr+j6zWeKeYJjRZ2FbalrWOLGn46ukcjunR/NGyqu3pq63iQu
/cfU9Udx7LXz+E3zWRzNsZalf6vg/E8858Bo7k+xunJ55ciqbd0VXMNVjjCX
Pi3zuT0cXJNVrvdocM1UOddTwbyxcp95wbVmxTPzg2s9yoOeDOaBFf90ia4F
vg5+JLjGqrxVz9kIfkA8X3C9T2d8VnCtVvn+7OAasfL9mcF1WHECqpOpvqnY
+qJgfk+26/zgeqvOYI/geqvOXffgOqPOvupY4tyUkz4WXB9XTt266LOjutW5
wTVT2Yd+wbVX2Yf+wTVZ2Ye5wX5HPFWv4Jqv7FJvneeCbVG9PM/SvpoaXNfL
MufX2oMrovNf5bzKZcXXid9SnnwbfVYkzstUhxP3orqc+BH5kf/z5dH/GyGb
IP2W3L8oJ1durpxe+b6k/h+hZ3QdUXPoG83/Kv4X5yze4b7UucMLyGeiOSPZ
t2o5dyMOZ3Rq/kfz0bzE8+jM3pE6fxKvrrqTch1x8YrbxSM2ye+9hfGXJq6X
KTdZiu65aD62ReI6TtfoeqTOrzhA8WnibrpF1xp19hULKiYU/6G8Xt9GNVvx
meLrxFPeF21PtffWROf2ioVUY1ctT7ZRtUJxtTovqmeKb1Xtrk90zVK5kvgv
nRd9c32T5/PvrJrqdwXX6MQziGMRByx+u2u+puIMxA2LN1aNT1zu2NTcr/gF
2Tjlf2nivEVcXtX8m4u36ZWvi+q6mwqu4YuTFL+r+Lh7dA1Ydu9/9tFqYg==

          "]], Polygon3DBox[CompressedData["
1:eJwtmnfgT2Ubxs/3Oc/zfdsTSUUkIaRBRjKysxJCg7QX0aCF6n3Tor0XSbSU
BpUGKt5QSjutt713muq9Pq7nj/P7Pddzn3O+5zzjvq/7uk/9UWMGjg5FUTyt
P1H/e5dFMUz/D6wUxeVqL05FcYXwINmnVoviKvUdJNtQHVervUj2yzlf9ktl
31LHv9Ruo76/ZX9e9rlq8yPXynakjqh2a/VtrB98S/epofa9+v+6zl+j/zWF
79b/14Rv1fln6fwn1Xejzj9f7YNl+0W4celr7snXcK83dGyt9lzash2s3x+o
9mVqP6N7faD2NrLfqf+r1bdC9geET9Z9r5f9Nv3GEuG9eE/h4bIfoHOHq68P
76rzXlW7ufpa6ZyBOudM9T2hvoujf4ffYwwbqv8KHa+p3U99rUs/0335nXnW
A3XPHvo/R/g/uv402RsJ76zjFJ5Z9ttkG6n7XKbfmqq+/hXfk9+/R9e8q/a+
tGW/Rv97yX5y4fl5VtdPV/twXX+57Kfp/wLhujqnjuynR//2Jmo/Lfu5wncI
1+Z3hK8XXijcTHiw8HO63wzhUbyb8MXq76N73aW+TXk3nf++2p1oy3638DvC
HYTvFj5I1/fV+Teqb7xsHwsfrnYT3W+y7Peq7z3hjjr/XuFt9X++8Epds0bt
hTr/e9ab2g/JfqHOv0d4B+EBwstkv1v4ON3vauFhwgMqnq8OyePD2u2p4yK1
N1Hflzq/l9rzeD79Xyv8q46hao+QfVh+3ppqj8z4JuEhah+jc0Yy1+obp/ah
uscvau+ivr9Kvy/jwzgtlu1J4XNl66bnu1h4afLYHSt8lfBAnXeW8A/5HVkf
9XT9aPaa7Bfpfe9l/oQPEF4u+/3CY3T9dcILZG8g/J2uWSH8TelnmSX7MPan
zv9WuL/6H6x6j92lc2sV3nt3VL3Hlgl/o3Pf1fGi2pcGz0cv4Q4672z19VT7
6uT7r1XfYaw/4caMn/AI4euEW+ILhEcJdxdur/Z5+t2nhMdEr6d/lfYvfWXv
XPEz7qv20frd7sLdKl6jxwh3VHvXitdbx+BnaSI8Xrg1z6P2F+xJ3W+K7v+Y
7NuVHt/HdZzM2KlvG9le1fmL1J6k829nPIQXC08WnincO/n3+N0ref7Sv7WF
jmPVvl723XX+P8JHyH5O9HxsXXq/sv5a8L66fonw2dH+cCvZpwmPjt6f1dL+
c5mOz9ib6jta1/5X+Avh7YSPEV7OnArvwBoXfl74K+HtWUPJ48r4Bh1Hq71U
9k/U3lb2o2Sfpd97Q+29ZZuV/d3LwnuWft/FeU8zvm11/q2yvyT7HqXH5zbG
g72u9zle+OZkX4/PP0Z4CHtS7RXqu0HX3iT73ryf+o6WrarjZ927kfq+1j1v
TI4FSfajZLtF16wS3l22GcI3Cb8gvJvwbfxe9HpsKTw97//Hhbcvvd/fZEyE
L9D9Zgu/wRjiW4XvFH5M5zdkf+kZSuF50WPzkfBzwjsLjxB+TeefWvUY3yjb
ytJjz5xMF15Veq4ejJ4rxpixflX9s3OMebfiObtV/18sPZfnsEazPxnOWpZ9
T+GvhDdX+1Hdbye1v2cOdf57yeMxNdifvp88H9OE51b9G+zdORX/9iPRa4M1
wdpYo/NXEpuC/e9D0WuJNcbzzxeuW3hN8X6skdvVfimvHdbUzcIvlL7fO8nz
cUlwvNlC+Gvh/WU/TXiS7jcPX1k6PkyMjq81Ssef5YyD7jdbfY+qvVrXP6X2
OcHz+RZrXHiK8Bzh/YTb6vxJOvdJ4deTfdO/g9fvK8JPC08MXi8vMIbCpwvf
JNxOuJmuv4E1qnYTPc8RxF7ZT5f9fxVzArjAK/mYJVy7sO1rXfOJ2ger/wGd
/3D0XmNPMp/MIXNJTLtE57yczFXODl6vK5PHY6zwDcKrktfrBOFbhF9M9k/j
hW+u+pnqqT2o8LN2SV4vZ+ffv0x9D8q2M7GB+RK+AP+jazrBvar2vfjgb3XO
ybJfpfaGaneXbRQcitik8zsIjxW+Wngj2XvAz4T/g79mbQpvqON33a8pa1Ln
bCT8B/6XPSR8nM6/VO2K2p1lO154qnAQ7iJ8gvA04VJ4vxzPV7DWdAwqPa/M
bzsdk0v75vpqN9AxVu3DSvODTbM/S7rHT/Aj1njp+HGl2huo3Y31p/FaofZj
Ok5J3uPsdfbUF+qLwj9W7AO+zDGQWHiscAvdawPh32RvQgxV/xnqu5m9qXZv
2QYIj+ZajU8L4W2S+RS86kbhp4SrxAL2onAfnX+C7J/L3lx4kPApzI3wHsK7
6LxV+AcdR5Yek58Lcx7GagickLHX+Xvp/PY6DoALqm+EbAfqGMf+Vd/uzK+u
uZi1np8BH4IvgRN8LjxO51+j9sZq95RtQjSX2QzeKHym8C3CWwjvL7xZsm8i
F7iSuZD9POE/9Xv7yH6E8L+F1wnvKzxY+FTGTnhP/Kmu/0i4q65dINySPQ3X
U99AndtD/Vvp+dblPXaX+taovQ9t9mf0uV10zYXq21h9f+r8Zur7UfgD2Sep
3Vn23WTbtMri09jq32+yv5bHZ2/1NeK31fch75v5Wlf1HSbbreo7UeeeXpo/
nEhMVP8mOh4VXqBjIbjqWE/M/7X0nA8unY+wFnjmi4J9Lu9SR7i2cC/WkHAN
4Y2E27NnhA9LzqfIq3aSra6OPYLXzO6y16v6OXieVsI7Cu8lfBLvJLy5cGBt
CP9B3Nb96uh++wvvKPteyfkEeUWDqvlR44o5Ziv4XTR/6pj50i7q27ziOWPu
Noy+9yLZt5F9A+E9C+eLtXi25L06EI6QzKPh09syhqXvx1izhxupXVPXbK5r
O7NGda8+wicS24TPIh9k31TMGdfp/0HMCb5G57Sq+je3ULtL4WdhTNupvSx4
rFkDp5bOn1gbW+PDgs8hwd1MuBL8Dr+Xfqcthfcr/K7kv6z33XT9GWqfJPvW
sndTXx24AnteuCdrKPpoq/bSYBvjsVPFa2x3tQ/L6/NXngFul8y3LhO+X/hQ
2ScKrxVuC9fL/rSv8N5V+3D4yexg3w5nhbuuZE1UvcbxbfcHr/2asvcXXp75
GT4MfjIn2Lf9U9qXLxDequoxwBc+EDw2+Hj4wV3Bvh8fT7y7O9j319X9hwqv
Fh4rvIPwQcIvC58svL3wEOGXhMcIbyc8WHiV8Ojsn/CPF8EZiNnR+fRq/H/y
nsJXzc17bViO0cRjcpnVOn8Ma1f2+lX7APjOPcG+gTkmNj0aPPfsMXzFY8F7
D00C3z4/WKvYW7/ZtGKfWUPthuxJtV+V/RTZrxTeMPvm+cLnR/tn/PTDVY/h
BsFrgLHFx6I/TA/2vbWT88khped7nI46svVT30661+U6HmJv4Ptlu0THwGBN
5STZzhXeNZiz7BsdL55jfPVM75be88TCecG+YBOd0134mcynN8XHCj+b+Xct
4QHCK/AxVa9f1vJzmb8TE9FSbg+OlcRY+OXM4NhbP5lLFTm+EVPRMmYEx9q5
ut8H+OPS/PQiHV2Dc96Rsl1YtS/GJxO7+qh9SeEYcFyO9+QuowprAvgIfMWT
wflVVbiT8BPB+eQEPc/8in3F4VXn8Pig3sSw6Byc/OKh4Nz882R+31h4Eusx
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
X3yzQf3uvmTtuEHmh09EaytoLNQT/w/3kRBZ
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13n8zVUex/Hr97v3DqWyZ7JnyRo1IiT70jKWRmhKNaGZqaShUQqhKIlM
pQXJjC0VGWqiCGHKTiP7VlLZxlbGbp6fx/f3x/txz/t13ud7vvfcs90KD/S+
49GcVCq1gDK0KptKHcmXSlVQnuNzaCapKJObSj0k+AE7Ip1KfY91wH5P57BG
2DbsJv4Nudepq2dtwupjr/Cb5KbIFcbaYf2ptj5u5j/B/6k8m4rK/aTuG/w3
Pkdrux6bKLMda4y9iW3HZmBbsYbYWGwrNh3bgjXAXsO2YNOw4TRP+Sq8Fx2Q
+YIKK98rdx+N9s4/yf2s/Ce8kPepKrOZbuRfxTd7xlSZDVht7EVsNTYOy4eV
xR7GZmIvYv/BrsNewtZiE7BvsZbYHyitj4bY11gdfqTcGrnx2FxsD1+datAQ
77cRu15uFL9O7m25w3SWb03PYg/w78lt4stSOeqn7VdYOW0f4XvRWOyibEms
Jz9V26H8Wrnq2DDsK+x17EusNPYENh97Pu83b4S9gI2gGZ63BquGPcd/KTdW
bjVWCXsGW4yNxlZhFbFB2CJsFHYIG4ANpJoxLvwKqsAPkFsoNzKdfI/y2NPY
U3SHfj/FDirXo/r0ArYSuzqex3+u7UvaToxn8lfRp/oYxi+itFzHeBaNzCZz
o0huMk4xXrdjS7GiWCyaWZ43wPN2Y82wCdhubCa2C2uKjcd2YR9gO7Em2Dhs
J/Y+9l86x7eh57Du6WSNxFqpF3OGDmu3nq7NTcY4xrqzd9mB3Yy9xe+Qf0+7
dVgNbDi2AnsD+zdWCuuXk8z/WAfLsGJYb+xDbGA66aNWbjKeMa4T9bGc9hqj
krF2fQ6RaU1D5AZTQ6wNv5yK849pN1t2kOctwE7xLahlzA/Pmo59li8Z9xj/
Ptlk7DO5yfqLddgSu0X7tjRf3Y9YzZi74ZXPaltLHzkxJ2NNY2ewmlg+fjn9
CzuFVccuevay2F+wE1gV7Cy2FJuNHccqY2ewX2eS/Sz2tY60L/YIuQ/ljslV
Uncav4Bd6bMHPgUbwn9OM/j9cqWxY+qXYLOwo1hF7BS2EHsX+xErhR3FPsMm
x7zArsQOYQuw6di+GCvsCJbrfar47It/hP0t5h8d4G+g3ljH2CfTybg9b9xu
Vb4t1hb9D2tOg+Xu4w/SSb4ZPYPdG+3oON+YnsTu4vfGXOUb0OPYnfwPdIy/
iZ7AusZ70C98UxqEdeO/i/2Jv5H6Yp34HfQTf32sLawdP8Z3m8af9H2vwQ77
ntuiH2x4NpkPMS+20j5sGNZauQ29rO1U7Bdtf6asui1xTsW6Um6p3IoW0/vY
YZmy+jihj++xI1hD+ivWmV8U+yd/UK4MdlyuhT4G+SwccxRryR+Tu8jfGmON
PRhjTAXkOmOvYX/hj9IF/pb4LljP6JPO823ju2A9Yt561x7artXvGuqrjxNx
rmDt5EbJPcSfokuwLrGHY334RplkzxyJP0kN4oymN+M3jPeLOR3zW7aQcrdY
4+qe5k/TpVjXOLuxvvw/ZNfwRahonBfe7Sx+hdw9/NtyT8VZSTlY+zg/sYf5
t7RdwudSmnpouzr2IuX8MdZyV+TtxfO98zwqiP9Z7iSe3/Pu5F+Ve4y/W240
VjLGGrsnzl7qHWd07DFYHf6bOFvzzsmblZvEfKRcuQ74y3KPxNkTc4HPiXWD
XcKvjN+dz0d1sQL8q545JyeZUzG3usX5FvsOVoAayRXiC8q11cclsR6wy/iP
ZDthK7VbQX3i3Il9Iic2L3cbH/nz5u4Ufo/Mt3SXdvXxejRH3W515bF9MY+i
T+qnbZc4J2J98UPVN1VuRq9F31gmzkK5c95hMZb1eT/2DtZLbgn2q7iDYJOw
R+Pd4r6Xm8yXmDflM8kYzM37HeP3LKSv87Il5Lrzk+UG82focuxubALWn39F
25n8Bd+rDnZS/SxsO1abHsRqyo3FPuazVB87L/chtoOvQ3/EasllsLrqhmBL
sUnYO9hKvhS1w4phLah5rKdMsgdU887jlJcqF6NWcpeqH48t44tTa6xgOrlH
HMo7s+LsqpNN9pjYa+Zlkv2oBvajcudYg7RH21np5K4Td56qMX/pB5m9dJvy
7XHGqauctxfFnvRJJtnLqnteZaqUTe58MYerKL+pvFD58thTtc1qMyHOW74E
tYm5lrfevshbp7FeS2aTuRBz4uN4B6xqNlkPsS4+yiTz5hrsDeUFypdRk7ju
q5+JbeOvpZ5YDWxzOnnOs9lkbGOM98g1971+G/cUuSrYDVQ3zlt1u+TLZZMz
Kc6mvnKP00F167Cd6gdkk3y0W59O2gzMJvM/1sF8+ju21Rwq7hkHtP809ids
O1YCO4jNwyZhm7Fi2H5sQzpZP4M870blBrQx9l71ReL/inJjKptJ7uFxH29F
3/E5VFm5j/Zz5cfE+9L+WH9xL8Ta8+nYd+P/TE7yP+otbG3sJZ7XP+70ytfl
KcqzM8n3LptN7kinc5I7Z9w9G2WTe/vmnOS+H/f+0tiM2Nvi96J79VEpb39e
m5Pc7eOOX0rufWyLck3qLldN7rM4Q/jbaARWlP+AtvK1Ym/GqsstxM7wv6Mx
2P0x7thqvgx1wEpgk+O3iz2JOsX/KWwa9jVfkbpgZeK3wFbF+1N7rHjs/zHn
+dPGpgaW4qfKbcCups5QaWxK3Hn5CnQnVgp7F9sY64K6YRWx/wPxPOa/
          "]], 
         Polygon3DBox[{{1447, 723, 549, 92, 444, 1414}, {1081, 1080, 1512, 
          863, 864, 1513}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlFlIlVEQx893j9+XZUUWXYyK0l5b6NJrEd0esyAoCBGiCOSaWpBFBW3e
zAgCK/VJpc02K1ss6qVF26BdixApiBaLsEUtIVt+w8zDuf/fnTPffHNm5ny5
q8qWlsaccxtYntUZOXcV+Bk69wYdi60lw7mjMCb3KnDusFffF3AzMAr+DB+B
cXUv4WMwoVwXfBweBnfDTXAm/BquYfXBh9BT2EfA7+CT8HD4LXwazoI/wGfg
kXAPfBYeDX+BK+Ekmkb3ovOwl6D7WPlwqeRGYu1Oz/UAv03YGtF87CnsP7An
4AL4O3yfvY34NKDl2OuwD2D/hDrsPUgB9s1oH/YODnvFq895q1stukbyx38r
2kChA7gQvoZ/I//3h6pT8e9lr4iYVXA/9pxA3yWygmekTyk0gWF2oLGm4zcp
0DgPiXmC/V7JP6Znn4Bej2lNstA08ZvgOD7lrDKezcU2H54Mz0DTrCp4Pfon
1N6XoBNDyx/9HeocFKP/Qu1xGfo31N6XokOhzsRaNCvUmkn8PN63CP4GH4Rb
4Tx4cah1WIIOouOtzvXSA7jLaz3iVpNp+GXLfkz7JP3qtvpIzaVezfzMQof4
X+w1ptQwbrWVfkoNp8iMeT1jtsWuYz+TVRto/mNkbi0HyU9yk5pJ/WWvhb09
8D3zyTE/mdtdcBu6DF0e6DukV9vgG17nfwd8C+0MdH4qvJ5tjs2P9Dxh59pi
d7DQfCReh92Xnehtrz2VZ2W/w9652+YxYfMjuUhOC1g+Q2slfU/antifMleX
vN6Rx/AFr717FOmZv8JP4Ite785zuNXrDD+DL3u9IysjncXaUHshecj9kPu+
Hb6Jtkd6T+SbUxTpHNfjXxBpL6ttThda3QPs53huXajfAbHLGQf5n4I/et2X
c0g9M4g702kO8oFqsvvS73X25CzV9l2qse9bBdqOHrB5kLkY8Dozks8v1mps
77GNI/5cpznLNyqN/Y7Xb0IlfNdrXZPWj/9zM691
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtlVlIV1EQxs/1/q8tVlRQECVlvbYQ9VpE+VgJQQ8hlkmWqKntmPWkZuZS
YWib2Q7ttljkElQGPbSZPqembS9tWrTY8vuYAw53vjPnf86c75sZkzLyV+TF
OeeysBjWGzq3JnBuJ5YbOfcWPJb1KeCZ4FJwMn4i1on1gNP4FmI5xJ/GO1fH
Wg64GJyGBfgnuKSd2DNsEv4yzkyK2VoX8ZWB7U3BluAvxpbjv+asdPwibCP4
BfuPsLYJXA7uAB8FbwbvA//GasHjOb+b7yzwe/z5xBfhv2T/Mda3gCvA9XH2
jkQf7yR+nPhWcCW4Hz8DfzeWD35O/DBrBeAycBe4AbwDXOX5GefsDXvwS0Lj
LtnjO1gNfgd2UnnGjIvH5JHFWbdYqw4sP+UZEl9IvJl4OvG00PicK43wf3Ln
IfwB9kzEH2RtDv5l9qeyvzqy+5XH3XjLUfcrD+VeHBrX4l86bI+MW3GcSPwm
36rA+BXP77Bs/FKsgL2ZofE7QfqHxv1qvRW7Fpomeo/eJa1+SR/wcGw6/nXt
CYxP8foIy8Ifw5lX8Juw/YHpIV2kufJRXqoFaai49knb7NBy+cHvV4WGVd8J
Pj/VZBl+Y2i1Ko0PgG+Hpr00rQTfCE1rrSu+DavH/0683Znm4u8buM5Zbvr9
J/A0Zz2g8w+Cp4I/BqZHLXg2eCgwPZO8/hW6g9hDfrcefxRrl3x9SP9ycSBt
ItM3V5rif8aWOusp9dYgeK+z2hEf9eAFer+vrwFwoTMtpcdXcLYzvcXnF3Cq
My30ftW8ar8N/C+yflKvaCYk4N9nfR14JPgCflFovaaaUG2keD4a4qz+1OOq
NfXI5Mh6lD93KrTe1czR7GkGD0XW8+r9FvCfyGaC6vWq+iDe5hVL7oyPP+Cb
STyBtYuhzSfNtdP+PPXzcPB5XRpv84WPO8v3L/E+vsPA5/x7G2M2S9QbmlV5
rO3Cb/X71XPqvSasJGYci2tpJu1U46p11UxNzOaNOFI9zvD3rQ3sTJ39CvzB
GX/iV29q8TO51/ektJJm82JWQ6ol1YRmhWpMtSbOB33Pq/c1j6SFaigvsJpT
fnpDq5+x4qId24A/WjPEc6xa1nniXjkrd80g6SdOm/3/gB7P6T0/M/s9h23+
jX0+f/VWpZ81T8Dd+CP46RvW/wOd6tyl
          "]], Polygon3DBox[CompressedData["
1:eJwt0stLlGEUx/Fnmhmz7AIJQosIhXbhItf1F9imrdQiywrTqUULN2VaIC4E
W2hUXlKzLLvfoEW1iDAIN1KIROalCxGSqZXWos/TOzDf+Z3zO+c5Z573ndL9
uT31q0II25BFaSaEXCqEVtxNhzBaEMIn8Tq1Gnoa1/nTdC3vAD2Fa7w7znYb
tlfsEyZ9VfB2YN7we/It5i2IH4gvokVflfocb1D+3qxJvNY3S4vUD9JGDKl/
RLX4JK6mk76fzj4W92JMf595P3j35RfQwNvNW+I9kndhkHcivzfOeYan8Ueb
9z2b3P08qlhl+tp4Pe42Z+9W3nZ5t/pD8QLa+SPyr3SD/DBtxjDvmN5btBmb
1D7T47wW9Trs4qXt6OA9saMIO3kZXjtvWP5XXzlvydmybLI37n+HFXkXRvRt
RqVacSbZE/fdpi/xW09JNrl7fAYTWJZ/MXs97xBtwg1+Lf8yfSM3KnwQ1/H6
6Xjq/2MK0/m7nZXXolOeKkjONsj3oYP3R/5NvNGZI/QMbvKP8vvo21Ty35sS
9+CFuJB3Dq/y73xNSP5jz/FLcz0G4h30rFabEed4V+Iz4RXyZsWL8VnRS+iM
78Vl/gGwBGu4
          "]], Polygon3DBox[{{1519, 944, 967, 364, 47, 1012}}]}],
       
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0s1L03EAx/FvtrQsTQiiW+QfIGTn/gO7eJOR1SrT+dSDU+ZTmjO3tp5c
5S2kQ/9BF7V8SCuPEkWILIgIi67S8uTrBx7ee32+34k/2TyT6G3uORBCeKlT
RrRPevnN0sEQ6viLp7nDBsZiIZznCTaxnnE28pyS9gWmGWeW7Zxhiq+Z4RsW
ucpX/MxZz9jw/KIeHgphgOvupjmjF9p1v+Wu3/7Ep3yuZ/rvvU13KfuJCs59
fKy8fYeP9MC+HT1DOfsW+1ngFG9GP6NepZzzjD6oPjvHbmWVce7iR8+c4oRz
JyeVVNn5g/fu261K66Lm3A3ykubtIV7Wgj3MK3prjzChd/aiRu2r+uf3Ljnf
ta9p2R7jda3Y42zTe/seb2jVnmC71uwMO3Tc5/6XtfzDGm7zWPTd8yh/spo/
eITfWdJhe4tV3GQlv9GfF77S1xq+0OPCoJezdoXdYpf3/+f2AOGEU5k=
       "]], 
      Line3DBox[CompressedData["
1:eJwt0rlOFHEAx/FxxQegoiAx8ADGloInYDsqpbQwkUILC1ZEERLQ0nPdk9NF
QHBRUDkUDzxxF1dUrgWPZ7AgQAGfSSi++fz+s8nMZLK1Zy40nj8SBEFW/48G
wXE2HwuChItJFVxLMa2inWFWS3YPe/XN7mO/SvYAB/Xd7nCvB3ZOP5yXNWQ/
1E97mCP6ZY/ykVbsMY5r1X7MvCb0RGuudbrvU3tSU2pxfsZ1vz1nzPkFpzWj
LudZzqnbfslXmtcl59e8wTds5Vu+02V7ge/VZn/gR12xP/GzFj3zqvOXcOur
yq4Vws12vxXDbxZ+K225VuI115fDdw2/he9+M+I78BZXeJurvMM13uU673GD
cd5X2U5wk0luMcXfTPMPM/zLU569zWrP/Mcq7jNf4V3Yx4XwHTjFTuZ4kXGe
5XWeZoxRNuicvaeTdhPr3HeXNc5R7qjSrmeEJw7/bwdfNGkt
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1011, 1216, 1547, 1010, 1215, 1546, 1009, 1214, 1545, 1008, 
       1213, 1544, 1007, 1212, 1543, 1006, 1626, 1424, 1005, 1625, 1423, 1542,
        1004, 1211, 1541, 1003, 1210, 1540, 1002, 1209, 1539, 1001, 1208, 
       1538, 1000, 1207, 1739, 1410}], 
      Line3DBox[{1026, 1224, 1556, 1025, 1223, 1555, 1024, 1222, 1554, 1023, 
       1221, 1553, 1022, 1631, 1429, 1021, 1630, 1428, 1020, 1629, 1427, 1552,
        1019, 1220, 1551, 1018, 1219, 1550, 1017, 1218, 1549, 1016, 1217, 
       1548, 1015, 1628, 1426, 1014, 1399}], 
      Line3DBox[{1041, 1293, 1292, 1713, 1040, 1229, 1562, 1039, 1228, 1561, 
       1038, 1639, 1436, 1037, 1638, 1435, 1036, 1637, 1434, 1035, 1636, 1433,
        1560, 1034, 1227, 1559, 1033, 1226, 1558, 1032, 1225, 1557, 1031, 
       1635, 1432, 1030, 1634, 1431, 1029, 1633, 1400}], 
      Line3DBox[{1056, 1323, 1343, 1295, 1322, 1294, 914, 1055, 1372, 1371, 
       1731, 1054, 1649, 1446, 1053, 1648, 1445, 1052, 1647, 1444, 1051, 1646,
        1443, 1050, 1645, 1442, 1563, 1049, 1348, 1347, 1725, 1048, 1328, 
       1327, 1722, 1047, 1644, 1441, 1046, 1643, 1440, 1045, 1642, 1439, 1044,
        1641, 1438, 1413}], 
      Line3DBox[{1071, 1356, 1370, 1357, 1342, 1297, 1714, 1070, 1659, 1455, 
       1069, 1658, 1454, 1068, 1657, 1453, 1067, 1656, 1452, 1066, 1655, 1451,
        1065, 1654, 1450, 1564, 1064, 1308, 1349, 1351, 1350, 1726, 1063, 
       1330, 1331, 1329, 1723, 1504, 1062, 1296, 1653, 1507, 1061, 1652, 1449,
        1060, 1651, 1448, 1059, 1650, 1447, 1414}], 
      Line3DBox[{1098, 1671, 1465, 1096, 1670, 1464, 1094, 1669, 1463, 1092, 
       1668, 1462, 1090, 1667, 1461, 1088, 1666, 1460, 1086, 1665, 1459, 1572,
        1084, 1298, 1664, 1508, 1083, 1318, 1319, 1317, 1719, 1505, 1082, 
       1309, 1663, 1512, 1080, 1662, 1458, 1078, 1661, 1457, 1076, 1660, 1456,
        1072, 1401}], 
      Line3DBox[{1113, 1255, 1590, 1112, 1254, 1589, 1111, 1253, 1588, 1110, 
       1252, 1587, 1109, 1251, 1586, 1108, 1250, 1585, 1107, 1672, 1466, 1584,
        1106, 1249, 904, 1364, 1248, 1583, 1515, 1105, 1247, 1582, 1104, 1246,
        1353, 1352, 1103, 1245, 1724, 1334, 1333, 1102, 1244, 1581, 1100, 
       1402}], Line3DBox[{1126, 1265, 1600, 1125, 1264, 1599, 1124, 1263, 
       1598, 1123, 1262, 1597, 1122, 1261, 1596, 1121, 1674, 1469, 1120, 1673,
        1468, 1595, 1119, 1260, 1594, 1118, 1259, 1593, 1117, 1258, 1592, 
       1116, 1257, 1591, 1311, 1320, 1256, 1720, 1321, 1286, 1335, 1300, 1715,
        1467, 1299, 1114, 1403}], 
      Line3DBox[{1139, 1273, 1608, 1138, 1272, 1607, 1137, 1271, 1606, 1136, 
       1270, 1605, 1135, 1677, 1473, 1134, 1676, 1472, 1133, 1675, 1471, 1604,
        1132, 1269, 1603, 1131, 1268, 1602, 1130, 1267, 1601, 1129, 1266, 
       1375, 1301, 1306, 1346, 1712, 1516, 1338, 1287, 1313, 1717, 1470, 1312,
        1127, 1404}], 
      Line3DBox[{1154, 1279, 1615, 1153, 1278, 1614, 1152, 1277, 1613, 1151, 
       1681, 1477, 1150, 1680, 1476, 1149, 1679, 1475, 1148, 1678, 1474, 1612,
        1147, 1276, 1611, 1146, 1275, 1610, 1145, 1274, 1609, 1144, 1366, 
       1376, 1365, 1377, 1143, 1367, 1729, 1337, 1339, 1336, 1142, 1727, 1361,
        1360, 1140, 1405}], 
      Line3DBox[{1169, 1283, 1620, 1168, 1282, 1619, 1167, 1689, 1484, 1166, 
       1688, 1483, 1165, 1687, 1482, 1164, 1686, 1481, 1163, 1685, 1480, 1618,
        1162, 1281, 1617, 1161, 1280, 1616, 1160, 1684, 1479, 1159, 1683, 
       1478, 1158, 1514, 1682, 1354, 1326, 1355, 1157, 1363, 1728, 1289, 1362,
        1288, 1155, 1716, 1394, 1406}], 
      Line3DBox[{1184, 1285, 1623, 1183, 1699, 1493, 1182, 1698, 1492, 1181, 
       1697, 1491, 1180, 1696, 1490, 1179, 1695, 1489, 1178, 1694, 1488, 1622,
        1177, 1284, 1621, 1176, 1693, 1487, 1175, 1692, 1486, 1174, 1691, 
       1485, 1173, 1510, 1690, 1303, 1172, 276, 1316, 1290, 1170, 1718, 1395, 
       1407}], Line3DBox[{1199, 1304, 1711, 1511, 1198, 1710, 1503, 1197, 
       1709, 1502, 1196, 1708, 1501, 1195, 1707, 1500, 1194, 1706, 1499, 1193,
        1705, 1498, 1624, 1192, 1704, 1497, 1191, 1703, 1496, 1190, 1702, 
       1495, 1189, 1701, 1494, 1188, 1517, 1700, 1378, 1380, 1379, 1187, 1368,
        1730, 1369, 1341, 1340, 1185, 1408}], 
      Line3DBox[{1386, 1206, 1738, 1385, 1205, 1737, 1384, 1204, 1736, 1383, 
       1203, 1735, 1382, 1202, 1734, 1381, 1201, 1733, 1409}], 
      Line3DBox[{1416, 1230, 1073, 1566, 1231, 1077, 1567, 1232, 1079, 1568, 
       1233, 1081, 1513, 1569, 1234, 1310, 1506, 1570, 1332, 1345, 1235, 1305,
        1509, 1571, 1374, 1236, 1085, 1573, 1574, 1237, 1087, 1575, 1238, 
       1089, 1576, 1239, 1091, 1577, 1240, 1093, 1578, 1241, 1095, 1579, 1242,
        1097, 1580, 1243, 1099}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{656, 821, 909, 336, 1730, 642, 311, 860, 276, 628, 288, 878, 
       1728, 327, 614, 780, 1727, 903, 601, 768, 1717, 867, 866, 587, 755, 
       1715, 851, 850, 574, 1581, 744, 562, 1566, 733, 1660, 549, 723, 1650, 
       538, 713, 1641, 524, 699, 1633, 509, 985}], 
      Line3DBox[{657, 822, 908, 1700, 643, 808, 853, 1690, 629, 794, 877, 
       1682, 615, 781, 906, 1729, 888, 907, 602, 893, 892, 1712, 859, 839, 
       873, 588, 1720, 756, 872, 838, 887, 575, 1724, 745, 886, 563, 1567, 
       734, 1661, 550, 724, 1651, 539, 714, 1642, 525, 700, 1634, 510, 685, 
       1628, 495, 1739, 984}], 
      Line3DBox[{658, 823, 1701, 644, 809, 1691, 630, 795, 1683, 616, 331, 
       1376, 345, 1375, 242, 589, 1591, 261, 317, 1353, 316, 564, 1568, 735, 
       1662, 551, 725, 1652, 540, 715, 1643, 526, 701, 1635, 511, 1548, 686, 
       496, 1538, 672, 471, 983}], 
      Line3DBox[{659, 824, 1702, 645, 810, 1692, 631, 796, 1684, 617, 1609, 
       782, 603, 1601, 769, 590, 1592, 757, 576, 1582, 746, 565, 1569, 864, 
       863, 1663, 552, 844, 843, 1653, 541, 716, 1644, 527, 1557, 702, 512, 
       1549, 687, 497, 1539, 673, 473, 982}], 
      Line3DBox[{660, 825, 1703, 646, 811, 1693, 632, 1616, 797, 618, 1610, 
       783, 604, 1602, 770, 591, 1593, 758, 577, 1583, 884, 883, 885, 1570, 
       837, 865, 836, 1719, 871, 882, 835, 845, 834, 1723, 881, 880, 1722, 
       879, 528, 1558, 703, 513, 1550, 688, 498, 1540, 674, 475, 981}], 
      Line3DBox[{661, 826, 1704, 647, 1621, 812, 633, 1617, 798, 619, 1611, 
       784, 605, 1603, 771, 592, 1594, 759, 578, 904, 905, 917, 916, 915, 
       1571, 849, 858, 848, 1664, 553, 862, 870, 898, 1726, 897, 896, 895, 
       1725, 894, 529, 1559, 704, 514, 1551, 689, 499, 1541, 675, 477, 980}], 
      Line3DBox[{663, 828, 1705, 649, 814, 1694, 635, 800, 1685, 621, 786, 
       1678, 607, 773, 1675, 594, 761, 1673, 580, 748, 1672, 567, 1574, 737, 
       1665, 555, 727, 1654, 543, 718, 1645, 531, 706, 1636, 516, 691, 1629, 
       501, 677, 1625, 481, 979}], 
      Line3DBox[{664, 829, 1706, 650, 815, 1695, 636, 801, 1686, 622, 787, 
       1679, 608, 774, 1676, 595, 762, 1674, 581, 1585, 749, 568, 1575, 738, 
       1666, 556, 728, 1655, 544, 719, 1646, 532, 707, 1637, 517, 692, 1630, 
       502, 678, 1626, 483, 1733, 977}], 
      Line3DBox[{665, 830, 1707, 651, 816, 1696, 637, 802, 1687, 623, 788, 
       1680, 609, 775, 1677, 596, 1596, 763, 582, 1586, 750, 569, 1576, 739, 
       1667, 557, 729, 1656, 545, 720, 1647, 533, 708, 1638, 518, 693, 1631, 
       503, 1543, 679, 485, 1734, 976}], 
      Line3DBox[{666, 831, 1708, 652, 817, 1697, 638, 803, 1688, 624, 789, 
       1681, 610, 1605, 776, 597, 1597, 764, 583, 1587, 751, 570, 1577, 740, 
       1668, 558, 730, 1657, 546, 721, 1648, 534, 709, 1639, 519, 1553, 694, 
       504, 1544, 680, 487, 1735, 975}], 
      Line3DBox[{667, 832, 1709, 653, 818, 1698, 639, 804, 1689, 625, 1613, 
       790, 611, 1606, 777, 598, 1598, 765, 584, 1588, 752, 571, 1578, 741, 
       1669, 559, 731, 1658, 547, 722, 1649, 535, 1561, 710, 520, 1554, 695, 
       505, 1545, 681, 489, 1736, 974}], 
      Line3DBox[{668, 833, 1710, 654, 819, 1699, 640, 1619, 805, 626, 1614, 
       791, 612, 1607, 778, 599, 1599, 766, 585, 1589, 753, 572, 1579, 742, 
       1670, 560, 732, 1659, 548, 911, 1731, 910, 536, 1562, 711, 521, 1555, 
       696, 506, 1546, 682, 491, 1737, 973}], 
      Line3DBox[{856, 855, 854, 1711, 655, 1623, 820, 641, 1620, 806, 627, 
       1615, 792, 613, 1608, 779, 600, 1600, 767, 586, 1590, 754, 573, 1580, 
       743, 1671, 561, 847, 1714, 846, 889, 842, 912, 914, 913, 876, 841, 
       1713, 840, 522, 1556, 697, 507, 1547, 683, 493, 1738, 972}], 
      Line3DBox[{978, 480, 676, 1542, 500, 690, 1552, 515, 705, 1560, 530, 
       717, 1563, 542, 726, 1564, 554, 736, 1572, 1573, 566, 747, 1584, 579, 
       760, 1595, 593, 772, 1604, 606, 785, 1612, 620, 799, 1618, 634, 813, 
       1622, 648, 827, 1624, 662}], 
      Line3DBox[{987, 793, 852, 1716, 952, 970}], 
      Line3DBox[{989, 807, 868, 1718, 953, 971}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
OORNAQNfsVMD+8YpaoNr/Aj7xc6H1YImJnBzWuSN1BgNfBGQrSba86Rn5tDK
ChvgoimmHtJmgQeymZeJcRtbqLkbjjmB5VTKiZx8Llh/KxjreJc5DtU/V2eE
kIOJvKW5cqCup437MXxmmaPtSiPoOUlzRYtbGlhq7i56MzMMdj2LmU1pklCX
Z8A559AN8LpPobt87nq713w+vhIx6GDcxuv8+y0h9WPqGMG3eeT36RRVVShi
CFYuL3BeBzu89u4g5mEm33CB9Ra7kIbU/h7DEFOIjvYdJPS9fQ831GzeHoAe
pp7LTGg3BevZrHBi/r/dKK5d4rIdbZCRuuIstw4q2OTwuv/mEIto4HseuEuV
fOrrioeUhTxqTZJH/Z/2C1ekKu6XDSlZGh2vFaGh337j8oyef3GtP5Bc6+XG
SpjLOtqb1Ji+UgeUKnM1ebkm/sW73kTyrgetdj4g+itLpZd/OtcGfctfVy+7
QRQaSA42K8nBfkdysIu+mHkJzQyj/d79AqpvTyE9ie/DZcV2YK8tfCFmrl+4
QsI3Fh5ORoMyOnr2ig5ge5MlhljXHl+dKCjcG4x0GYsknjTC/Hm9JXlef4A8
r/eMzeEn5vlSneVvd8tvR7bJErvEsjXnudn6JDfbhORmU/HLWhLzW8uWlSl8
Ad6oOYcuIslXc56nLUzytO+SPG3/bj9u4v8NCXPedsV1EzrvMnLqc/3aec72
AMnZLiQ525xvihmJ/7fRc7GRdr8bMojij9hHTZnnb0eR/O3HJH/79iWBdOJ6
7RBuw1rjjUjVKZbx1yYdWEFyuR1JLncNyeX+Nkr3g7ieWbnRuMvVGZ32zw7b
8VN3ntcdQ/K6f5K87q+rtZWJdpMoDmJ91e+EgsQVSh5W6M9zvF1JjncbyfE+
++Z3PvKkXlp/axc3RHE61uSlPfrrOEweC8LnKSWpq8KojinDUOwt8a6VfRQU
4mtXMzceCgZjz0av3IsOs39IQPRrIGqxWh3xH/WWn9f64rkLjdr7M+jcUoZu
qRGsv3U68xewfHJC9w8wuZzfJQY/LNgViPvzdLQ26ViZI+Pbll1PfSThzGcN
zLdvUuo7b8ZuimYLG2v2rZIB5qeNvoSdbUWTXQ2dMVK0kruUnakAnRJWmKM4
M1MbpZNqiB59qRB+56IMFX2hmAP2uUg/VCreAMWYRnvPyK6Bm0Wfwgn7CHes
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
rSDCurlLx+jt/2f1zP8F2Z1dDQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 273.74526420084914`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.0001, 0.01}, {0.1, 10}, {-2.262544796401358, 
    280.44002771615226`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5744271550789681, 3.1274789765638733`, 1.1571122221543308`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.7474860999658623`*^9, 3.747486121497398*^9}, {
   3.7474864642732773`*^9, 3.7474864780579042`*^9}, 3.7474866590678377`*^9, 
   3.74748669018504*^9, {3.747486834524412*^9, 3.747486863901559*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["h", "\[Pi]"], ")"}], "2"], 
     RowBox[{"Abs", "[", "%315", "]"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.00001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747486889128278*^9, 3.747486941594182*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Q+rG6cQ1QzLKhVgX/v1bt3+vlpFjTMb/AFnP/7k=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 1}, {0., 0.8027294513776269}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747486891539084*^9, 3.7474868969275923`*^9}, 
   3.7474869427850237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", "%315", "]"}], "/.", 
   RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
  RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}]], "Input",
 CellChangeTimes->{{3.747486129811481*^9, 3.74748614015895*^9}}],

Cell[BoxData["3.4728208690086331054551544802129885174997723236902`15.\
954589770191005*^62626"], "Output",
 CellChangeTimes->{{3.747486136653698*^9, 3.7474861406233*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"approx", "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.01", ",", "0.01"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474861636333942`*^9, 3.7474862611702013`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plld"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Endpoints for \[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\
\[NoBreak] in \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"0.01`\\\", \\\",\\\", \\\"0.01`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] must have distinct machine-precision numerical \
values. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Plot/plld\\\", ButtonNote -> \
\\\"Plot::plld\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747486200458234*^9, 3.747486261685618*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plld"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Endpoints for \[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\
\[NoBreak] in \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"0.01`\\\", \\\",\\\", \\\"0.01`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] must have distinct machine-precision numerical \
values. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Plot/plld\\\", ButtonNote -> \
\\\"Plot::plld\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747486200458234*^9, 3.7474862617035513`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plld"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Endpoints for \[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\
\[NoBreak] in \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"0.01`\\\", \\\",\\\", \\\"0.01`\\\"}], \
\\\"}\\\"}]\\)\[NoBreak] must have distinct machine-precision numerical \
values. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Plot/plld\\\", ButtonNote -> \
\\\"Plot::plld\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747486200458234*^9, 3.747486261721098*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Plot\\\", \\\"::\\\", \\\"plld\\\"}], \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747486200458234*^9, 3.7474862617396183`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"approx", "/.", "\[VeryThinSpace]", 
      RowBox[{"h", "\[Rule]", "0.0001`"}]}], "/.", "\[VeryThinSpace]", 
     RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.01`", ",", "0.01`"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.747486200511532*^9, 3.7474862617406473`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"approx", "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", " ", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474862822706633`*^9, 3.747486373724421*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
aQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -750.3630623213463},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.5}, {-750.3630623213463, 188.3899683541512}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-782.8789316179756, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "340"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-552.620422318571, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "240"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-322.3619130191664, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "140"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-92.10340371976183, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "40"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {138.15510557964274`, 
       FormBox[
        TemplateBox[{"10", "60"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-759.8530806880351, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-736.8272297580946, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-713.8013788281542, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-690.7755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-667.7496769682732, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-644.7238260383328, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-621.6979751083924, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-598.6721241784519, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-575.6462732485114, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-529.5945713886305, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-506.56872045869005`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-483.5428695287496, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-460.51701859880916`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-437.4911676688687, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-414.4653167389282, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-391.4394658089878, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-368.4136148790473, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-345.38776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-299.33606208922595`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-276.3102111592855, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-253.28436022934503`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-230.25850929940458`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-207.2326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-184.20680743952366`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-161.1809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-138.15510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-115.12925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-69.07755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {69.07755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {92.10340371976183, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {115.12925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {161.1809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {184.20680743952366`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {207.2326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {230.25850929940458`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.7474862771522293`*^9, 3.7474863037802973`*^9}, {
  3.747486334106339*^9, 
  3.74748637437449*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
HYcumh8gcmbEPm2crfBdkGtUlQJ907BQfOaE0Krf/bDbZTUMu1M1C9OXXaKm
GdJa93aLEdvjai2mVRWn323VvbfB/RBb42g0jaIvVjrrlZ3yY7hdCPZtQxyj
N8QyEB7RVeyrZrharumb0IhQHV+wkh9972slv0quqdMPp9HzzuSj9w1vlRbQ
6qBHv98j2OzeeNrTgdozFTiyNRnTZIyZTnngA7e4lVqgaYX4C7ZYvC04tmkx
smPfQGwIlih62zBYgts9RYVp/Hu9EQPPlY3IWRGScL3vY8/JNXV+y1lZZn46
zvo4dE6ajedWamZB+6w1RYioM5rJ1YmITn9fdEJ7WqPNkb0eHYtfdE4bTDbq
Z4wv2auobldbDJ/4XnIi56TEyCdatg2HOIW3I9oKSatSQ9rmz+St1N6Ldpb/
CtPKntCspIKarPRleSsvWXERalfIm1QQrttTZfx5BMIQ8cdDYol7qq9Ex6Jc
asDGl8dt1iZKLsc0T/BpkC1KZ++vOrGDog3xxNeiQ3BUcuF+kR+UyU7qL6Lj
ckTzZ+zcfcKoizef/npvuAT7+Lw15cZf2rP4trxEDZVgQz8BFiqF2LPfiMTC
rBLMgu1Iljgkl8t/26Ayi1ULw+hlScFMmMJVUMKMDoREiaxCfxWJ0QDBSIVn
4sL9TGWUSm68GTI3GS1/7SRajOCjaZ53lGiKcwngIxsFzzcjARuoOyyQgtRq
7ZUM+ZMAKhqpFf1WJIaDejDkl5o58XjrPclVj3Gy5bcjce0ZV+qhBE8KVF0t
1iJW1XiqQC9H4CxsGaPRqlnJqqLKXdpy0uKDguW2gxf/JjqwOnM+WMrmZoe2
TIcgwXxjyflXomPePwQiM6ew2BbCXH6A4Tv2zFV/0oc9/ZMWeAdowBReyoot
FnhpG/huL/B+uH3/kEDMqCd0XGe5OEhNNllr8r1Imnw0g4EhFi6xUWSDtSJ/
G50ifT05sFJgsIUClAPvWivw/d54ok+nC1Y63G+hAxWJtZoODFjq8Hf2OgyU
Bv9dPLI3P/rSi3mDrr2qCtSYrglZ5hJJ2v/AgfYf7dN6O8WjGD88YOHpd7af
WSWXeb9UuxoV8r+PHMR9O594pOcD+76ZRTyo6ay28iWbT6+Uy/rJo+jopR/a
6/yi8l0fPZ9/SAOmTi90Llgul/lwr4AdPF3/I3tgX1J69nZw8YgUqQ5mfHCl
dFgml/ngqB2j/sEeyUsyyj7o9EIBUudxLlYUnG/LZXUu5uMngfvHyIA+6Ajj
USlZna3ZHOSgxdqydrT+J3tAZsf7gUYaj0mh3GbwIZw7QDqQL5TL6uPacdRQ
EZYf22MJHk0fl7T8FIhZsi6kU4FYHtAjQnmT467inyPwDQGtJHC6qa2HDr9z
pQReVgWJkpMlGv8SnYRPS1Zcx9UJmI/ZDHaOlK7nFBW4f4tOwhOSi0oT1oOA
zw6JSpkm/+7E8EMkrWqy5KeYczTDK39yE0jSjP+IDvQQDZ1yLe352ZoEVRXZ
tSzhP6OT8KTmQ+VaZfhMeU0ZXvfvT6IT81kNse4BYm2ka2ZULth7/PJ/OXHB
U5JW5bD8mEWKJq7g3RM9XPBTyfdXubvFOv1QyeL3GPWJDHFHmO+JPCXZ8xRC
GYZTjI023cJo7CM22quS16JNJ+GaX8pfFaGNZPmOs6RB/trjYm3hxpNsicH2
0p/WlFOJzZL4A/TTtGsh9jRc9iw/J814+MxVPc5cWnCoBFdmnBrqimcsbubR
IN8cJ6/xc1qVwjzxYaNMs4f1rISldhIJa7LkxsVCNwDtJobbnttzmtdUqPOY
hQFOlNfYZsFQP8X7lvSoJcvPa+YmYAFz8yOT8VogqJLGxuPPLCSHGm+4jaUJ
qzFOhmOoTxkfraXYwxuhacVuVVqxxmPkNZ4GsSRdYpo9y+c1oGoOIt1ijJJA
WWP9GruPgKbbc31BcuUtjM+wyqNsq59r6jMnXX1CkRlqyhc1pXl3VXHIir0a
Ykrlar5OhsiyR/iipOSY4+/NMAKmZM+Svj+xYcwWpfPfTHvGL0lKNqiqjPyz
YMNJXjN3OfMrSJTEAcb8eS7+mzMox577lzXuzFFxZ/eQQX6scWfYKhDGkxQ6
Twvus0IN/FULN/MPf40rcNYdJCzF/tIRy0gw8uwRf02SM2J+0M/P4UQ4zH4P
izaeEjX2+/IeRsAbkoptaW0hIt9exNdDtB6daUbJyOTtgh1vSq+E2F0lJfud
fc4fB59nL0KNjdkIhUXn+EtO1CaZmwyjZENwFn5Tijl67qrwj9JEFUiGMt8U
Y9Yax6O1xwL+UvNYthafR8ghASz85asDp64Iq5rz/8HiPsY3RsPC6rMZ6L6F
OpzoRmPqA6i6pV6WUvmLeRxNKmVZKkcUIyFEZpqY/Ra3NGwsCg2lB2/mnMQX
6luMJeEAhh9+WQF8RZPM+9fbW06zCU3J/TEqbYc4nkgrjpBe4ruVwdnIumM5
ALiGUMVZFg5r+DmXFVY1emPJhbvO4bXUHfSXCZSlstWKKa9JsvhYGZVJ/rLn
gVP1ws4MlOxvBHRL3yHW2PO0Ey6PADbMQMsK7A9CDLu6uJI9bgofLCw1kn5e
S90uDkbr91YLILx9k6Ef1xKUawUHBatGpykRrWTwgOqsB6+xjnSfOTGRp4sh
vZljiY7vUlEBUqe6kJCYhZWHG029redYRnCQ9SNpd8bNqvCxIY/Oh/+dtoNW
Ge/jVIi24Wf0E/vWPlFs8teeoJNKKbmvAku3nEFu4TFx8MlbXY7Z9LN40ylh
numUAdkrjoo8YjrOH+Jrsh2A17OKhBlmUKvAZuLisjbEFtGPtuC5sg4p2UW4
Ij5ZX4El7hzsb/bZjbYsW/R/lVWAh1hcCdiTHA9pSw/jF1Se+TElwR8k0/2n
csvhv8x4uV/EC2vISicuPCCeSW7Yd14kpowZY6MewU9EMezy4sauNKQX3YD5
7d8OVOa6sai2w26YZanlq9L3t27fpZi9I3LvBLV2J87fIDUOnblK9//2/Zsi
nptudRpFJtzg7Oou6goTMCFjB2rv+OBtPo4lidlk7M6oZlfi/dlQ3h7Ur50O
94rVKMhMwrSkXBQevgGP33YEZQRnUILjc6Ecfbh1NAtJhXXy/xXyoautDV2+
6MZJOlo1LPM1H0CuewmOt3jhuX4Ic9wLUEUFPYovbVixFV+lOr0Osym6J8em
4Z0jzaa/nc93dLYh3xR2+D+o9Mn1/ydSxe/y/3A0+v0fqbCxwQ==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"exp", "[", "z", "]"}], "/.", 
        RowBox[{"z", "\[Rule]", " ", 
         RowBox[{"x", "-", " ", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "4"]}]}]}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.00001"}]}], "/.", " ", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exact\>\"", ",", "\"\<Approx\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.747486979323082*^9, 3.747487067957354*^9}, {
  3.74748726889158*^9, 3.7474873133247147`*^9}, {3.747489097017149*^9, 
  3.74748912443933*^9}, {3.747489160829278*^9, 3.7474892039584503`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwtmnk0Vd/7x6UICRlvUaFEUmah2HaZGiRFCplKgyglREKSzEkRkSGSJmQe
ynZOpszuPdc83MFMhsLHEL73t9bvn3PWa6199n7e7/08+zxnrSPleOecEzsb
G1se6/J/90NAdHx9fRol7iZp6Hmy4ebOsiFLy9Poz1fJo8PX2XCfWM19f+en
kfyRwaToS2x47YSV4/DENEpy93/w5ygbbh+f0t3YMY10cMG+8Y1s+ItZuYaE
nGn00XyW3UFmHZtLP/JF1W4a8e6MvK13fRUr43K4fb1iCu0QWs0+sHkZ829q
n8AcfqPEz8/ZB8BfbOz9drHDEpOofN05ed5oApMfMObm7xtHKdLEB2YxHftn
tKCW2TGO/tz/9PbNCzrWnJtur0MeR3FHabtdb9Gxe4Frxbdqx9EXzLv56m46
VipTcK3u2zi6uhY2lxxCw4xddlc9Dh5H7UM1N/wq+7HrS/N+c4rjyGHBdNHJ
uBvLEEqf6wocQ9134/5+WG3DqnI3hzc9GkNVhxwSeX+2YUMmLlLYgzFktnia
Ky2kDdsXon4m6/YYymtrlb4k3IZl/av94Gk1htqmj01zHGrFvgxNWgmpjCEF
+2vxSUQjVlCsgZ2mj6KsZ8XEH94ajDBPtNTrHUX5WqetktKrsfnZ9d+qHaOI
v6hII0O7GtNQ+LVDvGkUmcrIVzXfrMJKUq3vj5WMorO9vd2RjTj2PTRANjh6
FBWddvhgZoSwn9b1kQiMot3fXp0fVMzHWjOEZgy1R5FHxG6uuat5WP9vm3PN
aqOI89nWo31vvmGL/tOifftHUVPqkP8R7lzsUIZw6rLQKMoLjZgyoH3E3kza
5qmPjqDchJAPjIREzO3R3/bP0SMoerJrpU8xBvrVHNVSDR9BXoK/HyrOvILh
/MGJZU9HELuatrPy19cwM41k/8tnBFkEuqef2PkW9lTrjA1fHUE89tJJM+Pp
0JAvZEVKawTN1R5PzTbPhhIpEpLx9GFUO593oem/Evg14fFWrd5hFPuzqn9r
eCnUfTW83NU+jPIyRdxDdpZBu9BcqnjjMMplx6IV9MrhO3f98JSiYfQt8sEl
Dd8fUM7YZSEzfBhNPlSSRSOVUG22vLFQfRiFLr09c+BPFayekCy7oDSM8PlC
IkWxGl4YfvrhP/lhNKBjW17gUg29ekwDtSSH0ZMhZVLlUDUsq2Ye/sEzjPjl
iG32lBqo92ZLetXAEFJ4Eindl1QHTx239qaEDqEFZCYcOdYA5e95tbUGDaH4
B4u5U2KNkCft5f5m/yHUvCuIxGbYCOvWGrrqPIbQmOnjNJW0RmhYdlS7wmEI
GQ/H83Sdb4J6yrtWsrSGkPDR6XTdT81wt732+Uy1IbRRqfziB0ozXIu68Dld
cQiRMxq0sX/N8MdklHWyzBA6ftmhn+tMC9TOWi9/uW0IcefwbR6fbIHqu+m+
fmODSCTA4fbGqFYofGaVeDg4iHzcxE8bprbCOd/tB70HBlGNbpyrY14rzOs2
63OnDqKX4eaZ+9pboVIcrnMTG0Su+hpiNPE2KL81Y+18wiCKXtgtLZnaBrmP
Vl4wezWIdhml7f+X0wZHnXuzzzxnjfdoF89DbfBDnbDdiaeDiE1x69jn/ja4
N+gp0r07iB5apcHOHWS4e+VawP4Tg8hm5fF7iQgynKRezyg7PogOeYqTf7wh
w5LcG3WndAfRln3pf1Q+kuHZa84Ct1UHUcOrs3oJ1WQY0OaamrdzEHkOZtlb
/iNDxof7lUf+MJGbw1XRDAcKzA70GGycZKLCbdiOMFcK9LnsyWU7wkTzlUdb
9L0pUEjowdmAXibCJM08NKMpUN/vIa2qhonWjihPbP9OgZnmgWxnEpmIr21w
rHkLAe8pPtk7EMtEsWlDmzlECKjLE2TsFs1E/GFOAQK7CNiBnkbHPGWiXyMl
WR8UCch1IFSy4w4TlQm2jHacJSDBEaZ/w5mJTub7/i69SMBUWtiNpatM5HRn
55u79gTUiovIFbdiIqs6IwHHOwR03hCtZ6/PRJNfXtw2DiegRm/01VldJrqe
Xfet8wUB2YtfhARqMZGh55dB3XgCJrq8bM04xETVP8OPRGYQ8IbRqzn1/Uxk
l2Dm5vGJgGrSsaTaPUxUd/VikWouARs74uzHSEx0SiUzTqWcgPF5r4N8hJjo
lcGEnnslAa9Gxmdt4WMiyrqLRFg1Af8dezNzcCMTzT3dEKzdQsCD2W8D7v1m
oKhbEfOZNAIa/7Dgtx9loHZXzu0XBwno2Lg12YTJQDyfatYHR1jzjz8ql+ti
IBHO+wdjpgiYv6R+UpRgIJn9F/3zZgnYzDXVubGFgQq03T5lzxFwk6ztQn8V
A+0q0kzTXibgbg3Rp42IgU7lK3rV/yOgtkGzUFkZA2XdG9HWWCeguXnwuw+F
DNTbcnL20QYqvHNFVzk2l4GGfh1MSdtIhWH3FlDgZwZauWhyIo2DCjMeZ59x
y2SgR/qmc76bqRBFX+u7nMZAw0tYhho3FXan7HI5lcRAZxwl7Op4qHA+u31Z
8zUDxZX8kNXkpUKBiqjQfTEMVGj3mz1oKxXKNxmShCMZKLy4e+4zHxUa9K5l
bghhIP65pA25/FRoP1GkPh3IQM9nVQ5GC1Chz/Ltqt5HDGSx5cnD09uoMJZb
9nz9AwaKnLGaGWRxLmmAXuzOQAved55fEqTCBtnXbu9vM9BvPxubTywe1jBd
j7nJQPRPGVYdLGYz3BwVcJWBbp/7FkljsbgFkrhtx0A6xuTFahZrXPX6bG3F
8jNPJ+UZi8+6K2qfsGCgoj7+IBkW3wocqdM4y0CPRU59SmGtH/wixXLvKQaS
9OgQXmDFm5ZqObzNkIFgRWCNHIu/5/B7rOsxEFJgww+z9LVX1G78fYSBrpwa
5d7D0j/b5B/TrcFATbUlqeMsv3j7DkvVKTNQoiERErWFCvdNTucUKjAQcTiw
io/lL1z5oJsuy0Dmn6YsbnFRoQ2PfVO0NAOZScqDDE4q9NpOsvHbyUAOjvsD
SzdRYYxc6/gtEgPFnK+W/MxOhXWGelxGfAyUavzJa88aAZkWi3Fq3AyUxEFS
/bRCwLWruTLSm1j5Gnbr7NYlAqo+kTy+ukRHZZLkwht/CXgmprNtfI6OyNge
NocZVv2kRdt3TtPR4ZmOXPXfBExGbH75Q3SEibwzvj9MwNLmEt40Gh09auJR
7mew6rvPLTGqh468NB8G7h0gIM8/WsnNNjoiUZscDDsIKLMlwciykY5Cjm+b
kaIQUG+HWbt+LR1JBe4a7WomoIcm9nf3Dzo6dIBTZIBVb7T7aYfas+ho36qe
pW4eAf3UPYz70unIOevIothXAkosGDsOJtNRNL3GoeUDAS96zcT+eUVHe/RN
wjqSCNjmDVb5HtPRy9RcXpOnBHTTFhIT9aWjnMy4ZmF/AvKtDCvt9KIjzZR7
JmUPCHjSN+rqAVc64jSY806+RUDcr6/B6BId+a+Hn2kwJaA9+DZ0xpyOTmI3
SgOMWX6uB61bmLLW92ptEoKsenysoHrVgOWX7r4RsjKrvp88fBOgTEcpW5f9
C7YRMCNk+81SbpZ/9Df/NjRQ4LETvwMrN9HRGbNO02iMAmncWFLtOg1duz3H
+6+YAiXCb7RS52no1SWp3FsZFBgbWXz4D52GkDB9w+eHFBgcY8F5oIyGtr3u
e52xhwL3nt8vqVJIQ/suHCJzkigQF1rV0sqloU4kL2TIS4HrrzJcjTJpaPqm
erj1HBk+eP2XuBJDQxf0PL3pOBneTHqRnuRMQ4FX1lfMLpHhHNfJ0MNONKSi
Nvvw3EnW+8aD/Q7ZjoY4Y8IU9h8hw7gz7tpcFjS0l9tn8qIEGeJsFm3ugIbY
BybdK3vb4A4n0vpJYRqqmBY6nm7RBt+3tQ4O8dFQZoX4OTb9NqikG1ofwE1D
2416PqqotMGIQ3MHXFcH0C0gPSvK1wYHY4ov6ZMHUH2+CVvvz1YYa61b+Ofh
ACKbb7pkLNsKv6jlBMjdHUDYK4kPs4KtEN8qedr22gCatt11qP9fC5xCG5i/
zg4gByV7ocaPLdBwb7VAmswAkmrjaH6y3gwXJk+5mLb0oxxJNp6jb5rgRb9L
e75I96PqQi4Zn/B6uKVSs+oNqR+d2eW+b9GqHlZsIDmF8vUj54vlF/bK10OZ
p+2Z15b7kH+YyuPg2l/wT/h5eSlyH7rTIxztslYHIxJMlOMe96FG6q4XMTa1
sLIAggBaL3KL5Gj52fkTui9I0m6396JDsn3bUt/+hPs02R5fbuxF5w/TffY4
/oSR5RW4dkkvq3+2Lt81jkMr/Ijh/PNeZOuNlQ3MY3CuRd3EGfQiEYfpzamL
CMpN7Lc2T+5BcW4213qfFsPCIPJL55c9iHJKz9Vhsgge2/WwMSCkB6lKW0+t
mxVBG7NGna/3epDtD5wreEchjC6+Lclp1IPO+/4ZSE7Ng0tP8oeKp7uR0j6B
cj+2z7BeQsdNHHajLxbHxhbUg6Bl0VCWskY3ir3yQ1xrwhcOmkbRjQ50IylY
UqZldReuBQ6cuy/SjQTs7TszmJaYythj9aaxLmSi0LqZnBeGvSmsWfaL6UIf
U/yE+X+/w26dOfuUwexEz1YWCefQImztpBJxoKsTpd6Z4gf2xViMkcAej+ZO
VKy4T1xVswQr02ut3FzaieA5Wqb/RCnGpXr2n0JUJ3qRics02/3AMsXOuntp
diKnoze3qujhGINm6sAb2YHEJLm9/Ki/MM8+xVyLwA7ESdpkq2Rej/F0868n
e3UgRfEV3RBKPaZMaUlSduxABtzSSwpEAxZQbdp54XAHemLdQ7Hra8J2fTI1
TaO3I7L8zgdbudowK3dTHQ2NdqTasUw29aNi4Z1vHTQV2pGtpYpY7U8q9l1n
8qm2dDvqlrVij+Fux3ZxhTbr8rUjZVrnsb1x7Rg9CbczGqYilZKeUv38DuxG
jXrgxTgq4nScPv1rtQvz3C5R67NAoG7zfOfY9n7sg5/zhO8kgaaNL17QlR3A
Opkl/P4MAn2X+G1n9GAA0862uPikmUCJMq/Kf2ylYavHno+FZxLoI29X6ZF8
Ghbkws779gKBGNpak1GbGdhLNHoWFVFQ4wU5jNQxiCX7srEaVwqynC8SbOMe
wrK0SL8E0yhI2DdRtf7oEFaRbwSvhVPQmU3JAgHpQ9joh0zlrfYUNEYu9We/
P4zpRl8VtOamoOpP23a8lxrFxuxplAVrMqpRfpP9+NsENrdz8bmkGRnFixec
G5ucwNa6+U+fNCSj/DGep4lyk5iwBah6q0RG2l1DBC11EtM9kVygz0FGFvI6
o/+9+o29UraJjcluQ0Ov9hxJDp/GAHvnhUMb2tDe0ofn/LtnsWFZ21GB/1pR
g89T467lWSzKZND772Qr+j57Weii+B+sP34mqaSzFXHffv+hyuYP5qfIzTyW
24qa278ZXab/wb7baN+xtGtFE6P3ubJm/2L3b2vxb3jYgnZZ3Zj0UVzAqkoN
VGqutaCtlVVln80XMGGOcxbh51rQDK4oz+GzgOUnOieKyLeg4pzj1irVC9if
ukRZ+a5mNBTwc6P35f+wO3vWwPnDzeiqxelXzbGLmHMn7vb+byM6qOqSabBv
BXOlOPws7WtEfQYC6yfMVzC3ZjbR5tpGtL8y5+njwBXMq0q3fCGxEa2kD3iF
DaxgQbllHMb6jcgkeukUZ9I/LDkk7834qwb0leEQVLRrDaNovqtS1KhHthEC
t7++Z8OPJjwmlT2oRSs8e6z+Sm7CTayev1a7UotE+M4MTOpswm3F34rmmNSi
e3fm3qxZbcL935YIZ0jXInSp8Zpz7CYcT5sWiGqsQcXLbWwOWzhwo0+XuR0l
a9DDWmBVuMKBnyvXWuauq0KY3H+l8r834zf6ZnsuieFopkvywQw3L25KU/ha
t7cMDRaFGVzmFcRPX5W1B0ulaA/6yJm1UxA/OSolVNRUir4FDvBMHhLE9WdE
vdM9S9EBw5QiWzNBXJNtg4FfXQl64SnmPRwriEtLUntVXYoRmc3usM5OIXze
7hFvSn4BEt99t4omLYz/YXohkZAClPHJUK5CRRifuX7vXoRNAeKhG/4OOyaM
j9+53unNUYCenlo+PesgjPf7m2WYW+ajgxvCjoymCON1KTJHeVa+ocprkWbq
JBFcAyV2jAdlo+iq/SZsiyL4Dt5NY8mq2WhqtI1pvEkUX73osnyO8RVVHOYf
9xYQxav+HN1ZDr6iK/fpOq/kRPHz+/odw5c/o7wI5753lqK4W6Tk1AG3j0jZ
g1QznSuKm3eHrA/s+ojUedz40spF8cOyswKvmrIQnh7UoFEjiq9VYqr/5LPQ
Um/DN74eUTxiztG7cSgT3UnOyLq5UQz/aP1+k6t1Boq2f5+YcEYMj8jaKirF
k4HuD+6v9bQUw93mPWSpJenIQbGkXc1eDNd8bnhSRzQdyTYnt567K4bX4CPP
t7aloTtfQ+IFYsTwT/xn0zD/NJT8GJyYThDDI21K8jwOpSGd7IhTX9PEcPOF
EGpfeCoSLeMJqcllPX/eXMMmMhm5rsj33Whijf+991LV+Ftk+zhYUIdgjX82
/1DB+C2SObeoPN0thjPL4rB/7EnovJNC6OSIGM4m3XX67YME5Cwyp2XERsJr
yz/e4WiPR4uLc9acnCQ8ysInxlU1Hv03AJTebSHhEqHinTpTcUjYZ8TxjigJ
15q5fKX/yisUqqdhYCNPwl3KMsa8ql6iJJ1im+FDJDw5aOLONpmXKCMbRZio
kvCN27199YdfIBmSdEPeERKuwUTs/YYv0M78gfe5gITf+MoZ6vUhGgk1TCmH
HyfhCU/kDli0RSGbkKZ16kkSviZWdDgkJhJVB8YJG54h4Y5fjuuXn49AjG2Z
ATFmJFyBantZqj0Uma3WbK20JOEvbk7eNH8dgriUo7jSrEj4wqq357OLz5Bd
OTef7WUSXrkv9vnv7iB0qfbv/C1HEi5TLp0kmfQEpbbMl3y/SsLDTHOzzl8O
RCazhNHYNRI+zdQpDN71GDnrbY6dvUHCP8zEPXFH/uh3MeMl1ZmEu23PS+qC
j5DP+FvNWBcSrn2sqRBU+aDbH84+ULpNwjfdGm1+b/gAnXk5Z/zhDglvfrlx
dMsvD2RQ4JS25EbC47/v2nDvlDsS/+PoLXuPpW9Ia0dnkxuqC436peROwi0l
Pl3zTXVBq/dvh4vcJ+HjrrR44/fXUVuVSymVxX5ItEH4kyPaO9Nx5q4HCZeW
frOMXbZG5SJMo1EWn6jmtLO6bobUlTPTtD1Z+tOatjb81EEG+qwTl8XG6euV
mQf2gvJ7B93usjjo3bWRkv+MgapgItOCxeLZhvz69y6AfV+FCkVY7MPhSrVQ
swfNS3LDuaz5h/M10kMVncCVn2besiw+78h294e8M/CqG7vrzYqvUqBed1bm
DmgKUyYyWXriBk4ExwjcA07CZ97nsPQ2Fh1yVYi6D2ayjSde3iXh7FFC5jVb
vMBiFN/X8yx/NJ0Wte1DvYGBu9ufKZafd472SS1z+oJCDekqJ1cSnimEc70K
8gOxF8oOlNwi4bc9KP+JPg4A+i7fVIdvkvCM0yX9uWuBgHOG4zzViYSDEnny
I50gcLK09EncFRLevedt9Unfp+BIk9czVQcSLrDy+Mvg0jNw+Yil/gYbEv75
2lzKN81Q0NhetVPlEgk3JF976ecVBiwfUXjABRL+6OMpH9J8BNhT13/ztykJ
J4lUuA6pRgGS74aNz0+T8IIAJYe8e88B71H+Nd4TJHz+M8/efYvRQOqf791k
SMIPPJnmqfR4CSaROH27Mgm3OSLE9VX6FXi3g3lRV4GER/zV4HjT8gp4fSlo
0ZIl4VNX/Nbd98eBD+aHTxdJkPA8/a1zsn3x4Om1kdJfHCSc+U9pVjgsAcxd
vWz9aV0MFy40n9pw+A0oMLM5cmVJDPeQSRrtiU4EObOZzraTrPOJ80Dfc/1k
4N2akeXfKobfrDjT7TubDO4eOHtJ9pcY/sbzXsfN5BQw3VH6KwsTw/3+9o5K
+aaCK9+yvmvlieEDV/YyV6hpwP7CLkbCCzH8HavJygnNAP9BVfT0hBheJmlw
YR8tAySY7J1jAjGc8q+dSNJ4DxprD8bv1hDDNxUut4Uy3wN3p79qStJiuJPM
scYrOh+AXlW7eMWiKC7H2VYpNvsR3E12f/4rRRTPqZ366H8xB/x7ZmSf3iGC
99tufaT4MQfk9u6+IdkggvMtHDg7sJQDguhN155VsN4nMWoPU0xywceTsqbC
70XwV5V3pdanckF4yMIG5bsiuNnOSdcK5TzA0eHHlcshgte30zh1igtAt0lt
cLyUMP7jRL2mNl4KXLmLPgepCuITn97dPHMRB3G3XOs5MrbgC9032KtdcaD5
o5C4GbgFZ9uimHjkCQ56As+M9thvwUVvlTfKZeOggt/OaGLnFvzYAUJx46af
IN1bzbUingeP/8yxUJzzE8jjIQp3XnDj+l9uBEptrgZ8fCHsEdGb8bdfDyXO
FdaCPK395gdbNuK3eUmhS79qQaxK55bogo247q0NXmt9teCZr8f65jcb8X45
4hwXZx3I5wlsPOy0EZfM8OaRuFAHnDMOw/h/7HjGmyrv4wt1gJ9SKu+kyI5/
eWZ1MUajHlSn8G66zOpffIePG74+WQ/sSpI2eUWy4SYGB9WSbOsBLrJpLdOD
DZ9iZxPIDK4HEwW+XcaGbLiS3/va0vZ6UH98s5xc2zpWcH9Gg+7ZAOq/rh+O
dFzDvjsEiygVN4L5cPbPy+9XsC6BPspQI4svmWnyPVjBFpBqTCKjERRsk+Ix
P7mCKe2i823mawLa5cekPKeXsfTuI1z9V5uAjO6P0G1Hl7Gw87PL4YLNoIyR
ueF5/yJ20cCGNuLaArZSFDx6jBYwj7m85LdPWsDeLWZSGyUXsJh07svnE1pA
+WDXzUuL81jjhuKuiqoWIBffc/zFx3lMciBkrH5rK9juzaspzzePvUxkMtKu
toJaexcj+sBfzEc4gWoq2Ab6vjaHWGfMYrc2Xhi4K9EGfqV9+2YRNIvZ/BEc
e7mvDcyEel26f3UWA60R/zq028Ax6cT0XTKz2KaIgD32V9qAeJz2iz1ZM1jU
xht33QragMjZcMuMm9NY+h+NrS8ukMHD1zrPSlomsFf0v6L59mSQuFc0xiR+
AgtuzZWkOpMBEz9+fY/DBHYjW15tuz8Z9E7fvBX9dxw75LzLOu0DGZwNf1F2
Q3wcK6FzfPy2SAZS0nGlXZ6jWGMroU9+QwEmugv//lkNYUU2VppYBgU8ORsm
ulthCEsbHTiQm00BpnElTV6rg5gn24RgFE4BMhouBxtTBzFJpQ30E+MUIDoS
fG15jIl5PD/4CNMiwA4xqVHtYAa260xwYW4nAfgVXN5E/BrAuLq3fExhEEDd
j10hmfW99NfpRVLUJAE6DC1k+OUGsLpHSU9c2KjgfIT0160h/Zj71zwzOTkq
0C9FJXdP92F1vAO/U7yo4MP6TQPf4W7sbsPhfc9F24FeZcLVQZt2LHD97+ML
Uu1gdtMxQnVbOxajmtu3U6EdWLX0Cg1VU7GCRLnYL7AdsHUfVLylRMUWb23f
VO/SDo4+OK6wxE1gfrwr9E0/20FB71lKSXMbFmZS8dbnTgc48fKS3MvDDVji
Y58l6NMBnJ0C4heK6rEvhRoW3E87QOZ4ahL74XqsaWcOb/ybDlDkn3Zqm9Yv
TGAq5WFhdQfgMFOf/qtfi72OenxpRrwTRGkfOCn78CeW0aIvcq2uE3h9txaK
LinBSIkxiffJnYAtW79Q83cxFn6NJvWktxPoTf1KG5Auxu6tPjyUOtMJgjjJ
WntfFGLwQL5RN6kLrMRJd97yzsP6g6V8ztzsAgO8nqvyM1kYSXetX4OnG5zu
VrkefO8eFsF92slAuBuMEAPiY6622DqRMHF+VzdQ0nGe8HQ5AYdvqS+6qXSD
I0Odqs2xD2Bhgsu2z1YsDpMM3ZkbDc/Ndx/f/bkbKHeQ1bRevIMRX4qzNp/u
AZ2m1zcpDubBfZJHX09d6AE8vIsS7k/yYeXLyqdUhx4wFC7g1ShVAP/6/HJM
9+oBewNq7HDrQmh1okcCpPcAOebxb+SqYrh/eC3ac7kHCH7pldJx+Q5rdht6
D2X1gomVZ7MtYTi0f1l/vTG/FwzIzKiEN+JwmdP0Qn5FL5B/7He0b+tPeGjK
UvUx0QtuDj39z/D5Txj7/eZvCbY+8LbnJL92ZBW8einSwdyyD6TvIzsNetTA
DS+JEz85+oH2fH792X+/4NrbccdZ/n6w6/Cd2/8drIfLWWy+u3f0g+SODr2T
dvVwrkIh++GhfsB7MV9rvrIeDo8HCapZ9oOB81s7nQIaYOMx9Z6MrH6gIHdD
qGe6Ef4yOTVHzusHxSsCAtYSTbDmosPWDT/6AVo5uSfMuAmi25Hgcls/eBI4
qLGQ0gTz3gyliyz3A/72Q4k8p5ph/J9Yl+BTA8Dg31cpo5gWGLv6+WmBxQBQ
+bTdvaG0BcZw4ckMuwFQU1F5egO9BYbvmmrVvT8AKndOCEKxVuh30lD9v6QB
AB94b59ybIVX3i2sXp8aAOz3rxzd/LcVin38XJthTAOmhTfVkhfaoODqjhPv
TGhgpjvE8TQHGfKahdWnnKOBHybZCe1CZMi+dKPpjQ0NqO0vNPFXIsMp432U
aDcauMQ//Vv6BhnWjKb2+8bTwMXei1HlrWSIHRWw93lLAyG19LlDfWT4Pdqf
7vWOBpyT11f8xsgwT9N28N4XGhBnO8ZbuIECk0PEx29U0oCg3kE+HyUK9JSL
mzcfpYEEygrd9RkF3vXl8Dr3mwbsrh/6lf2CAl1a7y+a/qGBhU+elY2JFOj4
4PzKyX80wPtrZT4lhwLP1AlsgAJ0cH4OF8qgUuAJiYBAXRE60Dz3Qqi5nwL1
3aY3Ht1BB0dEFUyoIxSoTWrmPLyXDmrSl/wfLlHgvhvhvAc16WAjKdtaVpyA
Ut+XI+V16KBZJObdkT0ElBBw5pc7Rge/PHfpHzxAQMESY8E9p+nAibHtfZY2
Adc2c5K229PB13k1TbaLBFyy9kgQdaKDzicSOeu2BJzLGdwh7EwHZRFbEnqd
CDhu+XMn/306eOtd0XLInYDtHwL2cITQgc/ddA71CAIOmm7puh1JB4cSfEVS
Ygj457/YqM4YOhCz7HpBiycgn/Hnpc9v6YCafr1jLIMV34x6jkg6HQT5UtK/
fSKgfHzlVf8sOqhg12SezSWg4Si15Vw+HWyOeY5EygloHm3/9HsJHQx/drE9
UklAR80J7X0VdHBfTOy+ZjUB/ULYMpfq6KBQlslR2kzAYrkDvqn9dMDLGK6j
DBCwprVQmWeQDg5z9+8tZBKQeKA34j5GB/x+n/9zHSHgTJ3FOaM5OjB+2r/m
NMXyx422+dsSSz/vbeX3swTk3X7rx451Olg+IddRPkdAuZsBclPcDDDHbPS8
s0xAjW1b+i35GcCd75sr7yoB9UtjX2LCDOC2uaAtYJ2A5xwkTxzYwQBOb+dT
GzdQoT3357VXuxngXZtb1/RGKrz9Tb1gbS8DcIn+ezDOQYW+lypv3pBngHth
Jx5930yFYRtO7SYrMkC+9gjTiZsK4z9SiSPqDPDaGnwa5qHCTDP7sPfaDLAj
JL5Jl5cKC5bGAb8eA0SsiZy6vZUK8TSP+QcGDKDaV7zbg48KW0+wfWacZABX
O2vj8/xU2D8bZn/6LAMUbC/HuASocDJBRLTIggFwjTshsSxehqkNu60ZgD3/
d/wSi7nH5R+H2jNAdkLYtNo2KiTFFGr8dWKA9+BBiBGL92nrTdrcYoDrAbV2
yixWY9Sn1bgxAM/S9bt/WM8fC7OwVPJkgD/H5UrDWHxWhcb75iFLn1qRyjIr
HttuZ3zjYwZIEEzp0mOxS+C8l2swy0/C9KMtK34f+YCDHeEMsN9a5O15lr4Q
Mg9T7wUD7PkqkbubpT/OJzb+UxwD2Cu59+EsfzKkJc8IJzFA6RCnpA7Lv7z6
Txv90hhg+l3mvSiWv5X31EtHMhngvgl7axHL/+YdlbfNvjDAaeHPKkWs/Rl3
pnbtLWaACv/oWS3Wfi4K2j+P+s4AT1ctj1X8IyBn+bj+IsYA1j8CH29n5YP0
FrbchkYGOFvemmfOyhel/DAndTIDxMvHxKux8knXWkQ8pYMBfuf+PT/xm4DW
n+WD7zEYwOVEnHLfMAF37F5r9R9h6U/NHbvEytfumDbxyEkGuDHqk5PHymcr
nwffPiwwgCI93mSxgzV+6tS/ghUGiJbz2DFEIWCXw24jnI0JGvsE+7+2EPDi
iZreXh4mKL+OKVNqCEj6kSA7zs8EjzcUFyriBOxQcr33nzAT2DEOk278IOAF
kjCX4G4mMAz8ZeeSz6q/EQdVI1Um2F113QB/S0Bha3U/c00mSFXx51l9TUBK
M9cvBx0m2HGB00eIVf/ninJsfY2YoOjH76OUpwQ8+3Q19Js1EzA2DEW+vUXA
03sSaOJBrPX/8rJZKrHq67XLgf2hTLB/oyT/CTkCNvDoeWpEMcEn/8pzopIE
PPlneItZPGu+0zTLY/wENMbUDgd/YYKk3LdeAxOs89KuNXKGYILgj571+5Ip
cBMlvXO1iwkqPz03rntJgT8NvfZsGWAC5hNxD/1QCjx2aFepzBgTlFhuLmp0
p0C91VuDVqtMIExK6BE3osCjiZuPVMsMAhE0//XLMBnyXVko1T0wCIKFvHMY
nWRIlx/SLFEaBF7PoeJkPRkGl+Ean48Mgqwgpwfe2WTY1vVI5YXZIBh4OU08
dCfDa6S5/ZcfDYKg/9QyhefboCaNkdUeOAhi7q998B1sg1uy2mTPhgyC4hpP
m2JKG8w9nCNz/OUgiJssyMr41gZXLjhL7f84COp9Qq0u32qD0bE00jwxCNK6
Fe2OtLdCx8str293DwKL/ZEGdXgrVJepEB0dGAS8+wM4ZXNaYXdBonDP+CCo
Hf5Ou/SsFcoQFwQwtiEQkVzh9lK9FZYJNm2OVBgCg8r3b70UbIHM56ULe4OG
wH1RN6OKHY1QJTNiPCh0CFhIuO3mGGuAgd/t+gejhoDDz/iY6aIGKDnGUZOR
MARWkWBvtlkDtD12LnZvzhAwbnuyQAmsh51z46p7u4cAt7ioaCqlDjZekri7
R2kYXKClavkdqobibtNXn6gPA4Ouo0z22SroHIxfZGoPg91Pc/Jl86sgd/4N
vXSDYXBYzdTaTKMKGvIW8u+xHgY+VUE1Upo/YWWFSbZ08DA4wm6hlLIfgwV7
/CekeoeBtV+GZEpwKSzkSLwvQx8GGU+iMbXVElg0UrQqNzwMJD7loZ3uJbD4
8xS/0swwCL+udWDMphiWqdqq6W4aAYUV7+Qd5AohOq7zyEphBKR/efjkW3Iu
rL+ywvfSdwRweRTYDOxKgg0GYvFxj0dAS9SWfR/SEmCjrKrUm+ARECF3xShL
6jVsmnBWTYseAXnG5mrm22Ngq3u3ZU7GCOi5bXaQ+60/pD4pTW1oHAExDy8/
EuIMw2jpXiqbdo6CoEs/HYV8vmBzXdnT7tKj4O9A2K7Lm7JZZ/TwF6bsKDgg
d3TpXHQOpuhrLvtTZRRopSrLvbvwDfMzV5YINB4FpoyZPemPCjAJjgkOtvuj
wMT+QAnHXBl26Zpt10r9KNhUZ/0sE1ZhZDmDgL8PxsAeNXZybkQb9lq+mszp
Nwbe8J/2vF3bhtkoGMjseDIGvD9OO9qwk7ERRYN6vcgx8LK0fM+vB2Tsn4aB
cFTaGDjPBTKGr1MwGQODLLn6MTDl+uKqmikVe+Bg0HpZfBw8PrZaonCsC9v9
xkCy7sc4+Ltz3Hqyl4bFfbq0pPVvAnCvHCH1HBvHKOhYV4nFb4Dd+eWwuvkv
dguz3bIzfgooHZEpTgRLmGNKV9z3t1NAN3akuMNmCbN6ZC5tkz4FnjItNSR9
ljBjrZNaidlTYOmVwqv2giVs7zf169urp8Ag2+j+TvllrDeV96fInyng2LFo
u3/7CnY6oMyH7/Q0+HU5fbVj7R923FadM9tsGnD+3ffl9c5VTPto7gsTy2kQ
zHzId+XoKia3+D4rwnEaOAnqEhI+q9gmtxftPN7T4LsW+ZP4wir2w+6GyubM
aXDLSyRbb2YNK9Bh/sj8PA08Fp89LOFfx76I254w/DYNOF7VvDiiuI696TjP
anCmgQvd49GV2+uYpymI2kiZBkpBSTFav9cx14Nl29M7p4HbZdz9KScbfnWL
+vtj/dMgrNrgg7soG36uVv7747Fp8AkvTLTXYMNPvH9vJDU9DSzp3y3sDNlw
vSeSlMq5aZDtyhV+5QIbftgh0dZ+eRrc/Sat6XqNDf///2GBXdurS76ebPj/
ALGBnDY=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-1, 1}, {-2.626659021936204*^10, 1.414234678770656*^9}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact\"", "\"Approx\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.747486986004772*^9, 3.747487068448495*^9}, {
  3.747487270132605*^9, 3.747487313997019*^9}, {3.7474890986154337`*^9, 
  3.747489204591838*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"exp", "[", "z", "]"}], "/.", 
         RowBox[{"z", "\[Rule]", " ", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            FractionBox["\[Pi]", "5"]}]}]}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"exp", "[", "z", "]"}], "/.", 
         RowBox[{"z", "\[Rule]", " ", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            FractionBox["\[Pi]", "5"]}]}]}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474878154446907`*^9, 3.7474878983864193`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwtmnk8lN8Xx21JhbRSKHuKikQq3NtKUpKlREjZyhalIvuWiiwlZI2Src0W
yb32nbHMPGPMZqlUsoSKit/zfb1+/8y83q/nnvOcez7nnJn7zMjae5x24OPh
4VlHvvz3vgOs/7q4OIGSj5xOki7uxGaXt9yZm59ABR3lHsOpndj3kbbS9OwE
GrCjauVEdOKmb+fsP32bQK1w+P76c53YLimD0U5MIJMX+YrVPJ04bkq5LfnV
BMq17QkUP9GBZ7L3F2rYTqCoqW37Pg+24UqhC+5O1ePo0MiGqbw/zTiwg/at
5sJ3FKUnc6jCqRZ/ebZBfI/UGGqO+rJBqbMcb+MYLFvJ+opi7tiFutFzcM6a
7Jn+kC8InrCkG1XGwzqr1mgERtGmY37ZwvLFUCpDSiZp8BM6KnctZdG9Bh4/
ZHWrN+ojenDGimb3sxlu/uMYtPXYCFr5+9cF55guOEZ1yqk8NILMxaWNivK6
4LvXzs3H9UYQn67X1Eh9FzzleFnMXWMEOQT/Xqb6pwsGdbtlvpUeQQHmjHP3
NChwKPca3v9jGCWv3Dkjn06Bz81CeE4+GUZfTGPtit264faXaUFe34fQCXFL
XbfpHmjwwXyl3egQOqxTlauz0APt20XSTwwPIafiVjf+Zb0w6av/e+X+IbRa
25jrs6kXCmyx+cmuH0JFy/YrzRj0QkbGJtfjqUNIwT3RWS+1F0bEZZxROD6E
NFUz/9bu74NZmWc+rTo6hF6P+kg6H+mDVa9WXl+EQ0h6w4Pt/MZ9cKojMJ6h
NYTWRkovbLTvg9bL7Tpi5YbQXuma1ZTIPqgRKnPo39wgEozh23C0uw9yr2Xt
oL0YRNEvXZavtqbCAM3rBqzsQcRZPM/QvESFUj8N7EfSB1H7r+qck65UePbG
5KMfDweRlJfkgs1tKuy+Bf6JBg+i22d7kuaeUGFtAKtN33IQKYZ5bhbpp0I7
8ObjSbNBdIvzOcmPS4ULi2GL5saD6ERUgz37MxXuC1bVuHRkEBkd8fwQ9JMK
i0P9UoLUyfWHlZz2rKHBnDsbXCqWDaLnR9ZbXjSkwYPHvodggUF0tOr7l1Um
NMhdVpPatMhFQGOffMkZGpS650yhznJRzKokh95LNPgounzPj0EucucbFbwd
QIMR8eaCKpVc1FhnVOz6igZdUuOyUy9z0d/tqTphSwk4I2QYtceBi0JrLYJ4
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
s7aUlXXg//9/AuzarONS0tWB/wfAzMSg
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
dAE+
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-39578.60840453166, 38896.334550730426`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747487828258898*^9, 
  3.747487899059835*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWeYVtW1Pjo00USjppl4JaKxl1hjBbuJGo3RlHsVJcYGqERRHIogioIg
KCKiIKKgEBRRaSIIIkgRkCZVQBgYmIGBcShSh3XXu/d6z7fnm3M+ivdRftx5
nmnnnL3Pu1fba6299/quq9/knjvvq9/k3jvq17rqwfqN77n3jodqXfnAg3op
b78o2u+eKIoW1Yrwt+if9sN93YsfUTTM/cqTu+66S+wrGrRP3XrR/fq1bF70
orToMFPW78SF7bJuWj/p1Ka1tG7dVroOWSAby9ky7d4eXa+6K0RHVkC0Y+04
6dCiq0wq3SE7txXKiKdaSPcvNwrApt3bvofXta+oSjqsdnZL9MH1M7tIiyZN
9L8m+vMYye84WtZsZ4tNMq9LvjzUNF/y8/Pl0SYN5Z6GD0mz9oNk/sRnpHnX
ebLJEblc1o17Spp3Xyybtc+yaUn3FknxHl1HX5JjFM+7X78B2WTt+G7y1Jtz
HJsyxN4uRUPaSOsBK2Sbtf124XOS326KlJWn3ZsoCz7Yk+voy4hdFSgHenBd
3K9aOpr1MqN3W+nxealsDIENTepsqpSl3pskCwfvyXX0lUi+19zPA2Tnji2y
Y1OxbC6cIBu/el9Kp3aWNR/fL8v7niMr+teVbSVzoup+NC+4X0fJzk0L5e12
XWT4xOekuRuJZ3azLkp6x7wdUjK2rTR/OSMIle95hu/+dScIifL8svtZ3Q1F
4UrZ9G5S9P5fZPWIO2XlgMuloNcJ2m5Zz2P0p/4tBa8eKyveuhBDzhoZVGHL
8mHS7pFG0ri919TydeOlQ7POMrZ4m5R/u0Tea9NMus/xmpp2b/seXk/T1K7u
Z1U3si1F02T97F6yduwjGFW0vxtRTSnoeQz+koLXTpaVA69xzCub8ZJsmNvH
MXVb6SK0r+lH6ns8UmDF1oztLM0CC1kybYB0apUvTfPbSNfBc2V9YCGT7+3R
9SjJRD5nIyzfWiZls3qqCreU4iH/kILXT7cRVpNlyrOi9/7sRr5+dk/ZvGyU
bC2Zc6gfUdJU8Kz7WcXR7duvR7iW2qPvsKqsUNle/dHdMYn0sejn6b09E6gK
egOFtTdHdYdN8a4dly/fLh6s805qN97e1nAMKZ3cTla8+fu4C4dmwQDZubXs
qPQenjJB31r8hazod5Fvrd9gu7WOjk5v/kSgJ1D1VUpT38Wx2sUfIGHRsenN
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
+Py4DrxHpfvR9BberaxYVXfVeze4TFt+erNzrVnm40SstO+OLfZRI4nNzrZm
4Pn6Wa867TNJiVqkNzsreBvKGdvyhQPZMr2Zz2dm0nP+A5WOc/Wd9dpj6S1P
D1pumD8gHqK9tHV6y9MMKhwn7PFAK0xcWPN1n0oTCqrP8FR3Xg2Y7MqsW3II
9gPUfCL9XSdac1CzZHRjKfzPpWGO0W3yaJve/HhrDqq6osm9T/VZvddP8W/f
WmYFihObH2vNYVXwuNvRYslnhFxl07vZxxElNufGd4D/dvlYdy5Nu/D5sjxf
TlrHgH1HHdN7oX8NCiKbAyCrBl2PLcVRdlf4zKDO6V3xzCPGw66Q7ETdTl8z
u4oU9jvfrW6tm/w0qNslvTfvpdRwwEBgsBef4bRu4hOu1xV9zgZI33FVnw5U
PwG38fFIGHa39N656gypBq3dR4e9fnpV11s1/fNUhVrHQS2d0sF9gpL26BVz
X/q4QT+OA9yst7zv2U6/QB2QAR+fBeBITkOSvdLtcx9NmKnY/4N/9ODuwfz/
zx7ck88eNPLtq58nmAVvX/tQQIO3r32S3w/wUa/uH/tg2mi//wWO4x+M\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"exp", "[", "z", "]"}], "/.", 
       RowBox[{"z", "\[Rule]", " ", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "30"]}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.747488051452381*^9, 3.7474880560854397`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"approx", "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"approx", "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474880643476057`*^9, 3.747488139973508*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwt2nc81d//AHARSpRR2VpEVgqVknMSZRT3XvsK90qSkCQkSlayMsomO/ko
mVk5lzvsdZW9iiJpUqnE73wfj98/PJ6Pe5x7xmu834+HXY5XSBc4OTg4wvGP
//2WtBHYq67ej2a57+ZlaFymdYIy4n61fpScLgmlhS7TAvZaBCqp9KNxcxZP
xSdX2sRixqs98ti3WUvSj11p2bHKIVsl+9ENgZjQrxKuNFmG8dQPzn50d9vU
2h2eSzTl/ZFpNWw2khtT2rDnkzNNm5t3i44XGylV7znF+ulIMwhPM/ntwUab
njy60fbakWbGqxpbeZmN7CRDXacrHWmuGy0ElC6w0YFkE4rtNUdaikDeJjFr
NrrzvCGL/I1KW9wGNnw/zkYOnKPBsd8otOK9vusKN7LRahHvYQlue5qYweyi
QE4f+gzk3s61WdJ2BlcVcmT1oYM3x7ouJlnS5BtCbBbT+tB2zslQvvOWtENq
O9HQgz5kon5Zqn7FgmYmZhOZF9GH/ow9vdhywIIWO9e+U8uzDzXnE+SDcs1o
6+89O+sE+lAjFL0vmEWgfWu7/rhuvBdJRW0zNfmhT9u6of5pw0gvWlpH4ufJ
0acdOcVR2TjYi0pyFJb/ntGn3WqOpDX39aKA3Zt+5hTo0fjqHw23M3uRXsVV
Rr/NSdrukrZNo0/xeLN/ETVdkEaKlfb8G9iLsqt3CT5lHqaVk5hHtGV6EYXn
F/H+7DaamtIf0j+JXgQVTUy9o0Voz7j2uzeK4vETZyVc1IVoxZUpOVCoF9GM
dnh/3byRlrvdjU9/fS/iGHSKWIHzaHeVXE36qx4UJFjkk1YsAKcYtNVGtx7E
odOYOdOqAO1mfkZxZ3ajInHd3ASiNiTwDhT+TOpGYp8JjaQmbainWNU0G9eN
hqriDZ+qHYfKntd+tYV2I4PSL24HN+vAlb9fHGPdupFC8q8dwQwA00Q+aIlq
dyONsKtX1O6fgAO6o7MKo11oZTg2TJ2hB9sv1HFKvO5Caks7g+Z+6MHGiFTp
TT1daOuoTaG7vD4s6LYy+9TchRg0rv65e/rQm/yqsay4C9X84NUqOHMKCnt1
PTzq34XOCKBwo7bT0DQHnTwjjn1X8vHcIyO4vBwYXi/chYZ2Tgz59xjBXIJ2
myJ/F6IIiukOrRrBn2s1JhvXOpFsVqbqj3PGMMO+3IY104lmQg+m1G0/A+cl
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
WMAV0dOMGyNdYEph2c6z3gLGShKkE5a6wF5Nn6RKKwtYsduxp1mhG2w12vxy
IdIcrqiFq8vGdwP22XuBlaMkOLdGOn8suRskuQXz5zWR4OvuHYmkzG4QeYRe
7fuYBJ+51X4PetINvLxOK/d7kSC1aKFsvKkbWE5y6RM3kCBrh5la8vduIHEv
z8tBlQjjN+9U4TPvARl/BvpHOk2gyM9zIn6begF/Fttekfc09LDptPLe3Au2
mgw2ZbJOwdaGYxmeQr1AdmnObjjsFLwVIiF3SbQXzAg8miriOgXnBIcOkff0
Am9J08uFK3qwUcmMrH2sF5S499nzzOhCV6phDsflXnCEmnvYfstxSOvU3H+v
vRc8v6GSwXFdFtIeVjmwunpBr8ytTD7pPZBmrxnH1dcLvgo9nvlK3wXRV41v
gYO9IJvmFpQtJQMbt2pUeM30gp3sZKEURRHYcO7g4XOrvYDD7vJwyskPqHZB
Few/2Ac8bSVG21oVaOX8CqavU/vA+nCDnZpVurRqKXf+0Yw+sFVAFTiJnqTV
KZe3TT3Cnxv4CozcOElrOqOtt1CAnSG1Nw3o0XqjCVpc5X0gP0bQ6Eq3Pu0L
/409B9r7QMC5lVthvw1oygLtv6L/9IEH6hOFe8JNaY8F3LL1bNngYKiXVR6y
pL1KCCbn27MBT1OVbzuHFY1TLHXrekc2aF5/iGu3rhXNfjcrgu7CBmlnHv/n
yLSibT+886quDxsEy6lcVe62poVSXp2A8WzgPMggLs6RadQK7eljLWwwIvMO
jp50oMUeMctMb2eD7wL1/x2KcqA1vLxk9beLDealE3iYbAeaWGtSR90rNth4
bc7j+AEKrXfsa4XWWzbgNpR+vLeZQtPhKQg9/I8N7Fy44nrmqDS3qHqdZI5+
8PF+eJz4ZkdamiB7+SdXP3hTuVwSqO5I+yGx5lbN1w+OB71zfHDLkVay38ZC
U6wfGMvPTa9sO08bqbyy5aFkPzC9OT4jpn2etuFoeNuSTD/oP+dibup4nuak
V3G8Ug7Px6gs2lR6npbQ1vZLZF8/KB3RzI1/fZ5GM5kqu6bcD3wzOtQPrpyn
fe7/ebl/fz+YdBy5+Gm3E+3//58Q8JJbDeiGTrT/A6YJ2Xo=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
rYV5wIcNgI9q8s0/q9DG0aD0e8CJmhez
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.3, 0.3}, {-447.2892625585761, 480.8869770506682}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747488085489211*^9, 
  3.747488144518899*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXAl4V9Wxv2YB1FJ9RX329dX6qrVK3dtau1jcccN9tyKIArLJg7AkRMFA
WCOhiIqAyKbQuICCYQsCsssigmGHCiGQkEBkEwgk0/nNmXP/5//33vwDhNf2
+16+jwD3zpl95syce85p1DSl5fNtm6a80KzphQ07NG3f8oVmHS+8/cUO/Cjx
NM87raXneRsv9PBv4n/qr1ziHy+RmjdvTvrjTZTf3v+/kv/10GeHChdS5bHD
8r/LHXCB7q5AlUf20rbRV1PJrHbeFeE4LfiehRm0dcTFwF0V+Mv67Oi+Ato6
8jIqzm3sXRkffNeMFgJ+pDS/KvCX9BmDCTOlc1K8q+KDF09tItiPHSyuCjzd
UR+ws8je1QZ8rPx1Fh3a9DqlD/iK9lXiwVHas3w8DczoQT16ZNKQKevpQEXo
cy8pgGQ3+Z0k1to56QEqGHMNDBNF9ewoqsd2z6MB6UNocdkxqiwvpOm902no
1wfoaMjzSpg9jHAiHdj4sci6d+Wb3jWG6hv6injsvq8GU3pKCv8vhX//J6Vm
fUYlRy2Wg7R2cCp17JJKqamp1DWlNbVs3ZHS+k2kdYv6U7cha+mg6KmC9szr
Td2GbqLi5UHPN9MhpRjLZpqjn+3vXk+FE26AfpTTd+Svc/jXMdo9/w3q/W6+
WCCir6NUNCWDeuRsp3JF+d2GQZTadxGt/yTo+VLaW2H0lQw+uipLZUv6ipa+
+/t071pDe5T8VY+F2EcrR2XS8C/K6IBL99Mg/Itpw+Sg58tob2WwBlL1WXnZ
Jj+gfm1YGC1//YgqD26g9/sOpqmLBlE3IV9Je1nRaYNZHaLoY1Q6N5O6vWUM
8P3nYoCqqNsIYi5iqcNNDhfkUt/Obah9P+OkFXvm04C0bJpbXE4V322hSRlp
NDSfnTTkeYiTWvUf3PSJqJ/N4P3GUB+joYFgK5mbTWlOUJYuz6GB3VOpS2oG
DZm8hvZVhD4Piskujs8VTmhA28eLzynhoMTRJcBNfhsO3jnApNfFB3dtUAV4
pwCl/S4cPCVG2kIjbdwRiRxx3Yy022Z71zvgAt1RgWwuLZnVxvt9OM4ODhc7
3r9NYp2zddwRkXmJxfX+EA7+v/rsSPEKAd81/Xnvj+Hg7WP4QV5mfuKOiPjA
/nU53p/CwV8M4OeGcPB2MfzAD3iKjTsiws++/LHen8PB28bYq2jyY16DWKO2
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
v6Naqjs2SZ5hqR5f2XIXbqldTZQ14LO2cIjJsvKS4YKU/6+nwPjPkvSNnWzh
n/hkAqcD3I6cW1HTuIkUH23MpG9A1C//TXyq5vDZ5RpUHHgOD8ldsKW6KKvw
0Z8oZtf3uIg7LwD0uoBnP1P2MDNiqRyznc03ak9/Ztw+7jrZYGpnRlRT8IFI
iR+N+7fVfHaBPrPrbCj2zg2AUy1cHiDxpLkbWykMvBOpz0qC+Z0lsUIUjL6K
dn50jwiBwvjA+vfpcNFyKcvODCD6qlLjvkso9XpnEaxoeNbOyNgVb555JZfS
3pj7XAwv0BRqDWxXZY2a0rCWUSizh1f78sdaZf4ogI0sJYQvt3a9j7sOYz79
IJIsKmn3ap7ZCTB+qWxYaKzvMKOg/tSyHDOJl6CMIFRhbVEKNypyfOrI3vMD
GBmgjKC1AhP6ldp0XHpYKMlfsoB9GNJ+FbY8lMx8gfVQ35bImL1AGjOXkvY/
grq0+ysaLHpiDwlor9y4y7Siengnye9ToCZ+a7cx2W4IPuE3YcnShDErVJz7
DD7wC+2fB9Du51gaezlAe8Gq7QZUj8QkybYdaEU/rt/v0Ba5WUjWe4LTlqAJ
gw8y3UsCyPYNIJv3xTemCdWDKMbudv0eDQ0+fN+t2JCp0Zqwzb2oznNqE/FL
fi/NttDt42jYkvvk802m+dTgTZKuDG/wh//dUClVcA5B1HHCj6KECUDXfYJW
Eno7NNHVKk3TdmrSSpY+EZvCIGKn1+bQrGVbdRd6HUlcu1icb0b8wqw/jL5S
VA1mWPVXBxDNdNzYEmW9GhPot/tk6Yab9MwVoiM+XiV6/bMShU2hV1RlZtHj
Uu4jrqNvl74aiZ2zxTQ7Sg9I347tZ3NWbJNE97e8tdjbjH0vYroXB86iZlxy
t+MKpj17EPYvNMnITQJtrx49zRw0dv6A3+cZpBn/DbkwDOrBViXseRn0t2X0
ytvzaWxuPuQS0nBOVPP2yB1YsiG8dO1O0/fqGZVa0gO8MmKhTw0hzcKYvRO1
xa2wOcYWpDg1A1/G17R6qiJYFEQ5TmQXHOQFc+j1Ww+YWUdk+7HI0V7Ffq73
NOo1aqGAQTV9xyymFDb3kA9WUM+RC0W+l4fNp35jl1AmJ9yur8+VHUqA7T58
gejilbcXCAm4CToYLgiZYdCqDbKCo8/oxdSH/540d4PoBrtp7BEc/N+6N6d9
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
cxKXPLvm+2ffMB3/lfzHTAWed9o/APJTVmU=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"approx", "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.001"}]}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747488180137249*^9, 3.747488341301353*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747488238680957*^9, 3.747488342032392*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.20257268617826663`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.539234499953875`15.954589770191005*^377\\\", \
\\\"+\\\", RowBox[{\\\"6.796525455892608`15.954589770191005*^376\\\", \\\" \\\
\", \\\"\[ImaginaryI]\\\"}]}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.108385623018169`15.954589770191005*^378\\\"}]\
\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747488238680957*^9, 3.747488342105555*^9}}],

Cell[BoxData[
 RowBox[{"1.5392344999538749238002590494828316680173053465613`15.\
954589770191005*^377", "+", 
  RowBox[{
  "6.796525455892607588163358442200884936685724841174`15.954589770191005*^\
376", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747488203274563*^9, 3.747488342107164*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"exp", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", 
         FractionBox["\[Pi]", "3"]}]}], "]"}], "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747488389724226*^9, 3.747488444938822*^9}, {
  3.747488480185542*^9, 3.747488494317964*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.3196146922585579`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.170848415270068`15.954589770191005*^146521\\\"}], \\\"-\\\", RowBox[{\\\
\"1.32815934749564`15.954589770191005*^146521\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.130951922822152`15.954589770191005*^146521\\\
\"}]\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747488489807138*^9, 3.747488495178149*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "-", "1.170848415270068382359273042313774190756707`15.954589770191005*^\
146521"}], "-", 
  RowBox[{
  "1.328159347495639576845299748446244147852417`15.954589770191005*^146521", 
   " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747488420181313*^9, 3.747488445469928*^9}, {
  3.747488480769611*^9, 3.74748849517934*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exp", "[", 
  RowBox[{"x", "+", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "30"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74748845726233*^9, 3.74748846240735*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"], "+", "x"}], ")"}]}], 
    "h"]}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"], "+", "x"}], ")"}], 
        " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "30"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sec", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["\[Pi]", "30"], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "30"], "-", 
            RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}]}], 
      ")"}]}], "h"], "]"}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"], "+", "x"}], ")"}], 
       " ", 
       RowBox[{"Tan", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "30"], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}]]}], "h"], 
   "]"}], "+", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"], "+", "x"}], ")"}], " ", 
    RowBox[{"Tan", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "30"], "-", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}]}], "h"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"], "+", "x"}], ")"}], 
     "2"], " ", 
    SuperscriptBox[
     RowBox[{"Tan", "[", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "30"], "-", 
         RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["h", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.747488462879888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "[", "z_", "]"}], " ", "=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "z"}], "h"], "+", 
   RowBox[{"Log", "[", 
    RowBox[{
     FractionBox["\[Pi]", "h"], 
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[Psi]", "[", "z", "]"}], "]"}]}], "]"}], "+", 
   RowBox[{"Log", "[", 
    RowBox[{
     FractionBox["\[Pi]", "h"], 
     RowBox[{
      RowBox[{"\[Psi]", "'"}], "[", "z", "]"}]}], "]"}], "-", " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "z", "]"}], " ", "\[Pi]"}], 
     RowBox[{" ", "h"}]], "\[Lambda]"}], "-", " ", 
   RowBox[{"I", " ", 
    FractionBox["\[Pi]", "h"], " ", 
    RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.747488616405266*^9, 3.747488627419531*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "z"}], "h"]}], "+", 
  
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{"z", " ", 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]]}], "h"], "]"}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", "z", " ", 
        RowBox[{"Cosh", "[", "z", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sinh", "[", "z", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}], ")"}]}], "h"], "]"}], 
  "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "z", " ", 
    RowBox[{"Tanh", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}], "h"], "-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "z", " ", "\[Lambda]", " ", 
    RowBox[{"Tanh", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}], "h"]}]], "Output",
 CellChangeTimes->{3.747488628925933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", "z_", "]"}], " ", "=", " ", 
  RowBox[{"z", " ", 
   RowBox[{"Tanh", "[", " ", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"exp", "[", 
       RowBox[{"x", "-", 
        RowBox[{"I", " ", 
         FractionBox["\[Pi]", "10"]}]}], "]"}], "]"}], "/.", 
     RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747488646715741*^9, 3.747488726002706*^9}, {
  3.747488779104703*^9, 3.747488815711274*^9}, {3.747488967259366*^9, 
  3.747488973157756*^9}}],

Cell[BoxData[
 RowBox[{"z", " ", 
  RowBox[{"Tanh", "[", 
   RowBox[{"\[Pi]", " ", 
    RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.747488693625093*^9, 3.7474887263527117`*^9}, {
  3.747488790414311*^9, 3.747488816168139*^9}, {3.747488967996863*^9, 
  3.747488973848624*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "6.697510152357128`*^-45"}], "+", 
  RowBox[{"1.2264883149049636`*^-43", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747488693625093*^9, 3.7474887263527117`*^9}, {
  3.747488790414311*^9, 3.747488816168139*^9}, {3.747488967996863*^9, 
  3.7474889738502703`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Psi]", "[", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", 
         FractionBox["\[Pi]", "30"]}]}], "]"}], 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         FractionBox["\[Pi]", "h"], 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            FractionBox["\[Pi]", "30"]}]}], "]"}]}]}], "]"}], 
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", 
       RowBox[{"x", "+", 
        FractionBox["\[Pi]", "30"]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", 
            FractionBox["\[Pi]", "30"]}]}], ")"}], "h"]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "30"]}]}], "]"}]}], "]"}]}], ")"}], "/.", 
    RowBox[{"h", "\[Rule]", " ", 
     RowBox[{"0.1", "/"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747488829950514*^9, 3.74748895616469*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\\*RowBox[{\\\"\[ImaginaryI]\
\\\", \\\" \\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\[ImaginaryI]\\\", \\\" \\\", \
\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{FractionBox[RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\"}], \\\"30\\\"], \\\"+\\\", \
\\\"x\\\"}], \\\")\\\"}]}], \\\"h\\\"]}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{FractionBox[RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \
\\\"\[Pi]\\\"}], \\\"30\\\"], \\\"+\\\", \\\"x\\\"}], \\\")\\\"}], \\\" \\\", \
RowBox[{\\\"BesselJ\\\", \\\"[\\\", RowBox[{\\\"0\\\", \\\",\\\", \
FractionBox[RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{FractionBox[RowBox[{\\\"\[ImaginaryI]\\\", \
\\\" \\\", \\\"\[Pi]\\\"}], \\\"30\\\"], \\\"+\\\", \\\"x\\\"}], \\\")\\\"}], \
\\\" \\\", RowBox[{\\\"Tan\\\", \\\"[\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"]\\\"}]}], \\\"]\\\"}]}], \\\"h\\\"]}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Tan\\\", \\\"[\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{FractionBox[\\\"\[Pi]\\\", \
\\\"30\\\"], \\\"-\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \
\\\"x\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{FractionBox[\\\"\[Pi]\\\", \\\"30\\\"], \\\"+\\\", \\\"x\\\"}], \\\")\
\\\"}], \\\" \\\", RowBox[{\\\"Cosh\\\", \\\"[\\\", RowBox[{FractionBox[\\\"\
\[Pi]\\\", \\\"30\\\"], \\\"+\\\", \\\"x\\\"}], \\\"]\\\"}], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"Sech\\\", \\\"[\\\", RowBox[{\\\"\[Pi]\\\", \\\" \
\\\", RowBox[{\\\"Sinh\\\", \\\"[\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"2\\\"]}], \\\"+\\\", RowBox[{\\\"Tanh\
\\\", \\\"[\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"Sinh\\\", \
\\\"[\\\", RowBox[{FractionBox[\\\"\[Pi]\\\", \\\"30\\\"], \\\"+\\\", \\\"x\\\
\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \\\")\\\"}]}]\\)\[NoBreak] has evaluated \
to non-numerical values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7474889138856792`*^9}],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"]}], "]"}], " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"x", "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"]}], "]"}]}], "h"]}], 
     "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"x", "+", 
      FractionBox["\[Pi]", "30"]}], "]"}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "30"]}], ")"}]}], "h"]}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.747488913886837*^9}]
}, Open  ]]
},
WindowSize->{1064, 759},
WindowMargins->{{11, Automatic}, {Automatic, 26}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 471, 13, 56, "Input"],
Cell[1054, 37, 5143, 97, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6234, 139, 680, 17, 32, "Input"],
Cell[6917, 158, 70292, 1146, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77246, 1309, 277, 7, 32, "Input"],
Cell[77526, 1318, 449, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78012, 1335, 904, 25, 61, "Input"],
Cell[78919, 1362, 456, 10, 23, "Message"],
Cell[79378, 1374, 994, 27, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80409, 1406, 905, 26, 67, "Input"],
Cell[81317, 1434, 615, 20, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81969, 1459, 542, 15, 32, "Input"],
Cell[82514, 1476, 1110, 30, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83661, 1511, 204, 5, 55, "Input"],
Cell[83868, 1518, 97, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84002, 1525, 797, 25, 61, "Input"],
Cell[84802, 1552, 1166, 37, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86005, 1594, 820, 25, 62, "Input"],
Cell[86828, 1621, 1116, 31, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87981, 1657, 1220, 35, 95, "Input"],
Cell[89204, 1694, 3967, 105, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93208, 1804, 424, 12, 37, "Input"],
Cell[93635, 1818, 10827, 190, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104499, 2013, 342, 9, 57, "Input"],
Cell[104844, 2024, 3787, 74, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108668, 2103, 670, 22, 61, "Input"],
Cell[109341, 2127, 513, 16, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109891, 2148, 949, 26, 75, "Input"],
Cell[110843, 2176, 863, 24, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111743, 2205, 270, 7, 35, "Input"],
Cell[112016, 2214, 1081, 35, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113134, 2254, 432, 12, 32, "Input"],
Cell[113569, 2268, 187, 5, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113793, 2278, 754, 20, 61, "Input"],
Cell[114550, 2300, 31904, 617, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146491, 2922, 677, 22, 37, "Input"],
Cell[147171, 2946, 62379, 1025, 305, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209587, 3976, 691, 22, 52, "Input"],
Cell[210281, 4000, 142726, 2334, 311, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353044, 6339, 735, 22, 53, "Input"],
Cell[353782, 6363, 9394, 168, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363213, 6536, 398, 10, 52, "Input"],
Cell[363614, 6548, 432, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364083, 6562, 671, 21, 52, "Input"],
Cell[364757, 6585, 10002, 177, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374796, 6767, 1751, 47, 106, "Input"],
Cell[376550, 6816, 17807, 368, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394394, 7189, 275, 7, 53, "Input"],
Cell[394672, 7198, 214, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394923, 7208, 1153, 33, 61, "Input"],
Cell[396079, 7243, 113, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396229, 7249, 2173, 52, 106, "Input"],
Cell[398405, 7303, 3328, 65, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401770, 7373, 1180, 37, 106, "Input"],
Cell[402953, 7412, 1357, 39, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404347, 7456, 145, 3, 32, "Input"],
Cell[404495, 7461, 510, 14, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405042, 7480, 1108, 34, 60, "Input"],
Cell[406153, 7516, 17124, 440, 811, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423314, 7961, 1482, 43, 93, "Input"],
Cell[424799, 8006, 199801, 4216, 9390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624637, 12227, 2450, 66, 116, "Input"],
Cell[627090, 12295, 26283, 444, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653410, 12744, 765, 24, 73, "Input"],
Cell[654178, 12770, 2302, 59, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656517, 12834, 633, 19, 53, "Input"],
Cell[657153, 12855, 1529, 39, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658719, 12899, 202, 5, 52, "Input"],
Cell[658924, 12906, 128, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659089, 12913, 424, 13, 53, "Input"],
Cell[659516, 12928, 766, 15, 23, "Message"],
Cell[660285, 12945, 406, 13, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660728, 12963, 339, 9, 96, "Input"],
Cell[661070, 12974, 202, 4, 32, "Output"],
Cell[661275, 12980, 203, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661515, 12989, 382, 11, 53, "Input"],
Cell[661900, 13002, 458, 10, 23, "Message"],
Cell[662361, 13014, 656, 20, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663054, 13039, 938, 27, 86, "Input"],
Cell[663995, 13068, 358, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664390, 13083, 141, 3, 52, "Input"],
Cell[664534, 13088, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664683, 13094, 1473, 42, 106, "Input"],
Cell[666159, 13138, 158, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[666354, 13146, 1315, 36, 85, "Input"],
Cell[667672, 13184, 2481, 76, 122, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670190, 13265, 2256, 62, 182, "Input"],
Cell[672449, 13329, 22027, 396, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694513, 13730, 937, 26, 70, "Input"],
Cell[695453, 13758, 853, 25, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696343, 13788, 213, 5, 32, "Input"],
Cell[696559, 13795, 565, 12, 23, "Message"],
Cell[697127, 13809, 567, 12, 23, "Message"],
Cell[697697, 13823, 565, 12, 23, "Message"],
Cell[698265, 13837, 556, 11, 23, "Message"],
Cell[698824, 13850, 834, 25, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699695, 13880, 1359, 40, 61, "Input"],
Cell[701057, 13922, 2416, 74, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703510, 14001, 3273, 88, 182, "Input"],
Cell[706786, 14091, 23445, 437, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730268, 14533, 434, 11, 52, "Input"],
Cell[730705, 14546, 158, 3, 32, "Output"]
}, Open  ]],
Cell[730878, 14552, 731, 19, 52, "Input"],
Cell[CellGroupData[{
Cell[731634, 14575, 875, 20, 52, "Input"],
Cell[732512, 14597, 15182, 262, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747731, 14864, 249, 6, 32, "Input"],
Cell[747983, 14872, 16557, 353, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764577, 15230, 454, 13, 52, "Input"],
Cell[765034, 15245, 458, 10, 23, "Message"],
Cell[765495, 15257, 2401, 70, 122, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[767933, 15332, 426, 12, 52, "Input"],
Cell[768362, 15346, 30025, 544, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798424, 15895, 890, 26, 86, "Input"],
Cell[799317, 15923, 308, 9, 32, "Output"]
}, Open  ]],
Cell[799640, 15935, 1076, 34, 60, "Input"],
Cell[CellGroupData[{
Cell[800741, 15973, 917, 26, 52, "Input"],
Cell[801661, 16001, 336, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[802034, 16016, 980, 29, 78, "Input"],
Cell[803017, 16047, 1821, 48, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[804875, 16100, 962, 23, 52, "Input"],
Cell[805840, 16125, 26382, 483, 239, "Output"]
}, Open  ]],
Cell[832237, 16611, 841, 21, 52, "Input"],
Cell[CellGroupData[{
Cell[833103, 16636, 402, 10, 32, "Input"],
Cell[833508, 16648, 237, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833782, 16656, 2041, 52, 187, "Input"],
Cell[835826, 16710, 210, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836073, 16718, 2127, 55, 187, "Input"],
Cell[838203, 16775, 234, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838474, 16784, 801, 24, 52, "Input"],
Cell[839278, 16810, 15096, 261, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[854411, 17076, 381, 11, 56, "Input"],
Cell[854795, 17089, 14709, 255, 242, 7182, 130, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869541, 17349, 726, 21, 37, "Input"],
Cell[870270, 17372, 859, 25, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871166, 17402, 763, 20, 37, "Input"],
Cell[871932, 17424, 15653, 268, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[887622, 17697, 219, 6, 52, "Input"],
Cell[887844, 17705, 182, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888063, 17713, 240, 7, 52, "Input"],
Cell[888306, 17722, 204, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888547, 17731, 985, 29, 60, "Input"],
Cell[889535, 17762, 1464, 45, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[891036, 17812, 1604, 37, 85, "Input"],
Cell[892643, 17851, 23243, 434, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[915923, 18290, 547, 16, 32, "Input"],
Cell[916473, 18308, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[916587, 18314, 196, 5, 32, "Input"],
Cell[916786, 18321, 1890, 51, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[918713, 18377, 627, 15, 32, "Input"],
Cell[919343, 18394, 677, 13, 41, "Message"],
Cell[920023, 18409, 1268, 22, 80, "Message"],
Cell[921294, 18433, 411, 10, 34, "Output"]
}, Open  ]],
Cell[921720, 18446, 800, 19, 52, "Input"],
Cell[CellGroupData[{
Cell[922545, 18469, 699, 20, 53, "Input"],
Cell[923247, 18491, 17177, 294, 238, 13339, 230, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940461, 18790, 483, 14, 52, "Input"],
Cell[940947, 18806, 17565, 303, 236, 9888, 176, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[958549, 19114, 693, 16, 32, "Input"],
Cell[959245, 19132, 7149, 179, 542, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[966431, 19316, 100, 1, 32, "Input"],
Cell[966534, 19319, 2346, 61, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[968917, 19385, 641, 16, 57, "Input"],
Cell[969561, 19403, 96253, 1582, 289, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065851, 20990, 424, 12, 57, "Input"],
Cell[1066278, 21004, 14505, 250, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1080820, 21259, 254, 6, 32, "Input"],
Cell[1081077, 21267, 170, 2, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081284, 21274, 390, 10, 32, "Input"],
Cell[1081677, 21286, 662, 13, 23, "Message"],
Cell[1082342, 21301, 664, 13, 23, "Message"],
Cell[1083009, 21316, 662, 13, 23, "Message"],
Cell[1083674, 21331, 583, 11, 23, "Message"],
Cell[1084260, 21344, 422, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084719, 21359, 432, 11, 32, "Input"],
Cell[1085154, 21372, 28562, 611, 207, 21439, 493, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1113753, 21988, 916, 24, 52, "Input"],
Cell[1114672, 22014, 21833, 394, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136542, 22413, 1047, 30, 85, "Input"],
Cell[1137592, 22445, 35041, 589, 235, 23330, 396, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[1172648, 23037, 502, 15, 52, "Input"],
Cell[CellGroupData[{
Cell[1173175, 23056, 647, 18, 32, "Input"],
Cell[1173825, 23076, 25856, 438, 234, 16666, 286, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1199718, 23519, 422, 11, 32, "Input"],
Cell[1200143, 23532, 602, 11, 41, "Message"],
Cell[1200748, 23545, 1146, 19, 63, "Message"],
Cell[1201897, 23566, 305, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1202239, 23577, 592, 16, 52, "Input"],
Cell[1202834, 23595, 1176, 20, 80, "Message"],
Cell[1204013, 23617, 369, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1204419, 23631, 195, 5, 52, "Input"],
Cell[1204617, 23638, 3032, 95, 191, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207686, 23738, 832, 25, 56, "Input"],
Cell[1208521, 23765, 1509, 45, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210067, 23815, 841, 23, 75, "Input"],
Cell[1210911, 23840, 308, 7, 32, "Output"],
Cell[1211222, 23849, 316, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1211575, 23860, 1347, 41, 115, "Input"],
Cell[1212925, 23903, 3091, 45, 159, "Message"],
Cell[1216019, 23950, 1097, 34, 60, "Output"]
}, Open  ]]
}
]
*)

