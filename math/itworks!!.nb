(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1449911,      29226]
NotebookOptionsPosition[   1434435,      28720]
NotebookOutlinePosition[   1434770,      28735]
CellTagsIndexPosition[   1434727,      28732]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "z_", "]"}], " ", "=", " ", 
   RowBox[{"z", " ", 
    RowBox[{"Tanh", "[", " ", 
     RowBox[{
      FractionBox["\[Pi]", "2"], " ", 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exp", "[", "z_", "]"}], " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "z"}], "h"], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox["\[Pi]", "h"], 
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[Psi]", "[", "z", "]"}], "]"}]}], "]"}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox["\[Pi]", "h"], 
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", "z", "]"}]}], "]"}], "-", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Psi]", "[", "z", "]"}], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"], " ", 
      SuperscriptBox["h", "2"]}]], "-", " ", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "h"], " ", 
     RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7474892545551863`*^9, 3.7474892851238003`*^9}, {
  3.747491077363302*^9, 3.747491101312085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"exp", "[", 
         RowBox[{"x", "-", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "10"]}]}], "]"}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "10"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"approx", "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474892945381804`*^9, 3.7474893175703382`*^9}, {
  3.74748935894483*^9, 3.7474893787595873`*^9}, {3.747489453136097*^9, 
  3.747489490965125*^9}, {3.747489674745644*^9, 3.747489679369461*^9}, {
  3.74749573392379*^9, 3.7474957576998367`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
z8D///8TVvERf5tCGPg/7k2dfA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
ye8Z+D/CFfKh
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1198.4110236487732`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7474893181275787`*^9, {3.7474893632945547`*^9, 3.7474893794031353`*^9}, {
   3.747489608960348*^9, 3.747489622409287*^9}, 3.7474898159541817`*^9, {
   3.747495727290694*^9, 3.747495758412347*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"exp", "[", 
       RowBox[{"x", "-", 
        RowBox[{"I", " ", 
         FractionBox["\[Pi]", "10"]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "8"}], "}"}]}], "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.747489332770914*^9, 3.747489353427973*^9}, {
  3.747489384134425*^9, 3.747489411145534*^9}, {3.747489468133328*^9, 
  3.747489475312046*^9}, {3.747489611933606*^9, 3.747489612750506*^9}, {
  3.747489670125786*^9, 3.747489670406766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"approx", "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.4"}]}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474894293367033`*^9, 3.747489448766461*^9}, {
  3.74749022213687*^9, 3.747490447989938*^9}}],

Cell[BoxData[
 RowBox[{"0.003365574008405597`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.004298174297556429`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.74749024781327*^9, 3.747490448841057*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"approx", "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.01", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74749045517187*^9, 3.7474904620159893`*^9}, {
  3.7474906668395243`*^9, 3.747490673977847*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7474906752104816`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.747490684994546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hlist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.05", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.25", ",", "0.3", ",",
      "0.4", ",", "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", " ", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "hlist", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"int", ",", 
     RowBox[{"Abs", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"approx", "/.", 
           RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
          RowBox[{"h", "\[Rule]", " ", 
           RowBox[{"hlist", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747490686455991*^9, 3.747490821597412*^9}, {
  3.747490852935973*^9, 3.747490865494812*^9}, {3.747490938540194*^9, 
  3.7474910211035757`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747490945711068*^9, 3.747490959639224*^9}, {
  3.747490994853045*^9, 3.747491023142066*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"x\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.3676984252271007`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"16871.`\\\"}], \\\"+\\\", \
RowBox[{\\\"1460.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"246978.44225250772`\\\"}]\\)\[NoBreak] for the \
integral and error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.747490945711068*^9, 3.747490959639224*^9}, {
  3.747490994853045*^9, 3.747491023210394*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["int"], "Input",
 CellChangeTimes->{{3.747490809496867*^9, 3.747490809639042*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16934.055657166125`", ",", "0.0002794134122665297`", ",", 
   "0.0014990372908382243`", ",", "0.002752989346310257`", ",", 
   "0.004282293141511314`", ",", "0.006040648463352208`", ",", 
   "0.0054590650021986206`", ",", "0.02786146025263449`"}], "}"}]], "Output",
 CellChangeTimes->{{3.74749080991943*^9, 3.747490826819229*^9}, 
   3.747490869143304*^9, {3.747490951959461*^9, 3.747490965636091*^9}, {
   3.747491000646908*^9, 3.7474910288356647`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "hlist", "]"}]}], ",", " ", 
   RowBox[{"Print", "[", "i", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", "i", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747490876642264*^9, 3.747490928032514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "hlist", "]"}]], "Input",
 CellChangeTimes->{{3.747490900827882*^9, 3.747490904024786*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.74749090441982*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "z_", "]"}], " ", "=", " ", 
   RowBox[{"z", " ", 
    RowBox[{"Tanh", "[", " ", 
     RowBox[{
      FractionBox["\[Pi]", "2"], " ", 
      RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exp", "[", "z_", "]"}], " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "z"}], "h"], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox["\[Pi]", "h"], 
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[Psi]", "[", "z", "]"}], "]"}]}], "]"}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox["\[Pi]", "h"], 
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", "z", "]"}]}], "]"}], "-", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Psi]", "[", "z", "]"}], " ", "\[Pi]"}], 
     RowBox[{"\[Sigma]", " ", "h"}]], "-", " ", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "h"], " ", 
     RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"exp", "[", 
       RowBox[{"x", "-", 
        RowBox[{"I", " ", 
         FractionBox["\[Pi]", "7"]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "0.25"}], ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.747491116613019*^9, 3.747491117037396*^9}, {
   3.747491430701342*^9, 3.747491485337604*^9}, {3.747494218024179*^9, 
   3.747494218980321*^9}, {3.7474943211947603`*^9, 3.74749432666228*^9}, 
   3.747495409252355*^9, {3.747586169199304*^9, 3.747586169494463*^9}, {
   3.747586200584381*^9, 3.747586213451996*^9}, {3.747586590252911*^9, 
   3.7475865904197083`*^9}, {3.747586628418812*^9, 3.747586628678111*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hlist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.05", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.25", ",", "0.3", ",",
      "0.4", ",", "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", " ", 
   RowBox[{"i", "\[LessEqual]", " ", 
    RowBox[{"Length", "[", "hlist", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"int", ",", 
     RowBox[{"Abs", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"approx", "/.", 
           RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
          RowBox[{"h", "\[Rule]", " ", 
           RowBox[{"hlist", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", "int"}], "Input",
 CellChangeTimes->{{3.747491702914053*^9, 3.7474917031611443`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.8617568688118546`*^-7", ",", "0.002943344205302496`", ",", 
   "0.05623469520255975`", ",", "0.2133128666277604`", ",", 
   "0.43499882021694597`", ",", "0.6593833429924189`", ",", 
   "0.9964742551679179`", ",", "1.1644551262004885`"}], "}"}]], "Output",
 CellChangeTimes->{3.747491703749639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.747491142421155*^9, 3.747491142600224*^9}, 
   3.747491701405024*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.7968153917380441`*^-7", ",", "4.94140805203531`*^-6", ",", 
   "0.0004171431551036358`", ",", "0.0035139361977637538`", ",", 
   "0.01198515555037002`", ",", "0.026248069341073856`", ",", 
   "0.06593117995050092`", ",", "0.10898496278435807`"}], "}"}]], "Output",
 CellChangeTimes->{3.7474911429867973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"exp", "[", 
         RowBox[{"x", "-", 
          RowBox[{"I", " ", 
           FractionBox["\[Pi]", "7"]}]}], "]"}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"approx", "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "0.5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exact\>\"", ",", "\"\<Approx\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.747491247183374*^9, 3.747491249487631*^9}, {
   3.747491461235034*^9, 3.747491462283883*^9}, {3.7474914954879503`*^9, 
   3.7474914966094437`*^9}, {3.747494205063146*^9, 3.74749433797591*^9}, 
   3.747494377610148*^9, {3.747494484981189*^9, 3.747494487520697*^9}, 
   3.747495401428198*^9, {3.747495607816627*^9, 3.747495662834066*^9}, {
   3.7474956967058773`*^9, 3.74749569699266*^9}, {3.747495785627575*^9, 
   3.7474958604455976`*^9}, {3.747495912122656*^9, 3.747495951504443*^9}, {
   3.7475278283279533`*^9, 3.7475278302707577`*^9}, {3.747527873803957*^9, 
   3.747527891792513*^9}, 3.7475279250844173`*^9, {3.7475861251433287`*^9, 
   3.747586152598652*^9}, {3.7475861877097473`*^9, 3.747586188178507*^9}, {
   3.747586226696248*^9, 3.747586227079774*^9}, {3.7475865234262743`*^9, 
   3.747586662649907*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
wu+Ubfh/0UIGWg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ji9rZQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-1, 0.5}, {-73.33490573993348, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact\"", "\"Approx\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.747491237809647*^9, 3.747491353386921*^9, {3.7474914346746597`*^9, 
   3.747491496982092*^9}, {3.74749420635078*^9, 3.7474943392923*^9}, 
   3.7474943783324966`*^9, 3.7474944883292303`*^9, 3.747495414157592*^9, {
   3.747495611840701*^9, 3.747495663772956*^9}, 3.747495697846854*^9, {
   3.7474957865312643`*^9, 3.747495861142721*^9}, {3.7474959131453342`*^9, 
   3.7474959522338343`*^9}, 3.747525036911915*^9, 3.747527831083441*^9, {
   3.747527874968462*^9, 3.747527892835081*^9}, 3.7475279260264273`*^9, {
   3.747586126494877*^9, 3.747586227624975*^9}, {3.747586528104747*^9, 
   3.7475866631623783`*^9}, 3.747603298747239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"approx", ",", "x"}], "]"}], "/.", 
     RowBox[{"x", "\[Rule]", " ", "0"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "\[Lambda]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{"approx", ",", "x"}], "]"}], ",", "x"}], "]"}], "/.", 
     RowBox[{"x", "\[Rule]", " ", "0"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "\[Lambda]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{"approx", ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/.", 
     RowBox[{"x", "\[Rule]", " ", "0"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "\[Lambda]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inv", "[", 
   RowBox[{"h_", ",", "\[Lambda]_"}], "]"}], " ", "=", " ", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "a"}], "+", 
     FractionBox[
      SuperscriptBox["b", "2"], 
      RowBox[{"4", " ", "c"}]]}]], 
   RowBox[{
    SqrtBox["2"], " ", 
    SqrtBox["c"]}]]}]}], "Input",
 CellChangeTimes->{{3.747603355541419*^9, 3.74760338470744*^9}, {
  3.747603428557373*^9, 3.7476034735477123`*^9}, {3.747603511187256*^9, 
  3.747603559514151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.008747609445208509`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.05507137827656348`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox[
       RowBox[{"1.5122708315269944`", "\[VeryThinSpace]", "-", 
        RowBox[{"2.116041158667827`", " ", "\[ImaginaryI]"}]}], "h"], "-", 
      RowBox[{"0.0625`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.007937121382447287`", "\[VeryThinSpace]", "+", 
           RowBox[{"3.9002434462176705`", " ", "\[ImaginaryI]"}]}], ")"}], 
         "-", 
         FractionBox[
          RowBox[{"6.177681714776175`", "\[VeryThinSpace]", "+", 
           RowBox[{"6.067257033247766`", " ", "\[ImaginaryI]"}]}], "h"], "-", 
         
         FractionBox[
          RowBox[{"6.067257033247766`", "\[VeryThinSpace]", "-", 
           RowBox[{"6.177681714776175`", " ", "\[ImaginaryI]"}]}], 
          RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"0.5452448318729305`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.3076161402128221`", " ", "\[ImaginaryI]"}]}], 
       RowBox[{"h", " ", "\[Lambda]"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.20433363498546248`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.218051418896105`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.6659440226950509`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.0182473772889438`", " ", "\[ImaginaryI]"}]}], ")"}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.23605236140342356`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.8763584772840063`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", "\[Lambda]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "h", " ", 
           "\[Lambda]"}]}], ")"}]}], 
       RowBox[{"h", " ", "\[Lambda]"}]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.5`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.007937121382447287`", "\[VeryThinSpace]", "+", 
               RowBox[{"3.9002434462176705`", " ", "\[ImaginaryI]"}]}], ")"}],
              "-", 
             FractionBox[
              RowBox[{"6.177681714776175`", "\[VeryThinSpace]", "+", 
               RowBox[{"6.067257033247766`", " ", "\[ImaginaryI]"}]}], "h"], 
             "-", 
             FractionBox[
              RowBox[{"6.067257033247766`", "\[VeryThinSpace]", "-", 
               RowBox[{"6.177681714776175`", " ", "\[ImaginaryI]"}]}], 
              RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.8173345399418499`", "\[VeryThinSpace]", "-", 
              RowBox[{"4.87220567558442`", " ", "\[ImaginaryI]"}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"0.6659440226950509`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.0182473772889438`", " ", "\[ImaginaryI]"}]}], 
               ")"}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"0.23605236140342356`", "\[VeryThinSpace]", "-", 
                 RowBox[{"0.8763584772840063`", " ", "\[ImaginaryI]"}]}], 
                ")"}], " ", "\[Lambda]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "h", 
               " ", "\[Lambda]"}]}], ")"}]}], 
           RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}], "2"], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.007937121382447287`", "\[VeryThinSpace]", "+", 
               RowBox[{"3.9002434462176705`", " ", "\[ImaginaryI]"}]}], ")"}],
              "-", 
             FractionBox[
              RowBox[{"6.177681714776175`", "\[VeryThinSpace]", "+", 
               RowBox[{"6.067257033247766`", " ", "\[ImaginaryI]"}]}], "h"], 
             "-", 
             FractionBox[
              RowBox[{"6.067257033247766`", "\[VeryThinSpace]", "-", 
               RowBox[{"6.177681714776175`", " ", "\[ImaginaryI]"}]}], 
              RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}]}]}], ")"}]}]]}]], " ", 
    SuperscriptBox["h", "2"]}], ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.007937121382447287`", "\[VeryThinSpace]", "+", 
          RowBox[{"3.9002434462176705`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
        FractionBox[
         RowBox[{"6.177681714776175`", "\[VeryThinSpace]", "+", 
          RowBox[{"6.067257033247766`", " ", "\[ImaginaryI]"}]}], "h"], "-", 
        FractionBox[
         RowBox[{"6.067257033247766`", "\[VeryThinSpace]", "-", 
          RowBox[{"6.177681714776175`", " ", "\[ImaginaryI]"}]}], 
         RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}]}]}]], ")"}]}]], "Output",
 CellChangeTimes->{{3.7476033567979307`*^9, 3.7476033849740543`*^9}, 
   3.747603430993088*^9, {3.747603461129162*^9, 3.747603474203196*^9}, {
   3.747603553635621*^9, 3.74760355994289*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", "%162", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"0.008747609445208509`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.05507137827656348`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox[
     RowBox[{"1.8983759387005052`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.3792035645779854`", " ", "\[ImaginaryI]"}]}], "h"], "+", 
    FractionBox[
     RowBox[{"0.3792035645779854`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.3076161402128221`", " ", "\[ImaginaryI]"}]}], 
     RowBox[{"h", " ", "\[Lambda]"}]], "+", 
    FractionBox[
     RowBox[{"0.20433363498546248`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.6659440226950509`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.0182473772889438`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.23605236140342356`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.8763584772840063`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "\[Lambda]"}], "+", 
        RowBox[{"1.`", " ", "h", " ", "\[Lambda]"}]}], ")"}]}], 
     RowBox[{"h", " ", "\[Lambda]"}]], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.5`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.007937121382447287`", "\[VeryThinSpace]", "+", 
             RowBox[{"3.9002434462176705`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "-", 
           FractionBox[
            RowBox[{"6.177681714776175`", "\[VeryThinSpace]", "+", 
             RowBox[{"6.067257033247766`", " ", "\[ImaginaryI]"}]}], "h"], 
           "-", 
           FractionBox[
            RowBox[{"6.067257033247766`", "\[VeryThinSpace]", "-", 
             RowBox[{"6.177681714776175`", " ", "\[ImaginaryI]"}]}], 
            RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.8173345399418499`", "\[VeryThinSpace]", "-", 
            RowBox[{"4.87220567558442`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.6659440226950509`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.0182473772889438`", " ", "\[ImaginaryI]"}]}], ")"}], 
            "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.23605236140342356`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.8763584772840063`", " ", "\[ImaginaryI]"}]}], ")"}],
              " ", "\[Lambda]"}], "+", 
            RowBox[{"1.`", " ", "h", " ", "\[Lambda]"}]}], ")"}]}], 
         RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}], "2"], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.007937121382447287`", "\[VeryThinSpace]", "+", 
          RowBox[{"3.9002434462176705`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
        FractionBox[
         RowBox[{"6.177681714776175`", "\[VeryThinSpace]", "+", 
          RowBox[{"6.067257033247766`", " ", "\[ImaginaryI]"}]}], "h"], "-", 
        FractionBox[
         RowBox[{"6.067257033247766`", "\[VeryThinSpace]", "-", 
          RowBox[{"6.177681714776175`", " ", "\[ImaginaryI]"}]}], 
         RowBox[{"h", " ", "\[Lambda]"}]]}], ")"}]}]]}]], " ", 
  SuperscriptBox["h", "2"]}]], "Output",
 CellChangeTimes->{3.7476037056277313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"inv", "[", 
       RowBox[{"h", ",", "\[Lambda]"}], "]"}], 
      FractionBox["\[Lambda]", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", "0.05"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.02", ",", "0.1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<h\>\"", ",", " ", 
      "\"\<|\!\(\*FractionBox[SuperscriptBox[\(e\), \(\(-a\) + \
\*FractionBox[SuperscriptBox[\(b\), \(2\)], \(4\\\ c\)]\)], \(\*SqrtBox[\(2\\\
\ c\)]\\\ I\)]\)|\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747603564685219*^9, 3.747603594382272*^9}, {
  3.74760367754423*^9, 3.747603715898365*^9}, {3.747603772816613*^9, 
  3.747603784949389*^9}, {3.7476041450689*^9, 3.747604201384165*^9}, {
  3.74760423574951*^9, 3.7476042817547197`*^9}, {3.747604312003812*^9, 
  3.747604328761545*^9}, {3.747604359518317*^9, 3.747604361722685*^9}, {
  3.7476055297397537`*^9, 3.747605553444763*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVkGs41AkYxYetp7StlH2iRYsltrZ6FKnI6xLJZYm0/GcwZsyModC6ixG6
LGKtxkhsxm0WzYz75U/xamXXrbbGWpetTVK5pJKptCNrP5znfDjnw/kdPUaY
B0uZQqG4ruh/52a3Msfj+bBe2pwpdkpCx1S+3C2ZD4cSHl5XsUlC4+jQi+0X
+VBS2XP3pHkSPqfqXy/g80H/LXWTvUESBhmlz3tJ+TCrpPTU8iMP2e0+yb3j
K/k468Pheh4yZt9fq3fMBWc6q/8nPR7SHM1Hz28WwJmPBm9UVBOxNjLdp3cw
DzKKKunu7+Mxe+uAakJUPgy17T3865E4nLF1sVZSLYA9G+y6N92Pwcqx4vht
PYUQMGHP5oZE46vXT6db2Ndg9sx8YpBNFLpaKdVFqQuhhBr/m6FuJD6ylohj
XwphLrtJZKAXgfuVj9nW3SgGtW6GPPro99i55P+3RUEJjKYdwOTI07ihhb1R
EVwKRuYjm/9sD8eC6oxVon1lIB1zE8m+CEfvcS1FkXo5jIwKOSUvQnH0XmnW
H+Pl8CF2UtBz/xRmKgSGxzpF4ORzP6am6SQmBVbEtxX+Aoc36FZpN4SgWUZt
MI1bAV4a1t9ayIJRZ9bQ3/VIJZRl+Vq4veRiz6c5c5GbqyDWxbXE2JiLIhY3
ZfZtFRQ5ey3d9g3CWwq/QVfZdeiLMZxil3Kw1MOlc1Iohvkf4qZyltnY+Lis
biBJAkoL9Gb5d2y8ZCK3mnWTwpjfkR81u1hYfJOZtqBVDW03eMdzD7LwWeqh
YZfFagh6k7mgKQnEuHNrxl8wayA4zPhy++5A1Hhi6P1AVgN93d0J16RM9GJ4
SjttakG019lp+z4myjsUx2wqamGx/NXr9X0MlLaOvQvSqAOjqwPKpjQG9vD3
zexIqgOdC3IuYzEAUzOFNyee1EG3/k2zvMIAPPGVdY6dZz1QJm0TdloGYMYV
aoNVaz30P02cUUzScaRKPDz+dQMYyOTd7Et0TCuMc9LNaQAB13PawJKOw2Kv
As/3DeDtQrsy9cgfrQnO3C5OI1hGK+9QsfPHdc8WssrvNMKVdVqpRxv98IVa
i0mXVRM4pJfMh+r5YZhPev1f4iZwPet08XauL3omD6dcUG+G2G0x5Xqavuju
QDv+IKUZxFrFZA2fhtXT1Ii7082wMf+yr9VWGkokwaeb3FtAyFc8npFQseuz
6tP2HS1wUL15THM/FQ+5hnWEbSPhE+qs0a0BAuen2tiWxiTEf2P7Ya6PwIoL
a1VVtpOwsDpPVbuXwM+xmFayk4TciNVL0d0ETu8ZXBw0JeGfjJCXuzsIFGge
MD1oR4InU3urtIbAuQnlylV0EhKPP7QZu0xg2Vk393sBJEhU1Q+o5RDoo1P4
7mcmCe8iMsLtswnsOmHmYM4hQTaiJqy5RODVHs4EN5SEVt355bTzBDpU9+vc
TSDBSWDR7BhDoMJ5y+0C3kp/yUOcHEVg7XPWyaCzJHxpOvSoNYJAbf3lVqVz
JMRenV6zK3yFj2/ibZpBwjnKkIsGd4XPhLdMySQhMmrIwoNDoO+dXtFA1soe
s2FuJovA39cEytk5JKgXVaWsYhDIK6sp3Msn4YaMfsqaTqCpzZIdRUDCvyET
ggS/lT8eHJ3pzyNB09xwuYVGYFG8ICc/nwSVtVtEcoLA/wBv53sE
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"h\"", TraditionalForm], 
    FormBox[
    "\"|\\!\\(\\*FractionBox[SuperscriptBox[\\(e\\), \\(\\(-a\\) + \
\\*FractionBox[SuperscriptBox[\\(b\\), \\(2\\)], \\(4\\\\ c\\)]\\)], \
\\(\\*SqrtBox[\\(2\\\\ c\\)]\\\\ I\\)]\\)|\"", TraditionalForm]},
  AxesOrigin->{0.02, -520.4294215461275},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.02, 0.1}, {-520.4294215461275, -85.65894900778959}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-529.5945713886305, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "230"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-414.4653167389282, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "180"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-299.33606208922595`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "130"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-184.20680743952366`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "80"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-69.07755278982137, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "30"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-506.56872045869005`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-483.5428695287496, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-460.51701859880916`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-437.4911676688687, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-391.4394658089878, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-368.4136148790473, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-345.38776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-322.3619130191664, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-276.3102111592855, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-253.28436022934503`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-230.25850929940458`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-207.2326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-161.1809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-138.15510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-115.12925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-92.10340371976183, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.747603583088023*^9, 3.747603594942164*^9}, {
   3.747603678202594*^9, 3.7476037162317867`*^9}, 3.747603785488647*^9, 
   3.747604171503986*^9, 3.747604201917474*^9, {3.747604285861266*^9, 
   3.7476043292830887`*^9}, 3.7476043622157803`*^9, {3.7476055310596046`*^9, 
   3.747605554205756*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
s/hbOWNss7HySD3cQg+iK/8uFkPLff8PsRMOAQ==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "approx", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747603305244326*^9, 3.747603335679995*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7476033215447807`*^9, 3.7476033538823233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"2", " ", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.7476042999820833`*^9, 3.747604303494052*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  SqrtBox["d"]}]], "Output",
 CellChangeTimes->{3.747604303860156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Im", "[", 
      RowBox[{"exp", "[", 
       RowBox[{"0.01", "+", 
        RowBox[{"I", " ", "y"}]}], "]"}], "]"}], "/.", 
     RowBox[{"h", "\[Rule]", " ", "0.001"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "10"]}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74752503931461*^9, 3.747525090152728*^9}, {
  3.74752525346761*^9, 3.747525276807081*^9}, {3.747525344999395*^9, 
  3.7475253824853497`*^9}, {3.747525427730255*^9, 3.747525465747283*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 10] Pi, 0}, {-63.63880588098721, 
     489.41567574735467`}}, {{-0.3141592653589793, 0}, {-63.63880588098721, 
     489.41567574735467`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7475250910828667`*^9, {3.7475252542969217`*^9, 3.747525277441142*^9}, {
   3.747525348905979*^9, 3.747525383574294*^9}, {3.747525428242762*^9, 
   3.747525466665423*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "approx", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747494399866701*^9, 3.7474944141047897`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.747494422019*^9, 3.747494502258251*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", "approx", "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474944227748003`*^9, 3.747494442220188*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.747494424284234*^9, 3.747494430761348*^9}, 
   3.7474944768720837`*^9, 3.7474945154746447`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"approx0", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{"SeriesCoefficient", "[", 
     RowBox[{
      RowBox[{"exp", "[", 
       RowBox[{"x", "-", 
        RowBox[{"I", " ", 
         FractionBox["\[Pi]", "10"]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "0"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"approx1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{"exp", "[", 
        RowBox[{"x", "-", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "10"]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "-", 
    "approx0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"approx2", " ", "=", " ", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{"exp", "[", 
        RowBox[{"x", "-", 
         RowBox[{"I", " ", 
          FractionBox["\[Pi]", "10"]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "-", 
    "approx1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.747494538223201*^9, 3.7474946292892427`*^9}, {
  3.747494710440617*^9, 3.7474947105723343`*^9}, {3.747494771613143*^9, 
  3.747494782490862*^9}, {3.747494818797823*^9, 3.747494822820245*^9}, {
  3.747494879197199*^9, 3.747494987504795*^9}, {3.747495075079267*^9, 
  3.747495078593686*^9}, {3.7474951980341873`*^9, 3.7474952565978107`*^9}, {
  3.747495553447453*^9, 3.747495555634355*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val", " ", "=", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"approx0", "+", 
       FractionBox["approx1", 
        RowBox[{"4", " ", "approx2"}]]}], "]"}], 
     RowBox[{"Sqrt", "[", 
      FractionBox["\[Pi]", "approx2"], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"val", "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "0.01"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747494669697051*^9, 3.7474947440188837`*^9}, {
  3.7474952785620937`*^9, 3.747495300548505*^9}, {3.747495524478654*^9, 
  3.74749553537746*^9}, {3.747495567383411*^9, 3.747495570478135*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxNzXs0VYkeB/CDEIrazmNHZRrpoQ5qRt2GHKarNaWQSt2S2hiPk9dh5P0I
+1SWkRhvTqkzpoQZTJyr8M3odInQhAZxqW6jGB1Gj0HuuWvd1e631nd912d9
//it8ghy+VqVxWLFKvO/rvjJNzul2BCs/9+pVJdTXZcYC3ytXcmP3Gm0hFsi
YaxIq826XcD48wCNrLdZjOvWSzO9UxjfvTyU/mUo4+H0F1McO8YGZa1nrAnG
xFP2ccenBh+8iJySRFcxXh1ZojebxNimZ/z3nH2Mec4X1Y0+Yaz7xmT/O8Wy
D9bMt9WaaGS8UmjxausFxn+6phj4ezJuE0SU39zEuOmglchdjbF21Zhflipj
F12JR5sK4xE568AXLMYqf5Nv4c6RH2xrsG+2/TXjhkHvM9tfMNawIhO+GWXs
mNMScf13xoNOG4XLnjOeg2LP9BPG1ldiiPLHjJPn+TpPBxi3HR1SM/zIbuwv
p8/2MY6mNR959TJuGpZ1FvQw1rYRtjzoZpz/uq3O9iHjEZe46vBfGZv+aF5W
8YBxiM6w9FkX4zqfjKLlHznMf9+OQ50kam62hI4ZiWEhWjJ6oYOE56eLtxcY
ivEyrCOt7T6JyImK/t08MUqi0j7XVLpMU+w0Q4hBxe/ts2snkX3IL7dMV4zl
yYsSYtpINPxqXuOuLcaFb1PuKVpJBO9uCrqjIsaejF2ijUqnH7TWiZqjoZGz
kOfTQkKnYjrK/B2NmEtij4G7JNiNiT2Fr2j4Vie+kzeTEFLnI08P0TCW2V1U
UTriUmqVdT+NwVsse+tfSJiNJja87aFxQB6XXnmbxEttmWPofRqC36LWFjaQ
uOb/0CGkngZ3PuSgSEbiM/PArJwCGl1qm2eu15JorZl/cTyHRupCxaX/1Ch3
idrS9Zk0VImgsaM3SKhP3m6vT6Exvvpk0s4qEutMatQVkTSad3tWGpaRWNx8
ek/cYRqi7P2L5RdJWFhRRp9xafx7ont+sdIVhs8t3QgazrsOTx6UkDAeE87R
ujTMZt16nxWSmOOPS/o1aIxR3sXq+ST+wfdcd/5NMrz5kZb235HoPHd8G++3
ZLg1S441nyVhrcILLy1Mxs7J0fImEQl+9eD5HpNkrNjNru0TkBie3ZjP4yeB
6NBX2C8lcdUwtrjYKRFazj9ktg3yoDp8Qvue8DQax6WRNuU8aMrZegPfJSBT
Fp6uFs/D2avX4vrK4uEXP6j3dA8PCvmgluLTOBwLNQBvJQ9DwX8t2Nocg6XJ
qN7yiguHfuclV6KjIU//S0/UwIWZTDQRuzYKea1aRe/Pc1GVvp5T+TYCgazy
jB+OcWH+/YOpG43hUNtfd89qIxdNP4eWGxacQs2DQkvj9xxUX/VYWpEdhpOO
+gvXtHHQEUv62J77BjZv3HViiji48tpyuVdeKDpvsV3qgzgQBpiyy2Uh8Ipz
VzGw4WATBNKZDhG4AbHDLXocfG/OvvyYJULrIQvTrMdsmDzTb/qnaTAKg2RX
qivYqN23g1j3KBB8aemJ+gQ2BGNHTFihAcBDC/GIIxsvdRzGvVX8IdqcOnDk
Ezasgvd+JZQJsTo1uuCPcX3oXe78OdbLD9mq3UUBt/SxY8EpreY1vlhTotYl
SNOHw6bSR6qLfCCzl/vz3fRRdv3aqrznX8OXcN8WyNeHzhu7HqcnXuidOb4r
f56AvqXNQNKEJ74anr493E5gPoxsN53yQO/UiZMxFwn0bPfLzSE8kDtSYVsu
IcDvfPjuF10PHO6a5QwWEbi+xclYoe2BvopcCAoJTFfeb9+r5oHHfp0ctTwC
9We+jVnyJ4UnQwKcyyBgKL2/4mY3hYl7Kzk5NIEux3WHpHkUfqrzf3E3mUDc
hqv+o1kUgq/VNb5NIiB+stXePIPCpNhVeCSRwKtVozb1KRSm7dIaV8QTqLX6
u/NINIWZ2jk/aQSBGl7iv5zdKdwqcRB0hyv/W2TOFh+hEJOVx9ZQuvlHW8WU
K4X3IZaNPmEEinjdhvlOFFTMAtgbQgiUtl0WTdhSaFp+c/SoiMCyFa4lO7dT
SNTRakwNJnBYLyhfso3CglGp3x+BBA4s2grnzRTu9E7aGClt1JyrKDWjIJbb
sp0DCPSH3xlW30Bh54200QR/AjkXstOptRQ0pQMNlScJfJH0bK7emMJ/AdjY
P60=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.0228845289326856`, -743.3899779842787},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-7.0228845289326856`, -4.490040936037542}, {-743.3899779842787,
    35.39952276115613}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.002\"", 0.002, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.502290170873972, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.199705077879927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-667.7496769682732, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "290"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-437.4911676688687, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "190"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-207.2326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "90"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-782.8789316179756, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-759.8530806880351, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-736.8272297580946, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-713.8013788281542, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-690.7755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-644.7238260383328, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-621.6979751083924, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-598.6721241784519, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-575.6462732485114, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-552.620422318571, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-529.5945713886305, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-506.56872045869005`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-483.5428695287496, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-460.51701859880916`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-414.4653167389282, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-391.4394658089878, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-368.4136148790473, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-345.38776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-322.3619130191664, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-299.33606208922595`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-276.3102111592855, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-253.28436022934503`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-230.25850929940458`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-184.20680743952366`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-161.1809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-138.15510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-115.12925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-92.10340371976183, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-69.07755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {69.07755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.747494693561324*^9, 3.747494745009109*^9}, 
   3.747494789077388*^9, 3.747494841525384*^9, {3.747495270512135*^9, 
   3.7474953017982903`*^9}, {3.7474955364612083`*^9, 3.747495571483873*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"val", "/.", 
   RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
  RowBox[{"h", "\[Rule]", " ", "0.01"}]}]], "Input",
 CellChangeTimes->{{3.747494748471301*^9, 3.747494759478293*^9}}],

Cell[BoxData[
 FractionBox["2.9656224513472126`*^-6", 
  SqrtBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"516.1699927076904`", "\[VeryThinSpace]", "-", 
        RowBox[{"495.39959847371773`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SuperscriptBox["x", "2"]}]}], "]"}]]]], "Output",
 CellChangeTimes->{{3.7474947491616707`*^9, 3.7474947598736773`*^9}, 
   3.747494793729446*^9, 3.7474948435652657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "a"}], "-", 
     RowBox[{"b", " ", "x"}], "-", " ", 
     RowBox[{"c", " ", 
      SuperscriptBox["x", "2"]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}], ",", 
      RowBox[{"c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7474954241640997`*^9, 3.747495473902514*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "a"}], "+", 
     FractionBox[
      SuperscriptBox["b", "2"], 
      RowBox[{"4", " ", "c"}]]}]], " ", 
   SqrtBox["\[Pi]"]}], 
  SqrtBox["c"]]], "Output",
 CellChangeTimes->{3.747495475518917*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"3", ",", 
      RowBox[{"\[Psi]", "[", "x", "]"}]}], "]"}], 
    RowBox[{
     RowBox[{"\[Psi]", "'"}], "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747498430348818*^9, 3.747498475552602*^9}, {
  3.747498538575891*^9, 3.747498542791898*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
joLQIvMJAplLdVDGM3bhyCIIvcBt5hPcqoXuyUKE1BuBaCh7jBtJcy0U0fe/
ojMVgNaYy3BX2dVCa/zRTmFBX5QUT0AtzaAWlgnOL9569RN9FXrDOeRZLXzy
dkOpwdkHXS/f7jNlr4UCslS96LwXSo8X7cA4VAP/XgZnXGse6NtQj2TiuhpI
k/uUJ1TMA81lt+jaz6mBGRcTjm2+7qiUgjRrp0cNNG+NUBZ47IZahG61fhOu
gW5OySME0y5oFfvYnglLDdT9ZF++q+yCElY03HxFVgN/zv8Zq/ZzRkWrhOZ1
2iB0i35nneb4DQ1U8hJEOSHcKWvu+1T4BWW3eu0Zjgvh21ryHsHez2h1uODY
p1EUzpH3DwYc2qPL0xOut7xRKLvyj8JK1Q51wi8c/KuHwhjuQGyary1Kw/mD
s0cUhRFPYvSG22xQCSuBXpdlLHyGvq7x07BGh8IJ72jWYCFuzOZGW5oV+rFq
/LNAJBZG4nhtfDqzRCPxPZnnZLFQJEmOQa/EAt0OHzN/klYNK2Jwr35r+Ih6
VuXV33CuhsqXmdUuF5qijDPu1/ZfVUOTw9c8mukfUDlOPphMWA0z3FTuq+ca
o1NK+NTfpqogx36fXDD2PWpjNWqkVloF6ciTcjMHjND4KjdyQqMqaMRUoBXF
8A4VmdEwmMJUQV5jizMiWUO0A5+3tJS2Cg5qGsc6f32LHimNvH7fWAnd2Cu2
Go/00eczPDkttythpP4PowMnXVTR8K4eOK6AM6tpu3F3XqNPl1moSzsroOfO
FoHxqDYqtU33JcmuAr6+cyCdZaSJPra5ynNdoQIGNlzIagENFDkinQ68VQGD
hozf+rOpo6I4uNJOLeVwIjj7y2UyNVTY/fTvfkw5TLc31Iy8qooKEh9mmlqW
w9DWKXxx5pfoPco1Ss3r5fD7uOBHUy0VlJV5cELoYxmUAZIHdNaK6K3k7oBM
iTK4S0StlEiqgDJytEmy0JbBrYOQHPMiefQaP0wnR0uh0A+sXxavLEpTXKHt
EVwKX7IfC17FlUGpRIvJz4xK4ajtx0tpM1LoFYkMmxWKUuhny3vboVESvdyQ
dFdvoQTi/rvc3d76GCWU+z02VF4CqQJ+CdmNSqA4yiESDfolUPXij5WMIIKe
9/vtPRQpgc29/TiZgeLoibpXagFJCXzRGfT8K94j9ODNtytxRcXwo0gmi/FN
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.02002116861441684, 0.02002116861441684}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747498438031786*^9, 3.747498476900921*^9, {3.747498539255172*^9, 
   3.7474985432842083`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"10", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"10", "-", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.747506596365617*^9, 3.7475066167442513`*^9}}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747506607166746*^9, 3.747506617283249*^9}}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747506607166746*^9, 3.747506617287221*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", 
   RowBox[{"1", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.747506678564003*^9, 3.7475066930091133`*^9}, 
   3.7475067889597797`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.8390739394751701`"}], "-", 
  RowBox[{"1.0946597549815813`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747506680938817*^9, 3.7475066934172907`*^9}, 
   3.747506789420025*^9}],

Cell[BoxData[
 RowBox[{"0.8390739394751701`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0946597549815813`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747506680938817*^9, 3.7475066934172907`*^9}, 
   3.7475067894207983`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"10", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{
    RowBox[{"-", "10"}], "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.747509038678048*^9, 3.7475090418347607`*^9}}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.747509042323735*^9}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.747509042327137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", " ", "\[Pi]"}], "]"}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "a"}], "-", 
      RowBox[{"b", " ", "x"}], "-", 
      RowBox[{"c", " ", 
       SuperscriptBox["x", "2"]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"b", ">", "0"}], ",", 
       RowBox[{"c", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747511387520376*^9, 3.747511406932922*^9}, {
  3.747511436968954*^9, 3.747511441725976*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "a"}], "+", 
    FractionBox[
     SuperscriptBox["b", "2"], 
     RowBox[{"4", " ", "c"}]]}]], 
  RowBox[{
   SqrtBox["2"], " ", 
   SqrtBox["c"]}]]], "Output",
 CellChangeTimes->{3.747511408785462*^9, 3.74751144254361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%187", "]"}]], "Input",
 CellChangeTimes->{{3.7475114130436296`*^9, 3.747511416722579*^9}, {
  3.747511451527389*^9, 3.7475114519029627`*^9}}],

Cell["\\frac{e^{\\frac{b^2}{4 c}-a}}{\\sqrt{2} \\sqrt{c}}", "Output",
 CellChangeTimes->{3.747511417450873*^9, 3.7475114522750463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", "\[Lambda]"}], " ", "x"}], "]"}], 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "x"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747511527607624*^9, 3.747511593433156*^9}, {
  3.747511848733345*^9, 3.747511857987939*^9}}],

Cell[BoxData[
 FractionBox["\[Lambda]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{{3.747511574897415*^9, 3.747511595054996*^9}, {
  3.747511854648106*^9, 3.7475118603448257`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", "\[Lambda]"}], " ", "x"}], "]"}], 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "x"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "R", ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74751199837022*^9, 3.7475120023952703`*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "x"}], " ", "\[Lambda]"}]], " ", "x", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "R", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.747512003858749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Lambda]"}], " ", "x"}], "-", 
        RowBox[{"I", " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "R", ",", "Infinity"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"\[Tau]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747512131796217*^9, 3.7475121865935307`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "R"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"R", " ", "\[Lambda]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "R", " ", 
      RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"\[Lambda]", "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.7475121565178633`*^9, 3.7475121887557163`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", "%196", "]"}], "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"\[Tau]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747512390495735*^9, 3.747512421725769*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "R"}], " ", "\[Lambda]"}]], " ", 
  RowBox[{"Abs", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"R", " ", "\[Lambda]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "R", " ", 
        RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", "\[Tau]", "]"}]}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", "\[Tau]", "]"}]}], "]"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}], "2"]], 
   "]"}]}]], "Output",
 CellChangeTimes->{{3.747512396284878*^9, 3.747512422337359*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"R", " ", "\[Lambda]"}]}], ")"}], "2"], "+", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Tau]", "]"}], "2"]}]}], "]"}], 
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Tau]", "]"}], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747512445057084*^9, 3.747512465887369*^9}, {
  3.747512563802044*^9, 3.747512593516961*^9}, {3.747512628651078*^9, 
  3.747512658240594*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.747512558945138*^9, 3.747512595850377*^9}, 
   3.747512654575074*^9, 3.747512706898337*^9, 3.747513318432008*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "R"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}]}]], " "}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}], "2"]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7475127142571573`*^9, 3.747512732489827*^9}, 
   3.747513328623337*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.747513129048492*^9, 3.747513352491181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"R", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "R"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]", " ", "+", " ", 
         RowBox[{"I", " ", 
          RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "+", " ", 
       RowBox[{"I", " ", 
        RowBox[{"Sin", "[", "\[Tau]", "]"}]}]}], ")"}]]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747513345360076*^9, 3.747513349517123*^9}, {
  3.747513408063635*^9, 3.74751342399796*^9}, {3.747513509523864*^9, 
  3.747513515010013*^9}, {3.747513626392775*^9, 3.747513645912271*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.747513404869895*^9, 3.747513425471671*^9}, 
   3.7475135176279488`*^9, 3.747518112449506*^9, 3.747518525956564*^9}]
}, Open  ]],

Cell[BoxData["222"], "Input",
 CellChangeTimes->{{3.747513437972374*^9, 3.747513438263167*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}], " ", "\[Equal]", " ", "0"}], ",", 
   " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747528031996372*^9, 3.7475280466608973`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7475280470860023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x"}], "+", "c"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.747528055706997*^9, 3.74752805849514*^9}}],

Cell[BoxData[
 RowBox[{"b", "+", 
  RowBox[{"2", " ", "a", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.747528058674281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"10", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{
    RowBox[{"-", "10"}], "-", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.747532870377796*^9, 3.74753288714436*^9}, 
   3.747533862314898*^9}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747532877399027*^9, 3.747532887693918*^9}, 
   3.747533863467456*^9}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747532877399027*^9, 3.747532887693918*^9}, 
   3.7475338634681*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", 
   RowBox[{"1", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.747532894195497*^9, 3.747532912890526*^9}, 
   3.747533866045767*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.8390739394751701`"}], "-", 
  RowBox[{"1.0946597549815813`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7475328965558577`*^9, 3.7475329146419783`*^9}, 
   3.747533866522793*^9}],

Cell[BoxData[
 RowBox[{"0.8390739394751701`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0946597549815813`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7475328965558577`*^9, 3.7475329146419783`*^9}, 
   3.747533866523341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"exp", "[", 
        RowBox[{"1", "-", 
         RowBox[{"I", " ", "y"}]}], "]"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "10"]}], ",", "0"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"exp", "[", 
        RowBox[{"1", "+", 
         RowBox[{"I", " ", "y"}]}], "]"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     FractionBox["\[Pi]", "10"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7475332317391367`*^9, 3.747533400653638*^9}, {
  3.747533433726946*^9, 3.747533464069756*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVi2s0lAkYgOVU0lGTiRPJHoukk8TMtk409blFjmanrMRI7oOZwVcqt9xi
XZJKtC1zyrULkZoUJt6X0SRiMFNIi1xKRSNstClrfzzn+fGc52ffsEMBykpK
SgeW+N+NuXVhO3TkQAiISNNAOhFZ9ICZry2HhFGFpJ9JJ8zuVm5X0ZIDy3L+
Q5oFnShoKfo4oCGHoaLNwuFVdCLuWwYna60cqtxC7XLKacRuH/axyWVL/+rz
oYopc6LGZIFZPi4Dwv7SYkqMGVEpZphueSgD78/KlBC9bcRQK+XodcelntqU
nvZ2E7GzJPe++3A3KDGemgc1zO71u1kh0IzrBsJmgq+2kYo9ZzXmDqovdQc+
v1e4GUNpOyI7y7tAr8z6ZLXYDJ3qrgZLGV1QUPOmUW5qgYvcHIW0qxOGpP4N
mXEM7FHYCqj8Tqhad409e88ax/9KPl6+KIUapwfU2DE7DJ4f/1pNl4JJ4LCs
dMQBBWVkmZjbAc1qAplI5oQelKtW3dntwIpu/fByORO9tIw2BrQ8B6fIRgP9
BBZOyA72zU+0gWVKTCv/p0O4faSw8YJmG2ROxpfcqXZB4RX3uTLnVmgeq9RX
mLti80LlmqfHn4FAzKL0dxxGHRUeybnZAs0+uoJHrCP4XSypXtX2FFgJaneZ
M+54SW5vUDEtARv2OcQsNoakmwy8MJZA5ImpWGXKUeyYqopaPPAEeJu8jKhV
Xhi5IPCtSGyG2V9ngqc2eqOcXRHhVSsGj+Goi7+88kYRn81ZN9QElztffBu/
7YPvDMib+zSbwJm5QvKJ64vXMg1bzuxqBO94p3reHj9U2b+gXuOD4FccNOuw
xh95LqcPTZoBbEvL1uJ0+ONglLkNL7YeWpzjm1QKAnBgvO75zKgIvjSo5I/5
BaL1YubtRNc6CN0v2bHekIO10XkO6iU1QDX7Ht42y8H6PacTblMewatTNvrV
j4LwJedCtK17NXQcXkOYnwvGmL5TlLcghN/L30AvKwSTp298yTK9D6/tTba2
UrlYFE69viumCl677XN3G+Pin6F5zX3PKuBGbv/WFWU81JT80W7rXgYXpbW3
Dsfzkc1bHlM3fwOEhcmBs6xQrCnW87LpLgZjDRP7WxphSJQKxe2cAvhq8fqx
6vswbAhrrZeH5sF5Owv1BrdwzKSxGFtMc+CxX5CpVm04eq9PPbusLQOUjIXU
Dn0SVdU6n0zbxoLloN711BQS543yl410x8DinvuFRCqJ49aBDJlPDOzPHSz9
mkai5PTCA2F8NDAt1gq5mSQmjRiXRIgiIUIqGvrtMon/1iUmfaGdhHBXz3St
QhJ7ZIFxs7Y8UFspp5Q/JvGh6vd/5D5cSHCctPdvIDFn72V+dXwIaOsUn9FF
Elnl4HlKFATHUkY/XxCT2JKkZTVPC4CVSjAZ0UriCb8cxZytJ4xu76Ht7SXR
TIoDNfEekP1elDTfR+KE5WR7lOgIJGYw5Pf6SfSn7rvzjeYKutkbYg0HSSxL
UnT9sHWGey5bBlXfkqjv4ViVIHKEZPmMlfgdifnmhVnKdHugc47mxb4nUbux
9Iqa3W5o61XxVEyQuDrczWUdfSfoih3h1icS5xhUPWM7E9B+aWToO0Wi0OIj
7ZjdJjizoShDZ5pE3o+/Y3npVg3rz9dNy2dI/A/jTpyA
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 10] Pi, 0}, {-287.23948929664147`, 
     19.399146571897518`}}, {{-0.3141592653589793, 0}, {-287.23948929664147`, 
     19.399146571897518`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7475332612896223`*^9, 3.7475334012683153`*^9}, {
  3.747533434363392*^9, 3.747533464608283*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVTns01HkcnYSeeniELBI7QjFDRRt9vs1MoY1jbUZvQsh7GidCFkvrkURp
2WSnbZpCaiKOY8OHpMGoYX6V0jpJhkLJo9qatLN/3HPPPfeee69ZQLT3YTUa
jeahwv8cMftPUkTW5i06ufWT1BQPjeIV6cksQ4iz3Zu6Y5KHfslaR11ZVtDU
yl6OEzxMnXNpxIa1CY41Ta+vGOeh9t035iYsdxhJ6MpJHeZh3+W8rfqsPaCT
wo2z7eMh6AbIdFhHQGZTsS2rhYe8nZ362qzjkCbJbWTl87C/Scic650N/TK/
DSfoPDzXEUv2556FvVYanS9aYrDs9+nSi93FcGr+ps87D8WgQyhbOeopgDPu
Ywl676IxcSpy6mPCZXDo0ox+ahWNRbfNQmmjImgUz33gtisKx+kcJ+WOcnA7
fa9EmhaJNvMlPYqYSqj6IjfKa4rAP/PCZoIjxTAYaf/XvLFwvNhzSfGTRhXQ
0qa16+nhuDHqTMbGwmpofXQ3KO5wGNYL2YGGrjWgyOfkzJw9gtUFlqKpvlpY
U0vShbJQPG8ks5QW1IHINiXK+GsI6n218y3dWg+iktKOK+tCcP55HA2R/w1q
k4wHPhHBqGjXa7L7rQEWv5c96vvjMDrVXPj41rgJXOjHTTKeBGG9Md+RG47A
L6qOWaIehHSt6fZb7GborbSZubI+ED12ay3N0mqBx12UyJcfgK8nMvl+Iy3A
qlj56sOlQwhDJdm3bt+FmuOp6tf7/XEw41Q87UQrPFGvxGBTf1Ty+zM8ufcg
3SSQ84PgIMoaJNsMzNogM1Ob1mx8AA199L4fULZBWl/3Y27iPhQXufSJqPvQ
375o87yBPTjHaZY9clEC9mW/fG4M2I33Lcyka+LbITOpOk/UykW3yOeaQ+wO
oI+YD55i+aB+AN+gdFEnvI06ejJJ8jPuE0a4c191QtBHYXSjrTfuYc2uzb4h
hV1c1uoxsRdK103aNWR1Acfax0vb0hM/xyYPhXMfQFKan6G2xY94LFTB0zd9
CNeW/2pixXTDkDKxccunhyC4IzGL+sbBBZcXbJk+JINV91odvTRYuNJgTKkp
k4G/zgHf7cUu6B3obGng3A3+Bru9E90cMeR5r/WwoBtiZm+YFwQzcWMSvXHD
kh4QPH3qmLOMjoPuaM2K7QHacOJSaYAu1o7fV/PoVemwoTMLKQVw6lLCnnDk
QDYrorZpfkduijMqTMvlsEoSKvS8Y0U46effDFbIAbOLWy9MWJFe36tW1yrl
8AKGk0YsrAntm+Qq45YcaPKympRca+LtsVi4tU7VF3ti+/WDNmT6dUFJYJvK
fzP87B1tHXEyF+RefSmHmO0HXc6tZhDpB7E0/JUcGKIy9m1nBvHvaF7EUKj2
bNh6FJdBsniDWXWv5eAV7LZSJ4dBnjXRT7ZPqPLF78tPTzFI0v7K5NFZ1Z5z
xEBiK5MsYzQ23KRRII7D4qJ+JhHOfajkq1GQEjXHuOYTk3SVTyQoNShYtYKZ
Pr7Wnpj86xCnpUXBi0cXqH2F9qRKyqntXkKBf0L54LGb9sRV4DNTuIwCGRXb
kN9uT2Jc4/gmuhQIVlh0t321J+pGmVUv9VS6SrlwQN+BFL0tei/SV/VFxC/9
wnQga1vKGOGGqj/G+f26Ox1Ic2F9tJ0RBaSExNsGO5D/AGFRYFQ=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 10] Pi}, {-287.23948929664147`, 
     19.399146571897518`}}, {{0, 0.3141592653589793}, {-287.23948929664147`, 
     19.399146571897518`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7475332612896223`*^9, 3.7475334012683153`*^9}, {
  3.747533434363392*^9, 3.747533464626115*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"exp", "[", 
        RowBox[{"0.001", "-", 
         RowBox[{"I", " ", "y"}]}], "]"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "10"]}], ",", "0"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"exp", "[", 
        RowBox[{"0.001", "+", 
         RowBox[{"I", " ", "y"}]}], "]"}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     FractionBox["\[Pi]", "10"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7475338106057873`*^9, 3.747533813507287*^9}, {
  3.747584593295617*^9, 3.747584637762706*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 10] Pi, 0}, {-0.9456802604131578, 
     260.5284607856406}}, {{-0.3141592653589793, 0}, {-0.9456802604131578, 
     260.5284607856406}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747533814076133*^9, {3.747584596671937*^9, 3.747584638417687*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
WuXq
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 10] Pi}, {-0.9456802604131578, 
     260.5284607856406}}, {{0, 0.3141592653589793}, {-0.9456802604131578, 
     260.5284607856406}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747533814076133*^9, {3.747584596671937*^9, 3.7475846384824057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"exp", "[", 
    RowBox[{"x", "+", 
     RowBox[{"I", " ", "y"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     FractionBox["\[Pi]", "10"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747585868680311*^9, 3.747585893693613*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.747585887489942*^9, 3.747585946538349*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"exp", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7475859481104097`*^9, 3.747585969934084*^9}, {
  3.747586054166621*^9, 3.747586072801379*^9}, {3.7475867563119698`*^9, 
  3.7475867623509493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}], "h"]}], "+", 
  
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{"x", " ", 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]]}], "h"], "]"}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
        RowBox[{"Cosh", "[", "x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[Pi]", " ", 
         RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}]}], "h"], "]"}], 
  "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "x", " ", 
    RowBox[{"Tanh", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "h"], "-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "x", " ", 
    RowBox[{"Tanh", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], 
   RowBox[{"h", " ", "\[Sigma]"}]], "+", 
  RowBox[{"y", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "h"], "+", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", "x"}]], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      RowBox[{"Cosh", "[", "x", "]"}], " ", 
      RowBox[{"Coth", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
      RowBox[{"Cosh", "[", "x", "]"}], " ", 
      RowBox[{"Tanh", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cosh", "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cosh", "[", "x", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sech", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox[
            RowBox[{"Sech", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
           RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", "x", " ", 
           SuperscriptBox[
            RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sech", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cosh", "[", "x", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Pi]", " ", "x", " ", 
         RowBox[{"Cosh", "[", "x", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sech", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Tanh", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Pi]"}], " ", "x", " ", 
          RowBox[{"Cosh", "[", "x", "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", "x", " ", 
          RowBox[{"Cosh", "[", "x", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}]}], ")"}]}], 
      RowBox[{"2", " ", "h", " ", "\[Sigma]"}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
        RowBox[{"Cosh", "[", "x", "]"}]}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
        RowBox[{"Cosh", "[", "x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Tanh", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[Pi]", " ", 
           RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}]}], 
      RowBox[{"2", " ", "h"}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["y", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"16", " ", 
        SuperscriptBox["x", "2"]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Pi]", "2"]}], " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "x", "]"}], "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"Coth", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Coth", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "4"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"Coth", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Coth", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "3"], " ", 
          RowBox[{"Sinh", "[", "x", "]"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "h", " ", "\[Sigma]"}]], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cosh", "[", "x", "]"}]}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
         RowBox[{"\[Pi]", " ", "x", " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cosh", "[", "x", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
         RowBox[{"x", " ", 
          RowBox[{"Sinh", "[", "x", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
         RowBox[{"\[Pi]", " ", "x", " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "3"]}]}], ")"}]}]}], 
     "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "h"}]], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"Cosh", "[", "x", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
          RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["\[Pi]", "3"], " ", "x", " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Pi]", " ", 
            RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"Cosh", "[", "x", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
          RowBox[{"Sinh", "[", "x", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Pi]", "3"], " ", "x", " ", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "3"]}]}], ")"}]}]}], 
     "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Cosh", "[", "x", "]"}]}], "-", 
              RowBox[{
               RowBox[{"Cosh", "[", "x", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sech", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
              RowBox[{"x", " ", 
               SuperscriptBox[
                RowBox[{"Sech", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
               RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
              RowBox[{"\[Pi]", " ", "x", " ", 
               SuperscriptBox[
                RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sech", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cosh", "[", "x", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Tanh", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}]}], ")"}], 
            "2"]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
               RowBox[{"Cosh", "[", "x", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sech", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
              RowBox[{"Tanh", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}], "2"]}], 
          ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "x", " ", 
              RowBox[{"Cosh", "[", "x", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
              SuperscriptBox[
               RowBox[{"Cosh", "[", "x", "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
              RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
             RowBox[{"2", " ", "\[Pi]", " ", 
              SuperscriptBox[
               RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
              RowBox[{"Tanh", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
             RowBox[{"4", " ", "\[Pi]", " ", 
              SuperscriptBox[
               RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
              RowBox[{"Tanh", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "-", 
             RowBox[{"6", " ", "\[Pi]", " ", "x", " ", 
              RowBox[{"Cosh", "[", "x", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
              RowBox[{"Sinh", "[", "x", "]"}], " ", 
              RowBox[{"Tanh", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", "\[Pi]", " ", 
                RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Pi]", "2"], " ", "x", " ", 
              SuperscriptBox[
               RowBox[{"Cosh", "[", "x", "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sinh", "[", "x", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"2", " ", "\[Pi]", " ", 
              SuperscriptBox[
               RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "3"]}]}], ")"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", "x", " ", 
              RowBox[{"Cosh", "[", "x", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sech", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", "x", "]"}]}], "]"}], "2"]}], "+", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", "x", "]"}]}], "]"}]}], ")"}]}], ")"}]}]}],
        ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7475859521135674`*^9, 3.747585970431183*^9}, {
   3.747586064186701*^9, 3.747586073502612*^9}, 3.7475867642768517`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "%58", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     FractionBox["\[Pi]", "7"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747585987739959*^9, 3.747586004189296*^9}, {
  3.747586077488368*^9, 3.7475860781697187`*^9}, {3.747586783919138*^9, 
  3.7475868110448637`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.747586040397423*^9, 3.747586119385146*^9, 
  3.7475868050022306`*^9, 3.747586852242907*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"exp", "[", 
         RowBox[{"0.1", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
       RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"%58", "/.", 
         RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "/.", 
       RowBox[{"x", "\[Rule]", " ", "0.1"}]}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     FractionBox["\[Pi]", "7"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7475867157626667`*^9, 3.747586719337192*^9}, {
  3.747586857096589*^9, 3.747586937201221*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxXk01AkcAHBXtcbmah2VFROlJjKTM8b3O0zptxuiy4tUjpJ5uVZRjZcM
rYocsbk2GrZxVGpnGhl2Nlo5E5Nx9atn19GGnayyvczQ7v7xeR/L0JiACA01
NTWf//x/3PonyT61Xh4+Ab5Jq7drY8d+w6oZChUcyoY8c3y10etQon8rhQGu
TvGalDBtTCE33X5A8QTzubHjyzO18ebXvF4BJQAidMfF1NfaaCutm+BTQqEk
8Ubi21QKntbdGVtOiYfqS/36dT06WOSU61hGSYUcJud7wxhdtJdJH77qzoNS
qTjjhJUhXo7q6uApSiA5wFzf++NXaLf+StzGOD7YczQO5vWa4Ej+XOaW3QI4
qzScqlCtQXSerGT218KcxL7OTMscHyp6rOtD7kM+v2pGfM8Cq2RnJUNtP4My
y8jUJIiKn3yjfFJWPARNtd9VZbPrkfasSVCfWA8wRPuHds8aJWP71E5LG2Am
oVrfYO9GtNFxL2781AjzwjDRp/c2mOiQrsyNkELAhDV/pGkzGiov237c+xg6
+BV33TlbcDhYg3UqqxneSOvoRp52qOdNnd/Y3AK5/ubLAij2mLAYXmU9+gQk
Vs72PRP22CkKBI5JK0S/aqpYkNPR1yVG/t71KXBo7GTaIwY+aXLy+y2hDbyL
rvul1m1DQcdPJ4er2+G126+y2koHlPCdefTODrC64ZSbdtURf+GeS+nT6AJV
n6ickeGE76ijXNGGbpDLvFyjzzhjjv9fq0n2Mwhs3xDuEuqC1Iu1xd+e74FJ
FVdYGO6KY9zMNUulz8E02o7lGLgdO931gMvpBbOaSLFOmBsGfaY1lyzrgy0Z
7M6/Oe6oaTPSElzQB3lNs+4NEUy06jsqZtFl4Gcw/UNFogcGjyZtam+RQYht
60vvc4DdwvGZWP8XYNP1ZfQBJqJoxSY+c+YF6McuzzHuRBQ2Lw3Ucvvh3Ogi
U82PhTTVnUXmajlkT9XYj46yUFI6UxFXKweN2x6DsihPvKieUty2fQAYT8Oj
pe898fHkdCprYADWMs6fYlzxQmPG26ngE4NQcMb2erIpGycWpexSrSGId9DN
7haxcTrrT8XizSEQGZyoPbNnB2qnVZiqbx2GSF7IuGhsB5YtODnYdA1D+YXW
I4L0nbh7MOj5bPAIvLk7WGywzhvpSf2Sl9MjEPtW6XGz3huvFVkXTl16CS9Y
QkXpkV2oafnFfLEJCR27lqbal3ZhZKFymeUaEhRHvfQK1Ans0XtnLDAjIdeC
F3ZMi8DiJbmL0JKElVTd0gVtAhlkBbeLRsI0e5XvViMCQ2+AlgpISHo+2XiL
RmDLysRVhyNJqCQOvasJJNAmPcpqLIqEhtAwi+QgAq+pDjuePEWC5PWOVL8Q
Ag9Nsw+ejidhbrNw6EMYgXPthiVZXBK6r3zoZcUQSE27R5XmkGBCeM6PpxOY
oby1jX2dhH5vurMkg0BFfAG7s4CEa1NRNdlXCZQc4x4fKCZBVThi5ZZLYAB8
U6OoJOHO7u+i8ksJfCRmNiYISNhndMGZU0aguR29e6GahOgfdZ08+QROmZkq
lteR4JYnb5sVELgnX+dz5gMSiP1rg9prCBTrfNZbJSKBl6ZuUX6XQDPenEWR
mIQDvtnGSfcJvLgwQV/XQELCH10ee4QE/gtcL0KF
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxX08lAccAHCcXtwtll68TF4u5exGyFsvt9+PLu/cc2pr47RCeZuJsdNc
I9R6oa6kcm60o2hX5L2QeVne3/PuqTTKcF2N2eR12x/fz9fAN8zzmJKCgoL7
f/4/fGvdKXfpvk/dPD2itXarYNNn6rkyKh0UL/fbCz1UcJ8Xn/uEagHRFsEU
qp8KxpHGdwqo9pB3X3p8dZIKZmxJ6MyhesLOqMwS+nMVNKnKfyWh+kKOk0vU
RDwVo1QdTtyiRoCV4v2Y/HYapllfscqkxsP4wzvZW8JU0ay7quRZ61Xwopn8
OWqojueDW5oS5OnwsKzrm6L3G9F064Vwo3AJiGXsi8P9Gjh0bTrpE7ccCNzo
WJeh+hGizetsVo8U+n/UecEy0sUSefu2ssMPwM3G1U3cro+53SfLBxoKocz7
rLvpZTq+9wh2j1tTApuWXaVtLENktlXmlPHLIGEgJV5NdzuWjx5UiKp6BP4H
A4nxSSNk0PaKKt5XwOdOv/7tX26MfMszC1eOVYHSkTxqQBUT1RfOm/xzoBqu
V/Cfm98zwUGekl1ocg3wjvrmv+jcgWqO9FmjmlpYd4SRmLxohpFL/rnbRupA
f9jOWV/ZApuLv4AQjScQf/V6/0+MnehhG9Y7s6se2BmJ3F6wxLpKa85vkQ3g
zTLew4iywpym20GDdxtB36svo0hqjeUSmwTz5iZw7tGhnHtqg48F38d1KbWA
bYF917T2LnxLHxEUb28FnpGtaNJzNwq5b7RIdht0XpV0SS7sQfppqcg1ph10
jBrX+43uxVFBkvayuANaajesd2Z+is171UAQ0gmC9b2vj6cCeq8wa9JXdQH/
4oKIjEWkMIZqealdYDvLzRth2qFh15FSO/NusJbdyn48YYe8kWjjxtpuEPu1
1Gtk2GNr0ZjsBPcp6AV13+7k7sPiNcYSluwpjH88UaCtycaimuU+qaAHlCmP
2kx72MhcvLfE0uqFdd9tuhKStR/LxbKscGkv+BSO2GwMdMDTinGiht194K5p
rtbLdMTq11Pxdn19wPUfy+dTnHCzxcQkL6AfmLEqDt0dTvhqqYotVh6ArOqg
jjsPnHEq+Q/5UsYAzIi9ctuELqiSmKWpuGMQZCcbLP7yd8XMeWtLRssgeKel
znM93NCt37vjHW8IBgOEF7hMdzSP7ikfnhqCBZNTN8ZXe+CltG03J88OQ2Wb
yw+hcx5IMVg7K9IgYTZuvvolycHAmwurDLRJ0KUMp4+NcLBd7e3mHB0SjK0/
LBwf46Boude2yICEkbxooVzGQQsyS9DCJKFj0m7TyiIHfW+A8iKQ4FXvlZmq
SmDtOv4Gn0ASOJXCtQOmBDLOBBuOBpMQSHNjPjMj8NKij1VQKAnvCgtCfrcg
0GuKfSgqggSCJtj/xprA6Ub19GQBCZ4vP/BRBgLpiXn0KiEJX9L1dGw5BJ5b
+HknO4WEiLlYLeASKI9IZTenkrCw/aKlwwECy48KjveJSDicfKvu4CECPcHl
F3k2Cf6xDfu//YrAh6WsisgcEpY1Y8xijhKoa2reOn+XhLW0QdsEPwIndTTl
q/NJ+HouRZISQCBxjbaSVEBC/cw7ijiIwFLaitqGYhKEjnPx2SEE6iRM66eV
ktAyc1fvfiiBp+dfmes9IiFybtVQSRiB/wJHiULV
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 7] Pi}, {0., 65.74547434409197}}, {{
     0, 0.4487989505128276}, {0., 65.74547434409197}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747586720424417*^9, {3.747586875490727*^9, 3.7475868889835052`*^9}, 
   3.7475869380873404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", " ", "\[Pi]"}], "]"}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "a"}], "-", 
      RowBox[{"b", " ", "x"}], "-", 
      RowBox[{"c", " ", 
       SuperscriptBox["x", "2"]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"b", ">", "0"}], ",", 
       RowBox[{"c", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747598751004159*^9, 3.747598792258754*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "a"}], "+", 
    FractionBox[
     SuperscriptBox["b", "2"], 
     RowBox[{"4", " ", "c"}]]}]], 
  RowBox[{
   SqrtBox["2"], " ", 
   SqrtBox["c"]}]]], "Output",
 CellChangeTimes->{{3.747598776298098*^9, 3.7475987938310747`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}], ",", 
      RowBox[{"c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747598811593244*^9, 3.747598825812849*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "a"}], "+", 
    FractionBox[
     SuperscriptBox["b", "2"], 
     RowBox[{"4", " ", "c"}]]}]], 
  RowBox[{
   SqrtBox["2"], " ", 
   SqrtBox["c"]}]]], "Output",
 CellChangeTimes->{3.7475988262523193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Sqrt", "[", 
        FractionBox["2", 
         RowBox[{"\[Pi]", " ", 
          FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "h"], "x"}], "-", 
         FractionBox["\[Pi]", "4"]}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], "-", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "yp"}]}], ")"}]}]}], " ", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"yp", ",", 
        RowBox[{"-", "y"}], ",", "0"}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", ">", "0"}], ",", 
         RowBox[{"x", ">", "0"}], ",", 
         RowBox[{"h", ">", "0"}], ",", 
         RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}], "+", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"I", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Sqrt", "[", 
        FractionBox["2", 
         RowBox[{"\[Pi]", " ", 
          FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "h"], "x"}], "-", 
         FractionBox["\[Pi]", "4"]}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], "+", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"I", " ", "yp"}]}], ")"}]}]}], " ", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"yp", ",", "0", ",", "y"}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", ">", "0"}], ",", 
         RowBox[{"x", ">", "0"}], ",", 
         RowBox[{"h", ">", "0"}], ",", 
         RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}], "+", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Sqrt", "[", 
        FractionBox["2", 
         RowBox[{"\[Pi]", " ", 
          FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "h"], "x"}], "-", 
         FractionBox["\[Pi]", "4"]}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], "+", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", 
            RowBox[{"I", " ", "yp"}]}], ")"}]}]}], " ", "]"}]}], " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"yp", ",", "y", ",", "0"}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", ">", "0"}], ",", 
         RowBox[{"x", ">", "0"}], ",", 
         RowBox[{"h", ">", "0"}], ",", 
         RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}], "+", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"I", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Sqrt", "[", 
        FractionBox["2", 
         RowBox[{"\[Pi]", " ", 
          FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "h"], "x"}], "-", 
         FractionBox["\[Pi]", "4"]}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", 
           FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], "-", 
         RowBox[{"2", " ", 
          FractionBox["\[Pi]", "h"], " ", "I", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "+", 
            RowBox[{"I", " ", "yp"}]}], ")"}]}]}], " ", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"yp", ",", "0", ",", 
        RowBox[{"-", "y"}]}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", ">", "0"}], ",", 
         RowBox[{"x", ">", "0"}], ",", 
         RowBox[{"h", ">", "0"}], ",", 
         RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7475988936880617`*^9, 3.747598897095393*^9}, {
  3.747598966714423*^9, 3.747598981834688*^9}, {3.747599020240224*^9, 
  3.747599058792459*^9}, {3.747599117091391*^9, 3.747599198343719*^9}, {
  3.74759923290688*^9, 3.7475992471149607`*^9}, {3.747599485724044*^9, 
  3.747599585839274*^9}, {3.747599995434227*^9, 3.7475999961819153`*^9}, {
  3.74760006821656*^9, 3.747600109761951*^9}, {3.747600233773666*^9, 
  3.747600315295624*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.747599202621605*^9, {3.747599495770052*^9, 3.747599514817156*^9}, {
   3.7475995500196857`*^9, 3.747599587134192*^9}, 3.747600318385306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"10", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{
    RowBox[{"-", "10"}], "-", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", 
   RowBox[{"0.1", "+", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", 
   RowBox[{
    RowBox[{"-", "0.1"}], "-", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "3"]}]}], "]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.747599313832209*^9, 3.747599350020228*^9}, {
  3.747599401396017*^9, 3.747599407564951*^9}}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747599321795775*^9, 3.747599350491879*^9}, 
   3.747599408258194*^9}],

Cell[BoxData[
 RowBox[{"10.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0471975511965976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747599321795775*^9, 3.747599350491879*^9}, 
   3.74759940825879*^9}],

Cell[BoxData[
 RowBox[{"12.516315590132445`", "\[VeryThinSpace]", "+", 
  RowBox[{"18.43723970025238`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747599321795775*^9, 3.747599350491879*^9}, 
   3.747599408259263*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "12.516315590132445`"}], "-", 
  RowBox[{"18.43723970025238`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.747599321795775*^9, 3.747599350491879*^9}, 
   3.7475994082597303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Sqrt", "[", 
        FractionBox["2", 
         RowBox[{"\[Pi]", " ", 
          FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "h"], "x"}], "-", 
         FractionBox["\[Pi]", "4"]}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", " ", 
          FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], " ", "]"}]}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "R", ",", "Infinity"}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Lambda]", ">", "0"}], ",", 
         RowBox[{"h", ">", "0"}], ",", 
         RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7476005481482353`*^9, 3.74760062381846*^9}, {
  3.747600737764608*^9, 3.747600748329615*^9}, {3.7476007851526403`*^9, 
  3.7476007978216*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["h"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
     RowBox[{"9", "/", "4"}]]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Arg", "[", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}], "+", 
            
            RowBox[{"Arg", "[", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], ")"}]}], 
         "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Arg", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}], "+", 
             RowBox[{"Arg", "[", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], ")"}]}], 
          "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"Erf", "[", 
           RowBox[{
            SqrtBox["\[Pi]"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], 
               SuperscriptBox["h", "2"]], ")"}], 
             RowBox[{"1", "/", "4"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Arg", "[", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}],
                "]"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], 
                  "]"}]}], "]"}]}]}], ")"}]}], "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}], 
              "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SqrtBox[
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]]}]}], ")"}], 
            " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], 
             "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}]}], "+", 
              
              SqrtBox[
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]]}], ")"}], " ", 
            
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], 
             "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
                 "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
               "]"}]}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"Arg", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
                "2"], " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "]"}]}],
             "]"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], "2"], 
         " ", 
         RowBox[{"Im", "[", 
          RowBox[{"Erf", "[", 
           RowBox[{
            SqrtBox["\[Pi]"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], 
               SuperscriptBox["h", "2"]], ")"}], 
             RowBox[{"1", "/", "4"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"Arg", "[", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], "]"}], 
              "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], 
                "]"}]}]}], ")"}]}], "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], "-", 
                RowBox[{"Arg", "[", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                    "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                 "]"}]}], ")"}]}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["h"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
                 "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
               "]"}]}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], "-", 
                RowBox[{"Arg", "[", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                    "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                 "]"}]}], ")"}]}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["h"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
                 "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
               "]"}]}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["h"], " ", "\[Lambda]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
                 "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
               "]"}]}], "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[Lambda]"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], ")"}], 
                RowBox[{"1", "/", "4"}]], " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", "R"}], "h"], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], " ", 
               SqrtBox[
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["3", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Arg", "[", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}],
                    "-", 
                   RowBox[{"Arg", "[", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], 
                  ")"}]}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], ")"}], 
                RowBox[{"1", "/", "4"}]], " ", 
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", "R"}], "h"], "]"}]}], "+", 
              RowBox[{"2", " ", "\[Lambda]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], ")"}], 
                RowBox[{"1", "/", "4"}]], " ", 
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", "R"}], "h"], "]"}]}], "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], " ", 
               SqrtBox[
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["3", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Arg", "[", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}],
                    "-", 
                   RowBox[{"Arg", "[", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], 
                  ")"}]}], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["1", "4"], " ", 
                RowBox[{"Arg", "[", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                    "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                 "]"}]}], "]"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                     "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                  "]"}]}], "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
            RowBox[{"Re", "[", 
             RowBox[{"Erf", "[", 
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], 
                  SuperscriptBox["h", "2"]], ")"}], 
                RowBox[{"1", "/", "4"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", 
                   RowBox[{"Arg", "[", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], 
                  "]"}], "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"Arg", "[", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], 
                   "]"}]}]}], ")"}]}], "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox[
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"Arg", "[", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], "-", 
                   RowBox[{"Arg", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                     "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                    "]"}]}], ")"}]}], "]"}]}], "+", 
              RowBox[{
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                     "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                  "]"}]}], "]"}]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SqrtBox[
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"Arg", "[", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}]}], "-", 
                   RowBox[{"Arg", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                     "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                    "]"}]}], ")"}]}], "]"}]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               SqrtBox["h"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                     "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                  "]"}]}], "]"}]}], "+", 
              RowBox[{
               SqrtBox["h"], " ", "\[Lambda]", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 RowBox[{"Arg", "[", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}],
                     "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                  "]"}]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
      RowBox[{"Im", "[", 
       RowBox[{"Erf", "[", 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             SuperscriptBox["R", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}]}], 
            SuperscriptBox["h", "2"]], ")"}], 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"Arg", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], 
            "]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"Arg", "[", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], 
             "]"}]}]}], ")"}]}], "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["h"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Arg", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], 
          "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["h"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Arg", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], 
          "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Arg", "[", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}], "+", 
            
            RowBox[{"Arg", "[", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}], "+", 
            RowBox[{"Arg", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "]"}]}], 
           ")"}]}], "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Arg", "[", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}], "+", 
             RowBox[{"Arg", "[", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}], "+", 
             RowBox[{"Arg", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
                "2"], " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "]"}]}],
             ")"}]}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Arg", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}]}], "-", 
         
         RowBox[{"Arg", "[", 
          RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}], "-", 
         RowBox[{"Arg", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], "2"],
            " ", 
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "]"}]}], 
        ")"}]}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Arg", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], "]"}], "+", 
          RowBox[{"Arg", "[", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], "]"}], "+", 
          RowBox[{"Arg", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
             "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "]"}]}], 
         ")"}]}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7476006523747883`*^9, 3.747600775786223*^9, 
  3.747600899075832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
    RowBox[{"Sqrt", "[", 
     FractionBox["2", 
      RowBox[{"\[Pi]", " ", 
       FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "h"], "x"}], "-", 
      FractionBox["\[Pi]", "4"]}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", 
       FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], " ", "]"}]}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"h", " ", "n"}], ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7476011397141953`*^9, 3.7476011432260933`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
      RowBox[{"3", "/", "4"}]]], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]"}]], " ", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]"}]]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           SqrtBox[
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]]}],
           "]"}]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"n", " ", "\[Pi]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
            " ", 
            SqrtBox["n"], " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]], 
               " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
             ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
            
            SqrtBox[
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]]}], 
             "]"}]}]}], ")"}]}]}], ")"}]}]}], "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]"}]], " ", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]"}]]}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           SqrtBox[
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]]}],
           "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"n", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox["n"], " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]"}]], 
               " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
             ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"n", " ", "\[Pi]", " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]]}], 
             "]"}]}]}], ")"}]}]}], ")"}]}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
      RowBox[{"3", "/", "4"}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.74760117034595*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"%84", "/.", 
      RowBox[{"R", "\[Rule]", " ", 
       RowBox[{"h", " ", "n"}]}]}], "/.", 
     RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", " ", "0.01"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747600675579812*^9, 3.747600719555184*^9}, {
   3.7476009189289827`*^9, 3.747600984319339*^9}, 3.747601100613337*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c8Vu8bfr37fe299957j3O/QhoSSUJESklkVJJKKUoqoYwkGd+0hDJC
zomKMrOSkbKz9x4/v7/O5/ncz3Pu61zPfZ/rviQ9/e2P43E43AAdh/v/c4/X
YTE8bhr55J2fs3ZkDHUO0eA7GjaNtGpwpwjCCHoyhsJWsTyNbNDmBZtaB9DI
94UbF2dmkAfYYeVnHp3ow5qYhZ9nZhG+NUK4C3szmtV9bEJ3dBZZ/p4XmYRV
opVErp6Zvjnk0N/D+j/ufEJ+CPxrtXWfR3x3iahocTcjf1Swujdd80gdp9vh
hVNdyKaDX/mp1gWkVNFe7cj4EMJ6yvJ99f5FZOCG+dG9HmOIyGWR17L1i8iJ
czuNOd9MIUbZ3x///bKEXJfseqnQMIfs+vAsHjFfRtTKrX/LP1xAnOpD7jyp
WEZ+s50J1tJaQrz/2kasGa0g6Kp7WVr6MnJ+Qe7S4eIVJKBxXkSmewW5SdsM
LNZeRe6V7I4Y/rOKJIi2+fDmrSKLRiJVka/WkEzN155BKmtIbRX3uJThOlJg
GeH8I2cNEfXl8jwVtY58Ouxsry67vp1vT/bjhHWk6Yzm7rvP1hHnI7YFD93X
kd5rVPMx0Q2kpOq/oebhNWTyYa/hrpQNRIaq7xyguoZsvCjSfM63ifz2zXym
rbmKsFTcVSTFbyI3+KpnwueXEeFmL8lj7FtIRcSt9GMXlxClIWPBT3e2kJZ3
pwmRlQvb/Ny+xU7EgUhBcJ5qyxwiQzl3w8wcByysXEq6b2cQLeG9YakVOPjH
2cnNXPxvmz/9kNp1HCQyhhVMfAcQhrp08KoRE5QJt85equxB9u9YPe1UzATO
1W1PCMMftvkc9I5aYIKIGi9CCHsR6n7ox7EibTxUNHhGCCT9QP1O57jw5OFB
RnLcdMe3AfT8QvyhHZN4ODlyILPw6Sh6+erVA4EqBKgV2LyjJzONxsQ77mnK
IcDfY9Uvy30X0ARR851bQwSICnjnnNeyhD5+rrpDTZYIxXkdyaG0VTRDUxA5
cowITR1Bi+7UdfRlGdE45hkR5iMOGAjVbqAFltN6Zb1EYP+hs3to7xb6obFL
a1SUBFPVlldrLHAYdrhaTdCVBEw78Ds/VeCwmv4CJesUElTHXnca4GLCms6k
yV3oIIHWFadUdmDCfi7dlvqPjwwn4r5EXbJkwn5fOyfW5kCGQ4dqv36UYsKG
mD2EiPFkOGI8Ran9icMmH+7l0/5Bhh6son/JC4ctiBtwebJTYLb+YcnMwy10
/YU02wMbCiyocwxV8m6iRB12OnaHAmmCoa8s9q6jIZN1dKVGCrzPHBfMYV1F
x3OimRO4qGBrPxqWcH0JPXrMmmXzIBWOOVf6eOXPo62iZNaTyVQ48d3gl8Wz
GdS6o4q1uZsKLAVVqpbvx9HyuGtsJhI0eOq0vqb0bRDNpGywczyngYtPYLz2
4zqUr7KUI3SUBmVp+rRYy2gkOiyEc0CVDoZ819hn2ZqQwJk5rpL3dEhOvN8z
KDyMDL3K55ZapsNPhrse/uQk4nzCnyfGmBny0ypcUotnEfOuUd6jlcxg4xL0
H15jBSl6mMP3ncQCxAqXTi2udURp/wl+nV0s8O7EDufp15tIGl1GIC2GBfaY
5702D8MB15e/AtQmFtiLG6GRLjBB5NWngoHcrGB0rqmmfAceVg2PCHU7skKC
kT+5rxcPfvNCwlYprFB1wdfDf9d2HeV2COf1sELbqfWrI1cI4HDqkYiQJBtI
FV4Xc79KgBppB9EbXmzQXBz46PxuApj85hSbfM4G5GtaP47/wUNeUqOY0xgb
JIdrPF1ibNfxgbvilWrsEETu8799lgmSWPdIqASyw8FzC6epftt9VUOVfFTI
DpZW2lO/Lm4i4de/SuJW2OG66719p7A1JFTMnFNXjANk1H+eLixaRt6vpXOO
IhyQ3LlTPM1rAVEocuNyiOCAa45fvF7xjiOe8R+5aNkc4HxqgMNVdQBJPSvC
XfGVA05tVq+QiB0Ih3IntwKdE3ZOPmsR5a5Cd1MNeXqUOUGdcpP2y6sTvTGY
yBNnwwlrj+Ab7tYguvz0IO96LCd0vmRVjKqeRbUuv+fNL+AEd/WJ7v7bi6iv
MzffiVZOuLvBpVPMvYr+px/IJ7zICa32w85LzhtoL88PviZ+LuCa1rwmpYzD
BGbV+W8acoHdnRqZiCtMmH3jPX4jFy647UP4gWbisZjXE/xTYVzweDBH+1wi
Aft6e69AVhoXlPNlBn12JGI471cChzEuCO7mb3LpJWJGFnRBtj4uYP+Xj11W
J2HBkqcEqwjcoD0XdI1sRcJyN6sFQ2S5IbD167K/FAkb6ZITUt3JDUESuLGW
z0RM6sNNob6T3FD8+0DQuCoRc300IJQYzQ37A+YruNwJ2KOgHcJ7X3NDWTcT
i4kzHmvanyHM1MANWZPVs/OSTBhdjUmkaIob1Ef0aEWBW6gF81GR05w8IHSy
JF3Reh29MlIhIqHNA14fXStj65ZRLq0m62R7HjAdMh/Z2r2A/nfpbzBXIA98
n9QMmIybQevZiPXEfB7w91712LDoR0V0d13+p8YLslzC9243diN5V5xfeO7j
hc+Or96mfR5CLGpOt3Wd4YU1+S8ZTnOTSAfnZaaDd3lh/HlGLN/ZOeS0yz3V
htfb55/UTEwbLyGbWU8P76zjhfNC76zXWlaRuMm8m9gYL8xcOaJ6Sn0TkTOo
zDdk5gOBXSmlaxk4KL3W0lOgxAfnVdcP4ah42Fc7QFPZzQfpM40c1jsI0Mez
qJt9ig8Wd27GfbAjwnk3iqfYbT5YSNvrnaVBAlqOwL3EHD7ocav4Vt1DgtQZ
xVKOGj648RMf6nSIDBrGxkO3h/lAXWYzmJRKhs839nIRKPzAW8tzZ+0lGZwa
jpiFyfFD/6HH34YjyDDO7++zYMkPC/xpectyZAj3CH/kd5wfZDKFNH8nkIDn
1YPK4Rv8kL5SGFjTQITn8xmTR7P4gTV+yvN4OwGMzN4LdVbxQ3n8Z66eN3ho
iPpidaCfH/ytno7WHWICzx/tgXV4AXArunslIncLWRQaSbOUEoD1B5EvPbb1
N9pr5XsFQwDuP0n40vttGRHLpS/pewhAc1uMpdPiPGLJULVVSheA2VovhmrQ
PyTBO3CLTUwQ0lMu2VK2WlCF/AjlW6aCcLZVx3plqA8tX004xHREEJ4QN9ZI
OWNo/93it3OPBeFFcWrxI81F9PzPmi7fMkGwPb3WeUZoFaVLdlKGOgXhTdwk
V1v1BprmM6btvioIdQsqn32ScJjW+3X3DkEh8EgbWIyWw2NfN1hj7AyFYPPd
jasXogmY807xku9OQsC7zKqJYkRsMlZjYEeIELRJn+1x+UrCrnUyOD4mCsGP
6Zv9H5LIGI/MARO9YiEoOe+UW6FLwXLOeJ182y4E3Sf38jY8pmAmxecSFBaF
oCk06n7DNwrWhIvCnvEKw9zrl+oqKAXz2p00LqQrDPxVI+6dlyjYUvwLgQQH
YdB/dfWwA46CRfeUWrAGC8ODoZyDqTZkTEy+7mxkvDDswxQuGh4nYQVne1K3
CoQhtKHois4uImZVOlkT0iwMlLM35LnX8VgnAbcwMyMMbY4SYc3hTNgZG07J
05wi4Nte0IYWbqFZJt5gpSECa4bF/42oraOdyh/dJW1FQGvXZPTu48uoNf1U
2s8YEeBbyLMJVJlGZaoxYQuqKNhdOrXRM16OuBTxGYvLi4J/XySHSOwvJC7b
13nVUhTUGS/PBnQOIrgbAsl5EaKgJrnZN5I/h+gH+ZXcyRCFa6eN1aV/LSF+
np9/nvgkCjHh8QXrtWtItp3QEuOPKDC9ZJGyuraFdMNZPtEtUegVfX9KJYQJ
uDW+6i6LioHBw+Swh1QC7BYXOdhiIgb8W/8hmn5EuMYWGJzrIgbE999V32WT
oGSjOv52qBjcmvzHo/+aDFPjou+8ksVAgRO/tPMqBeS6g5qREjHYPc45OShC
hSO132aEforBMu8b4p0IKiSUinMuLogBD3p1Sa2ACrUvzmn84BGHM3zR7bty
qIBPrrV9rS0O6MWAq23HqWB4S9I/yl4cqMET4zZjFDh74cI9zwBxSH5Pdc4z
pMDzE/VvTGPFIfhmltFFezL8PihdL/BWHHIjPVif6ZOA1/Li+Fy9OPDZl7Mm
jRFgr04jc+O4OBiNf2uEADxUPojjbSNJgGnorR//anFw5LZptjmvBNAO2kjE
bG4gCSHxn0V1JECdOeqtLdMionHWzOHODglIJN84eG57Pq31/te/bC8BK13e
80InRhH8IYTQGiABt8JqJRzEGpG0faNxjGsScKNoZZDN8BVqaPVQ6m2sBOy6
9GZW1q0dPas7xoh+KwFGTd4mRk0TKIvqox9LFRIQc/98y+Xjc+hzGYbH8QYJ
+OrvauFcsoT+5k4MhwkJMOdnu7JatIWGMptz5K5LQLLbo0aBHCaMlzDxVJhF
EprOJcuv7SVgeauJ6reFJaHRCy9u85WI7Z01RxeVJIHze5VwCgcZG/k3sc/L
SBL8VMzUOxQoWMTfpN8/dkmCqhIrw5+Fion92uGHHJaEHPNdesgHKlbaNLnx
+qQksHlkkbNVaZhjTfJdoRBJCLU3fnflJA2bQS1Eb0VJQphdFK/aKRoWUzz1
euGRJMDk9asp6jRM4W2KybH/JCHlbYOCZjkV+/yfZV1T4Tbe2OPeA+xUzD1t
2sXsiyQcf2hYqKhCwVYfPh571SoJountkYtcZOzRXatLggOSUCY1vFL2/+/h
lKtrm5eE5pnAt1QFAkZ4SBKNI0nB2cC1k1sOTFipwOCZfXxS4OUjPDOdtYme
Tf1cQZeXArN6e5kne1ZReYks9mp9KZAOn9pKf7GA/s6MOBphLQVK9VdVjtVO
o3temePXT0lBT+eGzg3jThSvLnWgJFQK9tddcdGpfI+WFDBlBd+RgsDkywXf
/zQicqWY5cRrKUh0eTSvWTOOdJumP3rxUQpaSZxQ6D2HxH+6Ony8QQpY26vl
Gg2WEdw3s9u/p6SAfdIQPxKFg6K9Yp0pOGnIEhgOar6ChzNNG0qHOKVhIKnu
QrQFEWQcei5xS0nDsoOUo24rCTp/ltc1aklDk+zY51uKFIh1SRWN2SENLVG3
i9qBCjt7L/lZO0jD8Y+0m/z8NNj0dEGJx6WBs4jJbfYFDd4PGXF8OicNN16m
/qxaooGPj5DH5UhpyOR1T83YooHk5Eq+YaI0BHE7S3h+okFHwC/84nNpmDVu
OxRvSoN7CyUHCkqkod2jxzfiHBUsLyZl+X2ThsaoR+cNTlNgff3CglKnNPwT
SzbylSRDQfghq+FRaTA9v0S6+ZgIp4j6iZlr0iCT9yEvpgcPErf4RtxZZODG
6bR+2XEctDMvGoiIysCzpiMXt5I2EAvuws4EMxnQ1q+x0teeR1YfJSjb2cpA
Dk9XRNeeSSRfKDiM9agMTMYGat/t7kfEpLTFIq/JQGmPfQv/Qg7ams3lbx4n
A7Lj8mM7szrQO4qz6GaGDKQdCmr+sTiELmvke1z4LAMDhaWd6R8W0Nz3sQXa
bTLgUPPu8Jfbq+hxg7OE6UEZMOnOqXjBvYWKlNs6vF6Ugdfdso1h2UxYM6Ke
fZIiCzWBz5TE4gjYrSq2RRkBWRgROSEbupuEITsnrf4qyEJeNPl7zzcytvi9
PvGJoSwIPh1oVdvut9f73owc3r193pZ5YZGVhh1rjjHkc5GFJ/ySDmfqaJiQ
o29082lZUObV3HPFko41/drTdS9MFmKQBbUfF+hY1BFllT13ZWH1YpB0nScd
M/tLv0xJk4UvtdzjD8l0bN5rtL4qVxb0Vb8V8HrRsFcj38TCUVnQOX3q63QY
FfP0feFv0iS7XQ+tByMPUDCB6VvY8h9ZsOUiaP8bJWGNQSc5C2dkIXfnydyf
VkQscmmnZwBeDvQkdqfnn8ZjJpfk36lyy8GwbGqprxsOk9D9I1gnJQe95955
vUxcRwlTSeE+WnIQ+cjhgI/aMvrdk77vuZ0csLYaZFKDJlCn3RMjErFyoMUp
NzU624aYEP+zRZ/KwX/paRpSvIOIeIVb0ZG3cnBTOttjN9MUMqTZFJHSIAdV
r3LChJeWke9jt0YNfsvBn/qThaoeG8ibbIbdzwk5uPAmWOt2FQ5i3VeLz23I
AeOeWs/lt3gIFnwnxsMqDwHyNlUj/kRwajl9s0BEHj5K7vHKxJHB+K7M+H4V
eYjzu/F28QgFxHb22E8Zy8OLBIOOzBvbesX06MPdPfLQm/SRfTyABkOl+yRU
XOTh5lYId6I0Hb4FU6K++8gDV+nCleVEOrxWwyZOhsrDRIpD21w9HWJHQhwo
0fLgv8fZYOszHYIzNMuyk+VBMDX0q8xlOhxyHZW0eCEPTyh+qfjt/jTiy7zV
VyIPb4e4Q79p00CsyWUqvEYedO6ksBrpbuOJ5nEU75AHsZd8Y+kbZBjcUV/+
cVgezJ60Gf64T4KajZvSrkvyIJtfKS02RYDXxWbRq2QFOPJKnu+AOB5iA5am
k/gUQJ+tZ/ClDA6ClPMO6cspQOJBxs87lHXE6KmkbLClAmS75YQxVc8iNZFE
bCJCAYb+hAS3Oxejr+GjXEy8ApxUSp5zCuhE76+eu6uUqQDktpGk0yeHUUe/
YWfvSgWA3zWtI1ELqJFC+idSswK8tCBuJqmsoqJ9TgpZfxXgL3g1+CdsorhU
zvvmMwpQVPWo8oYzEzZw8PvCH5wi3NE3t3QwJ2A17BGuVzkUt/37O0O5DSL2
6ptxlaiEIogtxmT3R5KxexHziuXqinBRqe3CSBcFCzR9E+uMKMIN/XpFlhUq
5rh0fGl5nyJECY+avuiiYYb5Ym6JborgXyF+J/MaHRM5/fOzrp8ihJdEWJ75
R8dwsrHKrZcVwbxnRwmdixkb+G0dF3hXEf6G4HJ41uhYdRLTCscTRVg/WnXo
QxYde2lf6v72tSIoyBPVytnp2D2WoK825Ypw1NZ7NciUhgV+VVYdr1WE5+VS
f6rVqdjB8IH46C5FKJ6XGVf6R8YMjJ6sKowpwkYL4vHIl4SJzB/0qF5VBLJP
RvX1jwRMyGjH7ffMSqBlRjgzUsiECYZr5D8TUQL+Y9kEn9VNlI+FmSnMTAkq
0VqPNqkFlNd+WeGUrRJIp+vdDX87hfIkDe53PKoEwRZ7zqHYAMopg6VrXN9e
9xZdh7aXCIfPmxrReCX4nPqr5U7PL4QtL2WanqUEJv9CoktYRxAWk3Mw+EUJ
+qn74tffLyL0654nm9uVIEEvIEKiaA2h1djGosNKYHTqmmqOLg6obKYlr5eV
IFPFklp1DA9kB6U/yTRliHM/TnNyJwIxhZ8aJaQMHC2vXP9JkYHwh6gRrKwM
kQLzLvEvKICXmz3kYaIMEUlz4kJTVMD59l7dZ6MMaXeDzRemtvUtv+65sZsy
ePAfzD/8gg4bSx8aFfyVQevm3HmGIDOsmz5f4g1XBmzDwTPAjBlWIxLECQ+U
QUFX52qYADMsf7u2c/qZMri80XL48pwOS+z+/j0FyrBz9/3+sAkaLB50Tfxe
pQyBVUtnn45RYf7xLrS4VRmMo/R4p7IoMPdXbzhrUBlIPXFq4yJkmJWXYY9b
VIbDL7Iqaw8RYfoMp/5VigqU5LOPn3bGw9S7TTdfARXQGSUEWynhYHJlLPKw
ogqoaQ+EVKWsIePIr1wrIxX4NSG+KzxhERmtfbcp4aoCWOWLDOPCYWSE85kc
2xkV6PxkN2DF9QsZPnRv39plFRhKpDVzp2YiA/0n09qeqoCZ/9lonP0g2qfo
+LUyTwVy+DtjuBSm0b/+OybfflIB3yb12oHQBfRPoQbfk2YVsOPcpVMVt4r+
XhM1i+5XgfLzd6cee2yh3QzmExfmt/O9vLbFNcGEdUUt3/UiqYIo4dMmfpmA
ddYPFtrxqUL+Oov8ci0J6+Bu6TGTV4XpBpL6wDEK1n4YI6kYqIL35SN2bmVU
rO3pG1XBXapQfpIW8baBhrUOphwkO6tC1nJzRXcKHWtWvnV5zkcVBKJKd70V
ZcZ+BJzL/nNJFXqKjH6VHmTGmoo96+tjVOGfyMFoD3NmrGHDdqH0iSoIHXVJ
a+unY/U7TEVzclXh+nLssoAxHau7rWT5EFWFU2HLR1Z30bDvjfxnrjepAnNh
8xUObir2jZf00P/vdtw9+GdBMhmrcZktd53dxp/METb9l4h9fdY7sIugBqUL
HSM3pvHYl+E6Fn0eNeDgsFv4/h2HVQY9d+XUUwO3wvtftReW0DgW/StvrdQg
j7DAWd4yi3pmf31qc0gNnvFESMjixlDCz8G+2yFq8KYyziThVxXa6n+OqHBb
Dab+Y9Z7+6UGyaKS5L4mq0HIr8MDhF1/EQsjmVP4MjXYPIkZbp6cQ3ha3kWn
16pB2fNLkrSby8jA6R2vzbrVoI5xb8eK+wbynthS3z2uBkR6aF7AIg5uPPGc
Ct1QAztGenMbOwEc9GY5BNnU4dc3/Fzc4vZ82XhNq1hMHeKy1AqSs8kw783p
cFB9O86X+cdPgApfcM/OzSHqUBVy2U9/Dw0eJWskPtivDp8+/sirNKLDCS2s
RN1DHdyptn/jBuigV2vbWR+gDsfKbn3qt2IGslfv2unr6tBH0dr/9igztK/7
idLj1SGxsCIiT5MZ/nu4aZaTqQ51/FIEr1I6nFe7d9TqvToEl1d0ktdpYFUt
en3gszrclVjWiF+mAt/RN5nX29ThNaJKKCugwPCyyReJIXUQm5dY+aNKhpIH
dUMVi+pAbJvwYN/2sxa8ajdyCRpAX70VOHEBD6//LiRsMGuAzPuwvoL9OODJ
/Zi9l0cDzDjK2HXW15ABK5vqURkNcKtbPNbQO4Ps5ebtMFTVgGy6yX9b5H/I
+97ukVu6GpB41i+kl78buRHiS5e30oAPaXIF6SFN6LiFjvD5fRqgTGIzMdnX
jzpwrit/cdSAGcxCME9lEpV9ecfmmLcGXKyeMtX2W0HvnT/gVuCvsT3/jzod
MN5EF82F/ZlCNMD9xVPFLRcmzI29/+r+cA0QsYowkPYlYF+7XsY+vaUBQWET
G8nWJEwtJ/DZZKwGoMWF+gHj234p2KjANFkDdhk5e9kcoGKbgK+Kebad/9q0
07mLNOwE6/eWrhcasLDzkVy3Cx1r+PVgQKlAA6auceoqLtMxvf8OL1ws1YCl
dZ7LFXuZsbRASfK3Sg2wznr6o9yJGSMj//gEajWAZVJAlSzCjPkx58t7t2hA
VxD/umkiHWv/GWJQ1KUBUvsEj1fX0jCzLNhFGtCAz0LNDz5t9//zs1Rnh3EN
KHDBE/E+FIzDtMknc34b7wSOxNpJwkJoSZdm1zXAtVbZgoWDiP1pc49hkDSB
pXnPxyoOPGadIf8kllUTLPbz0uhVW2ie39SbXl5NmK8r1zbnWEMFjIsr1MQ0
oWz+bEs+7yI60mL1p05NE1w+SrnnbAyhJ4zX1mL0NEHWtcEBF/ILHcx4y29j
pgkr44rtPKMFaF+AgG29jSZoHvzv8alDfcjRX3U+dw9qgslP1P7M5XGkF65F
2hzRhC7b4Ir7GnNIN/vox3pfTXjpPObqF7GOOF9I+3U3WBPsR2dZA71x8Ou3
/YJNmCbob54okPTGg5MVhZPthib43qqPlTchQvubMpWGO5owO3ODz7qPBAd5
z1rfi9eEuSmTwPcHKdAaJuO177EmCIpeP8odTwX7gY6rbJmacKTs3vCtRBr8
2HP3ccNLTbjWc226/Cgd9r9jFN8r0IT6Iiz3zzgdGoQWm/eVaoLOLeZvBUbM
YHP95SRbpSZcYCswur6LGer+udEbv2lC4689Q+rbernbjlvu/o/tfJlH29Ve
bs+zJdUM21/b7wsLU47YoIG1RNgR9r+akJhgUory0OBrlMbFxhFN8F8ac8PP
UsBiaiDh/rQmPPKyZJ9KJEOVY3Ke7bImzHzrKHxBI4F5hU0dO04LVgo9Bht2
EwCTxY80UrTgwHnaudPuTGB2t4gQy64Fe/uVtIYSN5GP8z7i+/m1oCu7UNhX
aRUprWpxbJLTAh+tU3eDsqcRA+VbgbFqWpC6T/EM2XoYKY4zubdfTwuq5xyj
vot3Iu89sr80WWrBRYWJyPYbDajWt8N/Y220QLjWt3z36F80X4NtY/9BLRDD
T6xZ0sbR3K3zOj+8tEBc7EzoTOESquKtvP+BrxZAqIDmYcY6+qqh97RdsBZ0
OIZVRVviMCW9hCjOMC3wI3haPLXAYzlPrDN/RGjBce30KRtBIiZH2qh4cEcL
lDs92I6gJCzbN7/TLl4LZu7ES2xpUTCZ1uOLnI+14An5TmbXWSqWYSzE1Zyh
BTsRwW9852mYRGaDatxLLSg9YcTqBHTsKT1il32BFpy21H/cWE/HxAL1j3OV
akEZ0nDOaFsvU3+NhTd/2sb3/ZfToCozJsRIT437pgV2V3ttcrfoWHKOQ4n9
Dy0ocFuaIsbTMQEOWivXLy0ocohy+zdCwx5d+DjV/GebLw/Xv//wNIynN4A5
fkQL3kgV7BDvp2DxVnLyB6a37y/x3aR8DBnjyu00517Wgkr+oQZJJhIWy3vf
rWVLC0oqS7kyLQkY++UdofEUbdAfUmnJP8KE3RtYeniAXRuq114HnXu8id55
d7S+RUwbEsOQcfe4BVTA4+0uY3ltYBXP2LdyYBrNYtv8kqGuDampbYs7WgbR
8lOPKwJAG8xjXvDAt9uINf+o0S9rbchsy5gpl/iJtH42KAY7bZj9KRgokjyE
jIu3v2X3/H9crXFwZAEJqZdRueCjDZyi9dWUgVWEeCko53egNty5HqB09+EW
EqtQKWN1SRvuyslLuC4zgUg7x7M3Edow/YPjc9c8AXIi3EV5Y7RB+bX9YF8p
CXQ0c5PDErRhzuldTqYlBbDf67wDqdrAcd19eSaWCntj9sTtydYGD7pS475k
GnQYprC9e6MNsjGhr2Zc6OA1PBItVKQNtmZuHE3tdJhO0Kdcr9CGUNUruEwq
M4SZR0b8+6oNnsI7vEan6UCdbt3a36gNh6xE7Cfv0yHhiXRYyU9tCLPL1K0Y
ooHEnsBl8T/acLZOpkN1iQpvlrHgqBFtOJLaad9URQGj/9hnJqe1YYO9dXna
lgxfD7idcVzRhiBd9r3RT4lgz/Tm30cmHVjnTeYzLsbD79y147J0HRDZlfTF
MBUHPq67+2K4dOCzYaVdTM46skhLdpsX0oFxTvEw7dolhO243qEqZR3IiE4X
+1k2iqRw3WxR0tEBM5XypykvehE5rMU2zkQHHuPbnUrYqxAz4QBrDxsdyD7D
b1Ts+Rf9XoN+rjmoAwXPSiuMTcZRx/NsDA03HZjordjRdWwO9f/xynDLTwda
Tf4S7jI20PUrq4UnLuhA7GKChWsvDrulskur4aoO8IwkS9ZO4TGezsRc3Vs6
4Jf1C3epjoilRw0pPYnVgd3y98HjLBlT0dV9TkzWAW8h7SNsPylYSV+EtO8z
Hei74j/zYZ2KWcQ2P215oQMDYXkTe3/TsCZTSRHjAh34k1k8duoiHXMd80/K
KNWBzPNYVFAdHRtJquChV+mAqLpybmw7HQu2Yn0QUKsDrv56zbnb+oibd2H9
1aIDMIunXuegYzHPXt6Gbh2w+6+HKcKchgnYrpByBnSAZHF3cXTbH2at77zO
PqEDxEqOsDddZEzj5aPN8ws6cCeozvvsLhJWfmgw9PeGDlwXvPn92mUCZk3S
WbIk6wL3zCvpujAmrLXgetAbNl1IFMrteJC8iR49+mOKh18XdthcM+0fWkHH
WSV8w8R1gSJ986vb5DwaUuY30i+vC8YHCk3lLk2hD/hY/hYY6MI6566Y8rwW
dIVJbE0OdOH+hyqkPN8DbX9+feqYtS4IYR7DtcFtiIjhygaPky5sfd1Fftg3
iVRc07k54b79fpWasOO75hGP7/4sX711oSn9Llf99DLyn8uQ0IULupDUNkki
fMJtzxmSGbZXdcGUv7Sl9hUexsZdFRWidEHOVEiA24cI93ST8nD3dcHO6bxH
+RIJNK606P96pAsRL8hc4nYUaP7Khuan6YKUQNomWxAVzrHvtor+TxckFzkH
+51pIOB0s94zVxfK5PJzrpLpUJqOORgX6QKfvrzVgWA6uP5b6+Ku0AVik26Q
ZyYdtjT1j41/0YV3P3/+tYynQ0Zo4Ojnel3oEUuTVLGgg0XVm4AnbbpwtOuI
6K8iGgwx/1s+16MLX1891Msap8JtB5nwfYO6YPBEj3BumAIqT9wp8hO6MN9W
VljxggwNgyn3tuZ14cDlbKNQPRKcVWvn7VjXBcvnoYLiDwjAfYHzSR5RDw7u
O6b0+CMTOFFvvfLg0YO2hjNc9cZryOr+Ki0jET1gGOdeYC9eRJ4kb37gktGD
lBgys+DGDNKndK6mSlsPeJI8J3NU/yA3gvJsU431oDvgapM1Rw0iXz7WHrxD
D1h+ZQ/6fMNQXxvPQdkDemAo22Y35zWCsj164rvprAe7v14SfiYwg+b/7phr
99SDNyGsT+63LaCL/rb4W4F6EHe6/7f38000qST69tFQPWgJtPQrP8CEGTN9
5TC8rgd3sh0OnVQiYL93MSVxRuvB2YDiXI8WIhYeZyI++kAPXiEGF9DdZEy6
68J/lcl6cOrW9xG2uxTsq/Q71cfP9CBwxviuSyIVO+k7+T7ohR4IWNA09Lxp
GHOhosnefD2oTGZ9ULpKw3I3vKpkPuiBnWJhXfx+OrbfKn33BqYHQZf8/be8
6djcva4fbTV64LNspdq4raePfvIdzm3Sg7BjFYanumiYgYT9n8gOPQiXd0Kq
DWhY18m73u5/9IA5xX8lyJmKXcmvmdQf0QO1rl3no8wpmMQq4TzHtB50/Quk
Z8yRsEpzZGNkSQ8CricwDZ0lYsfvhN74tKUHrENTwtMf8Ri1tZA5haIP7G2h
ow2/cdhLkZm4QHZ9OPEn0WT27Qa697iK0B5+ffC6ufr5pusKOvXG+5m0uD7w
pfW8y6qfR3WQ329b1fTh3uhT5KX9EAr5o+9u6ulDlOrZH3c4fqF7pJeK9cz0
QcJpYyWarxD1pHBgSTb68IGFZWRD7C9y5qLI510H9eHsaN7EwYZRJGRMoWbV
VR92mb/Nui8+i9xvZDS5+urDPj3WthnKGpLC2NfKGqwP6hH2LfnSW8h/75w7
Ki7pQ4pjTunkJSbIl/Xu9o/QB2n7aoN+UwKUJwb9kbijD5sfT3mUtRChhhY+
8CNOH56WBTv9NSRDy6WYkesp+rAe9+qGyhkK/J5IGtfO0AcFlTf5Iz5UGHXP
nh54oQ8HFM/Ld2vQYPFH/vzDfH0o//Dmxd6PNGCyqFi2+qAPQr43DhDY6cBS
9H19CdMHrfLInbaydBBQ+Il7UaMPtp8CVSk4Okin9BOdm/TBXKMr9PZTGqix
TFOZO/RB4750ZBmRBkZX1lnKe/XBtEL6BEWTCpbTVM4zw/qgF30500mOAvs9
eXnFpvQhLdm9in+YBK6tkoKNi/pgHcdeJHOeCN5WaqLhm/rwsVNYr6kdD4El
RpKaZAOwZ7si38rCBFeUdsr2sRrA2pmLHI8MNpHbqQcU43kNwLDHn8WGexVJ
D/fVXJAxgDpRX99YqRnk9WyI7n8qBsByN2lK6OcIUux10/CQjgGIGXvqCXr9
Rhqs0xgfdhiAoBTp+qH4T+iv0peWPnsMwFdr2Brn0I0OqBTvEj5gADWOX/5Z
1A+jaxxNdpc9DSBnwEvvrPICSo7oPqjmYwBPvi7o3Lq9gnItjBzuDTCAT3Ak
s+j1BirqvXAk9qIBOG6okeu+4DCFX0yejGsGYBDsK/zuHh7T2cN2YvaWAVhf
iiSRVYkY8lHIJzPWABajDk4LPyFhu9Xl/RySDEAuWZpctK1Xjs+0A0npBhCd
61xFHqJgntxwvuj59n5CmlXJByp25ubeUO+3BqBazHt/xoGGhSw5XREoNoAp
G/knzkU07Map49e/VRgA8Yenr3gPDbvfFRAZ+tUAPNjYsJkaGpZicyVaucEA
jix5V9BCadh/aPS97jYDEBo5f1h2horlaybG3e0xgIt5U5GR23panpn5yGzQ
ADiMQ/dM61GwGt68lKlxA3h53TI9g0bGWqLK09LnDcCGcNHk4Esi9nulJsNu
3QCcBZL2aYoQsNHTbf/hiYZwbfOgzndPJmyh5+/Ld8yGENC7I0KJuIWyVK4W
8AobgjpbFRJfsojKhj7j95M2hP3zHVT13zOomZZ12FdlQ0j2e1+c/uIfejbj
oeUFE0MoRWY2dY5UobedTV42WhiCX9q10OBPX5EMrn42BRtDqFMRlSmT+4O0
Xtfo6DhiCDryg4wZ/VlkwuinieYJQ0hyZapRJS8h5LnLz277bcc/Od4rf7iG
iL+SIfedNwTHMocMv84txOBYrY/RVUOwL5eXPDvABHbCgY1xUYbgNN3ybM8r
Avi0COiM3TeEq2+Ew9lNSXD9Dpq0I8kQBo5aYrEPyfB4x4mNx+mGIO643GiW
T4H3ayye8zmGIKP4ZUnlLhXq3r37ujffEIg9StxC8jQYPO2snP3BEFj+fgg9
f5kGm9JMsRufDIGN2sxx8j4N+Lufzx/8vp2vI+xEnSsNNBL2Hc5tNoS9MqQ5
gyEq7Nq78JHcZQgPqwXdVlSo4ElMlXLvN4Tjbef+MmtT4FK5eVTxmCF4XZKr
E14jQULwvzH2eUP4WHVLL/QWEd6oxO4/uW4I9W9mVnl68fB1QK8QIxrBrt4E
Zl8CE/Sm9ggKshrBgqjRTfrCBrLscONKAK8RtPPNpXyMX0GUvvzYKSVnBJ2F
LvCIaxrZcTnkdaiaERgX8JzJEhhCXHXFOVv0jGBHMPtYZ/ZP5F62b2fETiNo
/Xqo48voD/T5EW6k29YI9voH/jWEfhTjLc3UcTKC4FXL4P0HJ9CZm5QzgyeN
wOxlTPF9w2WUbpb7wzTACP5W+TodyVpHpRYd9B5dNALuc6kbJUdxmHHuWsrk
NSNw4/nSPWqOxxxOZGxZRRuBXZ/GGWyOgJ0R2+X1NM4IHj9e2FHmR8Ii26dq
llKMYPVG3eHJt2Ts6b1HqvszjcAiMCaY+n573rUyjct5ZQTmjQHjriFU7Mdm
/yLuvREwPyQWja5SsdGiaJfD5UYQM8CX5mFEwwj+mlj+ZyPQvan1UlaPhonI
d8jQ641gZ973hP2TVEy398ptzzYjMJhM9cg/RsX2JcpOlvYYQVfuN+bviRTM
27bOnnvICGbnLB1qt/1jOCWo+PSkEUxp2JTfsyRhyaigyOdFI+ifdS+/94WA
FVzAwkW2jMC6m9umhwOP1ap7DwZTjGHG7UKXgAoOGxhm3V3PbgyDX8j3UIN1
dOPp+1xZAWP4+HOR92bDEsrn5MJ9RcIY9o/uCzglO4furMnpVtM0BvHp85fu
x/Wh54VN9i4bGIOlFn+ipFQz+p9fY9knMIbYkO73TudiESLvYorDfmMoHlh9
5ni3H9E5eZsu5rS9n/vs5M+2ceRYmUjosLsx2N29OX5/fBap9NhxONTfGK6R
/dsC3NaQmfftNTsuGINIyD48i/EWIkH1MWC9agxeU+2NSyeYYL/LxvP2SGOQ
TQkrOUUhwNXcWP70e8agpCVZwn+JCLlMMlGnHhnDAm1M7HkFCX47FC9qpRmD
3xzbfrVGMrDm7D6xnm0MCoq4EOOXFDBZ62n78sYYUj56K3baUMF3X4Dl/UJj
eJuOa00socLjZ8RCp4/GYGoqzxz1jwrf5xNlpL4Yw+df7xMYf6iwulM5YazO
GHLqkoz/pVJB8XEFobDVGIRu3/SSl6CC06Rd0JVuY5D+NHlc+TQFbjEG+3YO
GAP+4cXnz6+SoTghxJ5z3Bj+mP66X+9OgqFh5srOOWP4p9m125qNCHzGTzWz
1oxBZoQvWO8eHizvaT07QzCBm3+tC6X6cRD89wuHPrMJKDWntyxKbiJZOofD
cdwmkE0QKeIyWEVaosanvgmZwIFn0461nIuIlhp3o6uSCdgeOjiy7DeKeF77
z0xOywQu9sZ8O6nxF3nQapg7ZWgCTZ57GkrVGpHp0KN3r+8ygSOFnk23NNpR
8Ya59T12JqDY31TmdnoA3ScZ5ct72AQ4+iMK6mIm0DfVb/bknDSB0sT1P/xB
S2i3EKMs4KwJjK7M2fWFrqEsfq1KxiEmUL+Fc8lmbKHGn7xTiOEmILss+mmf
OxPmw7NGa4gygdak7KrOeTyW4n3vYuJ9E2CnBt6vO0LEvpVK/juaaAIT+thc
3yMStsxa6KT01GTbL1IMbJ6QMQUP65q5/0xAL2fxUb4fBXN636X/MdcEnDtU
MrRoVCyK4v88ssgE8q7bXQ86TcWKnPH8+ytMoHzzN+1xAhUbevMwUvCrCZwj
F8QfvEHFeJkUF/vqTaCibseLNqNtf+tQfvx1mwms397n31JCwYKf27ad6zEB
Ka+LndFbZCxztc8CGTQBbeVreSUcZKzZ5vx76oQJzA5KHHk0ScTwz2gyzfMm
MCj2Iav1MQHTnE+Nf7xuAnY9ToyHwnjs6E4NwnGiKXAy2108FoDDYlOqAtVY
TCF15sO1Q+YbKDrh2LfEbQokNqsFL7cVVCzh8qdoaVOY+ulHYp+ZRl1UXz1Y
UzYFQvKvvP06I2jS1w4PXx1TOPDnwcF/Md0o14o2fp+lKfhn7YsPf1qN2MZ5
NFfYmILfu9/W/X97kRjl+xnqjqYg5Upy7ar9h5DcRs05vbfzOZrzUq0WEfMl
fu7r/qbQcqLhOf3pKnIl1rJ/9oIplA4JX1t5s4mUKQa9Oxa+jf9y5+E+bSZY
rkyPaL1lCnfmT++V+YsHXdeGA5YPTOGm77H3Os5ECFxYky5KNgVfW4l13sck
eHtPcV4uwxSudC29Op5OhnH5Q58TX5pCb8aTu8e9KaD46UYC9Z0piLc/oBMm
KXDCucDrYpkpPAmqze/WokLmXK/OaJUp3FgfbbPUpcKfGFaSS50pGP65amS9
QAFROeO22lZTGOZj1GUGUcAZPZlt0mMKYlkXj9flkyHR6dG5N4OmUGFkmT2Y
T4LWmSpLsUlTSDO5Nli+Pb9y3pnhvb9oCr9OhB39RCDAPhnxoa1NUzh5/njq
qisT3Pm4t+gsxQy+LXv6rbJuITWOoZF/2c1AsBm8ylnXENL0c0d7ATN4YWKM
7fq8zeftNrkqCTMQSu81vmA6i5SVaVRnaZrBmOu8u4nD3219dUvkNTIDfa/3
UtFoPaIzecc70twMzLLq97Bqv0dzJYYpJw+YgUFzEdMp4yF07ANPR4eLGVxy
eZio8HkKVThgnrPLywzq1n+Xvb04j2bcfGKtfM4MZF3DGwkz62ivWK1A6mUz
cNnzN/mHKw4TKVkeYYk0g5VQ1PMLNx47bCf34fI9Mwgg3X3xPomAPRo9cHvy
kRlMnBU2uTZMxFoirh12f2oGb9rFQjLWSRiH6FvFpudmUFWt81OtjYzZFHWv
QJ4ZILUDVf3b/RhtS/+eX2IGnawxGco1FKx6RD9F6pMZKE4Ibkr+oWDE68d9
4r+ZwbRgRv3DIgrGEI43IjabwZlhYj1tLwW78h6jn+s0A+dcg5GCZ2SszGay
c7DPDDzcaBXBH7b/B0PCrxzHzMB70s2i+yER0wnfdal6zgxq5g2fCBgRsADB
C3sM1s2g2P62xuwLJiy3IEv4BRGB1qYzO8NbttDRPc1jgqwICFVfTipZX0O9
rqjGrIkiwO9KBosLc+gzfhdXXzkECnK9rupjE+jvvFsqPWoIHAo8o5RrPoA6
9ffXVSAI9GhE7VJ0S0I3s/sEqdYImB06ULtY/APJOvn3hN1+BAR9nFfIHn3I
1MRv3MBRBM5FSVqUuc4iCXk9NqqnENATnLQxzV1EjIK6U84HIBDXtPwyt3IV
+aPbNYxe3I7fdfh88P4mErn8S4d2HYHygPbvIiQmUCnruGYfjUD3quuE6EM8
NF/+2fA4DoFqvrKLSXMECIF24cEUBPgkzdJXRUggSmg7qZaJwLWfnb0IGxkq
v7QUXniFAKXGp3v5MxlO3mrGf3qHAAN/IccOoQDbnh+29HIEakgHA/nCtudZ
1qbUA58R8HmXcasodLufmhr+pdYhMLAnIdfSmAK4+Hq9oVYEuP7DfbxUQYb/
DtZFqPcg8Lwn8UEBiQx7BGqbQgYR8B9Qtu/jIsF05zfRygkEtkpd2VJHCPDo
SY0P8yICH6jWDfhoPJgcrS522ERA/zeTZNUqDgI4j+FtCQBFmeIRXFc2kc+B
fTnbbQ3JRa9+jRWtInytHrZJzADZ+5+zyLxcRMofHU39yw3QM+8bVd8+hlBF
3PSCZQBiqx96x55sQV0u93QnKWyff8S114S9H8397RrxUQWg2Odx+kHdcZQJ
uhX7NAA+XA2RMoyaRR2euTSRdQHMPEtFn31aRJ/ju85v2xWYMT4QUFmxiq4e
cxbdbwrQaGBVKRm8ie798qsqmAFQ6BMljB/HYU/lDvskWwJk2l28+vksHpuN
6uCo2AWQ6LhqffQzAbP4d6i4zwbgooRF0dF+Ipa4++cRij3Aydu+1J7vJGz0
lSNRxREgWN+TPTyEjJmytr/c77yNP+Kt6r1RMhbrd9DunBtAveCNz//EKVh/
Y+tSsidA2x5snVeAgulpOqRVnNjGY8szpN9Cxm7HtVj0+wCUUXP/8dqTse45
+zGKP2zr05E43m29VT/Y/EAlCMD1y/U8/WdE7HqRnYHdBYCo8GMDXOcJWBv/
j9/nLgHsPtTypI4fjylc3H8z5SqAQgVHFkc0DgvtbFRGI7bzsdtfZMvYQOuN
bZv7owAe3EzkT+hbQSWeNIRQYwC0mDMS3/YuoIGbNuKqsQD/sMsrrFkzqMCn
vb7nkwAK7ry34Dr6F/Wy2k2mvQBwasJxC7zvR8wXEK2h1wAdOkppzLzjiESW
rltV3jZ/TzeasgVnkU175ej09wCVodFtYpsLSDeTZNHlEoB7t+8KUN+uIKV5
fH3O5QBvI/rezkhvIEnuLGwGGIA5zWv0khIOzrPhjXg/A3SFrAT6PGGCgx+X
js9WA3z2SV8PGcaDju/Eg8ZagFTv7LFSEhG4hPs/vm4EyLtwTPzFAhGmv3X8
u92y/f3qLTnyhSRoCGng9f4JEO3FfjvanAyv5T8zLLoAhGZkziSnkiG6/cMZ
yV6A1uEOt7jK7X68+TZ5sw/gGctFL+X3ZLDSyf7SNbSNbwNhiQ8gg0x/ykzJ
KMAx6wN9/tv+Dh8XK/poEkBN5U/zb3sS/IHIXUGzAO10x7CzF4lQMXXp3P5F
gKcSaiGyAQRITQt4proKsF+EM/OUCR5Cbbzr6ZsAHG4X/Nl+48Bp3XVlmIkB
1IOy6bcKNhG9V/ayX0gMiO74Eid3bA3hcba2y6AxwBZ/90J22xIySzW7fJWV
AW92G80C1zySe0KxzZCXATJHPutyCY0g8lK4m7ky2+t6S5PqshaU/GMh744C
AyRnHp4v2deHDlwd6z6pwoDK8s0/jPhRtFLtL9VKgwH91w8SLfbOoOk97TrS
OgyYrXD6zCO3gF6JqTuKM9jGcxb7Yt6wjLoaV8b0GDNgVYvBFWiyjhqNFpeU
IgwgxnzY0XByCxVIfjOQuIMBqaKRmmxyTNjizkyOczsZcN/tbd6gPx5rXUwy
sd/D2PbtghFM97f9Vfa9k+q2DNiYMkjqCCdisQ43ElgOMGA+Uuq/3TtImB8h
FPvnyIA7zzdnslpJ2N4C//GvzgxwC9cQ/k+bjCl5HBfIcmNAzGrVn3B3Mkbl
cLG45skAXAmhq+cQGRuq2H/W7QQDmjUiZbtFyNjnM1apxj4MQLUClznekrAM
EZMaAT8GlP9T04pkJ2HhtZrzCwEM6BCQaStGiJhbqLxEyzkGhKc+uhrLIGAm
iqJ78y4ywN2UPOS13Y9CHVwhdy8zYKi5yHmyCoetRFKzfK4xwJH73O9bCZto
h+5m486b2/sbPl1+5bKGFg3MrcncZkAfa8EgOrCEBpr3HuiNZcC7M/6nnI5M
o/tnWq+WJzBgK1Ew8V75CKqW/v1VchIDspaoZ19G/UFZbLGf51MZwJinXR44
0oQ2Ttrn3E5nwCOKw4WC4YdIY+Ny740sBiS5R8fD62bk/TPj8sIcBmTcj/u5
dbAPuWL5KZg/nwHqLky/i5tmkGP8RDvrQgZEvrmHU+9dQKz/Wale/LDN7xPh
Wbv8FUSl7Dbt5UcG4AtKH3SbbCCcd+sGOz8xYCBs0lHOBAeLbuyVzF+3+VS/
Wnn5DRN0atinmXxnwKtXT8+nTOIBxT8MPdPAgASn0FnZdQJktf50TGtmgAmS
reTYQoTb/wlpN7YzwKHh99h8AAn8Qo6w47q2+fr04tXxdhIc2J0+ptHLgJGa
a8UvtkhgINJf7dHPgK6gpmLPiW29nZTNihtmAP3LgfCWp9v9iZ0MrxpjwNm7
DJVefhIMP3jlOj+1XU/x7LfJh4hQd2zSQHaeAe22rj+PuRMgX1eT13F5uz6E
ZieytPHbPAbPRK5v34+KcSPhJw5CfxXVF+PMIcL00J1LKZuI+6uVFyPE7XW+
IcKlu4ZYXDaJFKSZgx/ywIY7aglRsL3quZvVHAgPJgejUuaQ2Vmi8Gtec9h5
XkxA1nMIiTTiiPGXM4c3BCbq6+BO9DTLgZPpSuYQ8kD4SfPGILr/90OLH2rm
YHziaaZpxCSqm9chgdc2B45huZcNh+dQoevCG1r65sCMHvEINFlCtw64/Tpm
bA6ttA+p/L2r6IDss8IExBxUu+5pr+tvojVL/Q++7DCHejZ/DZ6nOOzNNzm/
xZ3mEL6/zqtqngmLe3xqt/xec9hnm8F8WZCAnT/zWs5pvzkI732yqE8nYi7I
FP62gzn0qGxdD/lMxIBTq/eDkzncMViRO2RFwmT7g8tGXc3hUv5p35v3SBi9
sDhR2MMc3nvS99qlkrCpyNWgvcfNQe6pzZ///ElYq5Pp/sunzCE4kteXg0bC
PiiFq+SeMYdboWcK358iYmnrldTeAHN4ZXnsw4F4AhbRQBpkP28OsxaulYxb
27ebbv0JQs3BZSJ38ugeJswm8M6TgCvmsHd0OVAL20K1LBouZlw3B4cf8fpp
CesoHx+nY0ukObBEmKL5Iivo2vABLeIdc1ib7bkx6LGA/vnwiE33vjkUR8ew
efnNoJ/v/Bo9Hm8OjmWEs93Jo+g9dffM6sfbfB8ilqcVNqNSF3x47rw2h9O7
vETR4H9I3CPp88F55jCxnvBGI34awRd1/zzyfpuf9bWZ7h3zSGDbQ8OdJebg
+UD69MeqJaRvft9jjXJzeBl+MSWdvobY81A3BDFzeDFmlNHDsYlUan9yI3w2
h2cn9vK988aB1oFQbLzaHFaqvpwde8oEmYHaUu215pC9L0RqRy4eeOLGI9BG
c1jtUJmwjiXAjfzswZwW8/9RaN3xVH9/2B4NyUqDVChktKTEecedXHchlVFW
CZVvCaES2rSsFiHJTkpJOFdWAy2zlL33de31u78/z+tzzns+z3mf5/X6gBBZ
Io9nKgK87w7k+/UmwAh9bJhRIQIuI6tSA/6YgM6L0lTSGr4eW/FjiWuzCXwY
WEZdYSgKBN2bnvR2E9CPTJsv1xCFN3TT6t3dJrCwuq4gqUsEVE/N6W7oN4GJ
v696rc6IQGR47r0lwyZQ3xQRO1klDCKZp8bGuCagVLSsRWlWCLwrN1v/nTCB
NbLXa8tmBaGjv+Vt+YwJmNn/GLT+KQBWSx8pZi+YwGMl4j4d4UVUqmnp/1DI
lK9nDU/YrZ5DSSfKjDyXmEL4+ShnpRvjSO7GxafWUqYwWxO8yZw7ikJTdgsi
GVNYn6g04e4ygFy6U0tXrjEFX0ZZN82tEam53jZ/p2EKLfXHh34facfRoeTM
eG1TkBvvChhZ24/FkgRW3NxmCstnXt8eNxvFPiXvvc7uMoXBBa3n6//xcFfb
mZ92e/j+4hNr5dEUPiC0dSfJyBQEdhXojLjO4vINnVG6+01BNFpqmmW+gPX3
x00qEk1hd+kjbyNvAU7yUZtDQlRTGNZffyr9sSBHIUj6Qz/NFCL8m+eID4U4
V59+XlfLNIX92g7hJe7CnImi4ItFVvx8r1luNZUS4Rz7Z9jy4qApkPPE65jB
Ipy6ed7+e3am8DwmpaSnTIRDUsp65n/UFOIT1r083yDCebvvuKiLiyms2EuV
6HovwlG3Uzlu4WYKwpf3rw51F+FEBzR+0vc0BcVQm9VK/cIcscf3NVW8+PGe
Dd/Wv4/P/3zzMElvU0jjOPpGOwpxuhpFhri+pnD8r2Onnq0g58B0IaMpwBT+
NFjYbtsqwClX9H1VdskUnMY/OP/Jmsf6BnqyL0NMIZL2pWUzZwa/sOn1fnDN
FMazVE8QIyaxom9i3eVb/Prb9RQU6/Lw9WhbA487pjAVoK2RGjuC3WqrZo1i
TKHJpmJ38/o2vt7OCW5PNoXzl4OaXlb/Rk+j8iJV0k0hf2nXld3lnUihoSjZ
/qUpVN28L72zaxCFrynLe/TaFIY2+zw/28BFIvZfv9S/M4Uy2gWB09cnUMDT
H01yBaaQxV4T3js1jbit9UMsjikkPzjz4qzKPHJT/Sdwp5R//k+Hj/vEImo+
1iFT+ckULryY+XRtjyAcSO1TlawyhbUKrJXfyEJQ2T+iT/phCn15uSk6m4TB
VGeSElJrCjrb/NtsPgtDvtf8YU6jKUj/UxW7ayAC214Ln5z/aworX+n3vjkt
Ainjkpf2tpkC5bNtKzolAusNpO/5dvHxunhMnLxTBKL9FZ696TOFYrLqp8CP
wrC8cF3u6BDfvg6nVHsNn++LGyt0xvj7m3QkjYyEYHa/RqPHJB+P9VHPlHUE
4Uyobn/KrCm8UjxxMKF5EfWW75rvXDSF5r4tz54vnUdHJfet2CRCgN6aD4J7
eqaRxW3KjthlBFgpmi86VMdFpd/pxN/SBPjT7Hzp9vQg2itrbbNKngCRJ6s8
vvE60ZYHjgH3lAjgmLmus51ehkQS/Uuu6BBgWby6k2hZPw7oCKr9uJ0A0iZ+
POeiUcxVv9a9qE+AHM2B1aPHx/GJE+HT+wwJ4CJ88bVi7RRuSY9Y6o8I8CxN
NP3s3Cy2GXqo9M6UAAc4C1JHahdwtV68Lo9MANUjWk2SGQIcwtnk/dtoBLA8
ZVD6t0iQ8yE3w/IUkwCCSS+FTOKFONunclzTrQiwglQnXW8hzEnZ+9635yB/
/0P/4KoyYc76C/iGmj0BdHafa+wT4/MDlz12ciRAnsDVD2HSIpzlQpWZT10J
kJWgF5zWJswJJfzETScIcGbZN5XaC8Kc2asNP1afIgCjOd1xV7sQ58znf+0H
zvD3H7596bqcEKd3aed4hA8/v18pamvlBDlH6f3iP/wJ8OnljU9XPi/i+ruj
q6UuEaD0xf1DGbLzmP5rUss8hMAXWFfriVIzuEx+wej6NQK0rfj6toKvh/cd
FGGW3SLAifLBgyd2j2GNv9LeKJIAG/clRWlv7Mbx61ddDXxAgMKipoQ0jX9Y
wUnpwfsnBDhyMef6w8tfsUi3RsGO5wQg2x8W0yP+QgEaetVeqQTooba/9ilp
RVwP/ZbMTAJoWb8euZ7di1pGTES2vCUA8xVz3IrGQ0s/vbJi5RPg9Iry36LJ
k0j/qcpz/yICOBhomEXgGeTkc2f82UcC3E/yLq66O4/CLRaIVeUEcFLRTlCV
FIA81ZPRE18IUPWVfDpPmT8PZv90rf9GAIlsRQGamBCs+GW2m/qLAA1rvOJD
C4Vgb9r7a2fqCdDt6mp1w0QYXC9vaXj8hwBygz2PxCOF4e7BmC1lzQRIJil/
1n8lDAW6YueH2vn4nF/gNT4Uhm6xc59X9RBgHyveHejCIPOvffX+AQJ8H7VN
J3wTAuNctrv7CAH+/hGcoSoLwYmw4vwIHp8PU/IBBkaCEOmst7Rwit+PDx1j
vjoCgPc+te2aI8Derk8nf/bOo76VUhkrBIkg9utdXMHmWaTQGzhnIEqE+T49
4U3KU2g/p5/mJEmEp0jLS7+WhzxjDsfeWk6Em9ZPRqusR9GDU58H36wkAtGu
TzCO3Y+G1r24Lb6GCJOJK4tpJfVoDU++WU+ZCJYip5ZJPsCI+DVU9/BGIvy0
l/M9LMXBT847fc/QJEK57ZmIytftuIL5Q6VOhwibz8UdSzLtx9zN8N/idiKc
vcSJ2UIYxdQ6JRm2IRFCQy4cEuZOYu/MMKcARATfnLSBxv4ZHB86m5NkSgTW
Lke9oSfz+Kutu3A1mQh3j9x20lxYxBPbGy0nzYkwIaQskCIiyNm4hJKkwiTC
dg1N2dAm/nus9S2PakWEk6zEYr9QIY5fnhrx7EEikJXCf9fOCHGS7kRGPbEj
wjMXxuxpY2HOt2PCXWVH+flufBj8jC7MmTE6oz/sQgRNaYriAS1hjrp861XF
E0RofJNQPlEjxGENMOr3nyQCQ2DN80CaECewpGizx39EOFadoegSIchJeaTt
F3mOCHHbo1+lpQtwfv335FPheSJY3/rsHKG7iBcoS1d3XyBCr11rjEPuHNZQ
8T8hHUyEvgbmgZPD09hqsuf9nqtE2PAs+71R5wROf15+OOw2ETKm01yuqY3g
usBd6bn3ifDqxsH1VJFeLGSVNPsvmgi7g3q+7LzQig8KBT/Z9pQI8TGzMlPc
lzikcWTg8DMiWFn8O+a5pwJlZR8xCn1BhBvWNlEZsn+Q6BGjf3Uv+fU6H/kn
1W8A6eln6Ai8IULRAVnNLR9Hkd3ytZc08oiw6pT9LZ9V4+hax41v7AIiFP/t
T/XcMYVyPkytD+QQ4b3egcmfy2eRW8vfcftSIqS2Pbnuc24erRct+Yo+EeFU
pkTMbMwiqtNISdhQSQTPHmX//XkCEEYP9xX+TgTXc0GHT14QBJOzZyw6fxEh
O53WVLJaCKZjbDZV1BNheciZj123hCC7YN90yh8ijDu92v77pxAca93w7WYz
EXYeK2kW4+u9dWLizz3biXDY+CTV8K8Q/NIc8Kd3E8HNqHZFRrwQ3GT8YOr1
E6HjfOqhMQMhAO+36jLDRBD9XUJf8UIQJh48nhvjEmFBUSn9yIAAZBYG/ayd
IIL746nTiUsEwKXNNeXdDBF6rvv7NIsvoDXi5hcfLhBBOKgq9kTuLPqupWcV
IESCnMw3KXabptE1prymvRgJSOvsfpbYTCDew+ZaFSkS5IoYh8XpjKC0otJ0
IRkSvNhxa3GqqBc5tqde7pAngdeGpn3C3W2oequ3dooSCRREdzws2VKCQlmH
hG9uIIFoxG6X5OocbOhj3OihRoIt1W7x1gM/cQqWuKKrTYKxrvJbkge6sUPH
4OGV20gw0JQvcmZ6EMtL/tIb20mCz3Gqhx5pcnEwO7bp7T4SnHLbKzM2P4kN
fINzHgAJmhtcFwWjZ/Dw4+PX/QkkONsUOnlreA4nc2gOdhQSMFZN0PREF7Fd
57adxjQSxGR6VSucEODILFm1RIVJgi6pVEt9DUHOZ525ZkErEkw4na8kFAty
gixbc9ttSNBTkdYwqCvE0fcrv1VmS4JEJdIjI28hzsCTdMcXR0iw+pJrVWK4
EOdZ8d3dN5xJUCDhMzMcIMQ53HVuucdxErwX9uBrQyGO9FLbdpoHCezXXNIP
ahDklOvCe53TJJAT33f8EEWQc8FK7Y70WRKstHrQY3JXgLPz/BJXrg8JfpZL
6/Q6L+K+2OG9Nf4kWJJWNDHnMI/jP9ZIv73Iz7/g3pdrCvz53/2+KyaYBIMZ
vFv9d6ZwqV7ofdubJDBZ7kcLauFif+sTbka3SbB9+YEOyZvDeJs/3Xj9fRIY
hklo1y7txXElin1tD0lwoD3q67PBOmzVM49LY0lgZPO5LGGhGC9d3h6VnEAC
289Sxrz518jvQOZ+91QSFE3snjt0oAXpBNxfRcskwdc7QaXnl3ejzqe+g9qv
SLB7/rLkVNggYvfufziaR4Lujh27a2t4aMU27/WbC0mwbdB1t231JKr0S35u
V8zH19WF4b4rM+gmp0HrfhkJHAPywrfx5hBZYmlOxWcSjFdEZifLLCIRppHB
fBU/vxnfueqTAvAx5nTR9p8kkP+lvlZLTRAuNScQ3OpIINsRJx6SKQj7Ntd8
if1NAp/OgwJnRfl8PSXG+vWPBN+ubK9au1UI3r41qJdoJ8GVinKu6ga+Hltw
tzfuJkH22WPnCjsEYRsptv1sPwl+J6zVfOwrCEPh306kDpNgk638g6nfApBR
Kzjyb4wEGTEfve5JC8AJpZ0+clP8tbovy3DXAlJ3PTZHnSNBm1/yxejJWdSe
8SD4kgAZmOcDw06emkbxvC8SuSJkuDGPAsviJ9DaUF15leVkWFxyr+muzQhq
+Or42HolGT4krslK/N2LomUjN9ySJ0Pv43brmeI2JP1sSntCiQwXkrc7dVE5
qLpP843WRjJfL+6NjW/Nx7e22+91VCeD/ibhftLFWiz2sZhUqUMGnWsq3x+v
7MUlkrxKwR1k+K9k1yvd38M4iKVuuXs3GV4a/776UXUMGz882OhpSIZP6s6X
FDZP4NmWm0cSERkUxW42jvRP4bwthZ31pmQwqvtPv9FjFvt4DXssp5Dh52Gt
bvn4ebwjbwPXhEaGDaQ7wkXBi3hk0dLPj0mGkXcx8S7XBDhZ5KsLmVZkmPwy
+VJKRZDjcScvtP0gGYRXG4dW3hDkbKnvW7Langz0p4OL4SWCnC5lpXt0RzI4
S7MtyisFOc+OMVaFupKBmzqjd/I5//2YdTn2/Qky6N0bH12wEOQoT7zeNHyS
DKbNNxv8KwQ4f4y6UlXPkMEtQ5pyVFaA8+CKot5hHzIcNA2Ysjq+gA9Umb29
40+GX8abB6Ks57Cs/IV9ZRfJsN59LZM4OY2/2738OBNMButEQu8YexKHJ7VS
9K6RYY/BW83h0zxsNiD7zfUWGTp5nuLaB0ZxWYDfn+8RZMjrV6euNenE+Y/2
85KTyOCiZmZkg6qRb9tZ/6YUvj2vB1ZNvn/RTs1kAZlMMqy7b6PLKuxE3P8a
rpJfkWH+ZPrt0aAB9PL9kuUXcslw54vbfQP/UeQpaBSR854fn+VXT40QHtKk
nl7dU0iGo2EFwvKWk6j7bsJTpY9kwDJ3zjm3TaOkhl9qluVk+L3R4oeu5hwa
OBm4bf8XMmSsDggzE11Au4TVjHSryeC3Sm+784NFdPFBFUXpJxmcfIxtek8L
QLm2j9XSOjJQFGxvWfLnj1SJ8tHpRj5+JR/vtgZBsDlY4dH9lwy8sIH6HR6C
ED942re2lQw+qQPz0Z6C0BOsGFLSSYa9ynNCNwiCoKdYfPtVLxlsa1S++YwJ
wPnME4+eDvLxrn4jV8efz28TmeTwUTJIKR7/VfB6ES1pyH8VME6GQt0yVZUt
C4h90rnwxDQZBo8ZCltYz6HHQss+28zz7Vcv0X+FZlBHzJsaoiAFfqY4d9sM
TKKt2vYtO0QpUJhP++/v0XHk/VF0YIMkBWjPd9Y6PuOiQpusyRXLKaATEDc/
5j2M6MGLUgNyFGgZP04miLYjr/oEoyRVCuSs/r0n/loVzvM0o97fQoEH4kmM
+PY/WFBozCpoKwWU9y5Rd3LowGYxj4+e0qPAyKceotODPnx/K8HTbicFBK0j
l96gjODfxQO+Zgb87/ZncjSUxvAmm6gQg30UsPVL+eJSMo49B4zuqAMFMghD
D+Z2TuE3l7seyREoMJGZnrzdcwbPKdxJFqJQYMno6f21znOYmLE7Z8ScAmYb
V70wX7WAb+9vKfzHoEDa1OqP8Xz+1dVd/1xpSYF3mwJ1SCwBjrLnttp8GwpQ
crJsjfIFOMcFf7ek2FLgwB68izorwMmODh6IPkKBTx+UzJtkBTlTWlpToc4U
sO849OSzsCAHin8Jnz1OgWZXpW7CVwHOjQOBKxw9KBAWPrKkzV2A87NfdS3j
NAVIb5fLbq5YxGsuV6kbnaXAv1ctNObJBeyk4LNdy5cCPXMmB+98ncPp6crG
qwMokK8WUfC3cwbzoIIqfolf772lpFrOFN5Xd9p6PJgC6YF+bUmOEzjUQ9Gx
/SoFTISU5ESqx3CVQLHnj5sUEL9C3K62bBQ7aMmEZt6nwGNN37si27pwUNCb
HNdECiRuUJ4v2VCAPsnbF1kmU0Dt9zU1PPsLrUwX/bI/jQJr9byID+1bUGLt
gValHArsz2PZa0YMoD73xYGlb/nrbV5blqmPoh0CKVPT7ykQSkjdW9YwhgKj
mCI9hRRIaFh+29l2ApVqTq+oK6aAiMh83cKLKVRsteRwdhkFIui+DsdfzqCi
i2uTbn6mgOP0Xze183PoQ8rWIZcqCozXDf/QF1xAeT+NDNAP/vmhF716hEWU
O0cPXl1LAcJqBcmk9QKQo360cqyBAnXp5ZOafgKQxfxPobqJAg5htcuH0wQg
3T/4aEoLBQ6mzqVefycAKUkRacEdFCiu1QvvjhWApOoknl0PBfwfi7azHQQg
YSrXePcABWJdXEV+cBdR3MaK6ytH+P1wda3Wb1lAj2kNP/vHKDDd4dnodG0e
PfDpXVc+yT/vUH47qH8WRcXPHIufpUBexUKMpfQMuv9l6Sv/RQr8LYtdqTsz
ie7w1s1aCVPBS7Parz9zHIUp6xB1xamwdNzN44/eGLp6htnYLkWFJ0E1pl6+
/ch/TZSghTIVxH4UDjpmv0e+hGTzzRupMGx3ZjTNJg97n3oXJahOhZ961ZOt
V37iUx8bNd5qU+Hu1sBZ4yOd2GOg7+zdbVSI7V2hNLG5H7spzBW676KCyGXB
OpuDI9jRXZm93ogKlb5KFeZu49ghUvfJNFBhNutJgUfKJD5cBF2/CFRgHJH1
zXs1jW16WHpZFCpQrz0/++TSLLaScfa/TqPCOffXoUul5jFrn3epE5MKK7Zu
67x1aAHTj12RMrKiwkUBkxmjI4vY/G70wVUHqTDypPPgf1ICHEr+i8RRWyos
OcPd7UUR4BA78ga+HqECRU8XNtkLcEykvugnO1OBVusffJwmwEEGf4KCjlNh
bkwr67SCAGef08CXwx5U+PzusuA130W8J2xebtdpKnzdE9UV6L+A9d9KHVlx
lgpJ6q9Zaw3487hlfWqvDxWaQr8SD7+exXpLto2V+FNh6Ftq6Ce+vtPeaWIU
d5EKXJvsvSGjk1jTwfKaXzAVokvx8a2F41g159xa7ZtUUF4q9HRLxQje0HTV
Vfw2FR68CaW0bxjAymIPXrbeo8L9rCnDcZ8uvOpwvmn0Qyo8e0lWOLizFsuF
fg33iqVC5C6tGG2pj1g6q6neLIHfrxlZt8HcVLREaNFjMYUKPts8Nxp7/0Hi
W6XfNmZQoTTpeD4lrh2JHNgg8CabChKi/hcSLXvRQqpppFse35/hqwK0OIqE
JhNuRxdQAU4ybsbF85AYQeBGKYcKxu/ePQyXnERL7jmEcEupEPcvqu/5jmm0
/F/BBZXPVFilVVyvtXoWSWut9aNX8fu1UpWonDuH5PzOnwn8QQUE7J+mwgtI
sazeM62WCh7NwsO7BBbROhn94w2NVOB1e7w5kbqIVI5EOor9o0JjhLun/vwi
2pTBtd3ZRoXBwvbcxplFpD7NPMB/qIHvNa7h+cRFpEl6ybzbR4VyD+O5DeML
SCdiuXnREBWyXSnry3jzaHuLB3GAS4VwtMJze9Ic0tf+gtZMUuGVSP0xafFZ
tMd/y17KLBU4Eeu3/dwwjfZVXN3ps8jnV2EDKX16AoFcp06SsBnEbo7ZezmS
hyhZCZsElpnB4llP3STbIUSbXVTSkTaDbpnpLO65HsSgOCjayZmBg+Wd20+Y
behA25rleevM4PHXPLvmzeXosO558S4Vvj2pXeeSHsdhh8B6QTk1M9BMMNMU
+lCFXRUiJ05rm0HP1pKzdKkO7ObMHYndZgbmf+5prpXpw57ZzP6vu8xAYrnp
naiqYew1n9U5vccM/j7Kc3r7gIu9zZa3bDbm+/8a8yx+1Tj2i/H4bW1iBoOx
Zx532k3iwI7PNSEkM2iuOdF40WkaB23b8u2VmRnYKW89JrtpFodcvPq5mW4G
NYsru0UfzeGrXztKlluawZrEQyVBJfP4pqJpkaGNGaiE3tUKesKfj64JeSds
zeBpyERP48ZFfD9nMSfmiBkUer5oMbFexNGL9pllzmYgrnV7H3vHIn5IK3gx
dtwMfAQubg8uXMBPHq5J3OBpBl7Je9x0xvn6rMvvCcPLDIZfPJm+0zSHk3bU
R1/wNoM8O9+t73xmcUrQrnvpfnz7IT3twRXTOKMq4lZjoBm8mBPvj/o1iV+u
4V4Rv2wG700Cd5rFj+Oc48ygXVfM4HuWxPbEHWP47Zssf+cbZjDzTN/TIHIE
F9E9TuN7ZiB6fG+FxptOXBnccdA30Qy4zys8skPy0fdvJpbPk80gICw0hAa/
UM26BItfaWbwwa80AL1oRg0nFsmCL81g+6XS38a/O9Gft/Ymuq/NIN//Yd6/
Z/3on3DBPvt3ZrB1T51x8N0R1MZcs/vWBzO4EsWzD90whrpi/ba9x2ZQu3wb
ef3FcdTXV6fVXWIGo817hJfFT6LzV9LTqyrMQO9Y840I52kkoRKk9earGbxW
OFMs0j+DYvKt0h99M4MVlxWIzdvnkLq1htblX2ZwxkOzxcBgHuUOz6cdrzcD
G2KXTunUPCLc/KlJ/2MG0p/JVbVnFtBP1RdpO5vN4NXUUwm35wvIEQdorm03
g0h6/FKluwto5BAzTbDbDK76HwhCOxbQRZ6qZk+fGeyZ2fii+M48Wn5nOrV6
yAzmv1t17n0xh55oVGvkcs1gydr0H+0Bs0irNDH18QSfHx9DPt3lz7N8B1+N
4BkzGFEelEt3m0LUafNUtwUzMPRWxluuT6CGCBUNhpA5PBkQlAs5y0PHdcZT
domZA7z9by5dl4smPn3esm6JOZBKFAJEQoeR3MKZLb0rzcG9cfNfScFOxHQr
2xyywRyUp/TXczZl4mahRy9OqJnD+bD9Nutdq/Gp2FObmRrmsK7k6t1lD3/j
sJ+rNittM4dTFbFvY0168NqTA8nCu8xh/OH0XLvHIE4TL1bvMzCHj1Myd/Zs
HsUGiVHJ3/eZw3z9jXa/02O4Yp+7+jswh1FLQ0/XG+P4QL1xcizBHIauyU9u
9JrEHf/JqodSzOGC2rkB+vppfHZZz3N3mjk4FGp7LImYwUIvCtRYTHMwmj67
VfjTLL63/97z3Vbm8O3I/rUBH+awSpOrmvJBc7C3/BNO95jHL332PhexM4fL
o0dlp2vnsfHKFWr9R8whXCP2y4OZeVyV3p70w9kcRA0q9440zGM7Up5q3nFz
iD9/Je3Yf/O4vyUsKc7DHBLmQ3hiZXPYP8BR9cppc3iw4d7fwNpZLKmgn+Rx
1hxaL1lxpZ/P4AfZS1TZvuaQ6mU4mag/jTebNz8zCOD3Q1NgKjF8Er/tfL1p
/SVzmIoNF5fMGsfEoOvPREPMAb2XLDV/MoZr1thvGrhqDmMSmbnW9qOYyxDb
9P62OXTYO/z++rsHa+cf3GgZZw7vAr5R+lve4gIr7cQ9ieawAOZhJcFvkdmw
4EaVZHOQMP3H8Ov5jtxU0zcMZppDOW/4de7JdjRZdCnh1ytzONTssyM1tQdd
PWS1IT+Xb288iCOYNojkeVsS4t/z+3khm3x72yhKuj2vcq3QHC5tzewScB1D
e2nrWcXF5iCyStX7UMQ4+i65//JsmTmsEr1bdfnKJDpW4fRq1xdzoDL85fT1
p9FsaGjr6Wpz4H1dFdwTP4PumiSvTPtpDnvE1qVVFc8idYFP+zvqzMHAQTGx
K2oOFRT2/qf8h4+P/0y4EmvnETtgaeLBZnMI5sTt7WDMox4D7Z/3282B8F/n
BdGd8+jCBF2oqtsctm2YkGyomEMyb7y2iw+YQ2CUydyzZXMo5b/7TvtH+Oul
2sdviswiY9039wN45mAR9mfTpZxpVDNQ+zF3il9vJRcnWDOF3NMmucNz5kB8
4CJNgwm0eHz1Jk1BGrxcI7zzlwYPRaoZWrqI0iD8fq9DetMo0my3C4mTpMGy
lwKlgUVD6IBDfLuMDA3azim8P9HcjjKsNifNbqSB/OXlmV9iirCJDLVm12Ya
7DmqvjLr3i/c8M1dxEuLBlqmzaPips34VHjYzjRdGmRXMI3GaZ1Y2DzLpWMH
DWSyj19M/NCHH0h8j1Q2oME77eTg7H/DWKd8tPTgPhpwo9O6lllxcWmI7Ph9
oIHLM9H/3K/w8OH9u9SqCDRgmK5oC7gwgUcWDliLU2lwyyJvy4D+FL5a4Hdl
vwUNyjhH7splTuN1/o9yA1g0aCS/NJNsmsGvdhd05lrTIEnbhfuMM4tJ43/l
Rw7R4BH9X9+tg3O4KWeRqOlAAzui4dV9iXP4jNcGHxcnGkg97m+ViJ3DEjqm
yXHHaGCvJeilRJ3Dcf0udQ3uNGB+bda49GIW70i9KiZ7mgaiDSdOS+TP4E/H
UvQtzvInx+DmJ84h09hB9cuxa740uCC500lYfArzWvujiwNo8CH8q8Bq6gS+
+XR5xewlGmzYSzlznc7DKva6k7tCaRCvWp3zex0X565hbfa6ToNhhcNhdt7D
2KzhjE1aGA1KNE8zaYf7cEtU5LWOu/z9ckZZWdMdeNnKhu6DD2mwOb3/E3f/
L5xYPb0qIpYGA+tzbvL2F+HdYWspVQk02Hhz+ZFdZdnISfxIyv40GuxuOGr2
2OUPmioNagjIokFL28o2PfN2dDs4UeJtDg2sHWfkGjN6kCqUGoy8pcEfw6sd
YZ8G0fv5TjfND/z87jLDtlJGEf2D+EMXTIPJLbcOPg4YQx1+Gp/jSmjg/KF4
W4zfOPLXN59uqKBB11HBuwV7JpE0z1NDtpIGR/3XJNLzp9Bh0mTMnu802PX0
vNrG0WmU9OCy2NEaGkxtLY540zaDhvqWnrvaQANxBu3Y07BZZGAU3Z7RRIMQ
DkHccHAWBd9RYf9q4SPfSmgwUXgOVbamcaY7aBDcF5b17tssUti5S1ellwaW
KGjZevYscryKY0mDNEj5uDi0P2wGZTRQl50cpYEa9ZcDJWgaTWjW+EeM06Be
UfmK7LYpBBccet9P02DL9KGPuxIn0M1vPTYt8zQw51G5PfU8VLPhbLmYkAW8
kzo+KVTPRcre8zu1xSyAmvAtoydpBOUoysj4S1nAENoktfdmN5pzfxIUL2MB
Iqm/TwxR2hCpUH24XMECrntqjxNyGtFvR8NK2fUWkJPqe7AgNA2pvinbu3eT
BXzR/Xpgoh7jU2LM1KOb+d/zVsfrbfqFhdJdrmbqWoCZDkn9p30Hps0P8X7t
sIDHW/RX9Pn04mjGeeeZ3RZgV77n0i2zIdySIPxTZZ8FxGi+HhM8Noo1eeFA
Bgt4yHB4h33HsDdJ8eVJggW83CCyIGs9joseJCpFUiyArBf4WWV6Akv0bw3L
p1lAsLXS34QjU9jS6N1MC9MCjB9p10yGTuO4O/tPiFtbQNLznovbjs3gntav
9dqHLOB73NBJWcFZvH3nAZKVvQX/PfX5gZLVLA682vLG39ECGhwIK+84zOLy
BvdNCa4W0Jl1Of+4yiyW1hq/V3HCAv61iwi4PZrBhy9cEhg6aQF1STtuS1VP
46RvkqflzljAGfV1spGFU3hoQ+TfvT4W4NsQItvpMYkNvJVpjv78eutadz5s
GsfB5Sn51y5awDnO8c4BWR6uVNyhkRVsAYHqJOGXClys4FEYU3PVAqqze0PO
1Qzjo4VksdmbFjBhcT/h65Z+zHO0aydHWMCsZ3MLd2krNn7TxToVYwHD4ue3
hnnU4+ti/3EiH1vAh33nahlLPuN16VdiW59ZwI8g6tWlwiXo2PyKZRIpFiBz
75734eM1KJvxyF8nwwIKH7j698s0IyIvyybgjQVIctffznzei+6S9pQn5FnA
5+03lc6yhtDvByU7PxVYgNNxzq9Q61Gk2m/xbIjDrz+t6UWI5Rg6ZdSwUr7M
Ag53+x2/pDSO8u44BRl+tgDD2kG7qqwJJNQ2MORYZQFuJ170HxaeQrSdvvbX
f1hA6Q+DTXmrplH0VcHKrFoLeC89FqfSO4081IU44Y0WIJTVqmN6agZBudAb
z78WIC1Y4Lbn///zHxNOMW+1ANN5ktRZzgzqFxV5otnJ76f7tltDfH5xnovc
ley1APZgQ5nBuhkUTRQN7RmwgAs32C88TvPtd4r6VYxYQGrUHQet63y+XRHz
TOZZgImri2ui2yRSUBM/emXKAiyrV7ICZSdQf6m4lcucBeC17/ybb/EQx0WC
YipAhwcDebdda7koWkRy30YROjwvzZCT5Y0gjyRJPUEJOuQlu4o/aRhEQFii
2rKUDv6Cz7nJV3pRf8jSZXGydPiS8/4AybgFcTYtE7iwig4n72UH/yyqQ9El
y3i2a+nQZuGjpRf/GYGwVNPqTXTYFZtAaJAuxArPpL5PqdPhx8xZFXfDH7jf
ZEVpvSYd1vtv224m/gdHB0tnRG2nQybRxozT2oU9Nq6M99anw2PlCNIJQj+G
jysjLffSYVik0Dzq2DBWcJK5vt2YDgYSnAa3p6O4X1A2cKUJHbxT7bu3Oo1h
ToKs1wiRDqmvrwdETfJw9H45l29UOlhv/nlwqd0E9miVO5hlQQclgcpLJ8Im
MVyWp4Wz6FC8GpNErk5h+Q0K4GlNB9aTGpuXpGncx1HYaX6IDqUVptc+Vk5j
ztFVWzTt+f5KS32UVs3gKAHFdZKOdNjbxVzQUJvB7vGK0j0udBAZWmn9d2Ia
A6wWqXCjw2whcepd2DSWb1k99dyTDhkCpczS7incd2nNQKgXHWRe5K2JlJzC
nPVrW5y96aBhJhS9jzeBo/DaGhM/OqR/OH2dlTaO3Y+s+7QhkA7Zs1VKzTo8
DIvrCgSC6BBAYr1xusLF8k+VsptD6EAvPpz88dUI7jNWTiq6RgcfVEe96TWI
oy6uDwu8Q4fGdtZsY2UHdldWCbKNoIPgPvZ50GvBUKTivTeGDsFFrq96m+tw
3/wGu6k4Opzboh4WL5GOObEbmfWJdLjIflVD5bxHUUabCG+T6TB0sfxHrc53
/jxQ3eqdRYf5Jx/DWsJbkbySmoplDj8f21rrbSu6UF+Bmtz2t3RQy1QynLPt
Qxw7dYmV+XSIfj+wws19CEXNqc8NF/LPGx24G6M4ityfbB6pLubH//rVtt+/
uAj2benILKPDVEJW+FJnHpJv2tIQ9pkOJa2PHBM/8vVjgEalRxX/uy7pZujw
BCo39vWK+0EH+/X7Wv+bnkSJgmVyP2r5eBS3e9RfPIUulsq8F/5Nh++aAkf7
SdPo8LWj9vr/6KBCW1Kw8do00jfLEjzRRgfdAX/bhcvTSGb53PPHXXSoEJ6x
erF7Gg19o5pV9/HzP5J4Wih1Cn29HzMkMEyHt27Vnpn1kyjFuvP+jjE6qBpI
2s+UTaBQxR27j03SYbLu/vJen3F09E/QnwezdJCqXpqgPDSG9sVVX/q6yMcb
qcr9D1/vKTquU10QZoDwio0awzCCeJvcP+lJMOCkT/8FG4sBlJEqujJamgHb
fK+4blvRjq57WuZ+kmNANFlkSZ5RE3LRTTg0q8iAX+ed/ljI/UTrcvclHt3A
gKdsneFa2nM85XuTFKHGgPJl+Wu9l37BNXsb+so0GOBM+Flydm89DuOc3aG1
nQG5Nzwbpo50YreQ4np7ff533aaZhcFeTCCtCLy7lwEycUk3WncMYRVJe5US
YwbEfd/uJyM7iue+ppWOmzCgb4lh0Jq/XNxwe8ptC5kBxyrln8NZHn7DIi23
NWdAQN9qa/Mf4/iuXOSrcAYD6gMc2x+NTeCT9a3WHEsGlJU7qeyon8Rmj3Rn
uDYMsOtW31Fyfgqr21+IU7Pjr9cGx6U3TmEhla8mB48yYPObl05CE1P4X5ti
900Xfr1kfutFVU/h/OfHbhW6MaClzya913kKR7u90R3xZMDWkTc5hu8m8Rkt
oZqN/zHAKKqr9PyXCUwfYvhZn2NA+EXyeRQ/jjVfxa67fp4BrqwVGtWGPCzm
3c/Jv8CA5uG+BuEELm7T3+M6eJkBlkXLLzBrRnDR9FVJlasM+PFIxMMydxA/
KqjJZN/k19vWgDpzphf7XNrIvnKbAZfSrZaYDnZgHdGiR33RDLisob/nfkQd
XvJpKVJ6zIC0usJ7Fqs/466bh9oZTxkQWhmC1xo9w3HS41q5Lxig5qyVf6z6
B/L/ZfK9O53fn8HlbvEpf9CB6Lvea7IZUC32n/TEwza0Yt3Wwkt5DDilbbS2
I6AfDfw775hTwIBPQol9EDSMPiVUiHZyGBCVfHLHp2i+XnSRT1tVxoDtWt+D
5veNoaDNznSzzwwYnCidOZTFQ3Z92dzAqv/X676DRPc4MshciH75gwF4zcO3
1e0TSM6LZthWy4C96yT+KSROopHtj5rlfjNg3/c8wvj6KWRj6iAp8I8BCb9d
uvccnkJFlht39LcyYHhF1Ztf/LW6S5ddXScDfF+Lh9VtmELh3mlXi3v58dSe
O/vv5STihZ7KzhhkwLLGK+PLxSaRXdT23zGjDHgxO46Wqk+gkucTwiHjDOg/
/nvZ3MpxpPk2X/vUNANInleOBFWOoXvlF20OzTMgw3P7xoyDXBTokQCJAkww
fjnxevH9CMo+G1IbI8SE/dIjo0U9g6gjwNU9XIQJD5+eE5JX7EOKoeTFYDEm
LAhz81SWdiHzMI1IPwkmHFpTdCzsayvKeTJY6LyMCY8f+ix5nf8DdSV9Yx+S
YkIrr86qckUxCtEemT0uzYTyn2sgRzUC03MjAgkyTPhgRzisxivBlwvPrdwr
xwQhanGFj9Iv/KbMJllXgQlc841xROkm3FO1x1BNkQk9KQc3vHFow8x/8y7S
65gQLaW+fMi/D4d2NU+LKjMhTGTrptvaQ/jdUPHt2fVM4JSmtLz/yp8PE882
jW5gAjZTyrU8yMXKi1fyujYxgd+A19N5Y5gt7mbRpMaE7eQfpv59PHx1hVnb
j81MWJVtEijXN47zV231rdBgQpeKsM/F3Ak8uF5qWaEWP/4PlWF9ZpNYZctI
fI42E3aTJLyXpk5iK72fu1J0mRAeZbt21bdJfN3gzZfYbUyo+1Jp+6lgEhdA
9JGIHUyolZs8ceTMJB6h+PGu72KCF363LGFkAm9iHb5xcTcT4r4kPaoxmMAH
Du1T9t7DBK3VwSUc2ji+6aj8+oQhExq/cLRf8Odj0QkByhEjfv3T67jGrVzM
/a+tyQrx87ncLp51fBSr+5f+Z7afCS869xOFbw3jQ8HJYmDKhKINvEPm8/04
7Ob1x7uITCj9+fbdW50ezLnvrqdFZkKldtyi/ZYOvOWZzmEFcyZQTRqwnX49
tkuXHl5qwQSpezeK8xMr8Z3X3BBBBhP+LJb8Je/OxRMlbzMH2Px8JpOS6y9+
RpqVD0zarJhwN2Kq5nRcLXKo8a+vP8D3N5krJkH+h8o6jAVLDvP9lV44uYzd
jaYGVKLz7JgQ4vGf/4rV/WjruJBWlgMTrt4WRDFxQ+jofAd+dpRf7yZHrZ2D
IyhStMLqoRMTbtWnOgQ6cdGn5am9t12Y4NyllM1JH0Oz8rcuhh5jwi/rlCGx
ch7SUT4p6+/GhM13zquWZY0jJ3VGyml3/v5kvVPdzhNoxM/VztaTCfN5j6G2
dQJd/BogTT7FhAKTo+5RWpNomfL90u1e/Pi/ybpGwCR65JXip3yGCZfuq5Xn
qEyiLSVFW5d4M0ECblgyKifQW/nalvFzTPg6vEN8H2ECEdz6I1t9mSBZsUyk
+MY4+pEvSK06z4TszYcuP4jjIYflivN5AUwYeC36pi90DA0c0XmVdIEJxy+c
wxTERf45BNe7l5iQ1frqffL3ESQhars68DITDCXqElL9hlC0zX9Vx0OYMPfZ
ljC8tB+ppl27bHmFCY4eS5IXnboRMN70at5gwuKF8/4q8/9QdcKXWIVbTPg0
qaFLTKtDdrwWllA4E2Qebj3bZ1GJ/B4uz2+8y4RU0plv6qtTsdjAplNl95nA
+7NRTftKBY403rvxVSQTLC/rZasRavDL9mM3rz/gx1PMO+LDbMP79C8Yez9i
QsuSXuu7Wl34y/UI7pEnTBh0O1bz72cvPvgnNdk8jgkl9dVHNhsP4i5tzuHd
8Xy8JN7x/rt9BHsH1UltSmQCedXd66YJo1jo18BHqSQm3DwQKSDbzcV31YR9
Z57z8X5r5rCPIA8r+63W6nrBBEa7ZfXsIA9nfNFt/pHKhIhnYzmP+O/LvUqk
iMJ0JmTORcy+2zWBP522I6dm8u+/F+i1xm0+3z6emY18yYSXRQN+e15P4A65
Gy+DXjHBRjtk7HnSBD5z/Kmz52smrJ9xNHzmNIEF8nNXHczl34dhtQa/B8dx
+LLKr6bvmPBInTl9jDyO1xxpu6T7ngnyC3cWa714OOXV1I61H5jwn4ZOlIrn
GNYXWdEjVsiElFaWeoohF5ceUHvCLWICS+50jl7bCGanGjL/cfj1T5IpelPG
1++zLJEvH5mQ/uabz87gfjwXf9EzoZwJJr8jb7HMO/DNsUiV8E/8+jsuV7zo
1oIVSek1fl+YMHLj/pe4kga8o79+H7OaCVX0fx5PdnPwHksV203fmfDjS74/
66klpt8Veb75JxOMzjrIB94vRu67ti1frGXCTG585x52I5q6Ri7uq2fCuqFN
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
zDDhqFGllQmnA/0PlKR/PA==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{1, 100}, {-3.418328893360499, 3.4222093835132776`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747600713083499*^9, 3.7476007211002207`*^9}, 
   3.747600919938611*^9, {3.747600956623067*^9, 3.7476009874407454`*^9}, 
   3.7476011037160387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"exp", "[", "x", "]"}], "]"}], "/.", 
     RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.01", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747601337463731*^9, 3.747601391870923*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
vZw0TMb/B3rXBEI=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.01, 1}, {-22.85171053475772, 3.3463662565340035`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.74760133964813*^9, 3.747601392326488*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], "2"], 
    RowBox[{"\[Psi]", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"\[Psi]", "'"}], "[", "x", "]"}], 
    RowBox[{"Sqrt", "[", 
     FractionBox["2", 
      RowBox[{"\[Pi]", " ", 
       FractionBox["\[Pi]", "h"], 
       RowBox[{"\[Psi]", "[", "x", "]"}]}]], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "h"], 
       RowBox[{"\[Psi]", "[", "x", "]"}]}], "-", 
      FractionBox["\[Pi]", "4"]}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", 
       FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", 
      RowBox[{"\[Psi]", "[", "x", "]"}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "R", ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74760149977501*^9, 3.747601566674295*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7476015568570967`*^9, 3.747601596206353*^9, 
  3.7476016876887007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
    RowBox[{"Sqrt", "[", 
     FractionBox["2", 
      RowBox[{"\[Pi]", " ", 
       FractionBox["\[Pi]", "h"], "x"}]], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "h"], "x"}], "-", 
      FractionBox["\[Pi]", "4"]}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", 
       FractionBox["\[Pi]", "h"]}], "\[Lambda]", " ", "x"}], " ", "]"}]}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "R", ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.747601708972537*^9, {3.747601748283691*^9, 3.7476017592891903`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["h"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"]}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]}]], 
       " ", "h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]], 
            " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], 
                  ")"}]}], "h"]]}], "]"}]}], 
           SqrtBox["h"]]}], "+", 
         FractionBox[
          RowBox[{
           SqrtBox[
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[Pi]", " ", "R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], 
                  ")"}]}], "h"]], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{
                   "2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "R"}], "h"]],
                  " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]", " ", "R", " ", "\[Lambda]"}], 
                "h"]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
              " ", 
              SqrtBox[
               FractionBox[
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "R"]],
               " ", 
              RowBox[{"Erf", "[", 
               RowBox[{
                SqrtBox["\[Pi]"], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"R", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                  "h"]]}], "]"}]}]}], ")"}]}], "h"]}], ")"}]}]}]}], "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
       RowBox[{"11", "/", "4"}]]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]}]], 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "R", " ", "\[Lambda]"}], "h"]]}], 
         " ", 
         SqrtBox[
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
          RowBox[{"3", "/", "4"}]], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           SqrtBox[
            FractionBox[
             RowBox[{"R", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}], 
             "h"]]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[Pi]", " ", "R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}], 
           "h"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["R"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
                RowBox[{"3", "/", "4"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   FractionBox[
                    RowBox[{
                    "2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "R"}], 
                    "h"]], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", "R", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                 "h"]], " ", 
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[Lambda]", "2"]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["3", "2"], " ", 
                 RowBox[{"ArcTan", "[", 
                  FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}]}], ")"}]}], 
           "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[Pi]", " ", "R", " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "h"]], 
            " ", 
            SqrtBox[
             RowBox[{"h", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
             RowBox[{"3", "/", "4"}]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], 
                "h"]]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["h"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
      RowBox[{"3", "/", "4"}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7476017116028137`*^9, 3.747601786210203*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%106", "/.", 
   RowBox[{"R", "\[Rule]", " ", 
    RowBox[{"\[Psi]", "[", "R", "]"}]}]}], "/.", 
  RowBox[{"R", "\[Rule]", " ", 
   RowBox[{"h", " ", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.747601716687752*^9, 3.747601727900939*^9}, {
  3.7476017977216053`*^9, 3.747601815999085*^9}, {3.747602127756667*^9, 
  3.747602130779397*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["h"]}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["h"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
      RowBox[{"3", "/", "4"}]]], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             SqrtBox[
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], 
          SqrtBox["h"]]}], "+", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"n", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                 "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
                  RowBox[{"Tanh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                RowBox[{"Coth", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}], "n"]], " ", 
             RowBox[{"Erf", "[", 
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"n", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}]}], 
           ")"}], " ", 
          SqrtBox[
           RowBox[{"h", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
            
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}]}]}], ")"}]}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
       RowBox[{"11", "/", "4"}]]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], " ", 
         SqrtBox[
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
          RowBox[{"3", "/", "4"}]], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           SqrtBox[
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"n", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"n", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], " ", 
            SqrtBox[
             RowBox[{"h", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
             RowBox[{"3", "/", "4"}]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                RowBox[{"Tanh", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"n", " ", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[Lambda]", "2"]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["3", "2"], " ", 
                 RowBox[{"ArcTan", "[", 
                  FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
                RowBox[{"3", "/", "4"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
                ")"}], " ", 
               SqrtBox[
                RowBox[{"h", " ", "n", " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}]}], ")"}]}]}],
           ")"}]}]}], ")"}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7476017284435987`*^9, 3.7476018709750443`*^9, 
  3.747602131340023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["h"]}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["h"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
      RowBox[{"3", "/", "4"}]]], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             SqrtBox[
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], 
          SqrtBox["h"]]}], "+", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"n", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                 "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
                  RowBox[{"Tanh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                RowBox[{"Coth", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}], "n"]], " ", 
             RowBox[{"Erf", "[", 
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"n", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}]}], 
           ")"}], " ", 
          SqrtBox[
           RowBox[{"h", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
            
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}]}]}], ")"}]}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
       RowBox[{"11", "/", "4"}]]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], " ", 
         SqrtBox[
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
          RowBox[{"3", "/", "4"}]], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           SqrtBox[
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"n", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"n", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], " ", 
            SqrtBox[
             RowBox[{"h", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
             RowBox[{"3", "/", "4"}]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                RowBox[{"Tanh", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"n", " ", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[Lambda]", "2"]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["3", "2"], " ", 
                 RowBox[{"ArcTan", "[", 
                  FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
                RowBox[{"3", "/", "4"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
                ")"}], " ", 
               SqrtBox[
                RowBox[{"h", " ", "n", " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}]}], ")"}]}]}],
           ")"}]}]}], ")"}]}]}]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["h"]}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["h"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
      RowBox[{"3", "/", "4"}]]], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
           RowBox[{"Erf", "[", 
            RowBox[{
             SqrtBox["\[Pi]"], " ", 
             SqrtBox[
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], 
          SqrtBox["h"]]}], "+", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"n", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                 "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
                  RowBox[{"Tanh", "[", 
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                RowBox[{"Coth", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}], "n"]], " ", 
             RowBox[{"Erf", "[", 
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"n", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}]}], 
           ")"}], " ", 
          SqrtBox[
           RowBox[{"h", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
            
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}]}]}], ")"}]}]}], 
    "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
       RowBox[{"11", "/", "4"}]]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "n", " ", "\[Pi]", " ", "\[Lambda]", " ", 
            RowBox[{"Tanh", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", "\[Pi]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], " ", 
         SqrtBox[
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}]], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
          RowBox[{"3", "/", "4"}]], " ", 
         RowBox[{"Erf", "[", 
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           SqrtBox[
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{
               FractionBox["1", "2"], " ", "\[Pi]", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"n", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
           RowBox[{"Tanh", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", "\[Pi]", " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"n", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 FractionBox["1", "2"], " ", "\[Pi]", " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], " ", 
            SqrtBox[
             RowBox[{"h", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
               "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
             RowBox[{"3", "/", "4"}]], " ", 
            RowBox[{"Erf", "[", 
             RowBox[{
              SqrtBox["\[Pi]"], " ", 
              SqrtBox[
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                RowBox[{"Tanh", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[Pi]", " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"n", " ", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
               SqrtBox["h"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[Lambda]", "2"]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["3", "2"], " ", 
                 RowBox[{"ArcTan", "[", 
                  FractionBox["1", "\[Lambda]"], "]"}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
                RowBox[{"3", "/", "4"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]", "+", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "2", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}]}], 
                ")"}], " ", 
               SqrtBox[
                RowBox[{"h", " ", "n", " ", 
                 RowBox[{"Tanh", "[", 
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[Pi]", " ", 
                   RowBox[{"Sinh", "[", 
                    RowBox[{"h", " ", "n"}], "]"}]}], "]"}]}]]}]}], ")"}]}]}],
           ")"}]}]}], ")"}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7477002042456207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        FractionBox["%1", 
         FractionBox["\[Lambda]", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
           RowBox[{"3", "/", "2"}]]]], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
       RowBox[{"\[Lambda]", "\[Rule]", " ", "0.05"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
        FractionBox["%1", 
         FractionBox["\[Lambda]", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
           RowBox[{"3", "/", "2"}]]]], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
       RowBox[{"\[Lambda]", "\[Rule]", " ", "0.05"}]}], "]"}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "50", ",", "70"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<N\>\"", ",", "12"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(\*SubscriptBox[\(I\), \(h\)] \((N)\)\), \
\(I\)]\)\>\"", ",", "12"}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<h=0.01\>\"", ",", "\"\<h=0.1\>\""}], "}"}], ",", 
      RowBox[{"Top", " ", "Right"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747601887302018*^9, 3.747601888674116*^9}, {
  3.7476021488439083`*^9, 3.7476021707662992`*^9}, {3.747602419273755*^9, 
  3.7476024533458767`*^9}, {3.74760252201978*^9, 3.747602553282679*^9}, {
  3.747602992919141*^9, 3.74760304993545*^9}, {3.747604626219392*^9, 
  3.7476046284418*^9}, {3.74760466169414*^9, 3.747604695094459*^9}, {
  3.747604758881548*^9, 3.7476047605849457`*^9}, {3.747700209597206*^9, 
  3.7477004177135677`*^9}, {3.747700476670467*^9, 3.7477005256246967`*^9}, {
  3.747700562804862*^9, 3.7477005671901827`*^9}, {3.747700643927124*^9, 
  3.7477006810106573`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Placed", "::", "labpos"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"Right\\\", \\\" \\\", \
\\\"Top\\\"}]\\)\[NoBreak] is not a valid position for the placement of \
labels. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Placed\\\", ButtonNote -> \
\\\"Placed::labpos\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.747700684285822*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Placed", "::", "labpos"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"Right\\\", \\\" \\\", \
\\\"Top\\\"}]\\)\[NoBreak] is not a valid position for the placement of \
labels. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Placed\\\", ButtonNote -> \
\\\"Placed::labpos\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.747700684377801*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
3CP3RKXwfp+3uHAkOB75e6G1p9iB8ZbXTWfiUauhgfcUNk+ddGCRXgIyZPZ8
zJCmQKaZsgBr5kQk8UfooZAMBb4vdRTNvpKImBeaXIOxl5Qrx3bSE1HPTzuH
Feyx27TlMuYkVPyd94blMQr8ohtyxU43Cfl/fna1A7uazWRNORrPk93XjFRl
KTDR53UGb3cSkm1n083F3nTozO8p3mS0qTlfi0+OAk1qlUMadJLR0CtS1Rv7
zpNr7WEPklHl819yk9i8p6L5dAqSUUhZ8hFjefy+dmqx0x+SkWWBpkgDduKl
J873lpORSubYbhkFClQuCi38sSMF8aSE8iZj3146L3lcOgWNxchzcihS4D4j
59obJ1NQbWgfsws2E9MmPlf9FBT92Pv3IPahDcuvrUxSkK236Ny543j/f12E
x81TkOa9trEqbAOPkvFJsxQk4Ow8JKJEgW9Fl34/vZKCZmwEesKwrzHuhfBS
UlDT9dr2VezbvNlpQRopKNnE8s1NZQp0d4zetCqZgu4YcaIP2GXJvt43t6cg
Hb3SSqBCgRz6h6J7FpORkPaF4gLsQas3hRc6k9EyWMvaeYIC7zcab/qZm4z+
U8pI8cVekdd5meaZjDKPnYmZwd7ueq744dlk5CkxHXxFlQK7w0YiYnG8xQVV
7sup4fNhOMeeHJuE/vIN3UnDZulSXc2iJKGP3AG2m9Xx+S7ck7GXIwn5/Ou8
/A1bqm1QMeZmIrq04qZPAAo8+XwgpnJbIpKZ26tTg13PNOLzpCIBfR62Vo6C
uF5xxdQ9mY9HjP6tx/5hr1srHf4SGI8CuyrEbTUo0GheTV12fzxSamIWOKlJ
gUc7dnYcUY1DkXkJv+ZP4v5Wtt9h4GwMss4A09e08H5n/n6Q2IDnpaSRkVbs
0SdWFjyq0Wgq+NjHjFMU6OVpsTdCOAqdcWwp19emQDee3IGmlnC0rvjbsUyH
ApvBt80FxGNUO3hGZuc5CqRTT/124g5AXk/iZzyxVWz5BKjNfuhf73GHU+cp
8F1GU/LacR/E/MDVtkeXAr+3KuUkMXmgDfULVn9J3E+08kPtRQxQk+3JQ9cp
FHiLWTbw1GYNFMAX9f0NdmdCF703QQhsvCF7PUIfx4ddM+Sj9EWwaZOT2UFD
CrSpvUPuV3EE3MT0ZZ2LFBhWcK5ht5AP+G9ZbXcJdvmrj1qf9H1BKDWkd7sx
BSYL5iouPvIDW+cljT9jD59QOZ7eFQB4YmyNHC9T4Ijb5aNHtIPAe7Uavo/Y
Or4LRjrGwSBylLNL+QrupzfH9bwtQ8B2pXx9VhMKtODJr0u0DwM7+seI2KsU
+Dk3/TaZFgG6fZW2rmIr5bxj1eKNBLGST/4zvUaBXFaWuUo+kWCnl5juYVNc
L623jowZR4EeUTeuUOwHB1bwbTYKxLc3vZ3H5jWqLZw6EA12Cd/QeWGGz9NW
bUb/YDToa6nYJGxOgQnctfM6yjEg0XlDiz+2dE3yDjIsBuxpyNQmLCiw7+jQ
o1mZWNz/FtkZ2EpGIzfd7seC5B1aTQLXKfCe6wYH24ZYsPfmN61h7J9ffyu7
n40DLkwtNfqWFHhXUGzdJCQOtCUUy9ZjXzQs3Z/VFgdE5KLz5Kxw//UwqNDe
GA882u4JZWKnZrdWqarFg/dWpnF8NyjQtKl64wOHeHD4n9YWf2wVFVd7lqR4
4B0v4b+EfXR3VMKbunjQc2zbmtVNfD5sjQ41j8QD6bdLzt3YmiemIpnYEkCA
Zf/46VsUKJ/6RNdhbwL4sv7KrAq7JkU5b6tsAlCIy/4kZk2BvwNLh79pJIBg
mWC9eOz+y637fp5PAN9bnBo5bPDvmxesRQ0SwInrF1XvYa8tm1XFGSaAyDXV
8nHs9VO7hzQoCWA85oDEZVsKFDjzJV0cz8NQmiO9FVv0Rm8KqZoA4pundp6w
w/l8V+4ikkgAM+YfQguwM3zvHPPkSwCnV59tELTHjqp2CPodD1KjU+8HY7tr
fDy60hsPlo76Laxhu1EO3WqtiAfn31jb2DtQoMvB6zObQ+IBzYz4+hl7eP24
7RvTePDnt7yx3m28/2foFzik4oF+1O72WuyXkyHrfctxIE+S6bS0IwVmdlnd
O/8yDjA1jbxIwx4MKiy28YoDxqZv5bY54fNgGXZW60QcYI+MFZ7DVt/yUu5W
biy4euR+vLkznmcDR2gfjGMBo8F863vs53+kGKobYsH1Zcn1sjt4XrD3+EbR
jwHV4bwuIi44n78Mvz+4EA14JVYmorDzK1hXNcOjwSuT+h6XuxQoqFDRWYHz
WeBXLjGCfT6R6YGifhS4HRbaZORKgZ/oZpTLXyPBvrpLDEU3XI+NVUfGlyKA
p9hs2Io77j8tHu1VS2Hg/auP7Nb3KFAx6urzsxOhQOJyzYNebK+5A16VvSGg
JzjAttqDAuOO08zW8oKA4ryg9v37eF5oAt+s+B+DkCCW2klsWda5T4s/8P3r
4Jj81QcUeMDJ75J4pR+Iulh+QN0L1+M9rn12Z33AxGx8QjF2ocKdzl9bHgHN
QK9t+x/i5x+1uyyV+RAkiFg+DsNWTWLy4Rd9AGZfnP37D1srTEFTONMD/A+U
Mqqa
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           
           "]]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         StyleBox["\"N\"", 12, StripOnInput -> False], TraditionalForm], 
        FormBox[
         StyleBox[
         "\"\\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(I\\), \\(h\\)] \
\\((N)\\)\\), \\(I\\)]\\)\"", 12, StripOnInput -> False], TraditionalForm]},
      AxesOrigin->{50., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"\"h=0.01\"","\"h=0.1\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox[
      StyleBox["\"N\"", 12, StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox[
      "\"\\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(I\\), \\(h\\)] \
\\((N)\\)\\), \\(I\\)]\\)\"", 12, StripOnInput -> False], TraditionalForm]},
   AxesOrigin->{50., 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
3CP3RKXwfp+3uHAkOB75e6G1p9iB8ZbXTWfiUauhgfcUNk+ddGCRXgIyZPZ8
zJCmQKaZsgBr5kQk8UfooZAMBb4vdRTNvpKImBeaXIOxl5Qrx3bSE1HPTzuH
Feyx27TlMuYkVPyd94blMQr8ohtyxU43Cfl/fna1A7uazWRNORrPk93XjFRl
KTDR53UGb3cSkm1n083F3nTozO8p3mS0qTlfi0+OAk1qlUMadJLR0CtS1Rv7
zpNr7WEPklHl819yk9i8p6L5dAqSUUhZ8hFjefy+dmqx0x+SkWWBpkgDduKl
J873lpORSubYbhkFClQuCi38sSMF8aSE8iZj3146L3lcOgWNxchzcihS4D4j
59obJ1NQbWgfsws2E9MmPlf9FBT92Pv3IPahDcuvrUxSkK236Ny543j/f12E
x81TkOa9trEqbAOPkvFJsxQk4Ow8JKJEgW9Fl34/vZKCZmwEesKwrzHuhfBS
UlDT9dr2VezbvNlpQRopKNnE8s1NZQp0d4zetCqZgu4YcaIP2GXJvt43t6cg
Hb3SSqBCgRz6h6J7FpORkPaF4gLsQas3hRc6k9EyWMvaeYIC7zcab/qZm4z+
U8pI8cVekdd5meaZjDKPnYmZwd7ueq744dlk5CkxHXxFlQK7w0YiYnG8xQVV
7sup4fNhOMeeHJuE/vIN3UnDZulSXc2iJKGP3AG2m9Xx+S7ck7GXIwn5/Ou8
/A1bqm1QMeZmIrq04qZPAAo8+XwgpnJbIpKZ26tTg13PNOLzpCIBfR62Vo6C
uF5xxdQ9mY9HjP6tx/5hr1srHf4SGI8CuyrEbTUo0GheTV12fzxSamIWOKlJ
gUc7dnYcUY1DkXkJv+ZP4v5Wtt9h4GwMss4A09e08H5n/n6Q2IDnpaSRkVbs
0SdWFjyq0Wgq+NjHjFMU6OVpsTdCOAqdcWwp19emQDee3IGmlnC0rvjbsUyH
ApvBt80FxGNUO3hGZuc5CqRTT/124g5AXk/iZzyxVWz5BKjNfuhf73GHU+cp
8F1GU/LacR/E/MDVtkeXAr+3KuUkMXmgDfULVn9J3E+08kPtRQxQk+3JQ9cp
FHiLWTbw1GYNFMAX9f0NdmdCF703QQhsvCF7PUIfx4ddM+Sj9EWwaZOT2UFD
CrSpvUPuV3EE3MT0ZZ2LFBhWcK5ht5AP+G9ZbXcJdvmrj1qf9H1BKDWkd7sx
BSYL5iouPvIDW+cljT9jD59QOZ7eFQB4YmyNHC9T4Ijb5aNHtIPAe7Uavo/Y
Or4LRjrGwSBylLNL+QrupzfH9bwtQ8B2pXx9VhMKtODJr0u0DwM7+seI2KsU
+Dk3/TaZFgG6fZW2rmIr5bxj1eKNBLGST/4zvUaBXFaWuUo+kWCnl5juYVNc
L623jowZR4EeUTeuUOwHB1bwbTYKxLc3vZ3H5jWqLZw6EA12Cd/QeWGGz9NW
bUb/YDToa6nYJGxOgQnctfM6yjEg0XlDiz+2dE3yDjIsBuxpyNQmLCiw7+jQ
o1mZWNz/FtkZ2EpGIzfd7seC5B1aTQLXKfCe6wYH24ZYsPfmN61h7J9ffyu7
n40DLkwtNfqWFHhXUGzdJCQOtCUUy9ZjXzQs3Z/VFgdE5KLz5Kxw//UwqNDe
GA882u4JZWKnZrdWqarFg/dWpnF8NyjQtKl64wOHeHD4n9YWf2wVFVd7lqR4
4B0v4b+EfXR3VMKbunjQc2zbmtVNfD5sjQ41j8QD6bdLzt3YmiemIpnYEkCA
Zf/46VsUKJ/6RNdhbwL4sv7KrAq7JkU5b6tsAlCIy/4kZk2BvwNLh79pJIBg
mWC9eOz+y637fp5PAN9bnBo5bPDvmxesRQ0SwInrF1XvYa8tm1XFGSaAyDXV
8nHs9VO7hzQoCWA85oDEZVsKFDjzJV0cz8NQmiO9FVv0Rm8KqZoA4pundp6w
w/l8V+4ikkgAM+YfQguwM3zvHPPkSwCnV59tELTHjqp2CPodD1KjU+8HY7tr
fDy60hsPlo76Laxhu1EO3WqtiAfn31jb2DtQoMvB6zObQ+IBzYz4+hl7eP24
7RvTePDnt7yx3m28/2foFzik4oF+1O72WuyXkyHrfctxIE+S6bS0IwVmdlnd
O/8yDjA1jbxIwx4MKiy28YoDxqZv5bY54fNgGXZW60QcYI+MFZ7DVt/yUu5W
biy4euR+vLkznmcDR2gfjGMBo8F863vs53+kGKobYsH1Zcn1sjt4XrD3+EbR
jwHV4bwuIi44n78Mvz+4EA14JVYmorDzK1hXNcOjwSuT+h6XuxQoqFDRWYHz
WeBXLjGCfT6R6YGifhS4HRbaZORKgZ/oZpTLXyPBvrpLDEU3XI+NVUfGlyKA
p9hs2Io77j8tHu1VS2Hg/auP7Nb3KFAx6urzsxOhQOJyzYNebK+5A16VvSGg
JzjAttqDAuOO08zW8oKA4ryg9v37eF5oAt+s+B+DkCCW2klsWda5T4s/8P3r
4Jj81QcUeMDJ75J4pR+Iulh+QN0L1+M9rn12Z33AxGx8QjF2ocKdzl9bHgHN
QK9t+x/i5x+1uyyV+RAkiFg+DsNWTWLy4Rd9AGZfnP37D1srTEFTONMD/A+U
Mqqa
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
          
          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {
        Style["N", 12], 
        Style[
        "\!\(\*FractionBox[\(\*SubscriptBox[\(I\), \(h\)] \((N)\)\), \
\(I\)]\)", 12]}, AxesOrigin -> {50., 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {"h=0.01", "h=0.1"}, LegendMarkers -> None,
        LabelStyle -> {}, LegendLayout -> "Column"]], Right Top, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.74760215586971*^9, 3.747602173309865*^9}, {
   3.747602426003057*^9, 3.747602456569367*^9}, {3.7476025224758253`*^9, 
   3.7476025559544077`*^9}, {3.7476030044288692`*^9, 3.747603052099474*^9}, 
   3.747604630784678*^9, 3.747604711195809*^9, 3.7476047629459867`*^9, {
   3.747700212201288*^9, 3.7477002197785807`*^9}, {3.747700258042165*^9, 
   3.747700287551443*^9}, {3.7477003258296747`*^9, 3.747700350469079*^9}, {
   3.747700405043117*^9, 3.747700421129189*^9}, {3.747700507847728*^9, 
   3.747700528913066*^9}, {3.7477006560893087`*^9, 3.7477006844112577`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      FractionBox["%108", 
       FractionBox["\[Lambda]", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]], "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.005"}]}], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", "0.05"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "50", ",", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<N\>\"", ",", 
      "\"\<\!\(\*FractionBox[\(I \((h = 0.05, \\\ N)\)\), \(I\)]\)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747602183349053*^9, 3.747602196060355*^9}, {
  3.7476024648359127`*^9, 3.747602467213015*^9}, {3.7476025601970253`*^9, 
  3.7476025666429567`*^9}, {3.7476029976043587`*^9, 3.747603028438171*^9}, {
  3.7476030649318132`*^9, 3.7476030692649813`*^9}, {3.7476031056155376`*^9, 
  3.747603118150978*^9}, {3.747604620957097*^9, 3.747604648082048*^9}, {
  3.7476047016341352`*^9, 3.747604706564989*^9}, {3.747604742755542*^9, 
  3.747604743914535*^9}, {3.74770017243051*^9, 3.747700172969029*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwU23c81d8fB3B7Xu69NlGoNCiySqpzRCpRMksRKqlUoiQNGnxJiYiorAqh
jDIr51OkCCF775W9yfi9f395PB+Xez+f83mf9/t1JDn7Syan2VhYWDp5WFj+
/3Vp3ZOcygN0vD81eSDRQILi2O66ebchHVvq8phtFpag+AzNXqWBs0UnnijW
iVNizmKPAo3oOPIo7+NcS3FK+u4MK8tBOv54JkfCTkickg+pc7sEfvKMIZhU
JEZtzo6wPXiIjs+PeTgf2SxGqRffqP4C7thfl1HVKEptbzpusMmYji1YWoQV
fEQpfZZV6rTDdPxjQ4GkZ4UIZb3vFXexCR3LWtdseqMnTNlb3b+pZUrHb9iy
UuwahChHp9NjCeCfpt60CxeEqCuB6xr/M6Pjt45mxzL8mdTDuqT3eyzo+PVh
7sN8FnTqs+NH869H6bh576mH8vzc1DePp8UqVnRcp+KrsHqck/r50A1Fg9W3
5P/QquGgqlK3bfA8RseGfjv+WYWyUYOznxd2WNNx8devytT0PyLt9/1Vti0d
P81l0VLh6CA33taMpZyh41CH/r/6rgtIr4gUrneE+xVV3s7RuIRo/QnPY8Di
+v9cJl+y4Mj1N/YEn6XjBsOj5pkTbJiKXxXudp6OOYQPxBc6cWO/HzwXR8Ce
rqHaFp482KR3bLejEx0/ynOurnjIizsVCgaPXqBj6q9fa1EYP+aKc8Q7L9Hx
+ACHQTR8zu/vh0UzwZ2bBPZlKjDws+7tA5ud6diNQ0Ks+SkDb1grECJ7mY7l
rbO4Zc4x8bjetGM4uPH+2kH6bybOPdW6U8iFjg/+yeG4piKEDV+n9bK7wv18
WxF9vE8IixZEfL4JXjs9rpu7Sxi3dN4LmgKP6tw8ZRAkjC+tttDuvULHwR8j
tX9uFMHbdBHD9iod++7taIi4LIJZTq7vrgPvu/S09OxHEfwkdj6g2I2OA6/t
ri3bJIqPfes8qXuNjndNzU0eOiWK13SUbPsMDglpv/YqVBQPsmYKaLjDer92
baEKRHGGXFTHO7CEifnV6GFRfFvHN0vhOh37HJw4oi0ihvXtLj+MArNqzrj5
a4hh+h0rOwkPOn5h+vSxv4kYrovW1QwCS59N19x6XgxHU0r8fDfg+W9qr3rg
KYbPtom23QVLamxNuPdYDKuyLH/8B1bjmitY9VwMz6/q87tyk44nJGXEbGLF
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
93XApouSmrrt8+S1j+fRW2C+ymqFmlSY9+st2KfAlZ3hnf6qi8Thuk6dig38
fI122bauRWJSrPTOCZx4RGnLbf8lsnOFxN0EsOg3TG1Yv0zWO7FbdoEP3mfP
p+UuE5Evw4qyJ+D8uHuGeVuWhVoWaGA5DraM34YcbVioAZvv1WFgT7ZW0Q+h
LFRNSmriHzD7JqX4g0Us1FeWF550W8h38luGlaZZqOTD/5kdAIdbHa7SkWGl
nsW6bPgPbGQqp3FvFyt1b8J66RvYtzmyve8oK3VRb/+fJXBa7ddYp0uslNVT
9YTtdgycqntKm8+TldrTs+qWG/hJi9dZ4stKqWzlN0kHt4b/6PF/yEq1zXAp
DICnl8IfFjxgpYKy2ebl7GE99kaFNt1jpXZfXyo9CjYfsb1ad42VGteajwkC
CzZvE89zYKVezU9dLQJLR7r2hBizUmafxvaznoT5V8/247QGK8Vxc0hGC1x+
lxLWFmWlMnb0jzmDG6/pPpcdZaEcFru+J4Cz7fVfrC5kocTy2sLbwElUzFeT
MBbqx+2mCxKnGNhNvkEm7yQL5Y7qdIzBJm26CtcUWaj1LFWivmAj1hvH5JqX
ST31u5+AbYM48nZaLZPtu38EKZ+GfsEVNdumtUQG2PJPnwG/bh9x//5ikTzP
z9OKAnMsrr9zcGaBLOhltgs6wP6+Qt1aE/KPkL1vtgyDG3d3ZO9wnSXOPDGc
CmfgPGFRGxAYPkNki17UW4MfxX7huZQzTe4ahNwpBW+tOKbW3TNJ9IzuVSQ7
Qn6y+/X4O8sYmRTwfNMFtlm3VbVteoS8KfO4Ln2WgdvDk+pZu4YIl7GL3EPw
WYbaca2EflJkYnf5/DmYx5Lla34OtJGDRxBzoxMD69kolsUwYtCyhHa3HTjD
3cHjpUcuSq3XzAkHd0p8KDJTKkTMY5vteC9AHryV9yh69A+qspZJ6wNrRr7U
WhvWge6vlPSWvcjADmO57vHvu5BGq8jRI+Cgb/MV5/N6UKgtjfUnmGfsgMO+
ggF09OQ/4/hLMC+NtamzSmNocOO/qk5wWswlserV4+j2+PwRWWcG9v4opb0o
PIFi78zbhoP5wtI+aTdPIvX9813V4K2Hv2hmZEyhQsa8o9Bl2A88j6bTvKfR
QNScsz9Yot/ihQz/LLp5Zm7yB/jeLa1RHmoWCSrPuXO4wPwriQ12Pj+Hoqdn
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
+m0aJWfQk0k132zwnu033SslZpDexuWoSXB5n1jATsEZNH2iOEvlBQPvVrj2
R2F+GiU8ffrbCXyq+/qZF03TyOqXbW8COHitu1FqxjSisSotd4FXP+I67Q75
I09zRkzuJQP7PZOyFTScRpedvm22Bv+WDc96zDuN1sQ+0g8HO74ziZTJm0I1
tUdsqsGQ08ebzk4hX4E1bsxIyMf0M5umaVNou+7IIyNwtu9ek6fxk2jQPfeN
H1hc6ltDv9Ykinzv/eU7mHfwaaxCwQRik5Ie2hkF+Y+KLFD/Oo4+Hurl8ACr
qttP3lAfRw7e6dKZYFvHpcbQ6DFUPLrPcHM0rDfLzbVmp0bRkx9Xk1bGQD7W
4FZP0/2L9BZxvhU4cu7UlfU/+tG0Kq0xFHy/+yf3Au5DVpGxfPRYBn7l/Cb8
tFQ3Wn3199llcIlq0u6zI02oJjHijvYrBv4wmNPy42498m07HX4NzDeTvGWj
YA0aPLDwcwQMG3ShYW0Z+ii/YX3bawb+7zZv+KnSx8jhyCSSfgPXV/JnIUru
NZEIIJZHwAvvHcJN+LPJzTnz/8rBlieCnts0FRG98rs9VBzsX6ZX/2uzBjLN
eXBpAXz6s1dVZEAzSdCWFNOKh/6+ml4XfryN0OJT9qSB23TT3l290Enymjys
h8CjFl3mVG8XcRbSv7ohAfJqscjdX5Y9pPpW0+sYcH1V4oMfYv3E90P852aw
bls6LezUANne71Il+Rber+lTXdebvyTSjJfjCbilL5Z9imWYGD+oWlEGfr5f
SjRfcoSwUVFqfIkM3J/rESksNEocFDVP3gXHmNLsuLnGSEs50yMX/MLgxpDh
hTFi7jYUOA4W0jRIf1M6RkpWFMVvTGLg8z2v9owpjBO9r6/z7MHJaxpnmNfH
yWcHr+oIcJ/tipbB/HGiRjs+WAn+c5e/6Sz3BElM28rOnwz9aNYm2VV3gshb
CkvpglcGH+6buTZBIhaGVW6AgzfzC/a+niDM2OK9H8B/7vR5qxdPEN+9cTZ/
wcy+uLia3gnCMnTn6up30B9MLmcXLk6Qa0+sHx4DOzJKp1lok2R4q9arYPBa
39NB94UmiUOzSO4vsKZxZpIpc5I03x0tZ3/PwFwpwcdceSaJ2fqSXm3ww9qg
uL8zE6SkNH7JFeyQceD2D8gbuq73RJPBbQ8ffBKhJkiuxAmlLnCsqLFE17MJ
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
5eupvhWoJ5D+Xbn95zhDJYo+/krSAvy0vlq1o74CeXx+X5IGFje6XeF4qwI9
Suc8PQlOGzUZL/pQjnRMHkQTGwikOxovxee1ypEcVzG1Cnif5L66uvoyJLCw
4eIFHr34cqGTWIbY8yXW6sFv4k47tt4pRQcfed7fAFepNO0f4C5Bn1fplU0b
CSQCkvs8gAuQfN7h9ERwXthB26dreSjfmHZnBFzPXeHLeigX2Y1R5cs2QV78
KalaQZuJaOr/UnNiAinOQlaRuT0aPX72x+g22CQm6PQtUgQa5d+uCwHP7gTJ
nzIJQimpGxZ/wW76JnnrbLbosu/3t5PN///3AzfmjfNBOA4tniS2QP+KmK35
vh2O97bmHJXAaxd/CDMqROO3D2d5asEV4gcWboUm4wtnP3usgg0fX7obLpOG
Iz9+eM/VCvsrG4fXAZ4MbKDxPiAKrK1Z+pD5dTZuo5mY6QV/eEuln2iYi7nb
R6/sa4P+LytzPHQlD4e4DodLgCc+HypJNi7Av0QGF23Blh+tTkXWF2KdtT6Z
fLDg9WM5mltFuCmvJ24GTOzld3jHUoJP338LEwf21TruiZRDpdifvVPpBrjR
asbzk2sp/jHWnuYHXrGpF7/1qRRrhrZuN4EzTX9N1wmU4VrFZo1NsJAm9b2x
J2WYg6Ipj/8N1LNqxYZbehn2rK8nNwXbxWZyJ7WW4YVndbqJYJZ41vmzw2X4
+oWashHw539nnY4PleHy+Upq2g6o35EBhwRchlnSyo1kwcl89OnNMB9c7pTW
OYKzVSdqmx+W4VnGYkIZWH35jvQHnjKs0FdgsQDe3t/Nb/auFBf65rWc6ITP
/99IZp1DKSaSclhvg5115d2vHizFDtuZT0LAhT4K77aZSvB0efrbN+CJaauB
ib9FWOZR6sm/4AevVp3lewtx9tlkx8td/+9Ho9/cPArwk9g4ngxwANPNyfKs
XDyuEeMxCT56gZMUypKDJWmj3hPeEkicdC3XtuyyMJVbWIA7OD/dt3hjLw0/
Eg2ZqQF/8bshtnI+FQ+tBV1ZBdPGtU05JSbixPt+i/rdBJL1dvPkta+RWFDJ
TUmih0B6cSZkXTPhKX5O7a7hALZuE8/0OCWDm9566FaAbSU0nl+3t0aqyj4W
fL0E0rXTrhfjK/xRBI3fkwfgGLZU2QSvMPS+298xA6x0X7BkJjISmakEBxzr
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
P9xo+h529wH6H7vrgTE=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"N\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(I \\((h = 0.05, \\\\ N)\\)\\), \\(I\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{3.877365661960596, Automatic},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{3.877365661960596, 4.639827529455642}, {-6.072917620458676, 
   5.661370719178699}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox["60", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox["70", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox["80", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox["90", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.7376696182833684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.784189633918261, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.828641396489095, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.871201010907891, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.9512437185814275`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.9889840465642745`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.02535169073515, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.060443010546419, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.127134385045092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.1588830833596715`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.189654742026425, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.219507705176107, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.276666119016055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.30406509320417, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.330733340286331, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.356708826689592, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.406719247264253, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.430816798843313, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.454347296253507, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.477336814478207, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.5217885770490405`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.543294782270004, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.564348191467836, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.584967478670572, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.624972813284271, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.6443908991413725`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.663439094112067, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.68213122712422, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.700480365792417, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.747602186057446*^9, 3.747602197992564*^9}, 
   3.747602469662711*^9, {3.7476025656885443`*^9, 3.747602569120116*^9}, {
   3.7476030013048697`*^9, 3.747603031119183*^9}, 3.747603070702059*^9, {
   3.747603108052331*^9, 3.747603120346277*^9}, {3.747604625094919*^9, 
   3.747604650653985*^9}, 3.747604708896523*^9, 3.74760474687085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "x"}], "]"}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", "\[Lambda]"}], " ", "x"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7476029432645082`*^9, 3.7476029809789963`*^9}}],

Cell[BoxData[
 FractionBox["\[Lambda]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[Lambda]", "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.74760298414428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["\[Pi]", "h"], 
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}]}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "yp"}], ",", "0"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", ">", "0"}], ",", 
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"yp", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}], "\[GreaterEqual]", " ", 
        "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.74786226487341*^9, 3.7478622983489037`*^9}, {
  3.747862408271101*^9, 3.747862427669202*^9}, {3.747862491786433*^9, 
  3.747862512803496*^9}, {3.747862573182043*^9, 3.7478625734896917`*^9}, {
  3.747862691296732*^9, 3.747862692858735*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  RowBox[{"(", 
   RowBox[{"yp", "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], 
        " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], "\[Pi]"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.747862307668495*^9, {3.7478624017767563`*^9, 3.747862420394068*^9}, 
   3.7478624548565474`*^9, {3.74786249734387*^9, 3.747862518123403*^9}, 
   3.74786270220875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["\[Pi]", "h"], 
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}]}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "yp"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"h", ">", "0"}], ",", 
       RowBox[{"yp", ">", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}], "\[GreaterEqual]", " ", 
        "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747862319216601*^9, 3.7478623245998583`*^9}, {
  3.747862527100836*^9, 3.747862575792644*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  RowBox[{"(", 
   RowBox[{"yp", "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], 
        " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], "\[Pi]"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7478625351968517`*^9, 3.747862578581059*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "I"}], " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["\[Pi]", "h"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", 
          RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}]}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "yp", ",", "0"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", ">", "0"}], ",", 
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"yp", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}], "\[GreaterEqual]", " ", 
        "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747862586253811*^9, 3.747862611552582*^9}, {
  3.747862647331401*^9, 3.747862651183167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "yp"}], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], 
        " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], "\[Pi]"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.74786259198759*^9, 3.747862655618785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "I"}], " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["\[Pi]", "h"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "x"}], "+", 
          RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}]}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", 
      RowBox[{"-", "yp"}]}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", ">", "0"}], ",", 
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"yp", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}], "\[GreaterEqual]", " ", 
        "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747862666978798*^9, 3.747862683412383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "yp"}], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], 
        " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], "\[Pi]"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.747862700052985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"%10", "+", "%12", "+", "%14", "+", "%15"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"yp", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"x", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7478627073482103`*^9, 3.7478627313874903`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "yp"}], "-", 
   RowBox[{"2", " ", "h", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], " ", 
      
      RowBox[{"Sec", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], "-", 
   RowBox[{"2", " ", "h", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], " ", 
      
      RowBox[{"Sec", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}]}], 
  "\[Pi]"]], "Output",
 CellChangeTimes->{3.747862732733945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"%16", "/.", 
      RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
     RowBox[{"yp", "\[Rule]", " ", "0.01"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "9", ",", "9.02"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747862742359652*^9, 3.747862827051488*^9}, {
  3.7478628675213327`*^9, 3.7478629353531723`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxF23c81d//AHAjskllZMsKlVCk8kJEQoPsUIkoskJki4rKKKtSlPW+w73X
LpRRiD4RGsquNIiWyur7ev/++f1Vz8f73jPe53Ve5xwHhSOnDhzjYGNjO8/J
xkb+eyUO/8OmaJTC56W+/G8ZGNX3PyV944ZHMenvsyXX2dG/dS3W8KLvbIrw
4UAL98gk8aPtTlrpcaL3io9/EkJzl8hyLUPLO+SZrUTXjM48J/3q/K5cCfRx
6ZbbXOgp6y/vZNFrHK75c6OfzaSqqaC70r23L0cLHdPy3ICO6trKx4MG8zfZ
eugNywVekV4/mNlijB4xHiriRf9ZfXjCCp1xlhHMh+6+YMnphN5ZE2/Mj9aI
cBT3Qhdrqg4KoCVUuNUS0I7efwlB9IuKOqVMNG9hZ7gQ+tOROsm76JPiAatE
0J4ruybb0TIHTMZIn9H98+Qt+r/UVYwV6APVhQXf0Js46vasJNvjQ9WXnSuD
se0pkqvQ6fzqfzejr4YdmiCd8fUIywY9O8meIIauIyyFE9D1Ly3vSaJP3P8Z
8hvtLypzfg2aP8pyUWy+DOSspw9KobWMf0XroeObM79Jk5/3veMfibagvVWT
R19ZPs8uvFAGcxP0WdIVv1MdtqApinGtCmjpHP0SN7RQjrLHWrSKqNVmFro3
3j9bBW0xnyl8bLEMEhuMjqmiXVplt15Fb/kjqqOGfr+54lArOsev5r916JGl
qBzVpTJwc2TjXo8uEvF89Rf9eX1GiA666dN8wVM2AuZPVtrqotP6k8dXsBMg
QH2hvRn9+OF3Gwf0enWpb1vQ1xfN775HB6jc9TNAN5502CvCScBv2WovY/L9
KZ4dvMlFAI/bKzMTNPEs6fVPtMTNOaWdaJk/JzituQkwkIJxU/SbYxOjbMsJ
iBZvd7dAd7583BPKQ8AykQHHvWj3zIKm6/wErN67oLePrP+exwMuAQJULsuK
70ebnvo9HYA2FzjafwDtLyj8xVKQgIs8k/vt0aJ6bw4IChMgwr5keQitmM+7
vUuUAJnvCjtOkPFmJ2m+WYoAra4IwZPogk1/auvRJsW9g6RvnO83NpMm4Ljz
uWh/9Pbb8nlOMgSwmj8+CEQPtO0IuCJHgEVmuUk4+uKHemEtJQKCdHdYnCPf
xyfNLRYbCEgUypJIIuN3TeShH+jsj18/kvbs0yNubSSg/sbtC+dJOwpUz2sR
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
S1NpM9qn8L2CjCjGs1VZcgv6zozC28IVBExuT/dqRet7bX+6Dn1S9rDSY/TG
iTMHtomgR9lud6BnKu2HTgqhvY2yu9GpIeJlvPzYvh9u3j1kfDk4B5TxYX+j
o/Sek+2fzTC2RAdn3XvZi/6ztp/tCi8BEY90JV6in291+KLEQ8CFtetyB9Fq
03T9eC4CLMvNfYbI9ihzxGmjBbZ5bR1G/2X3fDa+jIC0A3dej6ClqkOidqNz
4mTWvEPLHXojocBJQPHwiuuf0WGp9XLs7Dj+J7ROfEH/mDrGaGIjQP23zbZJ
9K7KPzsT0DSh1DdTaJs59WBedOUObulvaFERuSmFf2UQ2qE0SXpe8kTa56Uy
0D+4s/47WX+K3eZK9P2Tsa4/0f+8vBMs0c3X5278Jt8fLUUzgbwfUJX0+4NW
uVD/yha9q0Jvx1/yObvfOWV0x5OQwTn0qbDO4c6FMuj++1Vmieyvusw1JXTG
OcGvpC9nvzNenC8DuxWajf/Qn89s+/oC/UrNx42dC/PvP02zS+hhh/H8ZWhd
SddPXOjmgi++XGgdg0X1ibkyuPvlxxZutNCV+MMdaN+YZc+Wo5cCPlPT0NYd
Atd50L8+FTedRmutXO3Ni1b0n3/iQt7HFCv/40OfT1a9r45+PbO+kx+9R2uo
YCV5P2OwJVsAfYT/y9nFv2UQ99+ujULoi+ldwn1oT4m986TXhpxre4jedcSh
TRj97bdrMB0tMOvtvgLN6a5XkoqehgANUXRU3tqNUejnF8J/k5ZRZaf4o6t6
Y1tWokMsH685jM6RuXBlFbphyifaDh3pne6yGv3m5ni/BdqNmasqhl6VoqFg
SN7nzRf8IO15wcBDF73WjHggjv4qzJepQd7XXWGlSKD9t16tW4v++OqegyR6
uqW3Vxrdqdiydg26WqR1VAxNP9k5TdpG6fD4CnR6de99KfSV4pJXgugQtrfJ
0uiYsatNfGgHy3e2Mmjrxyr5PGiDq5NysmiPcRd/8n5RZujnF9Jm/jrapNnU
Fmvk0CxD2ifSY4FcifLoc886rpL3j4/uC+5TQD8xvKgjgC7lEpNWRFdZzzwS
Rl/cK/uR9C2PpT2r0H65KpVr0eoxNY8k0fvGN8QqoTXt5HTk0Trr9ayU0eXr
Da6qosXCQEIFLbgo8Gkj+u9D83ekp+xvbtqKfsu3j6GKdgr+5rcT/cDO8awa
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
8H+qWfS1
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{9., 0.05},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747862791637742*^9, 3.747862827796433*^9}, {
  3.7478628804844646`*^9, 3.747862936073556*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "yp"}], "-", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], 
        " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], "-", 
     RowBox[{"2", " ", "h", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"\[ImaginaryI]", " ", "yp"}]}], ")"}]}], "h"], "]"}], 
        " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}]}], "\[Pi]"], 
   ",", " ", 
   RowBox[{"yp", "\[Rule]", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747863065392866*^9, 3.747863071394031*^9}, {
  3.7480072905517597`*^9, 3.748007293693179*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "-", 
   RowBox[{"6", " ", "h", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "x"}]}], ")"}]}], 
          RowBox[{"3", " ", "h"}]], "]"}], " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}], "+", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "+", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "x"}]}], ")"}]}], 
          RowBox[{"3", " ", "h"}]], "]"}], " ", 
        RowBox[{"Sec", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", "x"}], "h"], "]"}]}], "]"}]}], ")"}]}]}], 
  RowBox[{"3", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.747863072340691*^9, 3.7480073043658953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"%1", "/.", 
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"9", " ", "\[Pi]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748007304287738*^9, 3.748007396985243*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJw9kn1MzHEcx49yXcbv97tfu6JaevKwRauULXKfrTmkmpRVGqKmq0ZFD3Nc
1lHsTo5KD3QetjI90kUdSfuUlIeU5fj+5CF6xOpKjY7D5B9/vPf+57X3Xn+8
nWKSQ/fN5fF4HrP511WFzHmrKAILDSZtZJE1Ko62+Mp2E2iYXnCkUMqid2ax
cSCWAL/pLNdkK8RPx1J0QQkE7Eu/bfOLZ1CTFZDRmETANfYdq5ukMeS4s49j
GgFpntJibC+N5tmmaaWMQGBoMz+WolGXo6+fPkag0kcavHGMwsRTtQd3ZRNQ
Pfa6Z2Gk0EF50qNTSWCJdA2LXjTaGkM0ejUBvWDIe+sFGkVSO8FAAYGwnvI6
rT2DzKvh1IkSAq/e+BoDChlcIKnr/3WJgDwlIPxGqBAFt48Ezi8jMOe+Kca3
kUVzF4nOpmJ2f0hnVpxrjbx82mVpLYG+1kg/yy0smnh9aq96AsxUo8DdUYjf
k8t/go5A1NSwQ0sGg1Pvk+KCmwk8a9kjVwkYNAT79ka1EvBE/4yRTBq/NJuJ
4zsIlBrmRds40jji1l2Z/pTAC75118w4hR8vlohOPCeQGLou02aQwreWsYpz
Lwkc2ieW5/yhkDu8avxSH4Ezix9LZf406kdnIqv7CezUdhvtG2jsCW9rvzNE
IE28fCLPk8EnD3M9Oj4T0Mium6luMdjhHaF5YSAQHPB+hq8QYluZk+Dj9Ky/
v+qG2soKW9ixVIORQJd5ULqzRIRNisZ+028Cz6vdHHpWsNgwmRVoacZBeOba
URcrIdZFB+qsBRyILgxGrElhsKZb5OK6kINr0TNhd80ZrFj/Qe3JcrDOOdkr
6jCN5TVVP8U2HMwPuf61wpbGq3bpcUH2HNSjA3/lKIWlKujd4cRB181lvbmv
KSz6YSmWLuOgs2Z7eN0khfnx+so0Nw78JmVBEe40qsll0XEPDtZvitPWF9Oo
3JigOOvDQUznAaXWjsHshtXjmrUcHHrQNJ6Ux2CW65/IKpjlSyWpVyRClBc8
atdt4GDitLxgUQ6L+3diWMpm7v/f/wIzJ3st
      "]], LineBox[CompressedData["
1:eJw9Vms0VVsbVrskZa212YQQttxDKbmcvApdUKhcK9JGTuWgHJVUpI9UlCSX
qIQkqdPlRKV6sxUdlaicdSFOyqVIR1IhvvX9+X7MMcc7xjvfOcbzPPOZj86m
iNUhE2VkZAr49b/9n7vrJEauNCh8Grnme0oFo6M25DWtokHnsH7Dt4eKGNFu
INe+hoa+j/4JBsFC3OI+sKPPlwav/ntfDYspDL1f1Ta8gYbPkS45C4wo3DQn
2VVOQsOpikfqiaUkBuR5ViiH0RDZ8F5baE2i/zQNsTichlxb15WRAwR6xXam
WWynoeGR+uOqJgI9ev4YXrSThsf9cfMPNRPo5rsn1DWOhtaX1mPTxwhcXuvc
5JtAg3ZT4FF7NxKdrCj70CQa9l/OrXtYS6JDMVu64wgNu2RCpH/ZU2gnKlZO
OE6DX0zjO+0aCq0SIxLSMmnA9+HH32UIcd6ATd/pXBpYpT76io4SmgVN8is9
S8PEhd7r27qU0fjF85pbRTSc0VNvXRmoiPqQY1FTSsNQy3DaKmsh6lyR5DVe
oUHt79H+q0co1NA0k2u7QUOK56bV1aoUqh79vqO3koZKhWclggwSRSPVbT/u
0XBj+1W1MQMSqS2prlOkNMifTQpa20ngdManQlRHwwTjawOv6gicslxXrPuM
hiRGZvOGZwS+e7G25HQTDc80g0zIHwSiX7KJMk3DQsWszxUeJOa/vX01rZWG
lfnZwfUtJMZu7bWU66BhkVQr3caHQu9BrcqEbhrMpi1rPfiVQsu9nr+M9NEw
X9nVfd2oECnZgxj9hQaZ0lndBrEi7E275fTpOw0W58ubS88qYd2MnrrNYzyf
kycpjVYIsfjczJX/CBgIPtly734DhQeMVjX6T2UgLiU1bjpQGHA93usVwUDX
/KGO0bsk2trdYFaKGPgam+HeZUPijJr3G2rVGHAvPJ05oYfAQTfVtw6zGBje
/H3DPw8JfPHaJfSOHgORqx488eLrywF7P1gaMxDTaaa2tIvAlK6rv5Wb8/N7
toeVWJEYGvl2QH8BA8Sp2ofxt0hc8kO085wtA7pKCXLbbCnUOrBsRM2BgXqp
+q6QWgpH5GP3Zzgz8LaodPHcC0KkMy4LFFwZOPBe1sIzSAlvarQlJ3kwUFvU
anYZlPF4sXC6jDcDJXp7t5nbKmK4mdPx3esYyAj30QrREKJLRYzoy0YGjPbm
/Ht6O4X6DqXZ20IZUHWvv5kygcKJTziNzq0MvL7upZQVRmKbJ1EQGMWA3aX5
RdcmkljFOsxmYng82/c036klMFuyo3R1HANDz4OrP18nMLq3eM7TBAaksnvS
H1QT6Pk7fc05mYE/sz4mOnwn0GxM3urBUQYy7c08jvmQKJ+86I71CX5+rEq2
ZQ+JnWSk/fUsBurCwrZ8CKBQmn2+2iSfAY/b6vneoxSe03m9tPg8A78eSbFR
HxFi3KUp9VoXGQi83Vv5aq4IfS1t3bPLGfiRJ/sw30aEC6q2vRTeYODQa8dG
z3EhKjqf9TlSyUBK3yQVepzCT88auUn3GTB4YBP3OIjCeu9JG/dJGbA580S8
sI/Ei21W777VMTD138Gk5X4kHgz7NSzqOd9/4NyJb0MEBv17uvfDSwb2+KiE
pt8j0D72eWQww8CSc7LOdy4SqC6Y8LX1DQNUnsR58BaB345Y7vZ5x/OvsfSs
Ka+nV6LQny96GGhZ+/v08SUk/pGfneDSzwCyB5Ja6klM1a+fXDPIQEVG8Pmx
5RRuufozZdEwAz05hjm6DIVLrS2IinEGBs/Gzg66LUTdh5tOWExmQabvUXrn
FiUcX5Gpckmehdxs1droL8rY0lSbK6ZYSG+mxp/uVsTKdcNa+cosvD+9uu3R
MiGefGdaqDKThU0bDyyrP0FhVHigwXFtFgTvfgtzVKNw1VB62VR9Fl6sUHeX
SyHReH+NeaIJC+FW/tsiRSQe8Asx77Dgzx/KlKjUE8hYypo7WrHQ5GGTRxQT
aEGUmBXasTD+01at+SyBh7qXmQkWszC5tpgh7hLYXt09R7KUrzcWdoXwelmY
nzJH6spCMDcQP3k9iWk7jeeIPVmwW7t9Ksfz0+lZb5rozcKdIz+61/J6sTfd
ZtqxjgUL6uKTGV8ozJRVMHUM4udtd+KAEWJve7lJYSgLV0Ux4WWnlNDp7ioT
wTYWfm9+LwiapIJ5mf3GkigWRvetsJ95UhEHI44bS2NY+Phm0ZHZgUJ0c5lr
LI5j4XR6Z6xCCYWFek1GiQks+BxWNHcypnB4bLtRRxILreUDc4cKSVzNKBk5
HmUhYt0mrUjeTy/duGlYmM6CV7nXreGXBE5M8zIUZLHgXqXjlV5IoH/YkIEk
j4WkPyf/0Mwg8NqSLANpAQsBJ/sEZwoIlNO0NhCXsJA4bHehvYHAjd9o/cTL
LMzwndFcqU1iZeNu/Y5rLGCE6ef7OSSSl9X1HStYOLh8auoxXf4/TLo7u7CK
53/Za/nRXArvb1w/W1DNgqHJjyI/FyGq2P3Uk9SyQOQrf7HbzPuH8hk96VMW
jI6dW6BNKmNNv72euInHc3HZNIX5ItT4q02c+DcLLVHzn83VVcToonhxRwsL
Ux7r2DwSC7F+n47Y8S0Lpo4FB18kUKjrV61b2MXCl9Knw18pCmMtJbqCPhbM
n0cv1oknsUlhkq5kgIWBVx15sQokGnUX6Ui/sVD/87BJKxIYX+2sI/7Jwgcn
4cUFmQTSeZ3aiRM5mDN+blNvMq+vncnaHVM4GJcf3GeXTWCyp6G2owIH8fqT
u8cfE/jG5MmsQkUOwqPVMj+qkGglu2WWQJWDwV0l5ZapvL7a5WdJNDmYuf8T
eYLX+/s7ZVpSXQ5OuUWV9hyl8JdMNy2xIQcD4XWLhfP49xLRp5k4hwPlUSc5
tQWK2LsiTbNjHgcdH2KW5bqL0FHPXNPRmoNDL1bqpc1TxtyxBo3CRRys3cEu
9I5XxAE6UkPgyIF/Vr9DYwDvzzeEGpLlHCy5usuloYzCgtTrM6UrOeAvlvto
TuH3zWtmitdw4PxIU82mnESPJYPqib4cKC354ORoyvuVRqZ6xwYOpnuQVVF8
XhkfWqDuKOHg/LFA1ec5BHo3NqsVhnEQOlfpD2I/gVfKdqoJfuPg0s2oPQ/i
CZRNUlWT7ODAI8PpVN8ZAgM23laV7uJAJ3O2nhFH4C1bf1XxPg4yWj67vOHz
koLyyIzERA58G3S2Wt4n8fL61JqkQxyU/UqPtlhS6FY0K+pwKgeGo9Nub71A
Ye/Ha5ppJziAkP/cW7NUiEctnf5Kz+JgpOHbjr+tFdF0T3NMZh6Pl1im5YKs
CMvFZV4eBdz/899/Adas3hg=
      "]], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAq8GZCHR/3D8N7vuxWJYWwNhZH3k+
g9w/aLq54JUyFMB4obElQojcP31Ln4K1YRLAGOlD0kWN3D9UMr0jBWoRwLcw
1n5Jktw/qeFs2ATFEMBWeGgrTZfcP106r61ZTRDA9r/611Cc3D+nFqDMjeYP
wJYHjYRUodw/vG2oEXxdD8A1Tx8xWKbcP1dacYdI9g7A1Jax3Vur3D/CZm1a
WqsOwHTeQ4pfsNw/SUVhcTh5DsAUJtY2Y7XcP86iQsDMXQ7As21o42a63D8k
3UARBFgOwFK1+o9qv9w/47U4QaFnDsDy/Iw8bsTcP//zim8zjQ7Acl6HAd7J
3D8wfM7DcdAOwPO/gcZNz9w/2//Nho8yD8B0IXyLvdTcP5HL0oY0uQ/A9IJ2
UC3a3D/fC6wC9DYQwHTkcBWd39w/p3rT1sqwEMD1RWvaDOXcPxKD+1/dWhHA
dqdln3zq3D8mN1qppF0SwPYIYGTs79w/REdznkZRFMAg3FknCvXcPw3u+7FY
lhbA543FsA==
      "]], LineBox[CompressedData["
1:eJw9k39Q03Ucxhc3j9ri8/2uMY4AOYcoOggIGQl6vomFiBB3CAFKKO0kgpZA
d4GiHIaCvziQo3Qgl21Cl93AI360iNU7vSCLOnQ72V18391sCsrpZEHeDYHW
P/3x3PP383rdo9RW7CnxEYlE8d7817szfcfOzQng93ipv+BCADa78luqXAL0
f5mRO3BYji9m78lxLAiwGLdcY5O+hM1fZwZmewToGrOc/TNWhn7+aQKuCuAI
ItNFPY8tH71ujF1DsDdyIMQewSOb2lb6uYTAXhVrVndz2LI1IYrnCZQ6gz1Z
ySHXGTtfryDYNxG+dfp7hueXVMOuIIKXh/K54MMM+aINRw+sI3h/29DOh+kM
7ZGyRx9uIEg8rQnP28LQ4Hm2v0lF4Hh4Nd4Ww7D85uxkRwxBrWExSQMM4/S2
lN54gtO3CgOCtAw97+IgJhLsTro4Vd3B8IbatNG2g0DRFvpL6gzDZrFeP6Mh
eFDxpqE5i8Nc6wnJ0i4CTatTvGjlMMRYcYxlERx6bpO4HHi8V1n4WJlDoLKs
Kq708tgHacXqAoLiW6u1TSDDarbl9q4igiin5WSDl98OIfSNt7UE7gbn0kKm
HH1NkuGKUoJjPuoeXWQATtb+E3FCR1Dy2it199sUqE+/23GhiuDaJ6rKMyFy
LA78XfpVNcH6v2cPffZEhptnvq2zHCXIWq48IomWoXuoxzV5nGD83gPnfgOP
Iyfb3nE2EqypzJYWJvDYkFNnfXqWQH7K7DP3E4cZYWWp0vMEhaZfx3w1HPrP
534T+ilBYGKNY63AcPqH5M1xnd79o9KMkVaG3S1Rl1IvE4QV84PufIYfFAX6
7e0m8ChWEp1eHwlR4nrdVa/P9walujCGKx7Xk/o+givBP66I1jMcu/mHtn2A
4OmpiEajmmGrftz2hZmg3Plznn0fw4LSgZ0jFgLRqLHvejvDdQmXzb9dJ2hc
GaqBuwxnxedUjnGCyfAbJTHpHPZbq7sWJgheCFH0uyc4rDVq2fO3Cc74Kf/a
lMRjSlXW8eApAvN35t6IHh4lyUnu6GmCziPbw9a+KkMr23gwxeHlPRrdHj8v
wy5Bduet+wRlj7Z/fM1fjgdNy2llcwTpl5pGhwsU+OzAHU2ei/7/y78zY5fB

      "]], LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAyRUQ0Qnx3j8N7vuxWJYWwPVJ1SuQ
9d4/Oy1thESaE8C+GMGdo/reP1RfpfhEQRLAhuesD7f/3j/Wx18IxmkRwE62
mIHKBN8/kJ0hTTjQEMAXhYTz3QnfP320haXzWxDA4FNwZfEO3z9yOB4xNQEQ
wKgiXNcEFN8/atXGG/xyD8Bw8UdJGBnfP4jw44fBAQ/AOcAzuyse3z/NYkNw
s6kOwAKPHy0/I98/QeP9kn9nDsDKXQufUijfP0j9cS3xOA7Akiz3EGYt3z8o
y3S4nBwOwFv74oJ5Mt8/XlazcbARDsAkys70jDffP6K4uU/bFw7A7Ji6ZqA8
3z9X9MGrQy8OwLRnptizQd8/508MSYtYDsB9NpJKx0bfPz0d5a7hlA7ARgV+
vNpL3z/9IjGCKeYOwA7UaS7uUN8/MfSIcjtPD8DWolWgAVbfP1LVK91c1A/A
n3FBEhVb3z976QQRDT4QwGhALYQoYN8/Extm7HqoEMAwDxn2O2XfPwOvl7mN
MhHAdC9z4zVq3z+0q93mlekRwLdPzdAvb98/iBWJsNL2EsD6bye+KXTfP4Zm
gpJ+4BTAZ+p5kP913z8N7vuxWJYWwBZa22s=
      "]], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAsP4kvIxO4D8N7vuxWJYWwOZ/o69e
T+A/PZAtWzVvFcAIkFCm21HgPxh02eWNVRPAGq0xqY5U4D8SY9Fu2SESwCzK
EqxBV+A/sBrWBopWEcA+5/Ou9FngPx0XfRu3wRDAUQTVsadc4D84HL2+JU8Q
wGQhtrRaX+A/03oD2EfpD8B2Ppe3DWLgPwxeSJe6WA/AiFt4usBk4D8h/TpQ
auUOwJp4Wb1zZ+A/pwHTPaCKDsCslTrAJmrgP2RfVl4xRQ7AvrIbw9ls4D92
SlOv+BIOwNDP/MWMb+A/Mj+kA4vyDcDi7N3IP3LgP9/UvukK4w3A9Am/y/J0
4D8DTC0tEOQNwAYnoM6ld+A/fNdD25z1DcAYRIHRWHrgP7SQx0IdGA7AK2Fi
1At94D84OJbockwOwD5+Q9e+f+A/HD4R6gyUDsBQmyTacYLgP1DA5ccT8Q7A
YrgF3SSF4D+ttkvNtGYPwHTV5t/Xh+A/QLnm/6X5D8CG8sfiiorgP32GJD6M
WBDAmA+p5T2N4D+kEe+GTMwQwKosiujwj+A/IexFHhxiEcC8SWvro5LgPwro
TfOuLRLAzmZM7laV4D9jLZNTvV4TwOCDLfEJmOA/io69fbCrFcBe0y7YDZng
Pw3u+7FYlhbA8m3yGg==
      "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAroGGxQnr4D8N7vuxWJYWwBYJcEq3
6+A/gOPQcPhjFcAoJlFNau7gPz1/WgY4UhPAOkMyUB3x4D9qcyGAXC8SwExg
E1PQ8+A/71YYCxlpEcBeffRVg/bgPypTKthP1RDAcJrVWDb54D8gD8yK8WEQ
wIK3tlvp++A/CFJLX5gFEMCV1JdenP7gP7h2n6mMdQ/ATKjxNyEB4T+zOh0c
YQMPwAJ8SxGmA+E/GwWnCemlDsC4T6XqKgbhPy6AffR9Wg7AbiP/w68I4T+T
H6BCPB8OwCT3WJ00C+E/CSiHdsvyDcDayrJ2uQ3hP7Dz85071A3AkJ4MUD4Q
4T/iwA3B78INwEZyZinDEuE/76qE3pC+DcD8RcACSBXhP6QLyQsHxw3Ashka
3MwX4T867geKd9wNwGjtc7VRGuE/vgbKfEf/DcAfwc2O1hzhP1d2mLIjMA7A
1pQnaFsf4T+aNiHUDnAOwIxogUHgIeE/vxZTm3jADsBCPNsaZSThP2FqhOZi
Iw/A+A819Okm4T+XfQ6SnZsPwK7jjs1uKeE/v2lmHZUWEMBkt+im8yvhP3jI
7nj1bhDAGotCgHgu4T80+Y7adNsQwNFenFn9MOE/j6Z90nxjEcCIMvYygjPh
P05kkwZvFBLAPgZQDAc24T/2RlSKYgoTwPTZqeWLOOE/QP/dBdmSFMDUbZqs
2jnhPw3u+7FYlhbA8/n92g==
      "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAj4/9yEuT4T8N7vuxWJYWwEpzpU+/
leE/450oyQQdFMAAR/8oRJjhP9R2TVHC0RLAthpZAsma4T9/2OS8gfQRwGzu
sttNneE/N4D6SltQEcAjwgy10p/hPwj0h967zxDAyqKamo2i4T+qeGOo4l8Q
wHCDKIBIpeE/ssjwJBkFEMAXZLZlA6jhPzo/GUcudQ/AvkRES76q4T/mHnES
ifoOwGQl0jB5reE/jsbh8hCWDsALBmAWNLDhP7g7wWvXRA7Asubt++6y4T8F
p8zzxgQOwFjHe+GpteE/zOy9gmPUDcD/pwnHZLjhP9wWqnCjsg3ApoiXrB+7
4T9u14AS154NwExpJZLaveE/QXv16ZmYDcDzSbN3lcDhPwJSJZzKnw3AmipB
XVDD4T/XuwxHiLQNwEALz0ILxuE/STe3wTTXDcDn61woxsjhPxQcPiR8CA7A
jszqDYHL4T8KBM7gYkkOwDStePM7zuE/qhRKCF2bDsDbjQbZ9tDhP2IWVohz
AA/Agm6UvrHT4T/5VV9AgHsPwChPIqRs1uE/aaP09EgIEMDPL7CJJ9nhPyHr
4THNYhDAdhA+b+Lb4T/ubfvT2dEQwBzxy1Sd3uE/uHIMddtcEcDD0Vk6WOHh
P0NPlMgdERLAarLnHxPk4T9Wxz/eKwoTwBCTdQXO5uE/5ErjyQqSFMCy5uy2
U+jhPw3u+7FYlhbAxhUQuQ==
      "]], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAqVn//2ZJ4j8N7vuxWJYWwCcL9zLR
S+I/b85zXh8/FMDO64QYjE7iPxrHb2Zp5hLAMvXJOzpR4j+7azWexgMSwJb+
Dl/oU+I/vWLSw+laEcD6B1SCllbiPybP5iUz1hDAXxGZpURZ4j8rC+iIl2oQ
wMQa3sjyW+I/GnQBRLIREMAoJCPsoF7iPypsy6f7jg/AjC1oD09h4j8DYJKH
lxIPwPA2rTL9Y+I/LxqgrH2qDsBUQPJVq2biPzH+sKsCVA7AuEk3eVlp4j+w
a7nHMw0OwBxTfJwHbOI/wOQj2qHUDcCAXMG/tW7iP6GsyIs/qQ3A5GUG42Nx
4j/m/9BjS4oNwEhvSwYSdOI/lkWGfEF3DcCseJApwHbiP0HlXnXSbw3AEYLV
TG554j/0XCNA3nMNwHaLGnAcfOI/qUZKC3KDDcDalF+Tyn7iP89Iq//Ing3A
Pp6ktniB4j8ZT8DpT8YNwKKn6dkmhOI/VotWTqz6DcAGsS791IbiP6IvV/HH
PA7AarpzIIOJ4j9MQNGg4o0OwM7DuEMxjOI/sLBoaa3vDsAyzf1m347iP/n8
ZLd0ZA/AltZCio2R4j+n1gdpY+8PwPrfh607lOI/iV71/nhKEMBe6czQ6Zbi
P1V+JI7UrRDAw/IR9JeZ4j+3QzVrxyYRwCj8VhdGnOI/VVUwSIy9EcCMBZw6
9J7iPw3k1BcNgRLA8A7hXaKh4j8Dc0Ba15ATwFQYJoFQpOI/BStfB3RFFcBB
+QXcF6XiPw3u+7FYlhbAU0oguQ==
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAh3s4/xKq4j8N7vuxWJYWwIA09epa
rOI/Ct70mL9mFMDkPToOCa/iPz3YtAVODxPASEd/Mbex4j+nl8AXvicSwKxQ
xFRltOI/cF7W9OF6EcAQWgl4E7fiP0G4ykK08hDAdWNOm8G54j+hSg6b84MQ
wNpsk75vvOI/q+aijRooEMA+dtjhHb/iP26QkoUbtg/Aon8dBczB4j9ralAI
HjQPwAaJYih6xOI/zviAsWnGDsBqkqdLKMfiP/7UFrs+ag7AzpvsbtbJ4j+d
GApRmB0OwDKlMZKEzOI/VLSDMvbeDcCWrna1Ms/iPyFJqe45rQ3A+re72ODR
4j8xXUAYkIcNwF7BAPyO1OI/LcZOI2FtDcDCykUfPdfiP6KsCmxHXg3AJ9SK
QuvZ4j/VJ2zsCFoNwIzdz2WZ3OI/travxJNgDcDw5hSJR9/iPwN/LyT9cQ3A
VPBZrPXh4j/16uZugo4NwLj5ns+j5OI/3WX4woy2DcAcA+TyUefiP12JJlC3
6g3AgAwpFgDq4j8LE3Vb2SsOwOQVbjmu7OI/Xi5eZhV7DsBIH7NcXO/iP3QZ
TPPv2Q7ArCj4fwry4j+DVyMlckoPwBAyPaO49OI/GzZ6vV/PD8B0O4LGZvfi
P1ISbDZHNhDA2UTH6RT64j87Tdf6vJMQwOIEheOU/OI/d+9qe+L7EMDqxELd
FP/iPwVcEGaheRHA8oQA15QB4z9hcu94YRUSwPpEvtAUBOM/SFyuuFneEsAC
BXzKlAbjPzds21qz9BPACsU5xBQJ4z97Nfwqk7IVwDdDul+QCeM/De77sViW
FsA3jzQ+
      "]], LineBox[CompressedData["
1:eJxFkltIkwEYhtVIjfy3f/uXht5YXgl2okQo4ROqqSl4pKYQHnIoDkmyMnWu
PM2FU9RNxQOVZYniOXOtUr9yLrM8hHNUZh4+Z5LHqIRULLvq4uW9eC7e5+I9
EHs5VGpjZWXlvpN/fW1YKPudSsCsbLZLyh0xXalt1KQRdHnJHjd8F2GOOLSO
kxMcHOgSlZdyqLZl72gUBGWWSHPYAyFqjUMVXBZBbWlwgseqAGuUBSWaHAKH
+FNjm1ECrBP7F3BKAv7tY7mSbyw22drlaVQEIzNmtjqfxU6jQcEVEPRKpvPU
x1l8ocy+oSnc8QmZlLSa+WgQ+1zhigkc7QP3bkfw8Z3ttkxTSmBQ7X7pusJD
k/G5lCvb4SZ5/moxDz8r06I0FQTBiooFow8PLWKvCK6KYHius//SFoNfOPeo
NzUESSklP6U9DJqnnaU37xLE1hsS3NQMjjQ7yDzvE+j1HfqZOAYH0reTF+sI
ZBIXayc/BtF37XptPUGLRTEf48mgXjQrv9BIEGMwSXI9GOyYGctmmglMG7rw
6EMMNrb0q/paCcSqTxHrXgw+yNAVpXUQOGVWxkkDGazxa9AeeUJwPlGSuJTI
oHZfdZVFR5DV039rWcNg4az6XvUzguwVtz0/XjOobFU8CukmaBCcyNDZ8VAh
T26yQwIb+8Xho+E8TPWP7eh+RaBqU7vVtvAw2TH8aUo/wdLSruDW/XxMoLM9
7gMElr5US4GWjzFtXoapQQJn69CwMiGLkZnug2VDO3ssvyEonsXQcy6jAaME
65PR6otvWQxwYszWYwQLlQ/rRacFeGZue0I3TjDkWuQdNC5A7/a1maQPBBP+
+vX3hUL0VMx+dZsg2Ggq983I4fBwgGn54yTBSemvq/NLIuRv/elVT/3/31/J
7FfP
      "]], LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAsA77C7Pl4z8N7vuxWJYWwBiyqf/7
5eM/iTEqXbAKFsAQf5sFsujjP8KwID3YLhTACUyNC2jr4z8m6gtMdwgTwAIZ
fxEe7uM/F/vT7KM0EsD65XAX1PDjP1GSosqrkBHA8rJiHYrz4z8Pt4f8RwwR
wOt/VCNA9uM/+tjKO4aeEMDkTEYp9vjjP3tWT7n1QRDA3Bk4L6z74z9ULo2c
E+YPwNXmKTVi/uM/BvZFDqVeD8DOsxs7GAHkP4m54FMl6g7AxoANQc4D5D/B
5qVTBoYOwL9N/0aEBuQ/xTTKFV0wDsC4GvFMOgnkP0idP3az5w3AsOfiUvAL
5D+ORWvL6aoNwKm01FimDuQ/QEgJcyJ5DcCigcZeXBHkP5O678OzUQ3Amk64
ZBIU5D94uQ5KHjQNwJMbqmrIFuQ/GnZTAAYgDcCM6JtwfhnkP+D8GLgtFQ3A
hLWNdjQc5D9MSvwrdBMNwHyCf3zqHuQ/vYEicNIaDcB1T3GCoCHkP0SK2Jdb
Kw3AbhxjiFYk5D/ElEOHPUUNwGbpVI4MJ+Q/9s8KBcNoDcBftkaUwinkP9AV
bEBXlg3AWIM4mngs5D9+8Oopi84NwFBQKqAuL+Q/n70kOB0SDsBJHRym5DHk
P7Zv/owEYg7AQuoNrJo05D/BLGQBgb8OwDq3/7FQN+Q/m4nakzIsD8AzhPG3
BjrkP73ZdGc8qg/ALFHjvbw85D/Ta65QPR4QwCQe1cNyP+Q/hlGtRmxzEMAd
68bJKELkP9yMNpNw1xDAFri4z95E5D9yO9tgYE4RwA6FqtWUR+Q/MC9D7pre
EcCqCBWyHErkP92D1H1thRLAR4x/jqRM5D8glL0Kf1sTwOQP6mosT+Q/KZrV
EEiCFMCAk1RHtFHkPxa+2w16VhbAgKfE7dZR5D8N7vuxWJYWwNLbSSA=
      "]], 
     LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAJQ+drx3Q5D8N7vuxWJYWwBpIIlQ9
0OQ/Pt6kTDljFsC2y4wwxdLkP8nS5EF6nxTAU0/3DE3V5D8eIGDxEX0TwPDS
YenU1+Q/FZNf2AGoEsCMVszFXNrkP4Z5X63RABLAKdo2ouTc5D+ua5iKPngR
wMZdoX5s3+Q/2O5pA7gFEcBi4Qtb9OHkP2Tuaez0oxDA/2R2N3zk5D+L8KwS
eE8QwJzo4BME5+Q/Fx4/w9UFEMA4bEvwi+nkPyfzL6Ceig/AkhhtCgfs5D9T
vXilShsPwOzEjiSC7uQ/4UTGKB65DsBGcbA+/fDkP7O9I3umYg7AoB3SWHjz
5D+GX7MZvxYOwPrJ83Lz9eQ/+odc137UDcBUdhWNbvjkPwUbYJsqmw3AriI3
p+n65D936HLeK2oNwAnPWMFk/eQ/aKUovQlBDcBke3rb3//kPzMS3N5jHw3A
viec9VoC5T9LyEOx7gQNwBjUvQ/WBOU/yfKionDxDMBygN8pUQflPw50KSDA
5AzAzCwBRMwJ5T8ngAIxwt4MwCbZIl5HDOU/QegLlGnfDMCAhUR4wg7lP55K
UVC25gzA2jFmkj0R5T8gMJSwtfQMwDTeh6y4E+U/4ydsqYIJDcCOiqnGMxbl
P/bLu7BGJQ3A6DbL4K4Y5T+PsjEVO0gNwELj7PopG+U/PW1L7qpyDcCcjw4V
pR3lP28kJ8r1pA3A9jswLyAg5T99mk5Qk98NwFDoUUmbIuU/j5uSKhgjDsCr
lHNjFiXlP4sC9Ks8cA7ABkGVfZEn5T9xJ8Xp5ccOwGDttpcMKuU/8OkiWzIr
D8C6mdixhyzlP0YN3bCLmw/AFEb6ywIv5T8FKKdSYA0QwG7yG+Z9MeU/M5fu
sJVVEMDInj0A+TPlPxx8fkj2pxDAIktfGnQ25T9Si6sCpQYRwHz3gDTvOOU/
6il9Fad0EcDWo6JOajvlP03AY/py9hHAMFDEaOU95T9QH4NaBpMSwIr85YJg
QOU/NYS/LUBWE8DkqAed20LlP+JVJEXTVhTAPlUpt1ZF5T8uBgi+dckVwGIO
N+gZRuU/De77sViWFsBeE4df
      "]], LineBox[CompressedData["
1:eJxFk2tMkwcUhhtUdPp97UcLxUtEmXOTBu0iSdUEc1iAseFwKSwI2hQQWqEI
BFFooS4wJHQwsmELGJEM0Q6VQURY23A9yEXYwLVGkYuxSjx/5CK6ycxE5+ev
/Xhz8uZ9fzzJm+N/NCta4yEQCHbzen/Dfrzw8nYUAbvwujWuWopXPK9vCf2a
oDlRHfI61gc92lz7epQE8skBcTjrjaqEv2L2fUMwNXZXlesvQds6n8z2WAJz
oybzgU6MnENhkscTRGWcqRwa90JdSlzDtSMEnoL5N8IjXjjA5XdtVxPMqLvK
qp5z6NddO16fSDDfVa5MqOZQn9a9uCmZoPzOppLWzzm84+NeW6Mh4LKdLecE
HAbeFGwXpxIELewK/KJEhKWZH0KFjiC+TjSt9xXhzMaw+DUZBB3z0yckNiEG
39LkFGcR7J/benggQYjVOaUVb7MJQoKM609LhLi45Wqj4SRBwFX7xylOFiNH
f+/7O5fA1l2gHali8bJ+bjrLQJB65mz/5mQW334kXHpawPP80/zB/B4W41xy
TvstwcHPCqMmJSzeOK2UPS4kmDTPGGuWGGRkOWGqYoJHgdtG59wMasct6vsl
fD+tcOzXPxns+86mjzYRuGYtIscg3w9mfl5RzucKD3rRx2Dsy6TB9gqCPMOb
1lw+v9hin9X8RBDc35f/pZPBuWOs2NdMYFxrEhTNMKjwT947XEXQY5XrQ5cZ
LJpyqA3nCCYSnowPb2Zx1CwskdUSZPdbxlQRLEqjUpqm6wgUq1fWJhlYTPTs
cP1Qz/Mk3V6MaWexqVf0av8lgk/t6nDnKxaX9Bq/Z1aC6AeHN5yPEGLI7s6w
+isE6Vr5svWiEMtmuXRlE0FkQ0TZJ2tEeO+yttKjhcDuSjtkNYpwq7rL3nad
IMbo/W8Zv6fOV/wwpY3fb9HUseorDtudx1ZKbQTrS/NKCxo4/O/7btktB0H4
oD32gKcXRoZKlPpOnseRLp3I90LLcmpeQA/BpcARS9AqMbp/66mbQoLjyarG
E81ilGV5D5T3E5zS+5l+KZLgyR26p8FDBLtGFek367yx93EvtzDM+0j/IWWE
FIsz3X/sHPn/H94BoAKNbA==
      "]], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAL3ueKl3R5T8N7vuxWJYWwOrGFqqy
0+U/TqjIlIn1FMA0gGzQY9blP4ulC939wRPAfznC9hTZ5T/tW/dEwuASwMry
Fx3G2+U/0zm04B0wEsAUrG1Dd97lPw1XDcLKnxHAXmXDaSjh5T+n4bYcriYR
wKkeGZDZ4+U/NfRBKyy/EMD01262iublPy1sxGmSZRDAPpHE3Dvp5T9Vx2un
UBcQwIlKGgPt6+U/oTEWGxylD8DUA3Apnu7lP5zGBc7WKw/AHr3FT0/x5T88
t+r1usAOwGl2G3YA9OU/O27ZESpiDsC0L3GcsfblP0uzb8fdDg7A/ujGwmL5
5T991+8w0sUNwEmiHOkT/OU/qwNxrTaGDcCUW3IPxf7lPxLb1AVjTw3A3hTI
NXYB5j8jFO6IzyANwCnOHVwnBOY/ST5ZPQ/6DMB0h3OC2AbmPwqjKJTL2gzA
vkDJqIkJ5j8YuEw4wcIMwAj6Hs86DOY/+B6ftr2xDMBTs3T16w7mP1TPFdCd
pwzAnmzKG50R5j9jI8dWTKQMwOglIEJOFOY/8zN6gcGnDMAy33Vo/xbmP6HY
FqoCsgzAfZjLjrAZ5j+xHoFyIsMMwMhRIbVhHOY/cR4gUkHbDMASC3fbEh/m
P+QQQ5WO+gzAXMTMAcQh5j+XfZffSSENwKd9Iih1JOY/fnDuTMVPDcDyNnhO
JifmPzPhBFlohg3APPDNdNcp5j8o9/LJs8UNwIepI5uILOY/mAmL9EYODsDS
YnnBOS/mP7D5ltvmYA7AHBzP5+ox5j8qI37rh74OwGfVJA6cNOY/h7Ice1so
D8BWRfMKHzfmP1KlLVxqlw/ARLXBB6I55j/PlGs0+QkQwDMlkAQlPOY/dNQh
DPdPEMAilV4BqD7mP0c9Dzv4nhDAEAUt/ipB5j+2jt+Bs/gQwP90+/qtQ+Y/
1osI8oFfEcDu5Mn3MEbmP2lseQK51hHA3FSY9LNI5j8tiQmjTWMSwMrEZvE2
S+Y/eHhHPxUNE8C5NDXuuU3mP0dOo12J4RPAqKQD6zxQ5j87pT/C8/oUwBR8
HGO8UuY/De77sViWFsAeQonP
      "]], LineBox[CompressedData["
1:eJxFk39Q0wUYxmGKJn6/Y/sO4QokDdzZIXWEGXnBeyA/QwQRCgUphBFkTgEj
BEFEYIjID6FxS0XYUmEICKyYMfEdiIIwjoGJzaME6i25SmGRedTZ+qs/nnv+
eu4+zz33rN93MErCs7Ky8rboP3+vYqrlUhwB+/tSR6zcASPvrn4wHE+wJnft
2oRLa9A3wDS54wOCiIfFld577dFD03TXmEjg3J3kGCQVobPbZ8boZIJgs1+b
rItD29rA0ckUAofrQzaME4fPltkP70kjSE+p0c19IcRfMmduT+0nGBkWP3Hw
EOK92as3P5QS+D7NUSgMAhzYdUw/e4hgKNBm8qsjAtT0h/emZBKYO3zvZb4u
QKWXc8+jTwl6YT6rx2SH1aq57k+yCWzjvU2tyXZYILqmeZxDIPlce2D5Eh+l
J2QdGXkE3Ko3DyWe4+Nec0zb4jGCAkV18ZVgPm5PcmvJLiRY9E4/yPubxa0T
C5eXiggaI3mSZi2LG7fpv8yXEZC/R9ULeSw6dlU2WpcRlEc06BpDWFzhmlBf
VE6QNd1exzix+MeZTWdXVhLY6N3tzWYGZ3lLdWXVBH2j4sv8CQbHM4Zq2VqC
lxY3vyrWMogzddVVcgJ939MtjIrB9qiUCpGCYHlQwZ/naxis79t8Sn6WoFva
+lrfSQbL31hW+mI9wa8YqkotZjBXaSw610Bg2jN/5WQJgx9zDcdfVhEIb3it
FJ9mMLZQmq+8SIDPw8aDFAwGL7yTu6GJoKokc/AfNYNb9q3OblJbeMeONkv6
GHQb/+6we6ul71LIjPIHBjn/pvS2dst+/tyRH3ksWndmST07CS4YBsIkm1h8
sj5wv0ZDsE74dteBeBa/rxalvtVt4S+XX4ypYdFgPZP8zTWC6e2Pj8qMLOrS
ryb66AiKU3jyE458VE/nJ2AvwWkuT/iThI+KneFx2/QErzwD19TrfCzVO8Xe
6ieYLNldseBih1mec9Ghtwjez7TxuXDKDiWN2p0jgwSRpWleH/EEGC2U7YgY
Juh5Lg51CRKg//GYsHEDwcatu124MwL0nHcNiRmz7KF+FKX9WYDrEhcC7o8T
KH11nStChcg3ol/ctwT9AWNSjVaIv4X3v2t/35J3z5ivC+Jw5M7ALoOJYGLU
R3VjnsOW4MH4kimCr0eTVklui7Ds5h0JPCTwaF44bDttj2l+BulfMwSFrEZt
ynHAomLugXD2/7/9C4JPxdw=
      "]], LineBox[CompressedData["
1:eJw1k3tQVHUcxZH34+6yC+wOKrgpYnJhYdxAEbAvgzzGNUAIE6FdBKRBiEJk
RSERSGYHsWLDkXEFRokECnRgDBjK+pqXICV8rAJuoQzGen8QII+4Io/a/uiP
M2fOf+dzZs7GlI9j00xNTEyCjfrPLWblceH3WeBNLbXGXxBjUa3i3RZjtjFZ
ml+Si7HVivkkWcdCn2omdNuKE45m01dFAywcfudea5e5EzrqK+79OsTC5RLP
wWJwxNDd3KtTv7OQf3tfa121A6qaFZtkT1l4WTm+UuTggFdFzF7DCAuNt1Im
N1wS4mAhrdI+ZyHHuqD/tEyI1mxFbZSBhVOSzij9YwHujOF6TAkLNTuefb71
UwFmdClm2idY+DqpiTP4C/CSG7Muc4qF6J68+KEJe+w7R4dKZlhwyVDW1ebY
48rfFVm6ORZ02dOPWszt0TuJu6BeYCHONl2qv8zHpF4FBi6ysCWwsdQ7nI8V
2xgyvcSCu/5Z4sgcD29pacf6VRbc5n4xj2ji4ayZJih+DQF8UiF6nMZDtywu
jTInYGh8kurowcO4AcUXaElgmTskrZmlsBSYzlwbAlu6rda7/kxheyM9upUi
cHZigZVXUfhCqLEb5hPweu38GTlKoXMB56sREhhy/ean7hgK9/ypUIY5Ecjr
Xf/gxnYK8yMZ9aKYQKGG3Kx8g8Lmdrq1ZS2BmMHx3HB7CoclGn2yC4GlndqI
DlMK+WWcmVhCILPMsnDgtR0GzyqkdzYSCIl8aqPl7PBoIvNe4WYCfbEf7V95
ZYd1DF0ke5OA/vRFrzX/2KFOqmkyeBA4Nqr/8VsbCs2ruIdaLwLBgYou67UU
+pkol6N8CJxclBZ7SCn84AjjbiYjsOu7mnz3cAqrHtLRHb4ERMmCM+sOU9gb
qDmRucPI6zteKlVTuFjPXZEEELBotX6r/DqFNF95Vxdk7ON1Yil9mMLEPGZe
DcY9E6i3LYU8PDdCbwgKMfKVFPS2yHl4c48m4mUogYFQ2+87zvJwqo3Lro8g
kBCU+lf5Ax5KXJTaeDmB7six+XoJH/eVMrepSAJtDWLn8yo+Fk/RkxhN4Ksz
hQctH/Gx7YBGrIolAH4LnncD7fE5cuCxn4BauVs53GKPTrTyyPABAhW64uoO
kQDDKpkvNQkEqn1O1q0kCPD4Mv1DmIJALm+vxbUGATakacYWkwiUZPrJuWUB
DvVz/GspBPo9/QWp7wvRxl/pn5JGoNQvxne1R4gBV5hkcTqBgPPXJy+GOGCm
rWf5nQwCk94+ssD7Dlh9THOjMMvIO9ZcbDjuiL/9wQ3LsgmwHx7s3B7shKth
SqsXOQQ2rbiXTQeJUJe2yypLRcDVw/mQLFeMferlzbXG/P/f/wXz0gAJ
      "]], 
     LineBox[CompressedData["
1:eJw9lH8w1Hkcxr/740v5fnfX7mLP2U6OyuWMOWcY6eaNw1acuiTG1CmVn6Ef
2ymludJJs0mqc0q7E6NEXSy6SuKNfoiyxTl1dBup7vMVKtVopT33z/3xzPPH
88czr5lnHqe49OUb+BRFBU/rP3ePiJbpswmIRif10YV2eN9lu0XBPgJhr4yB
ZpEdngmKslDsJwBvkuOtxm1w53pvC+0BArUndZkH7Wxw2T5bC+eDBOaHf5Cl
x8lxTtkbuuIQgXYX+cJz7TI0tXbTHgUE5riPT7xXydDwpIa+eJSAT99Mha5H
imWCI7RfIQGzbd+WyE1SzHTeTDcXEXhFlzDttlJc+u0yWlU83d/uVud/3Rpd
1nnQd7UE0g/9QidmWqNpr5iOOEWA0kZF+/pYo6F0RPiwlMCxq9yltnEJlrXc
EcaeJkCbEjbtzZbgjsFzwqflBKJjBn7PU0ownK8RplQSyNa+lM9oFONEwGJh
RhWBjCBdsFohxrtrXYVTegK6y7lJ/p0iLN1jKcyuI3BRrnKdqxFhRskzwcxL
BM7+aDWr9TsRhjXfEORfIeAWG1DZYitCp4EygW0DAa+tkQ/7Bll8R+0TFDcS
OHHetdxQx2LH7HUCp2YCM9IcTydoWDzlHygobyUg7Nf3q+NZ3LbGSeB+k8BY
5fjzzmAWl/xECWrbCGTuve4V8QWLjqeMfN8OAiWJN5OHrFl809TIb7pL4ELw
zNGkDwzeNmr5wfcIcFnXdhiGGdSZd/E7ugjc9lhuEBoZ3Oq4iv99D4GdFX4Z
Uz0MLgI/fm8vAc/J0ILqewzOiv2Uv/ovAuspu9pPDAy+3v2e96SfwJ2e0O6v
7zN4S/eAl2QkUPDr1gBBL4MnGy/xxgYI/LziQoXmMYOb/y7kbRsiEJ9X6dIz
wmDIx228yWcEJnwWrBj+yKDDZ5G8PYRAKJOU90jO4stvvHiWLwh0hKyRNn3J
4o3Vcl7eKIEDuucryxezeCLrNSV/RWByzVh8TTKL6dr71PFxAv5Zy5byDrMY
dK2acnxHIGflQFX9FRbtH+VTpycIrM3zSmD+YXH0QxrlNjmd53Ab5jmIsFUZ
TumnCBT1HtEviRBh0UJ3yofioPq3wdL6wyJMXcVS1/gcWDXeTrvVLcLAXcPm
QJoD0wylpFMpRsXJdnObJQddVMOZBRvF+OJqhTncioOgxLj9mhYxNvflmv9g
OUjObRNFzpZg4WSCOUbCgYd3si4kR4IbHVTmx1IOioQy96/eSjDAb6453oaD
7WrZW8vpPVsk+jLOCg4uL1ok/nO3Nd45FqYw2nPgd3T4B6dOazzSHOtcrOSA
8uRMyrlSjBrd4hHlyEF9/pKGqFwpKh1y/OSfc7D8wSr10DspDqqOqwwu0zwx
viMn1DI8qz4foZnHwWCxT0MOLcfUkqZY1XwOpmZX2+ur5OjZ2ZUicOfA+3xX
in6XDU6YnmY0eUzzrBj0np9li2mpNTyeJ/f/f/wLaxETNw==
      "]], 
     LineBox[CompressedData["
1:eJxFlHk0lQkYxm+RzHzfd3334lqmzbgaho4aSxM1bxSmEVkmozoZpuM2ZOvE
SKcpZihLKw4yC8k1okZlX3vtRjQ6jLmOJSTV69gylULNnb/mj/e8/z3Pe57z
e16Db0I9/JcLBAIH5fy3hRv3zyXYEXBTC7e90yToYxnU8cieYItFfUDRgDZK
/U4rshwIMmo4/lWbFtL55LEDnxMcTv3sUtO0JhZVyWd0nAlM7j5Rl27TxPAn
FYvdLgRvWmsez8nFaKPVoX7JjSBx1F12wFCMAruHWrs9CXoPclF/3xJhc/Dz
depeBHedk+odnUWYmLliQ5M3Qfuqwt9lMzy6tepuiT5AkJ3lKoz/lUfJP6YO
W30IzEI1dPy+5LF/HbjP+xLE1KvpzvA8Zrt4HCw5RHCianF1V54Gyk74B4TJ
CHaIF5odrTXQ7LfjEWYBBLd73hpa/SnE2e6kmKdHCL5lL7+pChNimSDrfG4I
gd4K46VV+kI8ueHOFd+jSr+TdZG17Rza72+WrwonCLPcXCP5gcOVZxW3Fd8R
PLi3rK8MOOwonqhNjSJ4ZlJiv1WFw+Tht3+4nSTYE3jHwrODRW9O3MueJijr
sk4rzmRxtY3RaFsMQWPNlPfaEBZHZZ9OxcYSaOpUS/wcWcxPcX6z/axSr1JH
4GzIYgj6qC0lEBgXLM2XqrJoMXlUXHmOoE8CI9HE4Lxe3JqIiwSFX1S8u9jD
YJ1jxsebkgmSt0UldjQwGHus0HoyVZlvY4CTtJTBXdl19tfTCdj6BbuEQgaF
nQ9c/TMJalO8U2blDPa8Httv8AtBbIWx7Ve5DGaun5cNZhEc21uwsiKPwa89
mWNXcpS8bHQ9p32TQWn0mtN75QTzmxLXR5QzSDc2JYnyCaIKVUTDzQze6tuZ
3llAELcvP+6QgsEINe9rCTcJQNI+zU8zaGNxpMjhFsFfroPmb99jUeB7qnpZ
MUGQwZo5BxMWW85dbq0tJRiZNvpQ3YXFpMrc7qgKgqHxsMDACBbdxssfWlUT
nCp4/2lGDosSzXsTs7UEVQZmL1t6WByAoVc3keAnkdx8I8vh1aBZlcBGAs8z
Nwr0dnEobah20WshKOWbPS4kcpincya9rY0gYUE14MUDDk2C3UYi7xG8O5oy
V7JWiDca9E0/uk+QnnOxd0e4EM11H4f3dhF4BaQ4begS4p3gorq4boLQmHhb
bUsNrNDd6TGmUN573NQ5nuHRNkT4c0o/QXlQiVy8m8e6RsVj+yGCzmfbkq4n
82ind838+TCBveyCqsEwj00hwVFXHxHUBdke/tFKhE5NmxvdxgkKfBc9jFJF
2K63nBM8I2hJ0xlsXBKhS2iHV9GEkrc+H0VxuBi7mtKyfaYIpM9Tfc0Xxeip
70fcrFL/vPTgQIYm9oaaWtbOERi59y+1uGvhvuYX3we9VPZ1fLLU7xNtHNDH
1g9eE+yO7OVN90hw8v6Od1de//8//gVdUDA1
      "]], LineBox[CompressedData["
1:eJxFVHtUzAkU7nFq02/eNREZMyaybUXHa7PpVvTkyJZHSaVkS3oYUpRHQvJI
Z4dmmwajE+EkRIk85m7atppatbbVUKysdrhns0JRYn/71/5xzz33nO+c+537
fd+VxaWFrjMzMTEJZuu/vtpiR+ZtawJu/0hVuMoOFYrA1j6GYGx1aNyeT2J8
2yiyU/EIykbCXRIHbTHToSfGT0jQfPZNvLPcFocVZ8+/tSEwPHvleHKzDe74
WfGmzI7AqEmKetIjQpOJnvPD7Amkkdo7NZEi3LPJcr+ZA8HIgEfloFGIlk3t
7VUSAtM/BvTVuUI8MFEzPlZGkBczQ9M2VYiczeviBY4EX8y+sKH8vgALm6Zf
1E0lmB0Q32+WL0CRZHgo9UuCP9UZW1/6CrBoc4OPxIXAytJnsspcgOOajxxq
cyOILX5nbFLyUSOJ6NzuTtB3JW9NqRMfJenySS6zCLLa0kwMDTwsbf478dEc
gpjUotJr63noOOn6lYMeBHecXMtOiHl4Nj33o4cnwUIrrcqqiYvOLYv9X3gR
+KREyPblcHHGlqeGgIUEet7dkDlmXLzaUiEf8icYvzTlkb6Fg3OkGSnlQQTW
M/hy92IO3tjiXbt8MYGrg81MtyQOeuqtTS1CCAKnJ4YpvTmok3YGV39L8LA1
zHHmBA76ZmiPrV1GsCBr1zP6wOBP+vWPRSsJ1Lq2juPdDAbKZk2rjyBgXF2q
ne8yqM/4pFCsJhDnP07aWcngktamm9IYgnBDnWavhsEO2VGL9liCqDfKZNcC
BpdlRoXsiicwWX56UXIugw9andRuCQS7U9Y1zM1mcNXkgd6e9QQ9zmkxBzIZ
7Mm85VKQzPKJUx+OYuc1bXkZnmkEY7ouqK5mMbjf0Ky6rSA45G56YCSHwYvP
ObVe6QRhj08VrzjIYOfrkAe6DIKEY/2DLSoGP44qh7y3EbwM3u8QW86g3Pr3
sfXZrD4686fyGwwG29l/vWAnwUAqv0R6j0HF5NXhDTkEWnO1b4KRwWI37Va/
PQR+V8dXWFuw95vXW9y4j8C526taOoWDff5TbgTkEygnZhXVB3KQG5ZoaDpI
UGd6wp27kYOzYio+BBUQbPmuN1um4WDkhn57fSHBhqoz/ziy+uVmus9brCTA
97opvqMcbC+szVryA8GS4N2G7zdycUgzXHJPTWCeHdThUcVFybn5N5ceJ/jl
0KbzxkEu+lXnPOo4yfrrefpfr3x4mIx3R0JLWf+A2L5SycOjrZYOv5Wx+Gn5
wsMveFjXFeS5vJzA7jX/+pgAPlq9vrd9ZQXLby1/ppQjwOmjohNdlQRBlWWj
1/wFuGLMitsRlwmKvvm4d1yeAHeI1T0PrxBUZFc0drYI8LSsezSyhmBV16VM
rViIetdJkp5aAt2vHYaQBCEOeMR5Rdex+5Iu1b5HIdr7n4l+cotg2eeC+0Ny
EXqHGneu0bH6nqqvFStFmBD9lfbpj2xezxnf1XBt8EhSqi6ugSBaUOk+tcQG
azKqnjxrJNg3YRvXydMWu3Pffo5vZvM/zuLay2FbNC+cK+3Ts/hFl4cm9Iqx
P6vES9H2/z/6F3OhSao=
      "]], LineBox[CompressedData["
1:eJw9VH001QcYvqOW/H73uq4r+jA38nHsOlt1CKVXSqOrqZuFQs1FPoo+mIk6
CGUsQlpXUStJH/JxTGq1t9SoNE3Sx4QZ0X7vIlyfYXf/7I/3vOc9zx/P85zz
Ps/CgEh5kAaPx3NXz387JlrgJ+/ggP9uotw7bw4GfMh23t3JwYYCy9HkUn1M
02oJeN/FgWduw5/zn4qxTDz30N4eDlZo99SeXSDG5xLfc4NvOSgu9OmpS9DD
KWlhbRRxoD25cpv+mAjN7Dv/Ur3jwL9GudMmUYTuLmYzYt5zUK/nd85ojgj3
bQxZNDrIwenKpTl5Vbqo9Lu8JnaYgyLJ+h6Vny7eCX0XOD7Kgbsi3HmQr4u9
0YtT4iY4sAuWRmbcE6JOUlTRh0kORGfePBhIEKLt0er7B3gEyuP79h50FqKf
crx7SoMg6kmbY5GWEJMvOH6cMJNg1bM6eW+RDl6uSDD/SIvg4Q5zbX1nHWy6
Xbs2SZvgE5v0Imm3ACXP3Q4n6xBozu3OnXYUoF0/Vi4XqfFvtY7eIT56zLbr
GBATtI6xmSln+Rhsco29ZEDwSpZp3LuVjweXm9t/PY+gyPfkm+z5fMzzPB1k
aKTmCz5V4tDB4tVd4uxGYwLjQOvS0yUs3ktNv51qQpB/ZDQkKYbF1kINztGM
4Lv46tCf3Fgcuh5roLIgWNn6IoYvYZFp6l99xYqg5GRgy/ZxBk24HbsV1gTS
1EfFR18w6DCj/dS8zwk6lRQee4PBjUabH/y+hMB2uDln1hkGQ2wfq47YELg2
l1uYpjGY4LHGxMmOoD/fMr4mmsETITe/HHEgmNX/euhGEIOliUviSh0JfBLD
m+b5MPirsqQ4yImgISNQu9GDwdeVkuYFqwnuG3hbPnFjcKjhBK/ZhaA2SmPZ
3C8YZN8IrNNdCf65Y1herL5Np1N8nGUEihJZbJxMrddwMmVsvZp/0v1lnpxB
+eKoirINBFptjYenfBkMW8e17dhEsOLahaqaMAYTFQGM8WaClG0eJk1xDP4Q
/3JZizdBxuMIO88sBsuObwj8fitB++KBJR4XGawvrcta409Qv/WR7Fktg+11
K29NbCcYOZuimuhkcLij6m2FQu1vi9vC1pksCsalc8KCCW5FeeRkS1k01zvv
vDCU4LMhd1cnLxYdpfMjX4QTTPJm9Wmnsujpkp2fGUEw2GGw36iGxZ3+s+vX
7iHwF2g2XuxnMTkmYWhyH8HMDsnJLikf87NGJFXfEMhC61yFEXx8eLc71jSe
oG/19AEFT4Cdf/heeHWQwLdyqZ6jXIBjQ0+bjiUSHLfvux9xSYBCgWzaNZlA
Lr94I2a2Dlpa3P2Ud5igy22VAUXqoJOTvXd1GsG1LRMFsW066OVTlhyRQdBy
XbNl2EqIqekFr1uPEfw8bu1QVy7EgvP62rm5BJWuI2GLpoRYdSvDVnaCwJBn
lpazURcbWjQVGkqCcadDjNVVXezq259Zc4rA5u+KLjeRCD9oDdzcXaj+z0/0
ZZgkQj2T0F6LHwlM15XdU/H00Gp5h7j9PEGdal32iiw9dPb0WpVXrM7T8/Eu
Lxsxbtn12671lwgKYKA6ekSMe1JdlDOuqvOw6Rcny0597PsqU3KllP7vq38B
RSxfsQ==
      "]], LineBox[CompressedData["
1:eJw9lGs01HkYx5VxWf+ZMTMG5ZY7iUNyiZoeNmTLLZdYolLuDCfJNZ0sSomu
alcpzpplUaSctJYnCZXKdLpZNJZQ+v8US7qQnX2zL57zvHm+5zmf7/c8j154
om/EUhkZGT9p/ddry009K+7QwJr82hBUooaWhZK6iQ4adAwGTVwV1XAi5HF9
chcN/RMfVaxNVFG0qq1x/h4NboyqxZtxfNz19UpTXg8NRuu+7op4oIJaD8qa
2Y+leuN+nwpQwZe/FLWcE9MQOLXXWr6Dh2dis9t0n9IA/uH39wfw0NtR2F79
XLpfL1NYP8VFJaWwu9Z9NPz1j9B0sYSLnX2e3X/007BXNDLMc+FiTrXggcsr
GvxOrVsxMsdBQbrFo4dDNLyQaCheaODg9WWsp5JRGvbpfdxma8PBpDfzz6Pf
0DC03jXG4JMyrrpJ901N0DA4V6mZX6yMY4cHBjIIDQaRl+beWihjRWCPRPYD
DXte9Za0PmFjmEnLcOE0DZvy888fPsDG5XM1o6qzNKyf8VrTZ8HGEyXH3pl8
kfJn5m74/SILPSIzJ+vnaThXLLYq3s5CBbu4KYdFGkSWH4o7VrCwXS5kpn0J
AYH6XcIdZ2L2s81zWxgERkV9Dq7XmOhY6fjlqTyBO5XD06sPMXF2n9lC6HcE
Erv1M+r9mBjPV5JNYhOwO/Hb2b6lTDR9/VnuM4fAym+pde4SCkca3yrmqBCo
dZTrF7dSWPZTH0WpEWhydJoPK6cw2O8e+8wyAj0FGlkD+RSqGTRztTUJNDTa
aTkkUiieruKLtAnIh93ojAimsLD9vLqlLoG1xopRAe4Uup86onFTn8BQ71j3
/FoKGeFp2s5GBDbW1mX5mlPYtjpa974JAcnKYvTSpzBjSZCBnxmBk866wnca
FNqJNxkPmBPQjh96Z6BG4fRl+5URltL50WT9WRUK65JMzCdXE9ixNTgllE9h
tJO6ZaoNgfqYhdbt6hQachSsZewJ5L6U9ZnRonBI8tGmwIHAcZnXU8ZGFJZe
HbPnrSdQp99Of7KkcNvB546lGwjIrrnBSRJQyPPuFBg6E2jMKWs/7UnhI50m
p7qNBN6XPmEm7KSwYLJyo50bgY6F0Ub5/RS6tJ51a3MnoJOm4JNQRKFMUd4P
7lsILDTGx12tprAlNMVD7Eng1Pw+0WAXhakWEd7BPlIetsew0lsKrRf8fUd8
CQzbMpI9WEyc7HEJiA8gcOTotuBbNkysvmATNBtIYLA8qzBxBxP3xBuGZAcT
MFxKOx09zsR+irHrxA4Cf14JrMqcYaI/o6acGU4gyOxhWLo5C3vmtw4f2UNA
vMFHGBDNQtfZT/pyUQQSorItvq9iYSu5tPtQDIGYy22WaTQL7cfcfl2Ik/ov
12Vrb8vG+lfkdbqQgLCkxbsrh40Vj9dF7k0m0C8Q69RJ70Gze1g0mUJAlVmQ
d/+YMp7BgvHYNCm/0VmW5wdlZDVbmY5nSPNQtfP624KD+Q0voncfkOoNEpyj
ozi4WJ1dLTlIYCs3P1KrkoNpFUYTITkEdg4kn0sa52Ds6eQ4/8MEtqQfv+6Y
xcWRYxq1vQUExq6puOr1cnF77m3ao1Dqz4xZ7MVVPHyWFW1xr4hApkJuAV3M
Q68UZaHrSQLLNefEom887EpounL7NIHNWj8njqaroFNk6HtBCYHYu2lOBxl8
bA5jWN06T6CTn7pMWMFH68CaJLtSAg5RfKucH1Wxxtu34dpFAsEdPqXN1mo4
rVxaebmM/P8f/wUCGpEp
      "]], LineBox[CompressedData["
1:eJw9lHs41XcYwClpzu8cxzkHxVxbLiWsqVzrFXIr5K7zjCRC5RIZzSWPjXJr
LinLCEW1mpiQqXNeGkqiZnNZWG4V+X3LbTmo7eyf/fE+79+fz/N5X82ACLeg
VRISEp7i+W+XtfeQ53U0sMhyjc8FRQyS6jfOrqfhhnWVhs1eRRxeSYqTaaQh
MaPVQydSAb0XtBpTm2gQnZ8TdTfI41O6UyQpoKFVu/3u0np5dHgZbZaENEzM
PqqvyeZhy7By/FILDW5yQuUJDg/N+5qbvmqlIbiqLbC6nIt3ukNWZttpqDns
d2FmJxf1H7J3RnTQ8F2tcwFjlIOVWJ/4ppMGRberY43ZHFRv9BUEd9MwFKD/
t4QlBwtrpP4Ze0aD52TRIHdRDjPK3ZIHe2nwnzZJUoyVw9VFIvQZoOH0fLtI
ZqccJuSXSv7xnAZOee4QSsvhQqadleswDeE6Pm3d19gY/i1JefKChlh1840R
9mx8lVDwwGGMhjrHWpdxIov+MRZSbRM0lOyLH39wSRbdjmSkCqZoaOBe1vOS
lMXHflvbzGgaltOrLoc1sdDGu1+64S0NU56c13WnWHjf5bSd0ayYTyX2lwVz
Fu6w1z57e54Gw/FPpZYkWXjb8slDvfc0aE/NqRU8ZqKu6UmZ6yIangwk6JQU
MlFpc0tG6UcaFL58tXjUgokphsV9bpIEtjSEqmazmTi9LW7jGikCfLXiN5ov
KfQ0cz/RIE2g8UWwNoUUCsBAECpDIEc1f1i/mELdPTKUCpMAKog0ohIpzHUc
9+6SJVB7/Gl1iz+FSy7Cq8kcAsnSuzuZdhQGel6a+UKewGhemwg+p7CLH7Nr
QpFArLLekJMKhcb++zMvKhE41aPC20xRWBqk1++gQoCjlcvtWGEg45i01ooa
gSVrJ57WDANPRo6cqNIkEMZmiYxeM3Ao5p7AfyOBEo1Bq5kRBtrGX6R4OgSW
U/Z99BlmYHVylE/rJgIvtfYKQoYYqJzmVBG7hcDZvMAC9b8Y+E2m7uwmQwL6
Ib68pDEGTueshsGtBDr0uLZpUwz0ujCceW4bAd7Fsvvm8wwUFjX2WxoTSHeY
z78iIfZRdl5rzpTAVZnW2F/ZFOZVRkRVWBCwMPRrqtSkcPmmo9AbCCzQ7sEe
O8Q+arSYDCsCMvWFrgNOYh/1Egfu2RAwyDxkah0i9nHveUW4HYHNy8dfl6WK
fTTXz2o4ErBMOsRfW0khoz0XevYRqJvVeHPmEYXRncezUl0ItKRrZJu9o9C2
b4P2lAcBCYNI+1I7JlYPfoj6wZuAzZa5Wzlx4h5G+4XOfDHf9xaxBj+Je3hV
y5T0JdA0/TuUT4h7mD53oPYgAb8CnTSlDSz0mg2tDAogsCi1nd8ewELhe5u5
dUFiHuGk9sQ1FuatWs5KOEqgofy3D/GWsriytnfAIIyAkfHPW3PPy2IQq0Z7
JIKAr1RFm6v4Hrq4WdH5UQQeJ0qPbHJmo8n6YNwTQ8DH2Wuw4A4by1StWIux
BLqvq7dzOXLI+EyV/+PXBFzWcrfjXjkc0u+Zk00mkOXZn3SkSw5tjaosm1MI
uPZOsv3WcbDaJD07OpXAmTvoYn2Eg0q7Av/UOksg7sSVY6NNHEyxBp3+DAIa
7s9MTJS4OG2vfDIjm8CtZonJlNNc9HReQIscMU+9fxH/HRcF7k9Zb/PEPsIF
Nb1hPNQ9cJNfVkDAe1dt18MlHub5pV1zLyTwycEbeWpF8rh8+ND8miIChS5V
+7M9FDAw1GL33WICQtPm9X2GikhHdtzCEvL///wXAH6pNQ==
      "]], 
     LineBox[CompressedData["
1:eJw9VHs01HkUF0n9ZszTjFDKY9tKSaU9muhKzUjZVHrM6USe6aWNKWtSaOlJ
RHn2slSD2Sz2sLLK1crKINKK2DzaUpl+32XFltf+9p/945577rnn3vu5n/uw
8Ptma6Cujo6OnJH/dIrAISyjjAZDerRInirGR1plins5DetFoMP+JMKnuQ1l
TRU0vNlbsfXFChF2B1h0bqukYepq6yNGCUZIzz022VZFg3hD2o1lo0Ic7ay1
9KqmIaaq7vbjcCFOz5gl66mhIVX2xLtMT4ji7Uf2Bz6mIdlOrSrOEKAVvzr+
nYaGdJOqaWMOArRrMC4MbqTBPnx6sGM3HzdKK4ePtdAQd03/froLH+VThKaf
f6fh7nrKdf4YD/fe3+sU2UaD5+iXBVHlPFQoy310O2hQjnjMsT7Jw+gVnNgz
f9Aw3vpx7O5aHiYM+KqobsbfbzDzkSEPr94tqUvopUEgtUhfVcrF0i+8+Gl9
NMiKX22zHedgdU+hvdl7GkpKwysycznYfH2q/KaWhgb1odAOOQe1oh9uqAZo
cLuVu6OgxhA/N09W2QzREFpHQipjDNEgwfP1j8M0ZPksjMhaZ4iW00ZtykZp
0DaNTBE1s9Hu4SYPxwmGv/HEvO3X2OgUmR2KOgQMAyTKygNs3CAZTlmnR+CR
/mTsMkc2yofd7tXqE9Br4/ydxGPj3uLrne7TCZgntuT/2sdCxeGBySaKwD9C
e25hFQsT3qTL2rkE6pfsCQk8ycJr2dr9XgICT7tcVDP2sDDP2/lijxGBAv76
2+ZrWVhqeqUw0JiA5a5W59QFLKxu7Wt5Z8LEO6ke+QtY2Jy8aiR4FoEZvK6O
iHEKX25KNB00JxD0PDnk2XsKtdQrpzALAurGHaqAFxR+qvnK97MVAYNDpyqt
6ymcFnMhNnIegdq8Ti4HKTSClyrdBQRocdxH01IKLUaXas7YEKC8/6qTFVBo
+/NpmrJl6j8+1nUxl0JHRTs/0Y5Athkr5MMtCt2WLF4hXE7gqv5GlX8OhTv6
o+VpKwiIh+wuEcYOUD2LMHMg0FDuaZ50h8JQ//k3b0qY/jxuzHdTUxg158RD
KycCknmnD5oUUxjf8eS1CgiAbUXc1F8ozEyzmrHIhYB9S5gpp4bCXM9vFxWu
Y/AvXXNV0kJhCVfjYe9KYIv6bFxiL4UPNeaKMjcmX/bbg8IhCpvOhqY6uhOI
PqzQNBiwMOijNoflQSCqf593xFwWTvgFFb3YQqBkY8oJPUcWpjb1PMjbRqB7
bnnXsV0sXLx6d334TgLlWcM7/4xg5qFubXfdRUBgkTTil8XC3SZb+sReBL7r
Fsmm17LwwpBUt8SP2YfVxrW2Fmy09ENubCABfeWM7/u3svHeE8lsz30EZvUY
W7ueY+Nmp5KFlgcJuLhpYvdVsfFt/hKHgWACF2VLL0VMsDFqZr4UjxBQDU66
FoEhis9YeyYqGH7lmOl82hClviaHFysJbObl3D9gzsHOxssRYxEEfMda8jNC
OXjUkXNeE0kguMDd9ut6DrLyz6VmniIgaot/8d6Gi9nGerf2xxLIkGYMv0ni
ouT0ySKHswRsuiQ7f5vgYvPgyAODCwQekKDjl1fyUKdR2347kcGjHDJSM/ee
tiqo72gyw+ehKXhcl4+2eT1Da1OYeVxx/qnXg4814t26wnQC8yfMBtNz+OgV
28rtzWTwiM6Fn5jg49DA5tlF1wkoGn1Ds30FGL9HszA6i0Dh+zCX/Y3Mf2qQ
OnjkMPuy8kjpFZkQyyUoNb9DwKhc5qasF+KWXInnh1wCy6YtX7fG3wjfikp8
KtQEzhv7d/pwRRgds+RwXAGBrIHZGPhchGJF8qSmkPz/b/8Ffdm8cA==
      "]], 
     LineBox[CompressedData["
1:eJw90n8s1HEcx/Er64cffb7fc5eNct+K5VRiaSupvVfOLr8WVhQaE3U1QrJF
soXS0pXS/NjMKL9GpbOUH8n7Nkol2i7fWp8PjUxUhCJOKv3TH689/3/stTYy
LjB6sUQicVrYv15JbznZVUphxdic7mCeFZ4wm+suqqBQWzNS4bJchmaB2tSS
GgqVj0KuZ7dKsbpQcCy7T2EqNdineZZHr35dT2U9BVPvqfOGeB6Hlar0miYK
xYuOj2db8HgpXtxc20pBOOPk5p3BobJBQ+vaKKievM53kHP47I8x6+FzChlV
V83L2wgeVWu3NnVReCP5uCorh+DSa0J/i4HC8LR7WlASwQpRp9W/o9Cb5DvW
m0DQU6Ha0d5L4Q+f+3v8AsHBaHGoY4BC9fya9iN1BDPvanI7P1HY9tJvicss
QfspI7z+SsEp79QD8TCHbTu1Xw0TFO45XnLcMMRhVKZQ+HaawuPwZMWsH48m
nTpPOkfB4GwRHtjB4y2ZarJPwuBbeVLO7UQp7gkViweWMHikLrWLPWuJA7c0
PkNmDA6k3JC75sgx/bPx5wjH4Poc7u7uW4nrtmjLRuUMJkqDiwuGLVGfLARM
WDPoGEtrzH0gxQi9bv6HgoE66XJC/hSPElNV9YwdgxvrhaNZcTyW+ItBv5QM
NlY3SyIWfKFAYyLZzGDvvu58/wXfvg/GWhNXBraJrw77yThMc9CGLdvOoLnc
JX5ST1ARJ5ia72IwY6wxKLIJtjzU1ZM9DOo3SL+ExBAM++0RaalmcMg2hoRF
EfzlKRIrXwbKUYeLL04RLNJqmq0DGOzOdyvbUkDQvcd4zDaIAWeTp1klEny/
WitfG8pguSx33tuZw5QoQW8fwcDKOXlwfxWHNnd0scpoBrILHWmh9jw2ffew
2XRiwfO999KiqzyGuItPneMYtLjVVnYqpDibrkl0Pc2g61BgY+WYFAteGIVt
yQx8RvM8TL1k2H/TpUF9jv3/718TBGqb
      "]], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAACzUV84xv3T8N7vuxWJYWwAEt2dtm
ct0/TQtVBnWNE8CCjtOg1nfdP7Rt9ixCDhLAAvDNZUZ93T9Ub/VIUi4RwIJR
yCq2gt0/VvVQ8HyUEMACs8LvJYjdP+go+tqUIxDAghS9tJWN3T9DpSEm3ZwP
wAN2t3kFk90/rVwlyRUcD8CE17E+dZjdP2hoxoervA7ABDmsA+Wd3T/4UTrJ
onkOwISapshUo90/cCM8z+5PDsAF/KCNxKjdP8I5MQHTPQ7Ahl2bUjSu3T9L
9P1RlEIOwAa/lReks90/7TnnfFpeDsCGIJDcE7ndPwbK4cs1kg7AB4KKoYO+
3T+nzKhaS+AOwIjjhGbzw90/vXhgRzhMD8AIRX8rY8ndP6Yo/EDW2w/AiKZ5
8NLO3T9ihk/LZEwQwAkIdLVC1N0/yII7m/jJEMCKaW56stndP3jkB5IcdxHA
CstoPyLf3T9xOnfNzHoSwIosYwSS5N0/P4JAKKFgFMAaxr8KEOjdPw3u+7FY
lhbAdPW/Kw==
      "]], LineBox[CompressedData["
1:eJw9k31Q03UcxxEEKdj3t/Ew1imjeDhxhwIiyAH2WYTWqBaBPByzkyA68o6M
IDRkIhETD+aQBnFgK9GMgPAJSYzDT1SEIB7iGCC475dQKMUJDuQhgeif/njf
+17/ve9e934peX90qqWFhUXoav7rp8fn9aOHKPBM/1xIqBDi5+eHK10PU5hp
OzXots0Jf+8NVLkUUFi2sW5eOu2AttOaTEERhTWGW3ZrLwvwTcGDJDs1hTt/
O1ul8ARY6h8hty6jUOOiGX5ew8fb7+hCVyooSFpTecE+fBR+Mu+9UE3Bci44
ZeEqh4ll0ULztxSm1QN4K4xD3cUGq0ffUajnirdHDRIc7bOZHq+jMHnkm6MX
jhH0NCcZ2TkKVstha9LkBNMcf+6+00QhrPSKtMWTYEOAc4u+hcLUex6yQjuC
j2P2n73ZRqEi10brZUlwa9b1Lzt/pRD/ymcZCluC2VqP/PZOCs5bwstkYoJX
m5QftfZQyFAaIw9EEFzSDyia+yhk7YqUGg8RlM76y84PUNgiiS237iD4hXNJ
UN0IBTZmSPT34rAzcNzjzCiFu47J+ksnObSLkwp04xS0G+sD20R8lGdXLX/1
kMLRfL/m0k/5WFYx8/DEFAW3ka7EZw/4aGiWDxXPUogxDotMBQJ8YaC2o3CR
gv5IxwfqOAfcM2fZlLdCoTjoa+f+akfsLW7sDbNkoBgr0V6PE+KTasUfLWsZ
iHKKAseKhOjUYNsWtI6B7ppVbl6jIwa1Xm669ByDgD3SiVdTHDD+RnK9nz0D
cZXMwB0X4MERruZHwuD+3Ky4wMzHqsnWSomAwXZ5burtXD62PvtQ870jg8Nn
1BKDmI9GexeVp5AB8a2aUp3l0ML1t9xTIgb3/LmEPB8O3TdnZIrXM9DKc3Sa
LoIRO8T7ql0ZRMXsto9REkx9qztJ9CKD+X5Ff2Y4QdW7B+PL3Rk0etfVxosI
1qZ7yR28GNw4cCXdtMTDLmVfhGYjA1/XWM/yJzycVOeF2ksYqHbl/GL9lIdE
57P1mA+DiyGjOVGrfv0ah7xtfBnIf+rZcHcTweg2lVuBP4PWbFNdloJg5s0A
ocU2Bj0nXGWxOoJaI7NXBjG41q7/c/cMwWaT2moxmIHph3OK9UkcDi6HLGaH
ru6/t+504X0OF8lfU+YdDPaG5AxJdvJxg1v5xMfSVV5Jl2M9H1/2DTc+Cmfg
XsIpzZsFmASP9ft2Mni9blNl2pAA898+2T3xGoPY9F5DZrcD1uyVtb8fyWAh
0jw2neCEMTbO5uo32P///Bd1SNPx
      "]], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAtP9GmMWb4D8N7vuxWJYWwAW+7/Zv
neA/n3GdWT4jFMAY29D5IqDgP7PM8lkCoxLAKvix/NWi4D9M4aZNHrURwDwV
k/+IpeA/+Sxr15oLEcBOMnQCPKjgPzYwrsKjihDAYE9VBe+q4D9TPOKNFCUQ
wHJsNgiireA/vQGtNmWnD8CEiRcLVbDgP23FIz08JA/Al6b4DQiz4D93Vmc8
C7sOwKrD2RC7teA/3ZAfYApoDsC84LoTbrjgP1g8xa6iKA7Azv2bFiG74D/V
A8z6DfsNwOAafRnUveA/WboJlR7eDcDyN14ch8DgP9CpsRse0Q3ABFU/HzrD
4D/DzE/+utMNwBZyICLtxeA/g2aZiADmDcApjwEloMjgPw9e3MNXCA7APKzi
J1PL4D9zgq9YkTsOwE7JwyoGzuA/sIuzgvqADsBg5qQtudDgP3YxRtmB2g7A
cgOGMGzT4D8HkcRg9UoPwIQgZzMf1uA/VqqLpWzWD8CWPUg20tjgPzu3HwOD
QRDAqFopOYXb4D8ScTnvJ60QwLt3Cjw43uA/cKpXYR82EcDOlOs+6+DgPyJv
+54n6xHA4LHMQZ7j4D8HktAgXOwSwPLOrURR5uA/gdTE8C2ZFMBsVYWKSOfg
Pw3u+7FYlhbA7/nvdw==
      "]], LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAADVGnyFo94T8N7vuxWJYWwGCBXZiV
PeE/4zXHfm5mFsAWVbdxGkDhPyYKVYP97RPAzCgRS59C4T+PiJer16oSwIP8
aiQkReE/cQXVq/fSEcA60MT9qEfhP4TL5RL7MhHA8KMe1y1K4T9iYD6n37UQ
wKZ3eLCyTOE/nHLSGf1QEMBcS9KJN0/hP+4LAnZf/A/AEh8sY7xR4T+a+aVT
PnMPwMjyhTxBVOE/fv+UHXwBD8B+xt8VxlbhPzCYEZiRow7ANZo570pZ4T/j
pX4q/VYOwOxtk8jPW+E/mioTI/AZDsCiQe2hVF7hP+lvGTMc6w3AWBVHe9lg
4T/RlBuok8kNwA7poFReY+E/SH+BNrW0DcDEvPot42XhP02XiV8frA3AepBU
B2ho4T/LNxM9qa8NwDBkruDsauE/OdqRiF+/DcDnNwi6cW3hPwU6oWaF2w3A
ngtik/Zv4T90wk4UmQQOwFTfu2x7cuE/SU1QLl07DsAKsxVGAHXhP3V5Ohjo
gA7AwIZvH4V34T/nA+5LvNYOwHZayfgJeuE/NWD/ie4+D8AsLiPSjnzhPzhT
oQFjvA/A4gF9qxN/4T/bylNqmSkQwJnV1oSYgeE/PQ9duq6EEMBQqTBeHYTh
P+ZleUoK9BDABn2KN6KG4T+16hbSMn8RwLxQ5BAnieE/DGrx07gzEsByJD7q
q4vhP4d9TaAGLhPAKPiXwzCO4T8XZzLvOLwUwLn8D3Rjj+E/De77sViWFsAh
XA/h
      "]], LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAHHZfQZns4T8N7vuxWJYWwAQ1H7b+
7uE/mQdXK+cqFMCrFa2bufHhP1FWW1QkzxLAUvY6gXT04T/HbrddVekRwPjW
yGYv9+E/79x/Geg/EcCft1ZM6vnhP5ggiuXPuxDARpjkMaX84T/EnGJOfVEQ
wOx4chdg/+E/ioVvdaf0D8CTWQD9GgLiP+WbspFoZA/AOjqO4tUE4j/usGme
yuwOwOAaHMiQB+I/RNYQkwuKDsCH+6mtSwriP2RNo1CBOQ7ALtw3kwYN4j/u
Bnp+QPkNwNS8xXjBD+I/cBN+RubHDcB7nVNefBLiP2CIC0R2pA3AIn7hQzcV
4j97wiDfRI4NwMhebynyF+I/Q37uyumEDcBvP/0OrRriP6PGjkQ4iA3AFiCL
9Gcd4j8omCLOO5gNwLwAGdoiIOI/17dM4zi1DcBj4aa/3SLiP0ytjcCx3w3A
CsI0pZgl4j/0zCX6bxgOwLCiwopTKOI/DStPdpRgDsBXg1BwDiviP1HpWq6w
uQ7A/mPeVckt4j/bhKxh7iUPwKREbDuEMOI/ArzNLU+oD8BLJfogPzPiP1Wb
EBGLIhDA8gWIBvo14j96Rb4bQIEQwJjmFey0OOI/sHzsxQ71EMA/x6PRbzvi
P3emDQ7LhRHA5qcxtyo+4j+DW1yQkEESwIyIv5zlQOI/sd2KNuxFE8AzaU2C
oEPiPxvSNvsU5BTAro7iZMVE4j8N7vuxWJYWwCi6Diw=
      "]], 
     LineBox[CompressedData["
1:eJxF0utLU3EYwHHRZhGes7POTxND05FolmPqKsvGk9WWiiXeKjVzmpqIwzTt
AmZFbBqhUTuYSApdNLqusotgyVOxRUljlswEZdmTZWFaWhAqUb3qxZfPP/AN
KShPK/L08PCI+Ns/z1ubJ0d5Am5i9s7OJj9UyvbfkQQCa2b4WEQfwwib+joT
Cfznhp0JFSJGmyYuS74En3bUaA+dWIRxuhttzJ/gd+u1m4l9CtwsK22WAghC
NZEPNZsVmGwLO8sCCQZSB3fccwqYYRo9JS0lOFudeypgn4C7dJdMTEkwwqde
VAcJWCjLPyotI4ihqNCE23IsswUdZmEEM53bbD/XyLHKNFQpLSdItP/Ia3Dy
eETXUsZWEnx51+GaOMijWbazWFIRXK2tu1u7ksdGm6+BRREsnNP6eX7lsMn0
JkuKIRhSTj83d3HYpjuTzlYTuLIiKa2Rww5ZylYpliCuZlgaNHJ4y+azhcUR
fJybn9S5ncMHppcbJC2Bpr0hvTmBwx5d/Tq2geDCEqMhdxOHdpleI20kcBfn
G7/rOXTYvFRMRzC87sL0rnQOXaYnYdIWArh5Lv5pCYdu3dEQlkTQOuWQ5dVx
OCbTLpGSCe5Xe8WctnL4zTbDWApBe737ZN8Ih79MXbyUSlA+fiLBEcSjh/7A
ApZBsGx59CvDXh4XeGs8pe0EXhMD+9sf8SjYv8+KWQSvV719wgXL0d9s/WnJ
IZhSNWTWWuQYrDdOirsJMk+uSOrxETDce8Vni4Ggv7O/qjtbQLV97L24h6D7
gzIs6IGAseaOIUsRwT5VY2+xUoHx+kKXWEKw/tiVgenLCkzyVjotpQTH3QXW
Fv0iTLO7X4hGgm3jgeMVi0XMNrc+s5QT6HrVwa61DAv0OY/FSoKqwePzIgU/
dHQWsYzK/z/+AYy1O6A=
      "]], LineBox[CompressedData["
1:eJxFkmlQzAEYhytN9/+/R21jxrnU7IQR2SjFm3uEWjlKsbIpqqE0bZejmnQo
NRvZCWFJh52UNZSk9UYiI0mZiXXU9k6WMQhlEyWffPjN8/H58PyEspiAcDMT
ExPX8f1jtfGJrzSIgPk8oglSOuLWqUWv120jKEz2fjUpW4DfL47e6gwhOH9h
bVeotQMqnCNPhUgJouIl4iFLe5xzpfNAXyjBnRbd5ver+dg6Z6lfdBhBTu2Q
Y/FVHkZcq5z1PZxgSbtYk+7KQzOxveXBvQQ/jDrL8AdcvFB3uM8smmDF85fm
miguensZ7ubuIzhekrdx62QudmsDSvixBMIlunfSaxyUL29MOhNH0DQtyD3Y
k4P8FtGWGXKCknK7Vb4dLFavPTFfnUhgJdnN2ZvA4rq234xbCsFc8223A0Qs
GiR7PtYfIrjcqJYN6hk82tXRsiyVIHCV30x5JYPCIO/S1nSCCfaVSU6JDGp1
5akbjxI0Orr4pPgxGLyTt/1lFkG3qcHTdi6DP/UHPXYdI+ArNVsyBQwWRfQ7
fMgjiBRe3lRlzuC8j5KB2AKCw1peZOCIHbbta2gzKggWintuxgzbYdSAszrt
JIEg2CXqy6gdWsgVWVZKgmz9w9xeWwZLjb9kimICJ5GpRDadQZ9D4TDxLMGv
nkBnlTeDr8faJ6nOEbgqtkvfhDKYnLHYKFIR1Gme3o/LZ9DRsqyr5hKBSv1t
Xuc9Bq/ncjSLysZ9rSKlwpRFfzYl/24FgXyNS6/Ml8VPhRS5Rk1Q1ZlYMP88
izkC/9XtVQRfCp/xhaMsOp+unxFYQ5A8WPOnLJqD9yY7jb3VENj0pxhUBg5K
VQW6iBsEMTkeC5u9uDgyc7jucy1B0a2LC17kc7G4IqwooZ7gq3X30ONPXBTP
fho72kBQk5SzwRDCw45qjw1Z2vGetSNCXg8P97uVurBNBM2ZqXJBOh9tahkL
5X2CI/1mw8Xr7bHCM0k/pYUgIiO+omuHA65s1GvLHhGkvQrpdRgWoHuibvm0
1v///gs9U3rz
      "]], LineBox[CompressedData["
1:eJw9U21MkwcYrOjskPdt3xbbWdtN6QgrwtAiaK3VB2hZp+PTDmQs8iUwl9KV
pCp1wZRhdBjnF5OlY8pUcEyMTDKHcTB4VMicyXQzI2SkshHm+8iAprqUkbXA
uj/7cblccpdcLrmoMvuOijCBQLAhhP/4S8dlw+gUD6w30FXwiRwfJw03eqZ5
uFYaNffmXRkOdP36WZOPB13hVo/VthxbEzxtWX/x8LqllD3piMT6K6NXhTM8
ZP45+tX6LimWasa6cZaHuvmIamGkFFMujfcfCPCQcUa3wnlCgqvV/N3EeR6C
O+vfU74owYWWJz9PCggGmjo33P6Ww1Hl5EjbYoIjis8rj5Vz2OeeHt+1lOCd
1f6eyhUcnpP5puThBF7Ztarmy2KsbXzmfxBBcPrpmZ44rRjfFvvnG0QEmZpN
g9cHRaj/6G9hmiSULxrS3qsQoSL8Hy4QScDUZTm2cSKcPRxUXJcTiHX3O8wD
LA6HLahtCoL+BVv1cx+w2O1aFB+jIpAnN0w9TmexKbg4+beXCOJq1qbukbK4
98DSre4oAt+hiU/VPIOWmefNudEEzodKex8ymOiIyFn2CoF6uqbTf4FBiY99
604swZqWU6dPHWXQV8WV1cYTaM6GBXfXMPhgQmpNXktQXD+bnmNlsLNStter
JbC654tTKhg8Pv7CwfYkgnFbojE2pKtKVh4p2UjQON18KTzkf+OR6qRCT5Aj
rPRO7GdwTeEq90NDqI8n+11PA4Phw1EXjgFB6quTPXPnGXxiie4wpRH8Ur6x
dV8/g9//FPP1nIkATMYlzj8Y/CIztrfbTBDsFZS8xrF4+F7coH07QV38h7e0
RhbLzQn3NZkEd+zfmM8dZNE4sG54LJvA3zrkXIQsqlPX/968gyDXc+Oib5kI
w/qSJyx5BNmGmHZVsQjH9LpnTAHBocm8W0XfiRBv6AODhQTCph/lt2PEeD5p
yxLXLgJDS3p+41kxurqA1ZUQvFy7eZ2O47AoIU3+tIzA1V+wUlfI4ZYrplUd
FQRmu+GHi1c5VGnMmt17CFRFNQ4TI8FA2zatykrQ0Z2i+dgpwZGoDP2QjaB9
004vMyPBmy1ZxhPVoT03+xfGjkrRrczNMDsI9vUmuIyGSKxxW/IE+wlEjhGx
Sbkc82X5RTedBHnH5+q2p8mwMLpT/Oh9+v9P/wKQ1Zqx
      "]], 
     LineBox[CompressedData["
1:eJw9U2lMVAcYXKBCWd5jd1lAtBu0LTU0CkGKKRLh46ogR0vLIYIYwQBazgW0
BeRKwZQKptKKBavIIZRDENbqiot8xrKxEBSFcssWF/keQlmKHDYcLf7pj8lk
MskkM8m8G5HwRaQ2j8dz3MAbljrENxXlEbCzK83BxaYYuG8k3PIMwVyNg6JI
YoqDCUEusm8JZPE8v5IuYwytfLLd6SxB+HWPVlWfGMf6fXi/FxJYDRW9tWgk
xnD+Q5X/9wTVDXp3XiQb4YSjW/tYEcFs+f2wG3+JMFp678qJCwS2xyryrdNE
+LJqb+bCRQLt8dYYfxMRxg3eDMsqJZCUPHf2UwhxzsDGkX+ZoEVUWmweJ8Rk
qJdcKCNIPv8kY98OIS4l7VjdVkHQVdafrtstwNTq8pG6KgLhNeRtDRHg6pDk
7p4agvvhgx375w0xm/2pFGs3dIOnefSPhqjjIk7zbiCo91hrOwuGeCbl3KH+
RoLJmGy5Zp5F/i/6e8ObCVxNin7VXGexcCTXbEZGUHLQ6ZhOIotCAe/1qVsE
ayv92XJ7Fn9wTR/QukOQnfShuEmPRdNTS7cK7m70U95IKR5lsKRWWrz5HoHz
x+EGO28zKHk2c7ICCfwO7s6wu8hgmfB4oNUDgtUEd4/c0wy+5662k3cQ9Iba
VC5EMXjtqyPGbg8JnL77tD46iEHL+qFX3Z0beTl8mdKLwfqxgN7gboIjeyy6
tNwZtDbqaVE/Jug0sI0VuDLY/Il3UfxTglFVodvMhm+XqpT+00egqojZfsmH
wdsNLp/nDhD8WwC8Dw4x6PCnwkYw/GbPOYeSLxlsE9sLS0cJYtZkPWwOg84e
Mo2FiqBRoRkt+5nBB2nWj5vGCcwdD3yU0sbg/sbaRocJgt0hVtZyNYOd4xbn
OiYJpn05eYWARV+Tq3F+UwQDofzKky4s9ni+4zsyTfAoWPlZViqLAaeLd0XN
Epj4KoclchYHmkTM33MEi6q8PxRrLIaoC6bTXxE0HF/pfu5liM9M3+7SXSKI
CIxU77xqiEe9vqk7/5ogC5e7AtYNUZ2xni9ZITisaR1xiRJgVHPqiZo1ghfz
2yb0hwQ4NbHgacvj4OhL9pL2LiHGmiVatmlzsGl5PEqaJESN97Se5yYOZFd8
UtUoxKSsKHqqx4E0ThCnMBPhYsu4MozPASYt5/eli/DrycPVHMNBUKZ9YvOM
CFe2DOYlCzgAC5JMxhthpq9/5LqIg3ZJXSzqiVEr55F7vjEHk8PuqsvtYsy9
ecDCeDMH+lxMxGCVMepxv+mUbeFgIMPs/YBeE1zVLZ9q28r9/9//ALbO8gY=

      "]], LineBox[CompressedData["
1:eJxFU2sw1QkcNSxN9b9P7tUSy2RsuCYrUsKv28Za2ayaCt26hjwjeY43eWxX
2rWs8ihlbtFG5X1lkV/SUlFN2smjDIv6JTEey7Lb3b37aT+cOZ/OzJnzMPaL
2B+grqamJlbhP+43XH0ZYErAmvmrzuuCEAecpan9mwkOjSSkaTkJcIM8/6Kn
BUG1VVh4uIMOeivv33lqSWA2pNl3LEobS32WfvvGiqDoASS09/JxSLF54bE1
QcVYocbiLj7qax/hutkSNOXYRMp6eCiJ+N6yx46gZCXe017Kw0uPO9xc7Aki
31n3bFDn4avP54O6HAiU/Y0VmjVcNMgyyd4NBLuKDFvCj3Px2OghOYoJYl5U
OBsYc/GyQ06H0x6C0GT/ctceDo4Ut75qcyGYDxBfk3lz8LM/PqzYf01wMN8r
oXuRjb6eRrote1V608CIdSVsLL+138ZuH0HUnKg+w5mNo2uzPZu+JfDtHtbJ
WmGhcWDzya0HCCTmHNvURhb6db7LrTtIELSY4rocy0K54cYbW7xU+awKjWSO
LBxP3PfrLR+Cq/fiOIPrWGjyMn3c4ijBw0eFaVdeM3h8a4NalZRgPKNL41IT
gxV5kwab/Qg0WEf6iwsYfPNed2flcYITn1gUBMcwaOrq5mUSRKB/9vrhSR8G
g64lx8pDCH5YPk+zzgz+rFZTYBRGINa014uwZZAkYzWXTxL4fRR5eZgxaNai
3bcxksB6+5OvMowZDBW4TJVGEzyXlWQrDRisioxf82kcQZV7b0KHIYNTfVUm
RfEEjfy63Q82MWhh/losSCJoE7U36FgyGPYdR/pTCkGa8lRIsz2DN38XJ/PS
Ce5Z1s63ujM47RRTkpdBsClFyNvmz6DlxUoFK5tguFHBh1QGTy4P9OeeIRiq
73RdKmPw9oH1c2vPEviMTF053cngTI0jW3aOYPXplC97msEtzCkLrTyCRK0R
4+d6LDwVLHfNylfpBU8W1nuwsLbrRYB6IUGzRsewZg4L54zWZKZfINAMaqsW
PmShdcqOcmWxal9/Kw5f47AxavBEe/JFlb9lr2nTo2xssL08tFqm6lP4SiKq
Z+Ni/rPl+HLVXqq7o45yOGgzoy5YlhNkmm/bmxXLwVg3W+vYCgJXf+9/Cic5
qKgM8li4TiD8uKdeYsXFJfXSsMgqgo6smOtWMVy0k/bmzN4kyI3a/kjUwcX4
VmVleI3qP7Vv2+L4PLyj+0XX+zqC4C9rpeciePhntP9YSCPBDce7N0IHeLjj
2XnlWwXBldLRq70efEwU9egHthBEZ04Iigb5+ItsdftEK4F5fKOkLEkbVydE
h/zuEihmq6fNQAd3iqXRo0gw80HPPcJGgMll+T8eu09we8LapilJiDHTb+D0
/f///y9bGAY6
      "]], LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAPy2jxZL13D8N7vuxWJYWwPfLVO7L
+tw/DY0+EYIbE8B4LU+zOwDdPy1wfh5hyhHA+I5JeKsF3T9EgVC8uv0QwHjw
Qz0bC90/XY9np3hvEMD5UT4CixDdP1Qd1KToBhDAerM4x/oV3T8EIGruCHEP
wPoUM4xqG90/3JehbyX8DsB6di1R2iDdP5SrvPXcpw7A+9cnFkom3T+AX8m4
xm8OwHw5Itu5K90/nXLheUhRDsD8mhygKTHdP+yrqGgPSw7AfPwWZZk23T+P
dIfM0lwOwP1dESoJPN0/K8fVE0eHDsB+vwvveEHdP7pMGD48zA7A/iAGtOhG
3T89dFxO8y4PwH6CAHlYTN0//JcHkc+0D8D/4/o9yFHdP332oTJgMxDAgEX1
AjhX3T+V1fXNLaoQwACn78enXN0/F4CkK9lNEcCACOqMF2LdP/R0OicjQRLA
AGrkUYdn3T8t2JS2EfkTwA311GEtat0/De77sViWFsAVVrLe
      "]], 
     LineBox[{{0.36035062315722083`, -5.646822720529156}, {
      0.36051578249458316`, -4.5533873259675595`}, {
      0.3608461699673936, -4.249487014023964}, {
      0.36117655744020405`, -4.084140214676651}, {
      0.3615069449130145, -3.9808926788815597`}, {
      0.3618373323858249, -3.9162185976394994`}, {
      0.3621677198586353, -3.880313933834159}, {
      0.3624981073314457, -3.868874920643305}, {
      0.36282849480425616`, -3.880651354993215}, {
      0.36315888227706655`, -3.916852733309281}, {
      0.36348926974987694`, -3.9817044665628814`}, {
      0.3638196572226874, -4.084798583122924}, {
      0.36415004469549783`, -4.248911708206746}, {
      0.3644804321683083, -4.546198219029236}, {
      0.36475134645504925`, -5.646822720529156}}], 
     LineBox[{{0.993841557905284, -5.646822720529156}, {
      0.994171172239663, -5.4317891678237835`}, {
      0.9945140432615796, -5.242930849386113}, {
      0.9948569142834961, -5.079777559085078}, {
      0.9951997853054126, -4.936413287429913}, {
      0.9955426563273293, -4.808781193556025}, {
      0.9958855273492458, -4.693978208243399}, {
      0.9962283983711624, -4.58985539280433}, {
      0.996571269393079, -4.494777633641987}, {
      0.9972570114369121, -4.326928455548191}, {
      0.9975998824588288, -4.252331930423259}, {
      0.9979427534807453, -4.1830156255616355`}, {
      0.9982856245026619, -4.1184271069490626`}, {
      0.9986284955245786, -4.05810373249236}, {
      0.9989713665464951, -4.0016543312717845`}, {
      0.9993142375684116, -3.948745340149906}, {
      0.9996571085903283, -3.8990901573138372`}, {
      0.9999999796122448, -3.852440857297895}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -5.6000000000000005`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.001, 1}, {-5.646822720529156, -3.3297799176950327`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748007323684642*^9, 
  3.7480073980316677`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXuQVdWaJ5hFvkD06q1b99ara+ZOVUxXT0RVT1XN3O7pipiJmumJ7umI
npjuPzo6YiIEUVHEt6KYCQgkZPJ+iDzFB4qKcsUneVJeqbxEeSiIgAK+rqJ4
QbgiXLhA5pr1rfX91v7W2mufs8/Jk5ng3BORec7Ze5/9WOv7/db3Wt/6v4eN
GjH89mGjbrlh2M///T3D7hpxyw33/vzf3XmP3lT7BzU1fzCipqbmg5/X0Gel
P/I/87qF/vGXyOe/MG+16qabblL8svv/Q/b+f2X+D9b/LqgTu1ao2S0T1IQJ
rWr+6o/U6S69+fR+NWPUeNV+9Iz64rlmNXLESH2GkSPp/z3Td6jfdNnz/J35
PyjHeS7oX9r7OHt4gRo7Y4861a1q/t5suzrP75XqPq+O7VihZk0Yq8aMGaem
PtGpPjvbXfMP5Zyj65Ta375ITRrbrJrHPKimLXtDfe7OcZXq+m6HmjZuqfr0
LLeU/G38/DUDSjXzlerit5vVjLHz1dsnL+qnOKLWtI1Viz84rbq7z6lvvzmm
Tl/oVqf3LVYPztmqvr2ofsGtmuNnRVr1mlyXvXBsvZo6/km1Wx9jWuf58erB
Zz9T55TKf5oudeq9BWrMlIJuuG5zmg+ee1CNe/pTdRan+VG6bcVdZF5CqT/I
bl7bTgPpVOq7XdPVmPkH1Jlu2tilTmxuU2MWf0w3YDuoXvffCbVj2QQ19uF2
9cHx83Ry7vgflzoFv86oA/Oa1L2jm1RTU5N6YNStasSt96rmaS+rr86rmv+x
rHN1qZPbpqixSz5x2859tkyNa92gjl0EsPKe63fqixXj1aTCN+qCO9cT+lyd
6vhFiEOt7AAWm5JNl6vxL6ijq1vUhJVfqvO887cH56qmqTvUd12qFo3ffVZ9
8dYKNbNpnFq0/jN1VshpiVPw66L6dstC1fbMPoNqIe9JW+U5zXn19asPqjtG
P662f/M71XXhpNrz7Dg19snD5pbKO5dG7f5lakLbK+qj77tU94Vv1bvLx6u2
l74g+JRo96Lnz9vu7bEz7FTfdat6c1id6jpzSK2e2axmbjhGwvF3+X5tIdNg
oLx7Watauv2kOh22+DWlzsKvC+qbjklqzIKX1fKHJqlxzePV9MfXq4/PdP19
mTejCeNXL09Qt4+8Q917+0h196xN6vgF9Q+lmjn7zLKZTSv/wnW/hUXzPC1t
3Vb6jm9sVWOWSNjp7j/wtFr68hENQPs6+/FiNXbqNnWyC6I0sNS5AJDuMwfV
L6fOUx3b5qoxTOQhC5S8nQ/0b2e/R7+1W86fUt+dvmCYLuft2MZuVOe/flVN
evAptUcT5cWzR9TWeWPV7LdOanoA0dWbDjn60V61e9sqNb45TiwZlyki4P+K
76DrxBY1o3mO2vjNedX120/Uyy3NavE+MybUuLs8oq885nG164R+SBq9niMo
mysw/Iqfx7GT/nbui4Kaev9t6q5pchTNdx/d3+9Vj4xtU6998lvVdf642rV0
rGpbbxBX1nnOf7lSjR/3tPrg5AXV9btv1Nvzm1Xbm8d124lW7zqtDq57Vi1s
vVfder9t9boc1yjZ5A0GLsd3rVSzxzep0U0tav5r+9UpcLgF4JEty9SM8Vp7
ahqjJj+yRh0+0/Uvze4r1JmzF9S+T46rk9+f4xNHzwZmot3HNs5RzVbY/z7n
PehnOfurTvXYtAdV06jRqmXpBvXlue5/yPnrrjPqcGGJmvTAKDVqVLOa+uRG
9RV+XavHqI/VM1MfF02aecYiWt+9vG3H/q/VkInt9F7z17yN2uimqWvUuu2f
1TyXfYq7zP9BavPuL7WKsFmNX7pFD8mbcTp1+MhJs/31bZ9qzcr+ftsHX5lt
7x38huVpkHrwkS3q6df3q0dfeV9NfHSr2nHgaxyjn/0d9fDKdxkDV6iFL7yn
2p5429wi/W55xz7TlXTNwlufqG17zfkHmAv8lTkNne7jL39jPq/f/pm5d7rM
Y6++bz4/u2a/+U6npFPRcS9vOmz20fH0/fOjp8z35YUP1KTH31LnL9jh9ZGX
dqvWZdvc9+fWHTDngnS9d/DX5vebd3/h4DN3xU415cm30Yzq1yfPmN+80PkR
H1Orjhz73jxex7ZP3DY6J137idfedwr1c+s+NNv0Ody26cvfUQt0MykHWduj
vJ1lplatWLvf3Lv8LV1jmj5Od4U7jrbNfHa7mv/CuzX1vG3lhg/N/b1/6Ndu
25PtH5jffvb1d27bpve+UGO1SLy88ZCRUtr2+rZPzG/1O2+rM887ffl2NVu3
jf6MzdQ081buUrOe3aEOfXGykTfv1oJBR9IufbVBpUS0Vi1/fZ8REf2n24T+
1xm5+PDzE2a7bhtI6C/f+Mhsem79ASeh9P2uuZ1q1MNvWknTj0Dvz649oIZN
7lDDp7zOTfjH6o7ZG8w+avIhLe3q3nlvmOeAhK7i89NvcZ4lL+9R7374jfk8
dbkVjSETC+q2WevN5/FLt6prza1TZ/2MPqumRZvMvgUvvGt+t2Hn5+b76Pn2
HiGC9+j7xv1A9On3uuHM99e2HDb7tShDQm+assZswosOpe9NCzc5iSIOpdOM
f3Sr24bHvG3mOidR4x/dYrbp491xhBb0Bo4zzcXbIHkPLNpoyeTAUXccrpEc
Vye30Xnw8wl86ZfePOgEklqUe8Jte5qF44GFG52Qznlup7qupUNNf/odJ6Qk
dtSj/DjYjNbh00JIqa9xtH6AHEK6QktESkj3R4X0xTcPlhbSt6xw0WmvD4T0
LiEU9C6FVDeXO78R0rfSQko4t0La7gmpfmAnpPTwTkh/GRdSumZMSCc9vs0T
0tVbP04L6eu5hJRuo6SQLk0L6fHfnM0npAt7TUg7UkJaiAhpgVjcCSnG8yJC
2hEI6cQ8Qno7/4KY+hEtCQd/dYIkq644mSZy+mHV5JTuIK+cJmTae3JKv+9H
ObVNU+hPOU2TaVXkNCTTlJz+sW1RLab/mf4VsR2uqvK2H+U87kq+f+pg2r5R
60Meao5K1NRHzoA2LIYkOl4i6dmcSKLGpt9mIemRl+JqyYhpa81nQpL+fY+Q
hGfNhaS0WkI/v3/+m2kkLS2NJPptGkmlGR/NrTkvN5L0b7KRVCeRJA8FmHSj
BmAyZ8wCkz1rPR5QAqqmkffZPl5tH0T/nE430Oy7pAGkTdKqAeiv8gDIXJkG
PBp2YiDCnUkQrbj8QKQfpX9AtD8NoqF9A6JJhTSIWgrlgOgl7u/LDETUQH0L
Ihr3uF1/GCBK63Q/EBDdyI8WgGj2ih1Waw1ARN4PD0QHvpZWb7kgIjkpAaL/
NbLtb4WA4+arL+ChwVKugA8JjJZyBbynRksPBZwfJZeA3z5rfQ6jpQzjOiLg
OVStiY9tDQS8Vgq423Y/t9iYxZudJJBrlKTbM1q0IDm+P3AUmwPJziHYV5i3
q22YpGOxah3bpJrHtqh5WgxOkmnppYNEj/FIAGJ8e3BHHUWBMJDPQL1LN3vy
+3OulSsFwpvv/qpHQFjyUszLVCYQdnwWBcIt09a4+7nMgHA3N2U5QBDWu3nS
HEBY/OLunEBIDI5SQKgLgcDWu32juHGXOvXuw6p5SkEdPnVRdV84pt5ePE7N
2nhcXZTZO1nHmLvsERZmLH+ngUFLjU+dvG7752YXRTNSmFjXt4PDo6++32uY
uLGt41LAxG4XD8yPiXseyocJ6VOqABNk/EUxMSnbo6U/V4QJ8xzd6tSeeWrs
qFH62yj9/49U08xOdQxZUxouZz7Zo/Z+fU4he+Xcp4+qcVO2qhNduY4pGy0N
HlpI3OhhXVvWu2d/svDBJYOaJ1Z/0GuoqWK8oieoIckvFzX3znuzDNSsvhxQ
Azv47KFFqrl1k/q2K1Ho5TbzuMYYGcp76SEpkkHfBuVHwPWtHRDzEAHL2vcG
CPgXTjqfLOwz3ohDX5y8lBBQDQBQkoMcNjB8VhEAt0xPjGZpF1QDAGKI6Ith
Q+O3qgC4gpv43Jer1MLF7erAyfPq4ulP1bqZD6i2NSbh1qWfFDsmNjAME/d+
15zOKFQK5UHlgD9YkD4cQuXx1Xs9WJQIGDqo7D70az8Do4dQ0UJ3CUFl1MP5
oHLz1DVVgco9D71RbagMLwKV+x5+M2V1NDuHUy6ovLb5cB6oNKgLR9tVy+ip
anbrONU0ZrKat2qXOna+u7b47pjN7QNkQ1UAcjQHQN6vCCB07tvZUf7DA8j9
Czb6AJlYPYAgzbAfAaLFqyhA3tp7pBRA9KXyAEQ/zJkDat6Eperjs4kyJbc1
9jEU9mVD4bX3gf0fIhSkXXGJQCFtL/QqFDpyQOH61tc9KKCTAyjIISQnFPQx
F46q18bfpm4ZOZKmF+q/e9SMXd95SfHFjimlVlGuNZ/FDD4kaJRs2PuQwXMT
ZNCBVYXMtqpDpmnhptKjR2WQuS9MJMmAzIhpAjKLqgmZFDwyNuMMTQvtw2qr
siLU3KBRkxgo5aLm6SSrWqAmFrQrJu2mc/T9ZUm7yIAtS9obsqR9AIl7zf+S
KewIYfSysJuMEiMWQtppQkE/SLtJbZ4YT0D0pX1TxdKetrurKe151KUfsrT/
k0sff7KwN8Ltnf0u7tSpWeJO95BX3K+1z+2J+xOr95Yj7ujhH7a439hWLXFf
t/2zHoh7y2Nvmck9vSPuuE8p7iS21Rb3V9m6qIa4b9lzJCrut81c532HJXxJ
ibsfZD5/oQs/h8RrK7Qcidd2dZLusSm3xA9tSUs8HZsl8fqzL/GFYhKvr5ZX
4vU1Q4mH9Xl5Szw+96bE3z5zfbUkXhq8eSV+zGKW+AP5Jd6JcSLxWrbKkXh9
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
o9hudJQrDJd2Igd148JVjiWLyH403biTfwSRwQvFV6VuiZCw7g4v5EHbEu96
nfME0l9H0i9oZB7/sBkOOqpjY2ZF2OZDk2ImRCI3CbQASbkPTo6dLDNE4egS
GAJi/ovoyk7PD510c4OXOyO6OrabXrImt/DBWqWbTZsaqGghKcsc5CKo283b
0pRaa+iU3Z9uGy4j9Rg8CjcFNqN1uauxuUNsbqOaWrbdIF2IUCYu4UQjeooT
k5OU0Hrj0KRtW94/4oZ09AVpMsHcZLdP+qjxQOgImU0i+hi7w1RBNhPlQgnS
NeSto9CYIleJ+SIdtU90FKs7qVhjkiZS5zkA3SIydU6pDDbbJ7bFj7UqXcub
6ShMCRQrsgMbwBR5FbAP7bV668cpKoNXDO2bTJpMlmpPB/cbvCxjEZxwu4O1
5nl8ylqXikkU/RGSpIw/FOmPQ7wNGqPsDxpufeD4ZOaGszr3OExmaHhiDpgX
JtrgNy4q5SQJcwnRgbbJNEDjYkiW8Rbsw/yqtJLY4EWCRG5hbDe9mO+y1vrj
UQ8NH9IdkEwDapGG/4y3va8P54ptqZwniiegKSU76VPDcWEWC6ClMNteTx1K
+5xPLqEmTLmWNILWTi+ZlLR6elT3V3gQvRLbTS/u2Ngi5qJwPFo2zIaT4V9u
WbsOy9X658fU2yseUq0TxqmxYyeomc9uVUd/1+0vrdp1Wh3sWKxaxzap5rEt
at5Le9TJC6omVs75K95G4z57p5yvCLqyjOLBn3LdpKTH0N5UbENbbXW8WQq+
fhK0MvgUhmji4kx6R1R9cj0g3O+SA2K7xRwf9IAcblO7G1NF1GQxFe4Bu9bV
jxUtUXfy7Vmqec4mdfS8bvkLJ9S7j41Vk177Wp13i1t2qVPvPqyapxTU4VMX
VfcF3WuLx6lZG4+ri6KFZU8cFy0MEzvMlhq7ZLPrRfTO8LbXa9DkBGjMPnVt
k4zstGius/WTntjCYwzlkKM55UxIEeSI7YYD/cU3DqK15ZgpFBu0dshDcuoI
t7a5kVLrC55X32xYoV76yKw5YF5nPpqjmqa9Z1caNa8udeaTPWrv1+fcMec+
fVSNm7JVneiKrlaCfiCc8pjv+uF1Tqkilyf6gUYvKh3T8thbrh+o/1DHTZ8D
/QCpmmpX7EE/RCb51WAfRgiZCSr30XY5owY9IJNbBTmhB0K+knEs7oGr+Ka7
LxxX7y4bq8av/EL9TqkGfuyzhxap5tZN6tsubh6zdttvROPR4xC4pe+IH9Pb
RgYADQBoPIwrdqJyJ54WpLiMOYJuFT+BC4Nz2Or5J/CnYOrzK5sPuQbC6eTs
R003aCBJJ/SS7c8NlKyRcUEdWz9T3TdyhLprWkF9ca7bafnnvlylFi5uVwdO
nlcXT3+q1s18QLWt+Ub/Ik4Cv+NtlIxKd0/Ui7YCCdw+a4N7cPQjuSt1W6Kt
0ISzkplynmyS8sZOArQVzFap66GtpD4n1ArsDn3V7FL8kW0my5t24aDzxz5S
B744q8h26f7dUbVlZrOas/M7+g7v5oWj7apl9FQ1u3WcahozWc1btUsdO98d
G7vO8zZhw7pGBdRun7XePTlIixM1wzacsHQr3XY9b2aHPfx+aCfaRHYItKEE
rL5+JUYQ/BRYphd71Wq4ka5geTnz0SI1dup6dUQP6d2/+0pt1vIyZcsJaiCn
NKkzB9S8CUvVx2exXIvfLOb/H/AOeubFWg/68PPjnDJT64piLXB8kbQNsZZb
473OKZucqoQnwRgltSg0gqQWUZETP5VpohzU8BuhwYyoO1fOVg8+MFqNvq9Z
TVn2hjpyrhuY0iKiXht/m7pl5Eg10vzdo2bs+i5z3RnzfxDvmKkVEsow2LDz
c9ceBDQKVFEuFh5c+pi0rODuoSKm6TiBAY2JqDj965O/xU+pvRCtYiHCg8fU
Zu+uiU45E8jdNeY0Pb76fXfXr4n5uXo4xmYoP5wK38CbIY9sMTbw6WU2DlLU
St3oj3nHo69ajnrxzUPupowJ2+LcDeG9ck48bgpUzsEW3JRM0IA3rtRN/SHv
IAUFOyDvyCDgMdK714m2PKS+JG4KoOckfdwUpEH0vHdTyT39Gd8KsezddlKX
ax9UkuLhHNfEE3M+Aq6JvsQkZTJSSjXEX9E/hEeQAyJbYxar6d4t1Lsu+iUr
Ju1vfZzvWnoHFXCg6phkU+ORZixPLqPpAZfBkDLr2Z25H+lv+JSwFLgfccrt
+10QyRFUqVP+Le8YPf9Nk7qnLBmZy8DpTn83TXn96jynGkCwHciHoLA2hYBL
/fpf8w5wEClMeX+DZXnom/xN8pP/UOJMP6T9qac2n2+xn2v+4P8DV3C3Bg==
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"HankelH1", "[", 
    RowBox[{"0", ",", 
     RowBox[{"-", "x"}]}], "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74800824834142*^9, 3.748008262394931*^9}, {
  3.7480084252235317`*^9, 3.74800844603986*^9}, {3.748008524823164*^9, 
  3.748008528655003*^9}}],

Cell[BoxData[
 RowBox[{"HankelH1", "[", 
  RowBox[{"0", ",", 
   RowBox[{"-", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.748008262831562*^9, {3.748008426532775*^9, 3.748008446380327*^9}, 
   3.748008529237729*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"BesselY", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7480084680990963`*^9, 3.7480084896207647`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
wd80FlR1nOZoPUBCK5Pq1rF0Fqx4L08+7EjCrfIrJQsyWGAW3bim6wQJze9c
F7Z7yYJ7noHbXXxJqLRwr7+RzfQ9Gw/2B5LwhirzlUImC8SVf3ocu0fCeNrK
sN1stl566D+UQEJGpHTcDjbHfTOJPp1OwqyKpUkymzvy519M5JFww8BYfhk7
nlzUqyLvUhLmrtTjMGKz82nnxpk6Eg4ePzj5lJ1PsrHoD79vJAw3/5HSxM63
n/Z5bv4nCV1PZm/qZtez+p/Pyuu/SZj6NamKYNf7SOPUcxEOTuSgvlBzYush
YOdq+GwlJ/bK1lTWsu8h/1u2TTqrODF1vPGLIFvPiVyzkxXqnLj+dI61PFtv
V9ZODls9ThShxcVysPvRtHJL3OAuTtzrPZr1LoEF70+srhRw4cSHspf5Hj5g
gfrDVY6PPTlxXDU0oSyGBQnlYtNaVzhxnV1eGhHJ9rvCEtXyASc+dj5UtzGU
vT/2zRT0p3DiziuHN2feYoH75ZH9F95wYpR9SMk023/GLa3+cbWcePlJVRXH
FRYUkuol1nzjxMEV5MQKXxZorCvPLBpgxzfj1nH0ZoFwWE57N4kLBa9HW/Cx
/R5Q8OLsWREuDHaV11p1hAW/fyTykuS5MO/36otc7P3RCnd0VfS5MHZ7z1/L
gyww8bpe+86IC035tcMLzVlQlHDBfc9BLqSEGOjN7GHBk/9co06d4cKr5XKh
o4YsOJ61ZezNcy5UK2ud76GxoL19XfDOXC6MuuG2YVqWBXt5VWVbCC50/W00
0C3BAm03cZPZDi50v3kkcDMPC/5QRlO3iXGjgy1pBamuF07s7jNoVODGSKsf
HonFvdDh3cZwXcuNgZ9s039m9kJJXfly8B5uXKGesiP8Ti/cDnrsUHONGwe9
QvavZp938zkxvx3CuTFHvljGVKsXPLvvhI4/4sZi0qlyRdlesND3LRDN58Zn
lFL9wd89ID1hLnFohBtd5fjODif3QMbh5ZrvtjwY8NXOU/xXN9je1Dx07wgP
EnedeFd/6waunEPf9c/x4GiLe9ffz93gzP1m4W4oDwpUFNwdfdAN5BzXtfof
eXBuocN8Tp99XnN/vhtB48Wcx80enBe6wDHnpsWmMV7kEEp7BqUdINDxpqt3
jhflIjJFdqZ2QAF394kwHj5c1LhVJhbSAeL2mwJ7Ffgw4shDN9l9HVDNPfA2
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
h+truDZo/nt5WRl3V+Q2TAW8gv8Bi9G46w==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-1.2261510349074851`, 0.5207846351923308}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.748008490184271*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  RowBox[{"Tan", "[", 
   RowBox[{"x", "-", " ", 
    FractionBox["\[Pi]", "4"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.748010412305326*^9, 3.74801042089614*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"Cos", "[", "x", "]"}], 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "x", "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], 
        SqrtBox["2"]]}], ")"}]}]]}], "+", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.74801042162473*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}], "h"], "-", " ", 
     FractionBox["\[Pi]", "4"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "4"], "+", 
           FractionBox["x", "h"]}], ")"}]}], "]"}], "\[GreaterEqual]", 
       "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748011223122922*^9, 3.748011279759616*^9}, {
  3.748011341857725*^9, 3.74801134765905*^9}, {3.748011384895165*^9, 
  3.748011385367524*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "h", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "x"}], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "x"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
   "\[Pi]"]}]], "Output",
 CellChangeTimes->{3.748011307261312*^9, 3.748011355390821*^9, 
  3.748011392489564*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.748011373520321*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}], "h"], "-", " ", 
     FractionBox["\[Pi]", "4"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "4"], "+", 
           FractionBox["x", "h"]}], ")"}]}], "]"}], "<", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7480113926447487`*^9, 3.7480113931228447`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "h", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "x"}], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "x"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
   "\[Pi]"]}]], "Output",
 CellChangeTimes->{3.748011404173181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{"Sin", "[", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                    
                    RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                 RowBox[{"Log", "[", 
                  RowBox[{"Sin", "[", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                    
                    RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
              "\[Pi]"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", " ", 
               FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
          RowBox[{"\[Lambda]", "\[Rule]", " ", "0.01"}]}], "/.", 
         RowBox[{"x", "\[Rule]", " ", 
          RowBox[{"h", "*", "n"}]}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
       RowBox[{"z", "\[Rule]", " ", 
        FractionBox["\[Pi]", "3"]}]}], "]"}], ",", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{"Sin", "[", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                    
                    RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                 RowBox[{"Log", "[", 
                  RowBox[{"Sin", "[", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                    
                    RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
              "\[Pi]"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", " ", 
               FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
          RowBox[{"\[Lambda]", "\[Rule]", " ", "0.01"}]}], "/.", 
         RowBox[{"x", "\[Rule]", " ", 
          RowBox[{"h", "*", "n"}]}]}], "/.", 
        RowBox[{"h", "\[Rule]", " ", "0.001"}]}], "/.", 
       RowBox[{"z", "\[Rule]", " ", 
        FractionBox["\[Pi]", "3"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "400"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.1\>\"", ",", "\"\<0.005\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7480114519977217`*^9, 3.7480114535720787`*^9}, {
  3.748011517392516*^9, 3.748011587453003*^9}, {3.748011660996402*^9, 
  3.748011669047536*^9}, {3.748011739152382*^9, 3.748011906207889*^9}, {
  3.7480119653021917`*^9, 3.748012123143715*^9}, {3.74801237023949*^9, 
  3.7480123968821487`*^9}, {3.748012460214163*^9, 3.748012464103382*^9}, {
  3.7480125166760817`*^9, 3.748012560877966*^9}, {3.7480128803022337`*^9, 
  3.748012962336335*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
oMzwIwXRci0Xv9tGYnZMyU5yiAKDs7Lde8/GYaPD6TXOzxRoUxdnGqaSwP36
262FMQpY0M4UdSwVotr6tv1TFBzR1SzyWU+D+v0rq4+nKcjwU/Dc5JICM7Hl
0uu/6P0iNRW3LyYRrpfsbI7PU5BPiVnaTNcbIVyVK35/KbjS/H6t428Y0tK3
lFqvULC0e+BUf0ggCpbcrJUZqChu/LTr3YI7bvk//se3kYqZOcFtrAt2ePCZ
p2R9MxXMcxtok2qXtTrsQ63G2Kjg3/uf3qsfdhh++Xr5BQcVvF0z1LVpd/w+
LHrzzg4q/stqTiPR+31jdYpl7m4qrjN1ci59DQO38NBSxB4qvrRRp9wFYyB6
XuWGEz8VFskbuH86JEKdPdcCB6nYq1wWampEzy9l+q+QCBWfO8nvpb6kweWP
wfUtElRcmI+9Pu6TiiCfq+Yz0lT8K2US1nudhNThf4tv5am4c0i5RJgShwIb
wrU6ZSqUIxQ3lwpH4lbrPbOL6lQI6c/xs84E44E622LSEXr+68baV/280XHX
46qHDhUcq4uj06vOGBZ8ampiQIXTQGmdnZkOfhXw/ZE2oeLbhrH7G8mGYGQL
L95hQYWUnIKBqRYFOxPfmPy1pvs76z5ru+kD4TmxhUF7Klq/55Sop4dA1TPt
SpMDFYyt/QZl/0XCZGDYuMSZjkeWAo/MZBycLdXmM6lUhP9Lqfdgo/MJDpnf
zzyo+HXX9FVffyqy3gjNrHhTEaV06P1WpjRcz+H7rhRARWSn198Lssl4YMk5
FRBCxYb2lq+ejXHo5tg0XhpBhdl+L79yvkhMvfn3+VMMFTcb1y0YooOxnvN7
mDeRCnPmq6977nmC22pywCaVitkTKQIlX0iQ4hzqO3mMivv9bG1dlgeh1/X2
fctJKt6IhcsT2ezgdPrF29UcKnonDh45dMQDIVaP3yjnUZEg+E5ART0IJzhr
OwLPUen78ESKTk84irvKXt66SEVBTd+Cgn8s6k5faf1cTIVj911CekoSOq3y
n/HdpMcLIM6MmqdinPPkU9syKh6E5yRLEtKw0pXUmHWHiqpRIbUHx5Kx40zE
g+dVVDj/d661LDQe4tZ+dWv3qah8hY6lvkhoc9FqVR5QkSKYaOGhFQJSN7Eq
6DEVrAYKMv3m3gg6Y363rJmKK24JzwyPkHHMWvf2aCsVgU0l4ib5KrjMpXZr
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
2xXHV6XhLyfQd0QhDnkORlvKN9Egn3U5MTAoCuS5m99+3ULDu1Mhnz0qQ6F6
fU2aqi4NDxKS590fFGEgTMaEZkjDcqXrq0IDuKjUmjZUaETDZ4l16+z7yAj+
OpT3zpSGmKNX2/Ufu2Jb4bvdilY01M8MyNbS2AwJn0cSvnY0PKx84hI0yx43
l9ysyHYg3l9b0VM47I99HVX+PXtoYL1nrh/xZ2LX3iKZZe40pK75N6XUL4As
jjU7e9NQ8+ZBpmNWMJ6OJ/PT/Wk4m1WnN31XBLIuhSh2kmlwmzK+o/MvBn5M
eud8Bg0aBnoXD22Mg7KSR6wdhwZjvvfWszlR+PTcRjNFQODVJvv64odQlB41
fNMaREP40M8onc1iCHZtTJ0ZTkPs8WE3/igXurMVYBpNw60pI0k+sWcnGucN
xsTTcJP69cBjJ3c0hvw93ZBMw8dbPfITprpI0BxwmNxPg7tqmcoNV1tYf341
pX+Ehm+HNHwPvPXDvIIHF4MzaBArNeu/tmbgUOYxT/Zx4ntfDRntU3wsSPGZ
FZhNA5Wi6fzCIwipkcoVbqdpKLY5a3O6MgyL+F89d52hwafKQ3eJVDTSSZWz
zM7SsJ51fsYazTjIuYVV6F+gIeveLLXwvBhk2sJL4yINdzJfr6ebRmCp0ZzZ
ypeJ+P5Kyp75EIwTWzoqVlyhocoy4p/afiFW/JfptfAaDY83lP+d8mMja7n3
7FlNNNjseGlrXk6CwjylSxMtBP4TMxZZ/nNBztRnr8FWGi4Y1Dx4d1QLq0cq
ZvffpSHkgE6okY8N8vpDLj3vIPrh5Ldwk78+WNtr5P2wiwaaatc7VyIPXdny
ueqydMxYen84ciYVV2YFXV67lI6S+49NfqRxof97m+8yeeJcNfN44GER6r5N
l5y/mo49TaccYrpCsO3NncvT19FRMP9j464lkah/lOo7/h8dZZmV36gbY2F0
201yQJWO3/OeWl7TjUVT3eqq95vouLbjcsos5Uig/INvzxY6WIaLmt49D8H1
/FLJBzp0LL1gZbAgUwTTTFHVTQM66lYvmyNzmoub+wz96nbQkTf7gGMesYct
IqdJVZjQobXZuiNrrRdaeW1VRRZ0rOyeL/TRNYc16Yhftg0dpDp61/wT23DH
1VUqbRcdfebVGZNv3WBru6o62ZEOuRvWTd6E77u3o88v0oWO4IWO+1Z/YGPn
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
8L2mbrPZk4u6C9+OYQ4XV9JnNy3x5SKyZP3GEn0hZJhvtP8EEPmla7+PYweB
YVJ3/h2Fi4RXe3I3nQ5Fy/KjincYXMhyLJdNvg7FykHOsYscLrbIFgf8KQqC
+LbVvGMCLgLnMmTVOUKsD578FRjGhYxy6PjGfzTE7HrCsYniQi7aqul0RgC6
lS++3xzHxYK00PGXrq7Q/LPPY2kSFw1bv5EpS82Q8ijwwZ99xPOVrhLLX6ni
3fntFu8PcqEXNnB8zh8HGMYvvXYnlQtpveO+qde88U3zbvGxE1yUfWDctiJ0
usXcQoWoU1yMkjXfSdTwkfs6Kp2Ux8W1NXGxl96I8KvGba5tIRf7+uhfdKRC
sPvwlmjNEi7BH29zT78PQ/mlYktWKRcHtCz+6+cEY96TlQuLK7gQfrqz9fBv
IZjjqc/eVBE41uC/zfN5uL1ydt7Kq1xQ9tQsnqlGh7JxBN21gYvl/i9bsmwC
EB84qJl2nYvHJ24mfnjmjDdJlN/3bhF4Xi2d77NvO4zO9V6ffZeL0w9Px3Tr
G+JUu8N+kw4ufkia7p1h4IyJHzedIru4+GWT8UXlhz/cFxuuvPKUi48kqzGZ
JhqqdS++H+ol3o8SuxsSOMl6Kpeqv+bCe27ydSdi/vlRJ8W090T9OxXEqguD
0ZG3YEfBRy4cNbdE5QvCoH4zYdbLr1zEuZh5/z0VjLkTTw6mbCZ8zYVvXz4w
RKCusnO5uZWHU9oXJ9yk+biJ5lVTejwkdZb57fJmYB1Zp99gOw+MOeWnzxQG
Imbv+XIxePApWxNLfu2GF+fXhFw05+HFJsNN73+aw7DjqPEXax7EFyfMMxQ3
4MSQ5Nz/dvGgryxilOzYjTG5mE4/Rx4ez//P/WGaD5z1R09kufAw5lopY8Wn
oNKLEfDEg4cDH5V7fsgR+inmlaqMLw9pf+UaBV4CcAr2DNsG8iAK89RfdEGM
u7fa6pKoPGwzHzvm+jsEKp93JDQzefgsbnRnjAYjed5lu0kuD1J3zHecyhWh
b7OKnK6Ih4WVeldUbfkw3ZPzgh/Cw8jJP0uUBoh9FixbdCGCB9aR9t/FtiSC
z/dy+mN4cNqaat6wxwNeDX901ibyMPPyMd/1m61R+0bwz2sfDx/X3WlZPLII
S2d+bD12kIdFb8kv1ubvhHiD95GHqTx8UE18djDSC122D93mZf4fj/zRdEcy
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
iQ7YLUS9lmDg+UsOJD793hbnJISS8uREbzjBK2OXfuc5C5G9eH7O3ziinjOZ
V5pdifz87s4SveZBRnZd0Bt3IQZTvNfpNjCxVLFXS8JLCL++xCmzHAoUNNIH
1xB9/l1iZN6pGH+s225bbuwnxK2PZ8QRba7YYDud7RcgRFvj2pf56jbYH/Tf
Bi+SEEcYgia5cyoYyLN+50oh4pFTSrTIM4BTOyvHiSaE64svHcdbHFDz67C7
PUMICYOY/kOuHpBXqlxsyyLiLD2n/I0UgGj7Jx0WHCG+OKT/zZSn4l3YeIoJ
T4gbJZkj5kT/WhattNghEOJhuFPk7zhi/3YaSRiIhGiVrJ7tuUKIBX8CrmkH
CdGSS3m4JYPg7Q1JwZohQpSZZ7edZXDx1Klki3qYkNCrHX/7yxkwjL73bUOE
EFftbrQrjpGRe27grFIUEU/o0yZnY39Mf7KItCZGiENvb7TMJPwcVUJn9UoC
19OmYwOFvnYorqF1Ps0TYol39MTR2F2Qerf/QFcBUZ9faiUlYzrgzi+37CgU
YmSX+fHwuRro0n847W6xEKectO7e+mUDXfJo/a0SIZ7tmRP6UMsVWUeWhV4/
L4Rdu/av5xRif9YZbm0oFeKXh+zZOFsyAvt9BmrLhei6vElb+Q0drYvizlVV
CFGlcXH5U8L/qe0oJFdUEvX6o/7h3nQBDtNvrykl5nqN4ZrtfgQvD2d86T1b
I0S6e8FSvedcuDbNP3aGmPPLn79O5RkzUfdF0/F0nRCK426Nk0UUrF7qPC+7
XoiZM5VeWC4IQLxJyO1jjUK4nZa9PWPIHf3srPj0ZiE2tqyMuJTuANsTDTsO
twgRFNzUrHHMEOU33oyn3BTid3IEed0jJcj+mFGV1ErUq4NnPahuhWD5Dby4
NiFKlju2VJQ7o9fCVi3qrhDVGwNlF97wgZGA8yG0ncivY3zqDoOEglOpeeIO
IYxyTbcpDtIwu+2yF79TiIKfnRX7xWwwR54uZXcJUfFa62tiBB8dqyce0h4L
kb8xo+dyB7EnbVcdIj0Vwil9XxkW8nAsCNZ+3ULEyg4unJ3AxEQeaYZXrxA2
77LIV8Yp8G1PbnR9IURCzW0dZ34A1ivd17Z/IwRl3O77qbu7scb8z6TxOyFi
amL6zO8aYzll440tfUT9rJWmFRvMw6Jkz/1K/US/XVN1/0cm9MzZFMcln4j5
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
anQRnsrzvCKCzefmXPXOKSVsnPBecev/3xtOss37OrIKPQ7N3KLjFHQ73rRt
2QwkVW4suBpDoSL8uiYhZcL2p9PqGSdZfj8cXGM06YisLo+jZ+Mp/FwikKj5
yR3WWg8bExMpPLSolNMYZp8PFxRF4pIpHFvzNTW4xxulfxLto1Io9E5v3pWk
6wsvt7GLYWcp2P1cITFT3wtiNc4fD6VRUFJsefnKkH1ehcuSgRkUQpSu3Zcv
sINcb1yV30WWL8WQh2N3LPByxwg/N5PCygfGdWPpOxGTZWfsmkVhCbFVvjN2
C9T5q5LtsymIVac9K7QVwRB39WvLXAq07Nuq7nxNpNcdX21yjcLJviHT2nRD
/I6yvIFCCryREgLnYx1Q+LFsXKOYzcuUbZiStxtcd63QVr7B5uP71JsYCQ7m
XTt6fEMJBbM+g/tSs7xRLTTQolDK8icm5HicYvvb3SZiMmXs+q/NKVWRXpBs
uukiUUEhoHMq1DjZE+FxocMLqigUXeYJ6fOxx6bPvZvnVlPgXzBwVuSkJd6b
7AqeWcvW24h1dZ2+u5BcVHiP9z6rr9e44ZNDqtCdt2DW7wcUJlr0XausG7RH
A2mLsXq2XvanLHgmqorstu7U7w1sfS20qemQ3gXBpKuy/c3s9dI22U9k7FE2
Ihz4roVCh2HBKqMhF/haHbj9qo2Cs7HJm5N2nlh6q/P30w4K+3sTV15W8ULj
wm16rU8pZISfUeaI+YIhsuIan7P8nvKfEVrtBYXnM5/e72T5nn4ilNvpidiz
TzzLuyhEaecNDYs7QGNcNe/mGwp3i7coqthZYdj+wveCdxQsbtZEmcgaIqOC
Ty23lwI3tCT7i5EmTJb5hWX2sfkpu+psai6K34daHqb3s/wtfvK3Im0zil5v
nndmgMJWs0PbXe/qwU0zzTbhE8tH9EuRU4ssMC/jT8aJYQpv+TxdmhpsUfOb
8yHyC8u3/SlDX8YZQa6Nike+sXk+MGm++bQHVlWvP8iMsHkpjDjd68dFh8Tp
Owd+snk0nvN0B9v/LCYF5nF/Ufi7peZrtYA3XJpJT+txdv8bcjo1KhxkrR4o
1Z2ksDne45vAMzcM0g5CW6fZ/Nzs44hsc4RS6yNnmT+sH40K0pnXrHFQRvP6
on8U2lbpf/JZb4KK4EK+Gbw0GFSrnp63A3/bV9r94qPRudz387ynctCTS8jr
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
x64/8CiufaEO/gccQe+q
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
79ghnb81ChoHzs/v307BfLfd1pycUIyOjNP+06Igy8c/M1AmEGXe1g239CiY
2LJye1USD/yn5xXydlMQl/eBFSJGg7ruj5gjRhTs+Bm7/3u3F4bzrd+JzCjI
/ZDV9vigBUqX5Oz0tqIgtitApXKPHrhRP85Y2FKwxCt2rSV5P9QGrX+qOxA8
fexchaYewSuuOftknSkYzWpMstzNQfGDH6Wz3CjomfqZyT0vBGe7zaJvnhSk
vwrT/bM2BGrZOcwOXwrqNB6MWmVF4Jvkz8a7JApyqPcdVI/FoCjYZtNlGoG3
WsE85rw4sPpy4lNZFNCMhmNkjkZD1eFnTziPAl/jp2dT5oXja42NAVlExLdJ
I942MQhFKrmZdiEUnL4iS7IUF4B5+ueETgSRr1ydhtnzmVCZvcdlfQwFr7a/
2fNroT++8HJvSCZQ4LWlxP75JkcUK6cGWB6ioFGcG29VLQNhb9zSxKMU7Jk0
3hp+ywm6mcL794k+PpCm1FW4mIQ/+0jCGekUbNGWr1KoY6NugbOC4VkKgkwi
vnVUCHHgoVlbRBYFhEDgKxwNgXWUdnxVLgX+Q7N3/vKJxCKdzTsmLlLQdu/g
YuVVsWj9vuKD1hUKhCW7PS3/xOB04bw0YTFRj07a9xesjYSn32/j62UUWHTP
c59hFgJ52S+jQxUUDJxed5nDFqKvtStP9Q7BMyKHW5fV2Lh85Kkj4y4F9EWX
d9EIXcwxrZ5ZeJ+C8WwXukbtPmj8LSr7+IgC06Y0v7B3fw1/3szyV2ii4HvA
Lp/9jx1xh3Nc2q+FyJ+fWP/6mQGI2Rxdn/2Cgm2bP7y5cI4F0x6u4E0nBQrt
796vlBVi3lnfDbJvCbw7oi6S+4LxzMGh1fU9BXdJs6R1r0UgVdI4Lv0jBX2c
PWKWVTFwua+h0faZOD/52rjGwljIRij0Sg1R8JpX+OW1dSS6NWVS7UYpeHlX
a3VTBOEHvs02PvqTgqNfq3K1S4WgFfwYeTxJAUf8q6XOEza2+vTnzp2mYMzI
NfWnNgmjK146mM2iQsMl64WLrTMqWh7NiJ9LRTsj5pJf+nqEJ926XjefCqW1
35Wke/cCxpf9/i2mQuptVRd/wg+zp84u2SVDhf2j8JEPEUw8vnH4XuhKKrIc
6EnbogU4zgrnV8pRYXq7N4JvEAzHjaz1P+SpeHVM4brOn3CseOf5XGMjFbwb
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
V2JDoBJY1WUUDvV7NhtGVdmoJZHPaJ0ORpOXfZb8djZCSbce//gmBG3ScaW9
Fhu7Fe+tX21O8PFpl7RIPTZKXJw/WRM+JGeH+6Ki3Ww8jhtWVP7hh10tXkld
Rmxcx3LTXA9ndLL8ZkuYs9Ewhy0/z3onAiXI0TrWbGw5w4tWf2AA6QLaJNmO
jbhS3S8S21xQbMwKPOnIRgt3ek71Pn9Yd3OH613YWLqDmruF0O394ULmiDsb
BgG6Ul/8eIhbGdy/zoeNvPUmw11TQqy9GeZnF8DG3W3bztNOBqPKIepNBJWN
fzJRNmlbwuEyFOt6lcmG2PfJk5HsEIwePtD6isvG4oneL2HNIhzfnGQ7T8TG
m3OyF1+r86Hy4Gijdggbi5J3qBgqM9Hgm2xCjmBj21LyymNjAfD/m1abFkPs
lzTjGMW64d/Z03r1CQSeGv25/UbmyNDOLB8+xMb5+dvWHGxWhk5b9rZ1x9jQ
XJj+df4JB7zg5l2xTWHjwv3Ig7XvfMBbULAxIp2Ni4dtbotkqFhw+XLOlbNs
zEpxrmjQ5qDQ7NrqV1lsJGeZPVO5KoBpb+mpuXlsfOkY6U3WI/xTVPkS7QI2
Bt3tm9IbQhGx+tZR0hXivUEPih/tDsXKW3fmphWzETuhaPqjMBD8E+mRoWVs
uO17tENqnwBPKNwxnwo2uutzlWr+sKFgYEU3ryLy/V4lss6ZiohlCt2qtWxU
OGQuV7nui/avf5yW1rMhnuG5Z2yNE9QedDz5/ZCN2zFWn4JCdyIxsxQ9j9n4
TN9woZyvh27B4YqGZ2xUtRlOslP3QdeapHrtORvfTvcVtfr5Inm9QV5aOxuT
e+LGJCYo+DyxYmXYKzbmt/yVf3uEDeOWkWO+b9lIN2w0LlgkQOalp7Ms3rOR
JflCV9UlEONRF0O3fiTqdfdYRsy5ENi6RH9f+pmNra1Ou4KlwlCw1Y08+ZUN
dYVHd28T+kvzws96vy0cBB6ZjpRsD8axsBZdy20cPF6Z9v5pigj9DleK1XZw
8HTZb3KNPR+GygmKy3Q4aFutf79mDQtnxLwzpvQ5GF6d7+ybTcbISx2pXgMO
Nk9Y+zww9oZ1yZLERmMOcr+KTx2wdUBe4uBUsTnhM9YfdF8q2o4pr4f8dGsO
0tw0WNFrjOCkdf5TuB0HLan1+xoDnVG0INTL35EDr47CdklVP4j3ObZZunBQ
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
ffLpiL4/Ok0qbu1yZkNJKGDB4AVv1Lf+emHnykY4/5UcqVl3FLSSG2I92Qgb
C80mvlogw6Qa572YfNRxtzBtH2JbZ31u+7Ax5rF9k4uAAEgTjfgOPzYm7gyM
NXerIrA1sngogI2Xx+p+/m43gbNJXcefIDbmLOt7N56xg0nrv7HVIcx+cqfX
uTS4Qr41WsUgjA2RyJGrJjx+iAxQcFI/wPAx8Fgp1TkQ7dz99FaCjSFh7qG9
fMEQLkg4K0aysfnHhPff6wEI0Va6u4ZmQ9Tc/eASe1/U9r9/vSScDZojuyxt
ngW+8OT5vxFsaHCst5EydEVp5fCu4Sg2Lm8R5Vk3YIrf1hnufcfYIAX+hNwQ
14TZDxx5EsPGWu6I3XVZ3Mg9+S3vYSwb/Z1O4vPjKhiVyamvimejLvh6+xkl
Y6g3GwyUnGCD80WnspSyLRJ9f3HkJ7FhOp2ZmNHpjNec+ZsyTjH8WM+8XMzM
M1sumOkmpLDR8vBonU2EDySJNeat5Wzw3vT+xz/nBXL5w711N9jwfWBYmKLs
h0fl+5IrKhieZ+vL8/YHYo2Z8PUrlUy87SolRseC4Pel5UnOHUbPDx++Gmgy
80kceyy5mo3k+C3NVXPe4JYQWx5zl40+x7DLSgc9UegRYRNcx4b/z433gykb
TMxLHfRsYPKl0mFdOW/IzHvPTts+YOOpqu+nK8LKyFA+VmnYyIZBt7Z7W8Yy
DPbIP9d4xIbHhUuJrqQmtu9/PanQwvhJR9jROssU0fzxayRa2bgvEhjTr2wH
MeMBR75ONvTGbdscolk48OkkzdHFhuXqFOUrt3zwIEbt7EQ3GyYC9voJg/5Y
selTzeceZv0WA9c/y/fAqy79df9zNqiXaj6JmwNww1V7vquXybfU5Sta333A
MTsq1PSK4bPa9w2rmulfd+x2L3vDhtHDtlV9F+0w1jV++OI7NoaHlDrdDpsB
oXl5Z96zsXtxSXnQIW2kLjWtPzHIRkdVtMvQsrV4d2363eEhNk6EnMpbH7AD
Ww0KOQ4MM/o1XLq5xccARwatNvl/YWPdR1Zicpw1RESKvS2+sfFFb1H+AmkP
hHkVlob8YONHzO0KqSPeeFCYN5U4zka+/ADX5U9+WPU5G0W/2JhcfEQ33DwI
AbKnE5snGb4Gjm5bOcH0x6Gnng1NM/7XEvvfouM+4KuIF+GeY/RK+OhxeTUL
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 400}, {0., 724.0072744349544}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.1\"", "\"0.005\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.748011546595901*^9, 3.748011588174944*^9}, {
   3.748011663618135*^9, 3.748011669432255*^9}, {3.748011832037004*^9, 
   3.748011850243676*^9}, {3.7480118880682898`*^9, 3.7480119069035177`*^9}, {
   3.7480119676790237`*^9, 3.7480121238055687`*^9}, {3.748012401978642*^9, 
   3.748012426310062*^9}, 3.7480124647519073`*^9, {3.748012525422492*^9, 
   3.748012561748105*^9}, {3.7480128816971817`*^9, 3.748012963898508*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"h", "+", 
               RowBox[{"4", " ", "x"}], "-", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
            RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{"h", "+", 
               RowBox[{"4", " ", "x"}], "+", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
            RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
    "]"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{
       FractionBox["\[Pi]", "2"], ">", "z", ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74801159411635*^9, 3.748011628355279*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"h", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Arg", "[", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"h", "+", 
           RowBox[{"4", " ", "x"}], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
        RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
     RowBox[{"Arg", "[", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"h", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
        RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]], "Output",\

 CellChangeTimes->{{3.748011607074203*^9, 3.748011628817958*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                  
                  RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
               RowBox[{"Log", "[", 
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                  
                  RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
            "\[Pi]"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", " ", 
             FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
        RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
      RowBox[{"z", "\[Rule]", " ", 
       FractionBox["\[Pi]", "3"]}]}], "/.", 
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"h", " ", "n"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7480124410200787`*^9, 3.7480124693300037`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{1, 100}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.74801244185996*^9, 3.748012469811701*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{"h", "+", 
                   RowBox[{"4", " ", "x"}], "-", 
                   RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{"h", "+", 
                   RowBox[{"4", " ", "x"}], "+", 
                   RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", " ", 
           FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
      
      RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "/.", 
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"h", "*", "n"}]}]}], "/.", 
    RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
   RowBox[{"z", "\[Rule]", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748012486492655*^9, 3.7480125019230213`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    RowBox[{"Re", "[", "n", "]"}]}]], " ", "\[Pi]", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        RowBox[{"7.853981633974483`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
             RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "+", 
           RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        RowBox[{"7.853981633974483`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "+", 
           RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], ")"}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{{3.748012477959858*^9, 3.7480125023868732`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
             "\[Pi]"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", " ", 
              FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "/.", 
        RowBox[{"x", "\[Rule]", " ", 
         RowBox[{"h", "*", "n"}]}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
      RowBox[{"z", "\[Rule]", " ", 
       FractionBox["\[Pi]", "4"]}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.1\>\"", ",", "\"\<0.005\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.748012575578196*^9, 3.74801259343888*^9}, {
  3.748012858530898*^9, 3.74801285894461*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Zj+WbZ+/H0FlD2LcDhnR4IrseMid48YozjwicYcZDfi++dU8VzBB3puC6r5Y
0CBx2INPaNEEGZSdmms8RoOFcTvZwAJTtJXdRvOSEw1G5nd1jc+aoU+1xqft
TtLgS2yAjXagOWrw0r5L9aDByjst9sPL5ihLgGji86aBPO/8SKTnUXSxWeHX
7zM0MLcriIztPYrsgqREuv1pIEQhdy0oWSBCRtCg5BwNFKTOdChctUB73nMG
3jhPg+hHy9t6uizQSuTWbI9LNHg4/7XajMsSvVf5165zmQZdlMZVKUNLVDn5
c1U8igan0bG/9ectUeLNL1JMN2jgJqUql5BjiXzoo2ajcRv4FML33xtLJJfx
riDlNg1i74YtUhct0cxaxSbzDNrG/8wPph+zlqi9fXk0IpsGZ815rc66W6Dy
TOqzijwaCL/FdnIr5ihU66UfbykNxPaTmA8ZmCJnXmYT3QoaFH7fu2/bLhOk
+0X74LkqGkzyZ9f41BohjhstU4MvaXBN0lSP5Zg+WrRjq9/eSANO480rLcZ6
aFDe9B7xbkNPyD4Ra0cdlN3Tb3GviwYzcj0qrs0aKCpnj1J7Hw0Sfj4f791H
R96Bx9kYPtCgKGCoeCIWEFlg4o3jBA26mxQEDI9QkeC8RHbCNA1qiCOO8ulk
xFTndvHVLA1SR5nK6VyqqMV5nizxiwaXj4kZ5J5QQKUqCtwWyzR4dnysdvGc
HEpi8fse+ZcG1Z/0XjK67kf2BSv5n5np0JSxnz1+dh/SPE9E8rPSgY/BrWjz
XyEkbXTB6fBOOvjWkNIcLvOhnaL1OJiDDgUmg5DpzYl+/GDeW8hNB/8Ezrbm
k6yov0FnaYifDqJxzzfNoTXiWVJ0904hOny3OPT63eJHItOt9RHeRwflVk7K
MOckEUlhv35Kkg7MtvtP2Y2uEv/tMHPL2E+H52N+4YaHtyDjkVuanXJ0SKJI
rNnt3YVUSt6LMCnRYXd88+Djck60J2zvmiKJDlUsX76aCvKgdTO7AWcqHZbd
PxHRh/nRpERmRaI6HT7ZBm8nqQugoreS3os6dHjSmqP+qUEEJdxxPyxlQIcL
zgffev4QRQFehZJWxnSwOQe53VvFkI36N6YoczpMdOyfpLGKI+BQHK2yooOA
A99Y5y9xJDHhVzNjS4cRynxnfIsE2lbxJHmvIx0Ie9CIiJdE3yL/+Bq40MFD
++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
CyWdSo1cWl+3ghYoyrFNOkf6H07LUMY=
         "]], 
        LineBox[{{16.134732063567892`, 3.6271768869230457`*^-6}, {
         16.14420743595737, 3.284440578580382*^-6}, {16.176663880486828`, 
         2.208517119338185*^-6}, {16.209120325016286`, 
         1.194167116137518*^-6}, {16.241576769545745`, 
         2.3867638136157853`*^-7}, {16.274033214075203`, 
         6.605625845474736*^-7}, {16.30648965860466, 1.506054515556797*^-6}, {
         16.33894610313412, 2.3002051647371826`*^-6}, {16.39862182473144, 
         3.6271768869230457`*^-6}}], 
        LineBox[{{14.230697225161771`, 3.6271768869230457`*^-6}, {
         14.246057944179439`, 7.207138420112101*^-7}, {14.267691327874498`, 
         3.6271768869230457`*^-6}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 100}, {0., 3.6271768869230457`*^-6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.1\"", "\"0.005\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7480125763633213`*^9, 3.748012594168453*^9}, 
   3.748012863382375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
             "\[Pi]"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", " ", 
              FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "/.", 
        RowBox[{"x", "\[Rule]", " ", 
         RowBox[{"h", "*", "n"}]}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.0001"}]}], "/.", 
      RowBox[{"z", "\[Rule]", " ", 
       FractionBox["\[Pi]", "3"]}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.1\>\"", ",", "\"\<0.005\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.748012583261239*^9, 3.748012583975959*^9}, {
  3.7480126222519608`*^9, 3.7480126223719673`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
evTi2po1NEHhA/uUs+T/Ad7VTlY=
         "]], 
        LineBox[{{16.13473206356789, 3.6271768869230537`*^-6}, {
         16.14420743595737, 3.284440578580382*^-6}, {16.176663880486828`, 
         2.208517119338185*^-6}, {16.209120325016286`, 
         1.194167116137518*^-6}, {16.241576769545745`, 
         2.3867638136164264`*^-7}, {16.274033214075203`, 
         6.605625845474738*^-7}, {16.30648965860466, 1.506054515556797*^-6}, {
         16.33894610313412, 2.3002051647371826`*^-6}, {16.39862182473144, 
         3.6271768869230537`*^-6}}], 
        LineBox[{{14.23069722516177, 3.6271768869230537`*^-6}, {
         14.246057944179439`, 7.207138420107966*^-7}, {14.267691327874498`, 
         3.6271768869230537`*^-6}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 100}, {0., 3.6271768869230537`*^-6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.1\"", "\"0.005\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.748012584513303*^9, 3.748012623178653*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{"h", "+", 
                  RowBox[{"4", " ", "x"}], "-", 
                  RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
               RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{"h", "+", 
                  RowBox[{"4", " ", "x"}], "+", 
                  RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
               RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
       
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", " ", 
          FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "/.", 
    RowBox[{"x", "\[Rule]", " ", 
     RowBox[{"h", "*", "n"}]}]}], "/.", 
   RowBox[{"z", "\[Rule]", " ", 
    FractionBox["\[Pi]", "\[Placeholder]"]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.748012668956832*^9, {3.748012812523098*^9, 3.748012814535449*^9}, 
   3.748012854254201*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    RowBox[{"Re", "[", "n", "]"}]}]], " ", "\[Pi]", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "-", 
            FractionBox[
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], ")"}],
           " ", "\[Pi]"}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            FractionBox[
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], ")"}],
           " ", "\[Pi]"}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "]"}]}]], "Output",\

 CellChangeTimes->{3.748012635443151*^9, 3.748012669449669*^9, 
  3.7480128154154263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{"h", "+", 
                  RowBox[{"4", " ", "x"}], "-", 
                  RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
               RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
            RowBox[{"Log", "[", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{"h", "+", 
                  RowBox[{"4", " ", "x"}], "+", 
                  RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
               RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
       
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", " ", 
          FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "/.", 
    RowBox[{"x", "\[Rule]", " ", 
     RowBox[{"h", "*", "n"}]}]}], "/.", 
   RowBox[{"z", "\[Rule]", " ", 
    FractionBox["\[Pi]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748012818114859*^9, 3.748012820259612*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    RowBox[{"Re", "[", "n", "]"}]}]], " ", "\[Pi]", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "-", 
            FractionBox[
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], ")"}],
           " ", "\[Pi]"}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            FractionBox[
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], ")"}],
           " ", "\[Pi]"}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "]"}]}]], "Output",\

 CellChangeTimes->{{3.7480126559495287`*^9, 3.748012672185831*^9}, 
   3.748012820820257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"Re", "[", "n", "]"}]}]], " ", "\[Pi]", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"Sin", "[", 
            RowBox[{"78.53981633974483`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"0.01`", "\[VeryThinSpace]", "-", 
                 RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], 
                ")"}], "+", 
               RowBox[{"0.04`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
          RowBox[{"Log", "[", 
           RowBox[{"Sin", "[", 
            RowBox[{"78.53981633974483`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"0.01`", "\[VeryThinSpace]", "+", 
                 RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], 
                ")"}], "+", 
               RowBox[{"0.04`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], 
         ")"}]}], "]"}]}], ")"}]}], ")"}], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"Re", "[", "n", "]"}]}]], " ", "\[Pi]", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"7.853981633974483`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
              RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
            "+", 
            RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"7.853981633974483`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.1`", "\[VeryThinSpace]", "+", 
              RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
            "+", 
            RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], ")"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.748012710546685*^9, 3.748012720440505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        RowBox[{"7.853981633974483`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
             RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "+", 
           RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        RowBox[{"7.853981633974483`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "+", 
           RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], ")"}]}], 
   "]"}], "/", 
  RowBox[{"Abs", "[", 
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        RowBox[{"78.53981633974483`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.01`", "\[VeryThinSpace]", "-", 
             RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "+", 
           RowBox[{"0.04`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        RowBox[{"78.53981633974483`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0.01`", "\[VeryThinSpace]", "+", 
             RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}], 
           "+", 
           RowBox[{"0.04`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], ")"}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.74801272182478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"7.853981633974483`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.1`", "\[VeryThinSpace]", "-", 
               RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}],
              "+", 
             RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"7.853981633974483`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.1`", "\[VeryThinSpace]", "+", 
               RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}],
              "+", 
             RowBox[{"0.4`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], ")"}]}], 
     "]"}], "/", 
    RowBox[{"Abs", "[", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"78.53981633974483`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.01`", "\[VeryThinSpace]", "-", 
               RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}],
              "+", 
             RowBox[{"0.04`", " ", "n"}]}], ")"}]}], "]"}], "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"78.53981633974483`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.01`", "\[VeryThinSpace]", "+", 
               RowBox[{"4.1887902047863905`", " ", "\[ImaginaryI]"}]}], ")"}],
              "+", 
             RowBox[{"0.04`", " ", "n"}]}], ")"}]}], "]"}], "]"}]}], ")"}]}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748012726493557*^9, 3.748012738276148*^9}, {
  3.748012783989779*^9, 3.7480127874379787`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{1.0000020204081632`, 0.}, {1.030365074135403, 0.}, {
       1.0607281278626428`, -4.440892098500627*^-16}, {1.0910911815898825`, 
       0.}, {1.1214542353171222`, 0.}, {1.151817289044362, 0.}, {
       1.1821803427716018`, -2.2204460492503136`*^-16}, {
       1.2125433964988415`, -1.1102230246251565`*^-16}, {
       1.2423571340018937`, -3.33066907387547*^-16}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQLTXl+XX/+C/2DFDge0n4wtrbMP6CPQ0CDie4I77C
5bf45RzIvILgv+iZseN4wDf7f/9BYL+N9OkjG1TPfoPrb3KXXfjw6Hc4f1ur
50x7px9w/svDpRPn7vthD9b+f72NDNOizt9WP+HmBzica4zcjuDLWdYnXVzx
G84PKl8dpa/6x54JzDuxp3Xr9aDehX/g5r8xNHD2nPUXrl6hIMZ6udg/uPrg
dR3GrJP/weXb3mzRTub/b88M5l3as0vrofLB7v/2f8Duu25TtoWtj5+FwQGm
fsJlmS47JwR/1SejttwGBgdWMO/WniOCnk1z9jE4sID5D/bcM4ivO/0Hof67
f2nVLytGh69g81/aCOR3l2lWMjrA3K/Vt7AoYjujgwiYz7QXIs7ksNn88VyP
T5p7486czdpmzARXX/H6cdrTQiaH+2Dz2Gwncv1KEtnA5AAL31WaAvHO75jg
9h/xUIsu0mGG8++l24QvzELwf7QFBV9YwezwHaz/uY3Qsgz//8+YHX6B+Y9t
dI7WeeupssDVuz2Z4h6bjODHM6927lnIAlV/26ZC6aD97vsI/iTH69avZFkd
YOG7JuGtuWQMK9y9x+qZTTxmscLNezBP0qD8BoL/a6++zjIxNrj/Re66alwN
YYPL6/6JVmGZzObwF2zeZRs36SIF44sI+QSrDpkkfnY4vypynsREX3YHSHo+
bjOlYovIgW52qPvO23DFLhDVOo9Q3+jYIzZFiAMRXqoV4v9CEfw8rhSJjJkc
cPOevPOXvHQHwY++bC1lo8AJ51/ari69LJkTrt9jjrCMwHIE/xR/xAf+Dwg+
AOEoXNM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQbZr6WvaJLpcDAxSs8bwu51fI5fDvPwgct1HSOyy/
YwuCP0NovYLSD4R6/u+zFHusueH8ttttSt/qEPw/+4uUEw4h+EVL4lROsfLA
+S87vFRNPBH8a4FK6hwXEHwfMz6NImFeOP+w1C+NO2G8Dn/A7jlvY/X/qabb
LJj8gj0bHl/U2nCX1+EvWP6yjdqJvdpSinxw+blrVuq0pPBB9V+3EZk4Vffd
cj4HFojte7pKG/UiXvM5sIL5t/YwROXqH9Ljh9tfbhdpoFPE7wDW/n+9zTsl
V8NpWxHyKeyGRgw/Efy3pX2SpnICcL5GBovUK3sBB24w79WelKgqqfmJAg7f
weZ9sJnv80EqpFnAgQ8k3fB1zy27NGnOpQj9YoZ3pPcdE4DbH6gcJFP8QsBh
AYi7X9oWokrQYdOPxL0uukp7j7Pbyd7VFoTrZ/q1WXaSr6CDINh8hr12bzTl
3PMFHRjBsjv2VN6bL/dngiDUfZ/3bLkgKr9xE0L/h0Pd8mlXBB24ILG3R3sr
o4L0N0G4e9KWlytcEBeCq184861Cq6UQXP5Od7KiVbQQPHwl6m4qvq9ByAcX
+CstmQeTv7GnL+moUuQBIXj8nAqxVuZ7JAR174Y9rO4blQ8zC8Pj18FSXaVC
VRge/9Xac1V03YUdmMHyl/ZskxVWfZQhDHffJ/5O1eldCL4u039VnzUIfsaX
EjXGc8IO7GDevT1Lnr1S2/YeIX//RoJ6tqAIPD1Jnb6mrmAsAvef1KK/wTOD
RODul65UaRAqQsjLBHiv6Z4oAjdPRr3oBstGBF/23wyWugsw/oI9DNI/LrP/
QMgDAEy9Mwc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQLd/M2/lST9SBAQoUoky2JvnB+Av2KBhGP7ydi5BX
ur/C8twahLyKtcurTVpicHkVoWwxHS8EX/XlRKelmQi+2vT7s6avQPA1P1d5
16iJw/l6qzeucVWSQPCbbtzY5yjhIAnm/dmjH/mfxSIRIW/A7hurtQDBN7xX
3Ll4v4SDEZgnstdo66ytMvcR8v/BAGje5I5i8UnZe42TX/Dyy0k6lIAkJ6ju
NbHit+qwlXSAqFtvYyJolsYYK+nACNa9Y4/pi5hJVTWScPPM9jfv+zwbxl+w
x2zaqlc5uxHy5rkXxZ7dknR4Bzbvu42Fyw+n+F8IeQtp+fwbklIOX8Dyn20s
P7nODrSUgstbncw5fioCib9g8mfnCikHHjDvzR7r8l3ye6dLwd1r4/fQ22y7
lAMnWP7FHhtVjor116Qc2MH8p3ts/+gt0fgm5cAG5j/ZY3c59MJCUWm4+Xar
av5ImUo7/Aab99DGvnGxxpQQBN8h4lQIb4m0ww8w/76Ng/7HhrbJ0g4sYN0P
9jiySaz9vwlm3oI9TnftblZcQpjvtCWV9dNHBN+5u8cwW1DGgRXMu7Vnzezv
AW4GCL7YmqQCRX8Zhz9g+67b1O852/8nVwau/8UZi/XXexD8wLuLz21ajeDv
esv3rvcUgn/g/xN2nR8yDsxg3pU9AIWk8RA=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQ/VUuwEdeXdbh738QuGwTp787+5errAMDFBgETFy1
oRnBvzLRVkP2P4Jvu2iF+w9ZOTh/2Sbh9Ms2CH7F5ZdLO6sQfBnRacrfviL4
KTPeyZ1/Iw/np13Rkb/KqgDlL9gzO+bROidRBYd3YPd9t7nwZLrdBhUFB2mQ
dMPfPSy5vudkTRQchMDqGfdafGWK63ZWcHgEVs9qm1u74+2PIAUHRrD8hj2L
WPNq05IUHI6A5UVtr/Uq814pVIDbDwYNCL79vD6d9RMQ7ilRc9kjs0DB4SxI
u72I7Yp1P7271is4GICkD3DvvWO2/vb3fQj9gvtTslPPKTgIgjgODHvd3KV+
X7qLkK86f77L4S3Cf+vCW6XW/UHIP75vtUqaRxHOl8j4YNkprejABXbnxz0+
H5ae/KYFk1+wp6EiOjLFCqF+K4Pgy4ueUPUML/e86jhWYR+p6PAdbN9zGznB
Go61GYoOHGD5Z3uCZhrOkKpA6G9XfK7e0a7owAbmPdmzZ+Wc7V+nIeQ/GAa5
Jy9TdPgNNu+hjcou9usXtio6sIJlH+2JdNqbZndU0eEHWP6+Td+pom+rryD0
HwrSaJN8guD7+Qhfv/oFwb/l+k99EqsSnP/R4spJLnUEX0G+gfdPJoy/YM/h
lmvS/DVKDsxg/qU9AFFF7Fk=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQbS4Utr6kW8mBAQoOcTsyGM5B8P1YdQLfrlFy+Psf
BC7b3PontmjlXoR82g/Gz6nnEPxPH984K91XcmAF827sqX19fcq990oOv8D6
b9twPD30dBaDMpw/5d5as3BBBH/NxeYb542UHX6A+fdtLE7nafY4K0PNX7Dn
8JHIKo8QZYT79rmcZklF8G9t15c5WAoz77FN2kap3No2BP/TKtZ9ltOVHTjA
qp/tqVvyge/bcmWHr2D5lzac827Hb9qB4E+ZfmxD3kllhy9g/msbhYkbGbVv
KTt8APPf26zpmhP0/JWyw1sQt57R1qKlffHi3wj3HKkt+hLPo+LwACzPZhtQ
HusqI6sCl79T4DHthq6KwwGwefy26VnGz6fYqTicA/OFbT8ly1kE+iPU18Vy
dvImqDhMB5unYssV/uXmyQIVBykQP9/UFqyoQcWBr/x3zkSb/zZfZMw3ZbCr
wvU3iCkxq0qoOgiBeYx7eQR4Qx5qqDrIgfn/98zg/LFkriVCvTLz46+RXqoO
ImDNP/es+3PWTSwaJr9gj9W3HdMvZSPUH3u/+EVfjaoDH1j91z1BL/ssvXsR
8vceVXaxz0PwM++k3D68TtWBC6z+454vV/11GvYjufe8Va3NBVUHfjDv/Z4Z
hwTkt35UdeAB89/sWb/12QFdYTUHbjD/9Z6e3ty+LCM1B04w/8WejNQv0csD
Efywi9sPuSaqObCD+U/3uNpWaz4pQPBPXXn9nLlGzYENzH+yBwAlsTr7
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQrSTK9F1hgpoDAxQINB6N3T8fwf//puNI7HoE/12E
j/affWoO3/+DwHObO0f4J806p+bwA8x/anPK4PIPi3tqDm/A/B82O+dMi7/+
FqZ/wZ4VHFHHSv8i9E8rkdUV4VWHy7c8eDB5k4y6wyew/FubYp8lvwJ0EPyk
HemJ763V4e4JUNE+0euN4NtNeKenE43g6/zZOPVUlrrDV7D+TzZSGaV/MqoQ
8pxXLJLZu9QdPoLlv9r8sP9zculMBP/Z6v0GLivV4f65It48/dEOdYfXYP5P
m0PNbv8aTqg7PAPz/9hseM+ZKn9D3eEBmP/fZn702dN7nyPs6zs+wSjmu7rD
S7A0k22NccjMX2wacPms+eIMM8U0HG6C5TlsI7lvp5mraThAjFtvY/Y40aTE
FaFexV91tlAoQl5o9wvGjSkaDoUg7n11Wwb1NRn+JTD1C/aAqQYNB7lpaTta
uPz33vtnZNYzWcOBESyxYc+ZrG9ztBZrOISCuAVKe3dd28l8chNC/wqn2qz0
Qwj109Y5XGS9hHBPqxSLxZKHCH5J2/F5Th8R/KRPXawPGTQR8Rfnl1MvgODb
nxK8LKsA4y/Yo2d21XKPvqaDLNjd//bILJqxIMpe00ECzP+9h4svhv2nn6aD
CFj9zz0/K+XzpsdpOgiC+d/3vHj66IppnqYDP5j/bc+1wGXWV2oR9h3Zm7mo
qBfB36ypyyk4F8GfwLjlmu8eBL8ut9z2zWlNqP937Mm5abWk6zbCvVGu/7g0
X2s68ID5b/Z4bjxYePyXpgM3mP96T1/frplbuLXg6q9kbz64UEbLgQvMf7lH
ynPNyz5dLQdOMP/FngS1pYI1dlpw+5cxz7PM9NeC57fXD6YlhiUg5A329Xc6
FyL4fGbaIhI1Wg5sYN6TPQChs3qZ
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQvaei8absZC2HX/9B4LENY1gVI/cSLYcfYP5Tmx6B
nMCnR7UcvoP5z20uvU2pvHRNy4EBCsRPxy7c/1zLgRvMe7UnZkXYyTU/tBy+
gtW/tFnU6v9xJqc2XP2LJA/Jdilth2dg+T82ug6OjiXa2g6fwPy3NkWyVpmJ
NtoOH8D89zY7fhlN9PNF6D+fL2bIPBHGX7DnT+TdghwJHbi8k/m1GZGaOg4n
wPp5bdtFzh9ws0LIn/l4/IWxt45DOkh6v4at0PkDAooxOg5rQXx7JduINTst
+HIR6sGgQceBry7Ju6+1bs+TtNUdL/p0HBjBEhv2aLos2XB1vo7DdJD+ehXb
PMW5Nw5t0HGIAkk/kNq75d9Uhg0HdRyMwOpF9v663acx9xLCfIed7QFdj3Uc
tMA8rr1t0xoqyr/AzD+w53Rx5YIUVl2HF2DzmW0FAotOBIrpwv0fppf9wU5d
F27eBqaf+YJmenD+qj+TJ653Q/CXfNPb7BuuB4/feR9OXnmdjpAXuvrxqVCN
ngM7mPd0DwC6X9jN
       "]], LineBox[CompressedData["
1:eJxF0HtIU1EcB/BN8ZGmTVr5RFTUInL3LFEy7tUfCBPEQs1CEEpLU8iQLMT1
0GFGag8mgWCWj/xnmqmorLSzHJJSOCN70EQZZFuZjqlNp5jLvMetc+By+Zzv
7/c7hxN+riSzwEUgEBzd/vi/0rjlf7BWAgLHqjM8ShhrlMD6Fr9MbLU+Lie/
k7ri44cbLq9ofbnuYnPruATWSP6TLR1z1ybO0LxY2/ZtxkxdMMS6XrdLYJXU
/2LPDHyNDPRlYIV4gc3uLpW9CKXOVPkUnWIYMBLb2bSnqlprEuM4b4mVPU5+
Vp9ODQ0GHZPHgJlYyB1Tyi0Tl53zrGxsnVhUXMX8v8/h6h6p10OnW3F0RepJ
VTvNw8pNV2UD1EGligbjGwYCiTaxuDj4ZdUXmvtcUE+F/WDAQs4TcO65GX9e
2+h8QUzZg25XBN/5uNKNs3ckt9i9EUyRek9uI9qvN02M/s9bazdom0IQ6Enu
x62EdU3ORyIY5Dnszy0/kc8mxNB6S1CKtSYOwW4+T2I4sgk0nxPPig/IqE31
PVFlJxBU8lBGa2Z9b8aPnqa54W5qivgs9bRnQPb5QgQRPHJFGv1tU1FfiTNv
xZ9d+uXCcgThxB6ayUpFXboCQSy5h1jzfvN4U0sNgr28FULNuDy4y6JEINoZ
oHlrm8NcI4IQwr949Ip64l4bgv2kfgOPLN0yTHc4+9fx8KWMxUN9jn6FDeP5
UMG1IQS+pH8VDxaaRe9Gtt+D5FasNg6GB4xT9+fdOVL4CYEXqf+New1Zyepp
BLuIl/HznIgsNyMCT+Il3KlfzM8yI/AmXsDNuiiV0kfq8Dyu1+Ys6CRS8Nh5
Xawt2+dxP14Ke4ht2GTpWxcm0vwfMRte2w==
       "]], LineBox[CompressedData["
1:eJxFkAtIU1Ecxq+CzLS9fOAD0x5iWmjdMyire+2voFHonLNJWFZYEoi1skkG
YoYiwvK5ClNBs7AwfCA9QO8tFDFUnPMBKaSONB/l8s2GWtZOznPgcvjxfd//
+5+7L1mtTLGnKOr0v896+0wWhAmjaFjesp5V5tyziMS+GBoofGq4zNjNjEIV
DRasf2fqHN6XxiTRYMY8wwy3qRuEKUS3Tw/q7kujYQ3zHHM0cHKqUEODE543
x10er6LkWUR/9DjBR5RHwyrmn0zbOUmoXkvDNOZN5gfVE1+kI/t4fshVyytt
+5qYqJusVvSChkXMC4zmgLlOX2/zU1TtaHNHUYutb5kxFKeOy1ttfSvMn0j/
dVEH8Qdvjrn3dxOeHu7M658l/W7a7JriRRoWrPEHFBsRHsrFWmiYx/Ps2Nvm
pS9iCu3kqxverPQLEIxhv4DVX0sRl4gRvLLyJ29208vvsMIDAY5vNTGHDCNR
Ej8Eesyu7IX8smRDAIIG7Pdi85no7JKQ7fzEfvbtskOF4hgCO9zWzOELEHwe
WTurEPrw0iv3BwyRCLRWgyfDg7vMVBJD9rvVO+8Yp0KQgZ/ny1c9rPOXJqGd
9/YcvwoD1xEEWtEo5S0mr0ulaSQf8HLoXpyG8PnEQp00C8FJHHfncyVnmgZy
id7SRfWWahG44j3teGNW63ScDoHkv8yLZBp7l0riZ+aCfQdrEbhjWudSq2dO
lNUTvVz1XKVsQSC1Qo6Z63K+eMelFYEI8xq31u5WONiOYDfmFc4/U/+6rBuB
M06vcMqQgk7lAJmXMxVudBlFsAvTEtdYsbExaCT6V8U7D90sAjGmBc5JoJbF
L273Ub+4UD4w1tWCQIjZxN24+y11aIvknwZV5esEsp3/2zmhqo0Xy7b7Zrnl
J+KPrh6E90Z3jw75ysAR8wy33ron4dRBG09zw0Hpg7VHCDeWd8mdQmU7fb+9
pTGCMMJ/AejOiJY=
       "]], LineBox[CompressedData["
1:eJxFkn1IU1EYxu/GzFh+pE4nE8qPTDQw5Z6R2Z2+gs0kyxZqiGJqZqSSZKSh
kl9gShL2pUamy1AWNRMtsbxXzEGJgpn+kUqI2AQVdDbc/GJa9zg9Bw6HH8/7
Ps/hPccrPffydSFFUaH/N3+m5+dGTZ6jgbIuZk6nAxUN6zv8mmPc4txBk0iD
AbOZMQzksI7pe/VqdjD4a0hBFulvUbt+ms4jXOyYFawsIpxwv0+rraDBiP2W
mKAl5wDXGsLi5Bttxc9IvX6o11vfSMMK1g1M3+nDzedbCTdoMjy6tDSYMf9l
8qSf62XdNCxgFipiKu0l5X17/quMrymtduEbDQ68eamJ3b7Wbaf6QYMT5jV2
Ykxc3fOL5HdGXLXxnKHBHetbbE1HV9mDeRqGeLsSe0Xm0YPbyyvW+ZRQCniU
XJiwQfpllg4zJ0Cgx/kixWq2zR1fMdrXR6YSDTXOCIaxbqfQRLdnr8oQTGE/
J0V5j3A+yQdBKc/NxxVJflcydCcQCHB3B4vq3s0EoD0/NYsPQDBa7e8Ta3zC
Cqzsfm+XB2Y18WkXEOC4nQ9Mo8ryczCe9Of3qy4GpSC4i9GXu3Sybag+E0EU
z6OeXEDTpnLnFoIUnlM9OJF9rC6zAMFZPB8pN130JnykBAHCuoTrWVzrlVch
8Mf+ztzjxJiQV7UkP2tQ/VH0gswj8pQpKOc1gkBMh7gjbdHa8bekfl3S5H+m
E4EX1m25sQpja8sXcv/3RqW3WEf8KtNeNt0eRuDGQ7+QSx01yCbHiR4aHlkP
v5H1/SlO0t7gotETv+8PI+wKTITVm8+rpi0IpJi32MKbiyLlATm4Yt5k4ybC
yrQOcpBg3mADo55aJFI5uGD/dXb2GGP+4yffzaPW2Drh3HJniHz3P1ImtsXW
dlsQJt+/3z/M3GuE
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQvSYo7W+yh6kDAxTs+LWsxSYAwT+86Dm3aASCf85L
Y/LbeFOHd/9B4LvNrU8ZUsfSEfIfnF5plJfD+Av2/H6ltcG/3tThJVj9Lxu2
ydnmGu2mDi/A/N82gtZr9jH0I/TLPH7jenOaqcMTsPxfG/Vu3bMb55k6PADz
/9sYGeeFdC0zdXgP4tUz2NrdXnc7aR1Cv2fz+yTrbQh+iLbBK+F9CH7C5YLC
N0cR/OzqjT+OnDV1uA82ns22TPlT/dyrpg6MYNkNexpPG7GX3TV1uAaW57Tt
KS7u83uK0D9deouo+ltTh0Ng9/DbLjr8Zc7/Lwj5tdmmKjf+IIWvcNnqDSxm
cP755O87E0UQ/FvcFo5WMgj+s80VJ4RUzBzKQebHq9t+jN7p/1obIf+H+de1
w8ZmUPfu2MO+xipujjVCHgwcgPqfnV20Ltlrr9yf3Tm+3jD5BXs0l/z5rBqM
UG/iY1v9Lwoh7/Cllul6kplDODg4lPZ6z9nXuT7LzKEIbK7c3jCX/wIdRWYO
kOhZb5P4xn5GQhWCnzOlQd6yycxBHxz4wnvLbQ4uE+wyc1AD8wX3Nj1h1Hs1
EWH/+hYWb5+NCP4uHddLKjsR/GNXWiP/HjBzkATzWPZerDn24OoJMwcxEPcA
0947KuwZ6y6YOYiA+Yx7n59xf992A6H/U0lHWfwDBP+vzMm/5i/MHORBnIb/
eziOcrYKfICa3/Bnj3CuF8/L7wj1cqLdkw/+R/C19p6WmsVuDuebpvIsKuI3
h9jP8HOPA6+vpre4uYMg2Lzve3y29m5QlkeoD489Z/5HzdyBH8z7tieJlX//
FT2E/PHdCodbzRB8g7gfPxjtzB14weZ92QMAnr4/6A==
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDQB2IQPUnD5fRzV3OHT/9B4IvN93uh52f4mjvwAeUYGr7u
iZmaftkz1NyBAQoOeVde/xVj7vAerP6bjTpT9+3VKQj5nh1z7sfkmDu8Acv/
sPmYt+4xb4m5w2sw/6dNmOqB5/uqEer33L74Or8Zxl+wR3HS4/cK3eYOz8Dq
/9i0eXz9fHESQv2bf2w/mmYh1AdulfhjvAjqnnoG223ZWgxPVyLUSyvZsEzb
CLW/nsm24YYvh/tOhLy3a6HAyhMI/gO5HQq5z80dwNb/X2/jdvWkitx7hPzq
7tsa57+ZO9wAywvaCji91Wn4h5Av+/HPwJDNAs6/vU7A9BEvgu+QqmQ5WRTG
X7BnmbSJrYushcMKkHH7lWy5L7k6flWxcMgD8eU1bAs6wl2X6SD0X7PL9Aw3
sYC7D2KohUPYukDt2ofOtjC+z1oIny1pXmiWt4XDdEageIfN3myJDZHSwRYO
k0DqBAz3Xjh3MPZMFMJ8s9bLibVJCP5s66epelkWDmUgzgG5vQyfvmXeL7Rw
CAXLSu1NW8GRN6HSwoERzN+w53ScVJFjI8J9CRaJTawLEOYdfVfUtm05Ql5r
aUtX+nqE/FfBFZNO7kPwu16/W9R7F8HfMq/msKi0JcI8Xk2NPGVLByEw78ee
azVXe45pI+S/nlvIzm6H4AMAwEsQmw==
       "]], LineBox[CompressedData["
1:eJxFkQtIU1Ecxm+iZjNbI6dpD01amOFgOWz33F33L0MLrEZRuR6WljGMFeth
lqSGYSjKSiFNjFZSLRzKIgvpXnwgkpaRDWaohG/MhYOams/VPaTnD5fDj+/7
/vd8nC1plw+ne1EUpfr3CScT3D/27TQN1P9JKig+oLhA+NSk6nXhJcKG8yNB
g5k0BAqQN8Pl2B9ko1wafniEmVWb9sT1l96jYQzznNpsG9/rNJG8Lbz8VXwF
DYNYX1S3mOLXVJlpkAgiULx90XXFbSH+YUNVd5KNBqdgz/ViJ/v2qZ83EN03
adK80EzDKNa92eD3T32OdRA9MupgRu1XwqpHs599e2lw4P+vYvf7vYw5M0RD
F877syduHKl451zym7mMUc+82E1DD9YlbPZRa6p+nuwrbk1ua/JGwAjQJOUf
x/jsCAlAUIf9IWztM5vJKEVQjHkz2yhJcbdvQsv5L3kiXcQ2BKmCrtnODrje
8rfkCKyCeH8n/yvlXIQ9lvjxAOFAlnPmJxKWWfXavkMI7Div5GM3SOuVyQhw
XU+dOqGoOaTkLPEfnzHkjOgR7BZgbTiv14cOsUYEOlw/lM/qbkt8eBOBBr93
EF+YcNU6cQeBAvddx1fWh0kSi8i+mq2frj8pRdCC+4pZriyrZ7oSgRL7V/Od
XjKNthpBNGYR/93YVW2pIXlX/22/FW8QhOGevjyljTLoOATD+P7erKTR0WVr
Jf4IeX6sqHOJzVz6uLL94gThTN1AdOsUglDMC1zBh5LSjR4EwZjnuPJdaPra
SgakmGc5y4vRk51iwg3SsibZemZ5X8ddjSwnnAEXvs+Uuve3s9ARyYAY61Pc
z7SKCbmCsNxfkfJHtZSnqI+OojL/OAYCMLm5vzrCRqs=
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQvSk6ybbbw9qBAQq+Mv9eExJg7fDxPwh8tbFYM1lG
LsLaQQAk2fBtT1WITs/zeIT6PX+O/N6Qbu0gDJb/seffktjsqnyEvIPvt1vO
5Qh+09c+L956BJ/d7YDmgj4E3+tdxMzMadYOj8D2/7PpmfaRw3ietcN7ELee
wfacXVfFn6XWDu/A8gy2As+VXhxda+3wBsxntA3q3x3ev9Xa4SWYz2Q7xTzk
eMRea4dzYL6w7bX7b8yUjlo7PAHzWWwlO1qXvT5j7XAfzGezjTGQE9t6BeGe
eTe2tdbdsXa4Arafy/ZBg/9X9ycw+QV7lDRfpAi+sXY4AtbPZ5tyseHKrc/W
Doxg+Q17llVKuiz5be1wGSwvZPtCcdPmXGYbh2Ng80RttU95KZtz2zh4gZQn
SOzNK3o8iUHYBm7+BqkaplNSNnDzPh0SKZqshOCbZK99GKNl4/AYxFXQ21sm
7BaoZmQDd/+O3fcOvLe0cbgEiuwHXnshkWLjEKbh5bTmsfpeWx6BBU2eNg6q
IANlHPc2bFnB7xOIsP9QjGO9aKSNA9j5/9fbsLDeencvAWG+29qiuBUZCH5H
KPe5wgKE+079XWxrXYGQ9/e7KnOuHWF+xHvz25+XIeRnTb/gtXedjYMS2J3s
e+/YZ+5q24aQl3vBqBWwz8ZBGsQ5wLI3ccKsmZLHbBxegMOT2XaJhTHn47M2
DqLg9Mi099mD0xVrrto4CIF1M+7V6Ex5UXoXyj/AsDfL8G+4/VMbB3mw+v97
3jXqmV/6YuMgBVb/d0/RpXixVBZbBzGw/K8935Qmfv0ubOsgApb/uae6+NCV
LmVbeP7IuPJ1yW9tW3j+CTPVLM0xsXXgA6v/umeltdlPRjtbuH8A231UOw==

       "]], 
      LineBox[{{33.288220745061736`, 0.}, {
       33.32058922725348, -1.1102230246251565`*^-16}, {
       34.25, -1.1102230246251565`*^-16}, {
       34.286577272127104`, -1.1102230246251565`*^-16}, {35.23452288908385, 
       0.}}], LineBox[CompressedData["
1:eJxFkQ0sVWEcxs+9zLDycdEdkntvmaxVSrLmHv7O272VyeR7TetjSNHY3Oh2
Jx+1fK2UWhGTtRaJWGXEOWgqNYRFbT52a0zy3Z1u+Rg57+Q929m7357n+f+f
9xzpmfjAKCFFUd6rL396qgYluZUMUPgpZaN9CjJUNQzMrPCPXp5vFjxy4tV/
naK4AXPloXrCY+XtZa4sAxPYPy+3Sso0sWsh7IVQrMFbBkYxL8nPWax0TLaR
/N2hhl1f2gk3VyTdau4iPJ68V1f+mbCNYjoo/ysDU/y4VAENoopazcDavlQh
HauNEkdpGbDFbkPuXqVU7T9M7vdGPdTv8YPMm1QWyqUTDPTjvDEttg4pMZ1h
oBezKc18t6DmdAy04/4b6AvPO04P6Rngvx/VYs4VaLJa3y+Qea2HDzrVLDPQ
jfNW9LQNlVkoRIDjK9Vyu+HGsQwjtO5X1CT7xpkiuMnL3lvohBS3yhAzBFWY
ZXSx78xGbxFa798mfha/fROCZF7Pc6V1I9E9lnYIspdX+aQn7fBC5rbogECA
/fUsPiQIRnR8oI5N9Hug73QifUpsQ8PrXBDc4H0fXLmPo5YNpTtX+/Dc7czN
vey0z9mDIAyvl3GO6dkpie4k7+uv0EYcIHzRXuCjpMn9SsfYR7t9SP+O2kuG
tgqi/8nYFy08gkDKA1hwsoDZtgk/ovs7VLr0BZC8evxsblMwAmfMJtzjuq1T
ZeEIJPh/GHFd17T+tyOIf+FYUc3lU2Sek2OYKDISwU/cV0gHTIpUR2MQWGNV
yGlef+rbH4fACvcRcE+u53hIEhBYYqa4niBloYmKzFuSCBd1yWSf8zQXMagh
emCjuuldKgIxpkX2Spa7pPoq0Z+G/EovyFzbnzbP9sqqhtNz1/an/WWp2RhF
bB7x7+C2lQXfQWCBdT0bmvPN2Os+AjPMv9n0sOLzzkWkT//m40qDhyT/D8S/
e24=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQff2jsN6vRc4ODGCwYA/T/vP9j5c5O3z8DwJfbZpf
3FiosBomz8DAIvRoc+x6BL/V+vXRWZsR+tlSv1y/vt3Z4Q1Y/w+b9r6/L0X2
ODtcA/M5bTl2sP0JPIDQ3/mQn6//CILPxS2pcOYEgt9tomTEeRbB54nTdnG7
6OzwHmRcPYNtb7tJWPNVhDzfRtuMAzcR/P5bblV/7zo7PAfbz2wrwBLQY/XI
2eEJmM9iO0E3cl75M4R6wfCkDVteOTuogTgHOPZOasg+9PEdwn9Cq0qu6H1G
qJ98ufZZ9ndnB0UQx0Fgr8jfth8rfjs73ACbL2g7VW0C17P/zg5g7v/1NmIB
M2WUWVzg+qdXLtJL4EDwJRavdpjL4+LgDuJcUNg788yWoFsCLg4vQPwO071S
3/amiIu6wM2bLX+8LETSxUGLESifYbEXLCzv4tAhJy5odNfTFmyogouDiQWE
Lzfn0RpuNReHqf+A6t5b2c4/+nqfhxbCfoX3Xy606rk4MIJ5O/YslPj36JCR
i4M3iBuguFfJif3rfzOY+gV7FmcLsNtauzjsAFssbqsyVVKyyh6mf8OepfuU
tLc7uzisBUnbK9mqvdC2/eKOsG+ZoKm/oY+Lw2RwfMraqlvbJeYFuDgsB/H3
S9muSHEvXh2CUK/RF9D6IgLBX7k9crpqLIKv9TBpZVKii4MRmCeydzVXzu75
qQh5HZPSs3cyEfy1sXX3JfMQfL329o9hRQj++g0TmKeUIfgGt2aKXqxC8I10
11h6NyP4m8O2ene0uzjcBIcHh61Jw77Yo90I+a0rj+czTUDwzS5faLSf4uLw
AOx/Ntvtf25OrpmBCF8LtcdLd85xcXgGlmextf756CfDfIR+AD0JUQQ=
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQbVX59aTxUhcHBjBYsGf3on+3C1Yi+DZn2N+tXYvg
28pLCWlsg/EZGF6d704K3IXgz2j4u6lqn4uDLohzgGuvm2E+85JDCPkvDx8E
nz2G4K9Zsnxq0XUXh/9gsN5GRstUcu8PhPypW8syn/1xcQgHcTYo7a3oltjF
z+gKl1ez6eKyZEXwr7z5HZXE6epwAcR5oLO3aW7u6m5emPyCPQZ+939vEXR1
YGMEyZvtvfcvwOeeqKsDM4gv4bC3Z/2hOexSCPVWCSZvDeQQfLAz5V0dBI6z
P/KX8ds77aB4X7Oaq0PvX6A4u6etS1HnvTVarg6MYPUb9vwxCVAIskbwVz09
WFBtj3BvxDTjg0ucEXw296WC59wR/C3fxZK+eyP4SSs6NikEuDosBLmjXtpW
IPIXk1cIQn4fZ05wcQSCn7Pr7uI5Ma4Ox8DqRW2lsv2/HE1AyJ+QPujyPsXV
4TLYY0K2ZWeMpkpkIuRVapc8dcx1hcfPJV0xs+xCV4dDYPP4bRvutbdNKUWo
v2Ofrf68FsHv+nCnXKAJEX4WC/1OWLYh5J8FHpBI7nJ1UANxGjj2TmEyyuzp
c3W4Czaf3dZp8+KdWych1H9IFuW6P83VQQ4SWnvnibRHccx2dXgCdh+L7bkj
bLJs8xHqAcIW8jc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQ/as063fUYlcHBihYoXbHu2U5gs/Ssf/NtfUI/iYL
Q1uGLQh+wstFvZo7XB3UwTzOvXyzRO4F7UHI7/Zq06s54OqgB+I4cO9lkshj
iTsCk1+wx+Np6C37Ewh+/ybbDYpnEPxr9aptzBdcHf6DwXobGV/emKeXXR1U
weYJ7k2W+mp4/DrCvlXP77CvvI3gf9hy5G7XfVeHsyDt9iK25k1rNuc8RphX
5z+l0+85wr4jMjXxBq9dHXxB3AcSe7lfJZsKvUeoD9ruzf3lE8L8GS3GD69+
Q/DvB0pv3/4Lqr9Bca+aPHPvzH+uDoxg2Q17ct68SqpmcnOoAnEV1PZu3nnJ
IpbNzWERiF+gufdX2y4+ey43B1mQdfJ6tg4hi54o8LnBzW9X7NrFJOQGNW/H
nnPvCic8EXVzYAEJKDjsFdkTmXZMEqEeDBTcHPb8+7Pc617aXhi/nPUvmP9C
WfBFtipCvf7HH3t9Nd3g/i3b92Cyvq6bw/l/IK6F7Z7uE5mChgj1zJEb7D+b
uDnwgd2rb+ulNkP0qoUb3L8TPte/3maDMO/agfSDMxwQ+mX7/KdXubg5rAfL
K9qmRJvnxnjA5BfsWaUh72zn4+YwFRx/srYfv7JJKgS4OSwFq5eytTj87h1j
CMK8ugnXjjwOR/CPxu6bdTQawefRXlawPN4Nnh6CfvS6dSYj5GceLZXJTndz
uAaWF7J9MCn2k0+2m4MaSDJBcK9agusJvXyE+3J1decJFCP0b/klUvKpzM3h
BNh9vLa/jv/xvFIFta+ex9Zh6hP5bXVuDhfBfG7b9qQzX6c3IfSf099yurIN
Yb7I39kLo7sQ8tGnmstt+9wc7oL1s9sump7tKz8JKf6MrH8+mongz/XnOMI8
381BCsRpYNkLAEqDaUQ=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQvecM19JlC90cGKCAedanqo6lCL5X+q2ArJVuDnIg
zgHWvRNMDqn5rEXIX2dc9Ud3I4Ivd37iJf6tCH7KnMoVH3cg+AzH1ump73Vz
0AGxG7j2zn3/eEvMQYS8laSk9aSjbg4mYPt49l5z8jt4/KSbgyWI78C3tyin
2f3vWYR6/mk7zhpdcnNQBqsX2Ltm/9vgjGtuDhog/gPBvR4vlW7NvYVQr212
htvrD4J/Ip5xUj2Du0MOiHNBZW9Kp5nEVhZ3h36wfvW9DJuz573icIern3Nn
gYoCL4JvwXZtVagggn9Vn9uwW9Td4SkjkKNhv7co0mH7AUl3h5WgwJbw2gtW
pODu0FSzuunDDGU4X2b7KjDf/dp9z0Q1d4dukPoWz71P/otcmKYFM3/BngZN
r7Azegj7ZILr7zAaI/g7a7YkmZsj+GHLXr7IsXZ3KPkPBPPVbT+dl8tfZO/u
MAXE369i2/cz+Ot1Z4T52sqd1bweCP4Jn32Mzj7uDpNB6utlbVPKPrdXBCDk
GRZo8K0LQfDnnoyd8jjC3WEfSP1/MVurz5OkJGPdHU6AuPaittdkTizwS3R3
OAeWF7Ytcvur1pKKcC9/gdHanZkI/pqZ6cbvc90dlECcBoG9Hofn7FQpQtj3
5M1F+6gyhPoGMfZj/VXuDmfB7uWxlXGw8Tlah1C/M7Pw0q8mBD9s8rIIg3Z3
h5tg93DYftpz+15qN8I8LQG31xcmI/jHLKsL2Wa4OzwCq2e1TU7e8N16DkLe
60fnE9a5CD4Av3kTbQ==
       "]], LineBox[CompressedData["
1:eJxFkAtQjFEUxz+SLaxWbaw0tVGpaajQWHTX8dy+w0hImcJOHmXGYycm26C2
6TEsRtLDlNQQdsLKK0VXyyzlNamZKM8mj8k7NcTktd+d9J2Zb+787vl///+5
xytuy5J1AzmOm2X7hPNIpdugU2UacOeEsqeqtnDjM5MGPAWEwbTZMVPmfFYD
XF8lTr6arzkv8vCVX9x3XRa5PMv7+IVqkTUVK/w76H8urTHYWUOW3hb7ddl5
ykc3wvo54t3uEwlVPIxn5EgdXN6X5NfwEMDmGUItoQsKrRYeVgmsHUP168/k
dln5/v+DsqUHlHd4mCqARUo7qjfvWfSAB7XABida+qohfWcjD+PYODIaLQ1O
KW/mwZf5jaCyqTn6lta+PIMzrdd2Jw5+IfobjMs2TWnv8+dcqerS5fi4tzyk
CVjhSzufj4zLfs9DHvPzoyaJPvb6Zx6iGLtRbXDr8o9dop8iZnqEWw8PqQK0
edKHGUULwnrF/m7zr3lJf3mIZ+/3ptCyEsrsENKZ3pf+GFA7vUmCUMnUAbQi
QBnCDUPIYPogmhCZFjhRhtAssGkKVaa2+8fKEWR2wsVC2mKa421UYH9edlOZ
R5U7QtMgGzyKpn+F8kRIyY2Sbt+mI5xvvIvcB6G313bvqCVV4fXS2f4Iub9t
XBRBdMn+DroJCE//2DhQRfyOGwceDUaIFHxSJ5G2+x9+3QsR8w5/X9jzcxrC
WhbkRxYrzV/HqxH2CljiQxzQ6WPkbFFv2ap7mz5fZH1xY9t5RDAK+loPElQ3
6enLRQhqgV8GkI7OQ83SpQjnWP5oUur2rWFGFEI1048i0XOX390Qg2Bl+a5E
tvmKtWA1wj2ml5P6AkXtrTW2fQg804UYbiRXd8cjmNlexhLVhycXvTYiXGHs
RTrloeZwnTifSV1s2rUN4SbzcyLahD/HTusR6lmelChyVhe37kR4wPrDSMM1
S4EkDaGR8VCS9cYrJyQT4TFjR6J2St+3Zo/I31Wvsw7uRxjA0ipqzHHz0moP
IjxnfQlZv+/kjk95CO0sz554VEqSxhT25c90JYre6J9cCcJdtg85+Qc6up2q

       "]], LineBox[CompressedData["
1:eJxFkX1MzVEYx++tK3m5SFIU90YaESn3tXvmSeblPFwh425xLRHlpcU0MuTl
eg3DQpZCXtYfauh3u+49S8MyJNyZxVZZiJu3GTZGdI7md7bfzu+z5/v9Puc5
JzJ93bzlfgqFIqnr4/uhXvey8s5RCO/6V9xUsWkJY5dfuEjBxHlpCOtMO2j3
VlAYzlkRwCTHB5uykkIyR20oW1tlTZ1wjYKie0U/r7QudlIYzQF6sWb/oJkH
3HK9KDY32VVLIVb0682sC72k/RaFDKGPYGdKKlhDPQU95+1q9qmtgFy/L/sh
xsaKGylMEaBlR3LiSIFXrr+UerLMZ939W4NY/O9mi/UFBZvgEWxHsuSZ1EIh
QfgHMe++Qkt4G4VcMe8oFvUow6Nsl/M2DLZY3voozOJQFsbupAV7Hn7szisb
ygaf9yVWf6GQKeaJYCve1blPf6eQL/I0zDnhVOKOnxROCJ7IAjfmuFd2UljC
OWckW+SZnjjHD2HTv9tjl/00bl0AwmQlP5+J/Zjx3RzRG+GPWJUWerjhhl8/
hHIuD4tnxU/Lze+CENRcH2dgHeFbbjSGICiUYkBmSZ9vloYgnOWP/Xkm6+Qx
GoT4tz57tspMhEyLEL27Q/B4XZNr1Sj8P//W/CpTyhiERm7MSyKNdXtc+li5
rg20m4ZNRKA8t38CybHqXf46+bx1x9UmnxFhgegbQwa+eFXzyIKg5HxYT9Ij
PUYnIJRwbhlJrmYeqymZilAlOJL4X8ky7pqBUCv8WpL6Nakma5bcv9w8xDg3
ReZv2z87DakIV0X/MDKtvt4wfBGCh+PkUFKkLnWq0hDucK4NIe3zNxo67Agn
OdujiLF4tvPxMgSv8A8ke1ujDDWZcn5T9C/pTDaCJPIiScwar373OoRmztsG
kM3XKqTs9QgOUdeQ+z8K9PPyEO6KPDWJAJtkzEdoEPq+ZLUjTq/Z1vU+gsOJ
50FPqcdOhArhH0rUwS269w6EJuEPJEtsUvWT/QjPhT6QXCkt1LkOIbgFh5I/
rzOqS48itAoOICnjLDpHEcJt4Q8hZbnB1auLEdpEvQfp41NdCihFeCNYRf4C
pKetNA==
       "]], LineBox[CompressedData["
1:eJxFjgtIU1EYx2dMZ5K0pktTmZqPxBFJvjbx0GfOTO6RTFKU3BIzkVW4kLSS
8NHCwghTipSaw/LBIiJT0+pAywybrkSxTPCBWpaVLjAdzbLdQ3kPXO758fvO
///55xSkHtvA4/Fi7R/737tmbJc3MuBtv/Oe80lNQl2EXzMDvH9npkrT7mRg
wI+FMicSMZQY8f0+57Wevu3DDxkIoF5ARlTL4U86GAhiGZxJcJP5kb6bASll
F1L09W54JeHY5+rro0YjA9m035v0hC3U2noZiKTelaiHRS8jTQwUspwtIcKi
6KWCN1x/p2dWoGGIgUAWpoRE+bTs0Ow7zht4pvaMSY5T7izM1swwIKd5YrKS
4CY2zzEQz7KfB9F9jk4QfGMgmeZ5EkVV1uk4CwNZ1HuT+Z3lTSVLDJyiaRJS
Pdg00mFlYB/d349EFZocLav/+/TPxsWLkaEOGDT0fRDRdrnl5Tri9X1CD8tu
6DZiaHVgPSKDv7NejbpiaKR2NynSly+LRBhErM+PJj7xzcHJW/F6fs9HU3ql
F5f3Z81+fDkWSt0f27Zz3GmWzUXuwMBftc/VpiOlRumhkWJQsw9LYxHfrSLR
sAvDAZbfKpCho7l4NhzDOTb3SBhKyehvkcgw7Kc9UrTya/F9RiyG8yxPBiPd
bXfnWsBwi+W1AKQAucyswNDGYoM/mp9W5guSuH2uXay4GZfMsSykpa/kIMcT
pn5rRxqGTvb9Hk+kPWkJsWRiKGe5NBhJheLMUBWGGtoXiIba5JdzczDoaV8A
OpOm6tblYRih8yIksVZ8GVVjGKO8BfXWt2xzK8AwQVmITqCBpORCDC8ob0ai
KcvZymJun64KscFYgsFM/SakCooZs5ViaKL9Xojfp3KJ0nLz99QXYjSXMHyg
3hmluraqDVc4b30wUD9bjWGc5gmQLvWHSXIdwzSdd0SKn2JbRh2GGeodEeil
x/kNGD5R5qO/UT96zA==
       "]], LineBox[CompressedData["
1:eJxF0WlIVFEUB/DJ1Jk2tRkpnHScSSxtkBYtzbx6lGos7i1zK7WYMbQQNxLU
MMlwqSiXwqVFyok228xELM2btohRWZPNhzQVS7MizIU205q8F+s9eLz343/O
PefxVDuTg2PNRCKR7+TNnse9tVFt5zDIJ99FB8ypV3fOUfElDPbMYEF7sirv
+l/F4MhtSXMXtn3eV4VBxSwSU3XLyIK6Ggyiqat99zw8XIdhEUOzhO6duSZz
yV0hV9zQXo9pwhDFtYC2bM7tOvsQQww/354mjFbO7mjFkMSsd6DS0jYf2TOh
f+Be5LXVBgwLGXQ2tP7jBzudEYMzs3IuzZemHj74GoMrt5TqfMx+XO/CsJTX
y6jHrqLYV73CeeJj9saxfsGd9VcClJ8waBh659OqvlW31g9iCOHfY0ez5zxy
TBzB8JB5WE3DPLcUFn/DkMr3VVCX6J6J+jEMG/h8FZ04Eh/f+xtDHbONOzXU
/uywNCOQzmxwpud78gLdLAlM49OrG9MkstshM8n/fTau0DtnWAlWbHcr0UsJ
uLCGbV50JK/BrHUegdXMtf700U3NnkE5AQv2c6VBlDcpCVzKMwQN5ifThOk7
N3k7EbAcN5lMayKQn9tQo24xgRUTk7YOR9KtmepDagLvmP0wGjgw4/SNpcL8
hqtlEqM7gYzJ2KRdhgqMTum/PAkEMjuqke5P9XulD4FMZtMi5OHiG6oBAit5
7oEkwU8fJK4Vznuzb9vykkACTTxXoqqL7ysaMIFSZj8HlP0ixeptEIFK5iw5
Ch8zZYrDhH5Xp4LPbhGCJ7A8MnSHYEPa5ccZ0QResP4mGbqg9/A8F0vAyC1F
6U/uX2yNI1DDXKFCG79usv2SSKCb5zZIoejKtk0h0My/xxqNauJGvNMIFPL9
FKhlz3dtdAaBU7zeHp0sz3l+aD+Bl3zfWSihxQZVZf/bR98IQ2euGQ8K+8ns
1PLxIwQ6eb0EDQTcOawqmpqfJUYNCet+aIqF+sKy9tikEwT6eG6Bopu1xpJy
Av18P3MUEeowLqogMMBzc/QXNy6Csg==
       "]], LineBox[CompressedData["
1:eJxFkn0slVEcx29l3KsS5a03Pdell8toGu5w9CNGL8+v6FUpkgqpbrGYWBaN
CaWUNoXqprtqYpMsTvyhvET0qhrRu1pr2qysddU9Z+U527PnfPb9/r6/33nO
o4zZH75zokwmCzA+7C23Tqt5c1kEjXEvE2xoHzET5HoRZP/Wzd3FhW43RBAY
NJvSo0VKw7pqERwZgxnd0FC153CtCE7cLafqD76vLtaLsIhhpoIaLNpD2xql
vB7NhtvfmiXWxbxztrknwhLun0JT8rXFvu0iePN+U+mKOsPEmK7//opGh8G8
A7mPRFBxtKTfFfaDVc9EWMD9VnTbmtlPC16K4MLzptOOsw5tif1SvVe/snHl
G6n/JZVztfqDCISTLbVIWKhTfJb0tGqXc0NfRfjD102/jz/c8luHpbxw4pFZ
OSLCQf49HOjdLM/kY6MiBDM+KVB1hyYu9reUd9bSL3KZDMfzJm1cusbRBMd1
7YXAoAlyhAMTjLDQl/a9C9YMTsbxfqHq5a5N0xBaGY4uobXaVULZDIQI5gcf
KtxebZ1hh7CPsbCM5hvC5ZGzEeLZZZ8KozxGQFA1Ptmk+5REY/MihmeqEEp/
GccJ2Ux6eiLfj85HeG0wclQI8bOLftGrRvAfY/MSot+6o7PODcGcobsXsdHt
aj7jgdDF9JwAcvRLfG2yF4IbP58r+bZ4r36tD0In07s1ZHOK9ryHP4Itk8s9
yX2adNIqEOEK43kq4mGSkj0cjFDHeKmSlK1IS+1ejmDBdXdiXpSRWCUieDOO
ciWHejOjC8IQ9IyPzCJv52avS1yPcIuzPcHYnNCVEQhNjJtsyZ1reX7qrQiF
vN6ZzP9esFixHeEhn3cGOeVd5DQUi1DJ2ZGMZRTbt8YhvOBsRRJaSqZUJiLU
cxZIr3mp7JhWur+gsLKRHckSV5dcHApMRejg80wlc17r+pTpkp7rpO+RZSI8
5nnmZCThestAFsJzzgoSXVNVfzdH8nf+rLlx4bjEGv9bFeknEPp5vhnRZdcX
bzmNMMDrTYnlg4ZcnxKEe/z8NiTdqil9Zqn0P3levf7WpBzhI683IX8B3V+s
Kw==
       "]], LineBox[CompressedData["
1:eJxFkQss1VEcx6+3cacbd3eSx+2umysSii1z6scUk85pKq48UklSE2JTy2uN
ecSomGV5xNTaUGu7CscjMfKaCktEeYRpbGrZPG73fyb3bP/9z+f//Z7v73d+
/z2Xbvpd0eTxeG6qh3v7l3aEjzzF4Kza88qF9N10l1xRjcGC41Qdam/b61v4
AoOYsS59HDsA8bUYJByDHo3bHJI5KTDsY7o+9ckZEyxTDHaMDahicEJ7oA0D
b2tJTKdWazowHOaglU/zQmcX73djcGV+I7pWNT95vQ9DEuvHijZ5uaaXDmJQ
slXnlryQbTM4hMGa6Tsp5H7t0xrFMMTJKcZI08EuzuUbBkdOnzSh7z/eFV37
gSGGY7GUZiT0NZTMqvvxNrW80L+AwZflmVKDxmgtjSUMgaw/M9ob0vLs0AqG
SJZnTvN4At+IvxjcORaI6enKsOXiNQwVHK86UuMTrx71KNX5n+c0jmxqEcji
IMyaFuX4jTvoE6DsvrZUbl+ZdplPIJvVd6BmgyvSIgGBVg0Vy47TsVueH7qE
ZDuvVFQYvWZKwJz9RC8a9nbG2N6CQLquiqeDKRuTFQHJxYmSJ26haHozI+ih
lMDzddX3Y6dQdcWIssOGwMImN05AkZ6yqtUDZHu++38mets6EQhl7IgWs7oX
Q1wI+HP+gwjV2pkV5LsSiGLzlqGYgSjn9qME8lldKXKKa/zyx0Od91vIT5Z5
EWjgsEWMFPXBkqCTW36lBUo8X9OZSwhUsLzdyHVjI6r1zP/7ljetl+EdKwEE
mplfhJo9yl5Lg9XzSJ1ZCpCHEehh54XIIxPWs8MJVDO/BGnbFpTTSHVeZ993
z+UbBMZZPwKUGeM0L4kl0ML6FyMfk3u55xIIdLI8I8RXfHLMvL2Vr+Sjfvne
4YYkdf38tfg7v9LU7FfaYSnOIFDHzu9CQndRu182gVHG+mh4KuJqet5W/RQ9
VJxRb/jmAYE2xiIUaKP/cqGIwBRjHWTWKz9rUUJgmtXXRgZThnM6ZQRmma6N
/gHjoag3
       "]], LineBox[CompressedData["
1:eJxFkXtMjWEcx0+cjlR0ulNUSnM5dTppCfU4v5RSqeenuWSmkHLZ5DLMmnSR
2x+1rCxNdGG51LrNvR6dZk0y02muKXJILGYo5Hac5xned3v37vN+v7/f9/s+
75R1W+NTRslkMjDd/HnK9ntpzmnKUVxrLkaHXjpLwY2Dzpx5rjjRP1BNwZ0z
KNirkcEjLvWSv6o0RB17kcJUQRZsozavK/MqhenCP5bNNPTubmym4MM5y5K9
y1W79usoqIVuxWqnZbY4t1EIELo129ZxLzn6NoUgkT+OzdriYZFxV8obstle
U6enEMGh3oNdbmxFwwNJ37PMbtihm4KKQ7kd63J44iZ7RkEj2J753i9bNPji
736ZIztcmLrjYT8Frch3YoZ439LWt9I+YjfUVvNe4uP66x+KP1Jo46D0YZ8K
sifuH5b0WFwUljZCIZ9Dn4ads7HZsvIXhQTOnZ4se2BzTKUMoY+zJpCpI+P6
ikchHBOHP531VPnvypMj3BF9fNgRhaPlfgVCEec5/mx26rdTeywQBsX3B7JX
bU8D0iwRasz4eRJ21LulPdka//eZf6By9crxCK1yE1xIYOKlEuHNS+eRkp50
UhK+6VC4HUL6L6PR+HUJiTizeNI8B4S83ybWhpGh0ZoGPyeEM5yT5pGKZPsI
7wkIZmJRfXPczS/dLi4IGSbZ6KchPz27tyonIURzNs4k53OYXOGG8JnP+wWR
5Ybykh/u//qVN8sX5Ko/TkGo5XZ3T9JQseHmay9TH85JGpJoFpPQ441QIPZN
JtZr1e/106T5azrbnFszEIRsrAtJ9Rh2YiqEJo6ZzsQ+63F1o690HrrnTXDO
D6GD6y0OJE1b9uCkP0KlyPMirmU5mwsDJH/77xTj4UApb3diVNG+IIReMa8k
Xjd8Zuyci5Ar8txJ52TljU3BCO2izziyL+NzfBIx/U/B1kTV+3BgqRZBL/xW
5HHI9b3RoQj3BVuSg6UnbSEM4ZHgsSTgZ1ZV4EKpT9+q9cGqyL/5mWNIflNk
p0cUwnOxX0GCXVUpTjEIBsHm5E36+O9WsQgvhd+c6PRX6rIpwmvBcvIHtEqa
GA==
       "]], LineBox[CompressedData["
1:eJxFkAtMjWEYxxOqHd1TSqt00aip3KrRq8eyg4hHpaEoKWTdtOhOjgy5LHai
2pGTkOOSQjnRW1HSQo1qmVoXGitpSW4tjr4Xe7/t27ff/pfn+R7r0BjfcHU1
NTWYeIWv15I22++IArJnOFepHPTlfNVUrF27BcFegHQt6pc4t0AZhIACh5hR
tdfarsXbEBwFBhEtdhtuLAzh+cDzLcG5oZy1vpePng5DcBOgRoeWB+Qdz9iJ
QFhej+4oT7NM3o1gw+bpU32T7Xdj9iCsFTjWmvpXJO4KjERwYPMNaU5QlvnK
aARnxka0U1XUvCAWIYLl7ahVYfVhyzgED4F7jGmouN1NFI+wgvln0Kv9Qx+/
7kNYL/AsMzpwUkPem/B/X3mlk4ul/4skvn9cy2KtihTO5ft9Ki+n/btHjzUd
MwuPzTrI9WU01S71EEIam2dPJSHS17sOc71+8s2TfkcQ+tm+TlRUVAueRxEm
MVVZ6ePdMepwnPuzPo1cMzmBMF0wyIG2Zom2qp/iuukiG4Oh0wiKqcKxd9C/
IYSmrh8edQovIk/ekPTkLMKFcZVKFeND+iwi5pVKeX7Oo/Re2TmEl78n9Ivu
JDIsJ/tYDoL3BKr0FpISzZLV8XkIugJbOZPR609/Bct43n1dd+ma/P/7l1Sm
fP4W7iZHkAl+lS2pkurOtL3E76vubt+kexmhmvXNIuIOIhm7gnBG4GoLknlg
o+v7IgSxwJ6OpMk6auClAuEO6zMlhk8y8ukN3hewW+aruIVQx3Rjkjftnkb2
bYRnAh6cTrqKnz1IL0V4xfqMiI3vu+jIuwhtTDckO7+O2WwqQ3jD2IAocgzb
ve7z/xtc6nDCuQJBwvazIi7dyz3NHyI0sHk6JF6y+YsG5X7l7L1FI1UT92R9
08h4w7HArhqEVsYiApFyvcbHCLdYnxnJ0FPWltXxfMOd5oSCeoRO1q9JtAM+
OJ5qQOhmrEHw5+/uxEaEx+x/TIhUZiINe45Qz/qNSbun0ypsQuhj/ilkfubb
KEkz5z9HzJ4z
       "]], LineBox[CompressedData["
1:eJxF0WlME0EUB/CK0FAELEeVQ4RKDYgVCyIgdvQRIKYiMsMHFQ9QghBDVCRV
40HF4AHGKF7BC2wU9IMaSeMB6gQB05BwFAW8QEEbUFAjqAEvqJ0R3Ek2O7/M
f97bl5WnbU3aaCMSidTWh71TDq2rCHiKIdK6F/nJ6OVZ29Pd2jBMZ35kR3sb
j3pY2jH4MoOYBmWXNfY/xxDD81PpFreHec9eYtBwe1DD3daw2g4MCczdHnQo
+eOHm68xzOL1JDRqxKbkXBeGOdwOVKf3IgffYkhjFk2jtTGhdtvMGMIZ85yo
3XtN1doeDAt53plqIwvict5jEI2td4XGJ4f7MCi4XCjpsE0p+SicP1LG9Bs+
j/XrdqXBuv076r9gyGBWKWiJqdrmzSCGKGa9jDrKR499+ybMtztH7S0ZwoD5
/J60r273tek/MKQwr/emq2RV88J+Cf2MGcPVmj8YYhmy/ej8yvnLUkcxrODz
zKBlEu0LrYj8z7uuMaQfsRG8/8bAwCVbAk38e5R0YCQ4946YwHnmohCamrhZ
0mAv5Jv11890OxD4PtGKlkSq/tonH3Ik0MJ+bttSykNSAg2ZC/aY8jEa99lN
/1zQW2YMdyOgG7FYLCs1aDjCnLRMRuD5BGuuYhHNKJR3bZhKwMl6bJkcjtpf
pWbt9CSQxbw4BMUqS4ePehOw8HVLbcjtzL/sQyCbOwDJTV7SSl8Cpxi7FKjI
L/lik5zAKubEUDS6rTjQ7E9gD7cKba5rv/1j5lh+nw/qdHePdg4kUM7reaH4
jKQm/yBh/vv3ipIXKAUHSkw9y4MJGPl9GSpe7ZSTriJwgdlXgcQ34kd3hY7n
9Q+1I4VHjocReMnOq12QeXn9lPJwAp28nxQl6cVX7kcK9WsGY+e2RI3Xd0aq
mPwHPWoCxTw/DZWerlnyexEBE/ck5NRraZVGE2jjeQfUX7D308I4Aq+47VH9
7J+2mRoCXTwvRhG5ESf2xhN4zC1DV5u3+5xMEPqvPqDT5SUS6OX3bdFfgz6C
8Q==
       "]], LineBox[CompressedData["
1:eJxNkXlIVFEUxiczR8wWUie3Rq2hQvvDpSEr73gqJGgxj2XiUqno4FajETVN
ok0aWlnYMg1S6qQtak6LiNlyc9TIoUjR0MpUpDLaMNqMqWyaeyleFx7v/fjO
+c533/FLUUWn2YlEohW2h70Lcz/LKSJ4275FMIV+bg9s792IIGUscqBJrqrI
NzEIvgxNDrQ7zTgwEYvgx3UxVdx4r3SJRxD9PUZH/y8LEwX2jk8vUGxFiGHg
60kPX744dVMSQhBXnanl1yt9RgrCYu7vTNMj58kKUhGW8jzTaX9V8rVTSoRw
rs+gEZ+qwurTBf+mlcPm1kyE9QzK/Kiq+on+ejZCAOP9s6i/XY+yZodQP5r8
QK7LQZAzMLhSQ1uHffFOBMJVCU3wo4/VuxAieP9sKtE2V2fuRojm9R60Z+Rq
bqIaYRtnL1oKdRCpQcjl95PS1YbqGZAnzLMTnR0OyheYbtMZ5+1HyOD+Mqpu
PZbndgDhEOOcBTTEp2StuAihhfsF0LF8raflIEIR49BAWj+sefuu+J+f4U6a
YlfL4CFbnknMbxn1rdxe3HUEQcM4ZxUdnFBuNh1FKGPLlkZT3laG4Hw+c40p
SkOjadzXmuMIW8atVmtfOpk2Z2OH7qSQ15y37kSxzvZ/f9v0AkIKByOS9+oR
rPxcDVOEhQdmlQv1ljOh1sQztv0yuXURafoZ1BVZIdSrEgIqoArBk6FKTvxv
y7KDz9n8GX8MJqOe0uWyGsHPoJntJLmAUML7pSRhYOYz8SWEswzDvYlkmVOt
pRahgesepKd88p739QjNXHcnpZZfEUMNCG2MCyRkddy4a/cVBDPX3YjdzY8v
TdcQuni/C6HubxsbGxFqef65RK1+oT3fJOQJefo86nSzwGNL+nxKWgSu03eN
7b0lcOr3Tpp1B0HH580hPrFtpVvuIlTyeV5koPlWwgYTQi9nJ6KTNPmvaEcw
8vkeJGq30RJ8T/Bz7r9olt1HGOL3EZNOuUEvMQt8QFeudHyAMMLZgSi+nZD/
ePjffjaV2n94JPD8S/u02m6E17zenvwBqRObxg==
       "]], LineBox[CompressedData["
1:eJxF0HlIVEEcB/B1S93ytnK98spV2cSTXM2d/JmW4bXNgBqVEZWGKawbpVtI
K2QqJCFZVha0WcEipNu1WThd+EfYham5Vh5hZRIqqZmVWTvT8QYej8/7/eb3
nTf+O9QkTywSidZYHvZWL9U1Pu/EIPq75Pu0mgddGJYzlFvT910auN6DwZcZ
bKg+utDpcq/Qv6Vu10B9H4ZALgl1m8q9Uv0aQxDjfQntJDllB/sxyHl9Ma25
tjGtaBBDGLcdTXFN9dz2FkM4z7Oj4r1Jo6phDKt4ngOlncrWxPcY4rgdqTYy
pip6BIOOeciXbkvIDlONCudJzijp2fMJQzCD3oXKt9SXVY4JdecC04rGCQx5
DH6BdKbkZQf9jGE1719G31TMaPqmMCTzPCl9eNzN48sXDCre70EN+pj7zrPC
vGPN2btDvwve11biuGEOQzX/nwi6uaP+5s55DNnMtQEUzKatOhEBNT+MjAZ9
eLngrJjAL75alPbTM02mhQSe8/sLpZNWUvLChsA5ZkMkNTspvo1JCCyyYh8U
9O7yHP0iOwKOzMVAL60sTZE5EAhfYHFNOv3z0wRsH3WvDYldh4pTbp3c6mLJ
m7XETeSi7KxepXaJkK/c+XW4bhmBpjkLFRkoQCM92iIlwONExjaJThH12INA
CWs/H4HGa3L6PngRqJ63WB2PuhtKy8U+5P993DGcCvbxE6w33XoWF0DAyPYP
+qPK9t79WYGWOs8PR0Uvvnprggic4vZGZEjaXhNCwMCo80SKcUWhQS7M857L
cW0PFSxerL09GEaglvX7ytBH6entPyL+1fVtz2StttJoAj18niu6EW1ujlpF
4BW3C2pInM3KVBAY4HZG5Sr3nwVxwvz83NhLR+IJPOLnc0DphZvSLiACT3m/
PYo6oJ1sSyBwkTnBC7lXnT5jThT2z59ohekkAn18vwS9azSPOK0XztdhnD22
cgOBQV63Qca77jEpqQSG+HwbVP8ktn9HOoFhbmtU9mpTxaFMAh3M95Yi+6u9
+YdVQt5vwfJ/pw==
       "]], LineBox[CompressedData["
1:eJxF0g0s1GEcB/BT2bwU5xx23azLKGleYjdd/OeXaaNWNz9i3iusTHnPS+Ql
jKJRtJIJkS5dlGSYJzKLiSmztjMVY9YLs8luodI9z9b+z/bff599f7/f89/z
/PeeS8TYbQKB4LDuoW9f7b3JV4ggYKuhz2lHT9aHQASO2ZKIRRrZctD/XCDY
2LM+bBCCYMtkQGYdJYm2YQj7KPMNyFsPhSVEIBykBiOi9gshYVF8/+3grJiM
swguFAPGJDO2xrgqGuES67cmkak9HW2xCFtstXv6FGhCRs8jyFi3kDhUrAsW
4xDsKGVmRFgnUeldRDjAchHRtiqU1gkIzpRnzIn9sFhhkYQgZ/PFJHR+xWZX
Cv895VujO/XTEHxYvRXpl7Zof19GULL5ErLqXjC7loEQziwltoHho0tZCNPU
lY4kKMm9cyEbwZvaRUZKy0UPZq7y83tVyyVTefz5Lg+NJI8VIBQx7yeyuaaw
oUKETsr3DgT/5B7rK0ZY19N5xIsUSUKdO0sQ3tBc5Ua65HKJ+jrCcZo/V5Cv
/sLtzWUIEdRqbyJN+LFUe5Pfn61K3X7pKtefRckkv6VxoOwWQvWG7niDQ7mO
wZzWwiqEd5s6uwVzC5+Dq7Pv8P2Wm665qXcRTOl1rMg5PyuTC/E1CFN/dVYe
5XLcvvlH1yLoseruvjblkEdYHUI8rY+y52bj6+0C6hEqqL3sOFHpFdMTjfx8
n+bT695NCD00/yLjMgZc5o88QrCkrnfiWmeMx10f8/Uzvxa7HJ4gqNn/IeFM
LAYbbJ4idDNbcXCo7sbuZ3x9ysnMNFE77+a4gEijFwgTtLzfnPtY7OS77SWf
Gz40dN3oRNCw3IzzfL0gXe1C+MQs5BKm+/W/d/P1Ddr7K3O9vCdF6RpNH3/f
MWun7GvG+Hy441pe/gTCODsPMfcP7jNKIg==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3bmd4Zj4myAHBigIEhc4z/oOwZcql7/x+T2Mv2DP
42t6Dx9+RMivMbN7df5zkIMziKMgvrd0mu/nvV+DHHxB/AMSe+2+xfxZ/T3I
IQrEfyC1lz0sh3XWzyCHK2D1unsvbK3m6/gd5FAPlpffO1O0W7zsL1R/g+Le
pNJZCin/gxwOgq033qt1daVmEGOwwzcQ38Bs72eTnUYOzMEOi8HqNffumXLC
Wo81GO7eli/XXWTYgx1WgLgBRnt9Q577cnEGw90vtuVb2A8uBB8MBBD8JRve
PL+hieD3W/jWNvgHOzz7DwT1LLYA1FVjCg==
       "]], LineBox[CompressedData["
1:eJxFkX9MzHEYxy/lMJKrS0zlRGJHTjnEfXjo12ZEnmWu2UySzHJprZJ+nLSp
KREqMTvtJD/KSSm6j2+yk1OqkWVWKdKk0R/JDv1w38+y77N99tnr836e9/M8
+yyK0Ow+NEUkEvlaD38/vf1+RvFhBNFkVNbMHnxwBGEJIwktNQU0m48KevHb
5PLeGISVPPQ40txew7nfGgQlz1op1Q71ayRxCBt5rnem8WOuocvjEQKZ7kKj
Z6LPlgTBb9/8bCd1ksC7vLifsckIfTwovGmAcuRdVgpCEPOT0fX+8hpdGsJe
nts8qDz0QFGtFsGGVRuM7vsLT7RlCH6OMa/Dv2YiTLC4rxKftFWJziDoeVHm
Q/9k+bnNy0aYyxsUraM/CjTjq84K9Z/0Nz8G5yJk2FrBsoOyx/MI6qqmHtoa
Rc31kpLEC0K+sSX4dN5FhF9j1nYdQcTQmRp56zLCwXErcyqi//YwkCtE8ODH
cVCSIsvA0o4rCEk8pytIjlg2feiqdV+eN8tJunTPgPg6QjLPC71InEfOK3cd
gi/T15AoRcPdtSXCfuGbLDkhegSO5ctIyHbvY1GlCIVMdyVbwyN3ppUJ8yqj
ixUFdwReltAmqbgnsGumeNhUgfCS9XMmc/JV7V0GhFaeOSdip4urHqlEaGfs
SCzlZQX21Qgf2D4SMljXnehZI/h1m6Vq8hihgekO5E3Htg1hdZP+E/bkxRft
ghiK0MR4Fnky/Gg0k/v/v7XGCpvvXdeeCX43HBZzVc8FvuSm1jWbEDpZ/TSS
Jc871deIYGTzu5AUP1PEqBmhh/UXk9jgv/7SZoTPjKeSyLDVnitaBL/jqY2V
Ga0I/Uy3I/8AhyhZVA==
       "]], LineBox[CompressedData["
1:eJxNkg9MzGEYx69yOSeJrrqd/lzKsXb94qz19+2e86+pjul9h8RK06w5p1Ao
Vv7MWCu08iez2syI60IMyxtbGhIliYSFtaPOqbWiKed+r3K922+/32ff53m+
7/M8P/+0HYnpjgKBIMb28O+ErAum5DYMPrZvQYGQqvNfPdnVjsGXZ4EzVRVN
u1rYgUHO40NnqjivLrz4FgOTBZX3ZVXZurp3GBQsX0Rd71zTvno/ods8Gj9x
fR8xBLN8MR1u83Jz+oRhEVNdaG+3dkD2BUMo4xn0g+Vwm6oHQwSP4EpbR+/V
xpnG/QVu9JG4vzTtG4YAVs+N3pUqcnL7MMxnPIsaFBvXlXwf9xO4U/MSbd7R
HxhUjCVUmRJTkTswXj/Vg+ryQhr0gxg0LN+TGs7ITWlDGG5bbSdfisy1s6av
+4lhLbuPjCpbHUPiRzBsZfHeVGceTFT/xnCAjcOPGkQ9OYvHMCTwnOlPzYEd
5fOt9nkoNY/r5zgQ2MtD9zyq23T380wn8n+ehn1VzlOEBD6w+sHUXFYe9MuZ
gJWdmmjlzcJVZhGB6Q42XR5GdS/27+wW2/Xq3u2n210IlPHLvbWS/hsbgfoN
bzpMXBaa4IVb/rFerXG8MZvAtlFbeuwqZExWKS5JCJwds3HhGmTZExB3zpNA
yx++fDjiSiX6IimBBOanQvrrwpKDMvK/P2Pz8O1sb3s/lq+mzgxfAgV8eIUC
ccLOsU1ye7zev8k/ce6kfFS3fEXgeLzVD1mSDBmRCrvO5Vwo4hYQuMzLD2RI
X1J8Y24QgVrGUmQ05r/2VBJYxvbrRS1NmSNijkAj0z0QZ9rsYw0h8IztV4L0
TlgzuIhAG89qd2T0W5ZuWkygg/FsZIkKPd4VOsl/vaK6JYwA5fUUOdLv9nrZ
EDHp/idFQ3eiCJxifj7IYhiRGhCBcubnjbinvdGV6kn993SllmoIXGV+MmR0
eH7k2FICnax/EeIia5ozY23/A8ufimp2npIkxRP4zHQh6i8+FK7VEvjCdCG6
Ij5xoGC1ff5/ARgojVE=
       "]], LineBox[CompressedData["
1:eJxF0n0slHEcAPA7rdK8FCIhMjRKOU1S3bO+ZEkpla+JqR1JJnSxhkzUbqZL
UotmEheFXrhxy3n5hS4vucbYotkynd6YOGv3h7x1z1P2e7Znz/N5vi+//b6/
xzH68ukLBjwej9Hf7FPcHZO95xSCt/6d176RyMdDK91CEPaxFlkS7fLhni2h
CLz/l8DOZ8osDMGXy7ciYh+3DWvCEQI4byJytPH6E4EQxLrcmmjFRmemI1fq
y1sFdxYyNOeoxTW/yoZEtL+8c1TVG03j2i/9P97EIFxhudWeCJbajRpiab7Y
pt6jKg5hmbvqhHLvipCSeGpbfktwUwLNz1EPHhtOQjjPYsyJzBZOBujECEms
tc4kUmTgb5GCkM0tv410b7cBz6u0frfOUxicSl3aFuiTmI4wwNW7E0NplNft
DIQlrr8HScF0QU0mwmPWPZ5k1P6ee3cWrQ+cqHb9doNa0dDuvEqCkMxnh32A
OFz/tNUxB8GMtQSI9IjW7mAugpL1gj/RmRtuPiul8xJ9drDMyEPg/5tmq7pq
r1lxPoKniZ6miYT7XIDgFy7tG5m6xMiEF9d9vI9wa04/LlUkY7w2a/XvBwia
Rb1TTzKpA0V8s4e0v6akdnFXMULXkj7e6Mscj+2aCypBiGLdL2SUglFdfCnN
d5rXzeaWIbiwxzHjxeR3mkw/k9H9zt11mXxXgZDGxrMETEwE813zFMGJddtO
pt85VMOrXtmPsnX/TMKo/XOEGO58XZnKJsmI8CXtt17yaCiiFiGP6+fCXDuh
GEyT0//hq/WHvqJ6mh88Pt6rUNB486v5rsHXNO6SZqHSKqkL/Ha0mbZQzxsf
anEn1LHDEY1H2xBk3Pq2zIAsuSGug8aFCdK6HBV1lfeTF5Wd1Ob85qq33dSZ
6oGKsfcIHVw/K+Zn4UTZkprGu8J04pv91H8BeyFqhQ==
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQrfnVYErEpRAHBiiYst9jQtmVEAcbEOeB6N7/nQk9
U64h5LNCKjo23Qhx2PMfCOzFba/KTWi5cAsh7/ByecO7Owj+6s37a3juhzhE
gjgHpPaK1V2v0HqIkM+7ODVS6hOMv2BPwf2HJXpfEPKFb3UnOH1D8Es4jx3L
+oVQX+X4zXg3Uyhcvsbfyf88S6jDCkYgR8F2b21sX9ZjNoR8Q6XaQm7uUIf/
YLDepqm9aI88L4LfPHXfdWN+hHowEAh1YLK7O8H89H6rto1hfDHCoQ4Zv0H+
j7Dt2L9Is0A0FO6ezrPvXFrEQx20/oGMc7Xtum2VMEMy1OE+iP/fwbbnZVv1
GmmEfX3fL007IBvq8BIkP9/ctp9VftMV+VAHXZB0v4ntBOHssy8UEeonKW5/
8Uc51KEGHP4GtlP0mVkE1RDunWrrL6+qgeBP855tZamF4M+IfB7qq4Pgz0o3
LkzUQ/Bnl9b3lBqEOswB26dsO6f59PJOo1CH5SDufSXbeRPFD881CXXYCOLv
V7RdMD/53kazUIedYHkF24Vr1/88ahHq0ASWl7ddtPu3yC0rhPlLTrobvLMJ
dZgONl/Gdtn1yd5M9gj55U/vp4k5IvgrPms3aTkj+KsYK+bauSL4a/iP7Ahy
R/DXygpcSfNE8Ndpx7yv8g51OAK2T9R2g+UKrn7fUIeTYL6IrZOXUkC3f6jD
aRC3XsQWAKGELJk=
       "]], LineBox[CompressedData["
1:eJxF0HtIU2EUAPDNAgUzKmYyU5cg7Z+RWmmvfXAk84+U0tnBUgmxNHU2X4iV
osN8rGUPdFQa5rTZXOFG6LTFrhtOI7VQGsR6OdMC//BBBbYearuX4jtwuffH
+c7jfuHZRbIcHx6Pd9D7sO8+hLjBFIRY7zdvRsD0n23KnEhFOMzaHsgMlLgq
3IjA+xdPayJavqdRW64XG33Tqa0Gvy+RZ/5bax0aPMmLz6J526h2x6lsartz
IbbwHEIJpzBm+NMBmTIXoYqlUsSMLNdd0OTRfqOrU6qeAurn/qE6ayHt90KY
b5tSUI+Jze8+F1OPx/BXPKXUr1JaJeEVtF+wQqveeglhgpsvYfLU+nl+JcJX
1lsimYGHxoRvVQjNnKOZjQ6zbrYawczaby8jc1t9nEoE4bo3amKI9rcjy1FL
5y0FTQz11SGsc2GSSve9DtE1UKuT317WqBDm+N7DnqOMq3DGVaem9WXdS5qc
G9Rc3ELgu9utxsCrZPP0n+SEZvo/mb82mGI1CIJVb/u0VPJou3+A+DYCsG48
Rjx7tsmD7iLI17wWxZOEE8Ix3za6j0a+U+y5R/vNNorr59sRFtnzRftJlG73
nKuD7lNtj4kb66R++UHaYXmAcJG7jygi/Hlk1dBN87mBiRltetq/P1pmURto
3uf46aDKxwhlbL1NTJILssrlvQgNrEW7yP2G884ME0ILa3cEWehSRCc9ofWH
bOU3pX3UqvdVixIz9ZsfVxJDB6kjBNcMARaEWm6eiJRGNfuuPUNo4vYPI7ak
1pwlK8Id7n5CyKZ8rWN6iNan1+vDJ+0Ieq4+mPR0Gmtswwi9nIVkhTF/NI3Q
88sqSbVyEmGcywvIX18cWfw=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQnbrg3VmjK6EODFCwac9XbeVrCD7DzT+dwjdg/AV7
/L4yv2C+hZCfI8jt9uV2qIMfmCe595Wu0JInd0MdQsF8qb0WXpJMV++HOsSA
uArSe9vSFBKOPkTov9Kkvm/rYwRfab6ezLKnoQ4VYJ783oLdplXTnoc6OIK4
Agp79123udH2MtTBA8T/oLCX+4uzWfnrUIcAMF9xb4SA95T0twjzlukEfQp/
j+B/8YgM8PiI4DulJqyz+Bzq0AjibFDbu1u/70nQV4S8ya/dUrnfQx02gDgT
tPauOfIyoP1nqMNlsHt096r2i7cv/I1QPy/Sde/uvwi+mErx56v/EXyOnefi
uVjC4PzG5j9TVdhg/AV7fvlqnbHjQMi/ftRqUcyD4Kes3ZzXy4dQD6YEwhxO
zN+0POJ9855QJ/7bB4XCHPR+/v//vzvW9hyPreAdkTCHc3+B/MMBtu7Xs9y/
iYU53AHx091tDyycUSsgGeaw9x+Q/93R1iLn2GYt6TCH/2Cw3maj2ZeXLrJh
DhdB8vMtbLUYlRTi5RHuWXTaP6xSEaFeelptz2TlMIdSMNfAdkrC6kNrVRHq
ebRv/jiuHubgCpKP17Zt/cqm/0gTIV/WlTRbTA/Bj9wiWVJvhvDvpTr3VTMt
whz2g/TLK9h6eZY+2GyFUG9z74LPCzuE+i0r/jUxOYY5MIL5O/boFuvslHFG
qF9mG/XezBXBl+PoUA10D3PYCTJ/v7jt9Etbo7M9EfICcx9PbPVG8DvSBU/M
90XwJwuUX270D3M4DdJfL2ILAPrXHso=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQXfUnx+RKYJgDAxR8OjYr611wmIM1iHNAdG/2xBML
OMIQ8k+iv11TighzcAZxFMT3xqqp8NpGhTl4gfgJEnuvfQh0Do8JcwgA8R0k
9/rtrq8sjAtzCAPzpfYeb127vjshzCEexG+Q3usQcPvp0qQwhwwQ/4HM3h1S
nDIHUsIcisDq5fYaPjULupWGsH/V+pSOLxlhDm4gzgaFvcpVk/bxZSPk57gc
+KKRi+CL8L/Tcs5H8HtvSifGFiL4bEs8p5cXI/h1eeVnJ5Yi+AXMly2PVSL4
pnd2b9pTjeD/2rJEe3NtmMN8EOeG4d79vb1LVtbD5BfsaUkrk13QiFA/46Qk
Y1Ungg8GExD8g/0JJ3RnIvhtGZ6OKrMR5vk4Gu2Smhvm8B8M1ttc+8S8hn0h
Qv2r0OX9D1cg+Ov1JnDcWBXmkAtSbq9hW8Je2XhuTZhDA4g/X83W8kHiryPr
whz6wfKqtv92eBXv3hDmMBfEv69se3ii8ZuNmxDmdWTJpK7YguD7OrPem7cN
wReSeRc2dUeYw36QfnkF2+tfrp3v3hXm0AXi75eznXN2v0fTHoT6xGUrDlbs
Q/DV6ida5R8Ic1gK9p+U7evwqs2phxDyGwySdWKOIMKjlNNnadAxBN/qkYmc
54kwh31g/WK2/3fJTrc/FeZwEMStF7M9MplNwOwMwrzOnPcdOucQ/Ddf0z42
n0fwAcpGBiw=
       "]], LineBox[CompressedData["
1:eJxFkAsslWEYx4/L3DJKx3Gbw8mlkBnnxJl59SRF4qDL91aE4jQLaVajJLcm
rIsJWy06w1xKI5VivtzWhWXUzCXXFpollNwSOt8Xve/27Xt/+/+f//O8j+B0
9CGpIofDAfnH/Lfymy4bfKTAUX7nNHLp3vnyWe0uChDDHB5d0JEdqdJNAWf9
hJbFj/3pocCdgRA9ekdyWNBsH9Gnjvv0TPRTIGHJgH7q4Og3Mrihy+rjNpm0
dg9TEMigqRGNRlXd2j+TekV6pq7lCwUKLFXVv83tE9aNUXCRLefTN841V1R9
JX5/j0cWpROEeaY5BfnfKKhcY44A9S9e0cv5TsEJVjWjZR+kWZnTFEjZ/ua0
9KFEPfkHmc861SkldpbkTQeYLkfNEX4mUr8QtkB4s7+lpv8S4YiovcVomYJ5
dj929JuMEBfrFQryGPazp7eVJHTx1iioZRiE9NXme5FKCvh/fd/QC+UZRcKi
5a77A8qEs/R+ilpVNlhWPynUbn+uRnQPv53SQg0M+UpyCJfQhZEHVm5pYghV
lnM1plfTz+TGaxH/v0dgKCvETY8P/nKuaZK9PqKDwXlZvr5Lp5DOEH1yDxeD
YEXONodR1O9Pc7Y8DJ4MB3uhd7zFm4b6GNh1r1W6mAt1LVUNyXxJvg6vZo1I
v4EIX2rEGMPkqtye6ITE6ZFT700w2DDlD0ToTnFGWq0AA2Y42AFNNZbwS8xI
vddgS022BeGSpRFJ4nbCCrzV8QgrDIFsnhUKdDBKPGZD5nkpEevts8VwjdF3
WyJuxNFKezsM2ez85ij6eowH357ktRXdHtYQErZsrIhdEGF4wtgbBChloFV7
1JHog4vjpZ3i9fxEEyTWVQbaGUMm6+ejHHtBb7kLhly2vzGa8XE9n+dK9ud9
NkAtFUheWVqcLNqNsFJRrjjQnbwnqKG603M/hho2Tx/V9XeE7/Ik/hiuxl0t
b8Jb/AYTknwxtLHzcNFfd6lo6g==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQ/aC17ueB4HAHBiiwWTR74tpQGH/Bnun7dmjOCkfI
f7p19WBbZLiDB5gnsdfv+6fI4uhwB18Q94HE3lXCAp/iY8MdgkH8A5J7WQ10
u3ziwx0iwXypvQk+XkqWiQjz9mSk71JNRvAlWluChFLDHYpBnAS5vcULF776
l4aQ17p1W+pGFsJ9bd9+bDqSg5B/JCTmvTEPwbfTN348twDBn+kdUN1VFO5Q
BeIoqO1VEJvyekEJQn7Zg+vR28sQ5uuslj5ztgIhv6k03uZJVbjDO7B/9fZa
OCxe86sm3GEyiK9huHc/13MZwXqEererWr3qjeEOn8A8s71n5uf9tW0Od2AE
8zfsCcralBvSGu6g++/////9drY3Tb7dzWpH6E/4b+nX2IngPztZu296N4Kf
M+Wg3rrecIdLLEDOhMS9YMEJ4Q6Oqzh7PZqNbas0PflvTwx3qPgBNP9zqi3D
l576j5PDHVb+AfJXh9i27bvwnn1auMN/MFhvw9spkiA3I9whF+QefhfbKcER
F0xmIeyTkpvj4D0n3GEhSL7eynbBi/sbEuch5NU3KytWLEDw19WmT+xbhOCb
eKxmXLoEwd8l9L5w97JwB2OQ9fN1bB3vGj26uAIhf2J5WdCLVYj48Cvadejf
mnCHRpD6ejXbKzb/jETXI9RHszst1t4Y7rAAbJ6y7aOLrcJOmxHyGXNONkds
RfDfpfF+ydse7rAbrF7BttQwMKV1Z7hDG4hvL2/75/eUK7N3hztMBPH3y9o2
HbvhsmlvuMMssP0ythwTZbae2I9wX390gur9g+EOa8DhKWkrprZk6tfDCPvm
fHjOynMMkX+UdmuXKZ1AyK9szX9mcQrBNwjYHOZ/BsHfJvX9WOq5cIeTYPNF
bM+/X6/UdB4hDwBXi1Tx
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBGIQfXh93fJJl8IdQHyGBNG9XlWHxFdeCXewBfEVxPZe
cGHr2H8t3MERxH8gtjeM3+vH1RvhDgxQcPdmb8abWwh+ypKLN5juhjsEgjgN
kntf5Yl6St5HyBdYRu7Uf4jgf2eeq+n2ONwhHcQ5ILO37tyDmTFPEfIsM1W4
ip9D7RdQ2NuVnFHV+TLcwQPE/6CwV1Bvzav5rxHqZ/x4H7XtLYIvd9j49Jn3
CP6S3nLrxx8RfO2I3at/fkbwNyn9lxb4huBbvHXqUfsR7rAbHD7ae7mPOdpL
/kLI35vn8In7D4K/odx+6b+/CH5zgF3Ex/8IfpimLfcTxgg4X4PJZt815giH
dEYg54TV3t+3rApPskY4/AeD9TbnNluq7GGPcGgByW9w3ruwx+L6Os4Ih5mg
yDvhubck1bxrITfCPHc7M9spvAg+IzjcIhwqLeJuaZ33sn373nhxpWCEg/gX
oPGzs20PnDAKyxGOcJj8G8g/HW47aaEhZ7woQn9qlcGeQHEE3yJYP99FEsHn
0tFTMpeOcPgHdu9+m7ssulc1ZSMcToME7lvYbrir3SEjH+EgAZLuN7Vt3qZl
za8Y4eAJ4ssb24b1a75jVI5wyAXzDW01MzQWflFBmP/HQT3kuRqCP4ld7k2N
GZL7HsjMz7eIcNgP1q9ga7FTOijJCsl9k6RYQ20Q/LtZkjvc7SIc5oHdK227
wVki28oBId8kIy6n64Tgh34VvSjvghRf50RahNwiHHaA9Yvb/l4mbM7qEeGw
B8S1F7c9Vy/06rtnhMNBEL9ezHZhhODcV94I/SWGAgF3fSMcToL1i9i2f/+v
3+CPkAcA0v0kxA==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBGIQLfWYd9uhwAgHBih4s5snc2twhIMViNMgunf/FG6Z
FaEI+Um5XOdnhSP4KW6cTb2REQ7uIM4D8b3m8hymDdEIea4fbC+KYhH8sGim
LbapCL6mCWO6QTqC/4eHQUo5E2aewt5zT/+dEc1GyC/c97eeIxfBL5n+x+h3
XoRDIoizQXmvW8Hvp28LEPKSnr9mPCiKcKgBcQLU9r5R/Ol9uSTCYQJYVmPv
ufDl//6XIdRv6A3dqFOJ5N/DzCmR1Uj2/dwo1laL5B/9hJOb6hF8i1S+mvuN
EQ5cjECOgPleqdl79HhaIhxKQfwA671/LmQ9tGiDqV+w5x6b5JTUjgiHMyD5
Ate9B2yOu03qinBoYQbJ++1dVFT6c18PwnwwmBDhsKk9tU/h43YbGD9yAYTv
IdIg6DoZoZ634U7ZvOkI/oetXZqnZyLsv/Ta4s732Qj5LYrP+1TmRTh8+/f/
/39+c9tp4VMdAxdEOFgCuf/fG9tW9Dp/qV0U4ZAK4s83tI06/HHZqiUI/TY/
50deXxbhYAqSr9exldP342FZGeEQCuLLa9kypP7ZZ7Aaof7RrFWFsWsR/CMX
IlS61iP4y9jYr2/biOB32GztfLwZwc8qSrYR2Ibg+6wQfG+zI8JhH8g+ewVb
vXv7F2buinDoAvH3y9kKiOSFTNsT4TAVLC9r+8lThv3wvgiHeSD+f2nbK/Wn
dr4/EOGwHKxeynbb1oocmcMRDuvB/pG0nfFaTd7zKMK+KsWrF0uPRzjsBsuL
28aEN7csOhnhcBDMF7O16zU0P38aoV7h8P2Xv89GOJwE2ydim1bJwXDhPEIe
AFgZNDs=
       "]], LineBox[CompressedData["
1:eJxFk3lIFFEcx0dbVCwtUWOzvGXNA2/UZN7zJ6SYln8YLabm5l1man9IB2ki
IRni5oFHJG1i2UFpZKK5k5a260kWUqIpXRtlHmCxXnvkvNT3YBg+fL/v897M
m3FMyY1NN2QYhl2/+LvfktQ6JhwBszEc4npVL48gWNTz4y9r3ql+7i2muWaP
e4ksCcECydXszKUTYotMBJZ8WLQsH5+8ISrORWBA2q1yBdunXjyP4Bfpr7Jt
DUuK1KJNn0x+R+deO3aN+sslSZnhFQi+k76WvdxTEdRej+AzYT2b5fjG2LUR
gQVZj+Hiipc/1j5EMMenVwxQxDeP+ybPqC/goOTCxS4EQh56tnFOdysjZ3o3
/QK0y0ghTBimfV3Gys+hMcqzSs9OdgrBGPGboon9J0sfq2iuLK06bjdPuW1G
4SZVI/i/3Ra2MXp1Ra+jeaFZ8s0vO/EWZ+dUZ8UKKce/VYb0OmCo5qd3u6BI
nzXTADeaB1Z4TTb5YtDreH0gcllMfmQdgsFEu87SaERKgGE5q29VWOiDmLb+
6KUoDF38gfQgbs5Ks/fUUeqbyPeeHU/AUMpDnivX/yFFfigNQwvZvyNqD6op
e5GN4Qzx2nJNdQOJHvmb82XyyhWN560C6iuK99HuKMFwjPicuJyu1JGCctpP
3FfbMF9D+1EFg2cltzG8I+93Owqe1qLRZpqLQn3Nw1oxOBO5MWcpS5t+2oHB
jqRGHGNQ98TpFYYfZL4AzScPFVYNYNhNztuQ+/RaFyN4jze+TwNu0NnPPn8C
wzx5PgZ1XE1fUH3FYE9yvfyeqq5b/JuuXx0xLFX+2fDrNWxxs14SrMFgQ1Kt
PM/E3+eBIHSrn3Q6g7Exo3x4sH70unXo1v9xwGNEtmZLc1EZcy5bRNlqzj9s
youyYUymRUwQ5RFx34ARpvwPGWdg+Q==
       "]], LineBox[CompressedData["
1:eJxF0wtIU1EYB/C5bNOWLstMNDctMVtqUj4KdryflpGKOFeJSIiN0pJESucM
yUeLIskhEjLnaMIqrSQ1MdC2uZaoZKmB9FIpp04tNDQf+GjLexLPgcvlx/c/
3zn33Ht9JNniS0wGgxGxftH3YzxNkMNpChgbo7hMW5AoIu5eq+1WJVMwa6PH
gnDH1frdY2kUzGAvCZMHGyWBV0i+JralIe8a8WRr61r7DeLgg4YYx1sUTOH5
K8J8palSXErBJPaq0MjuGq2uIHkHWU/wuIpYZOm7GaQlVp4beCd7TsE0Pb3I
Dv3o+LLnTTMFv7CZyD9k+OI2Hclna0eaznRQMIbXs0evdlqs6vcUfMdmIWvJ
zzjLAMmfmp1RHh6m4BldpjyQIu3PeP44BT04vx196ls6YpqmwIjNRTxqrYiz
SMFXmu0uKP0F48NZK+n3WcF0StgCUEzXNX6ooPN2cw4boA7v1wPxrawUJQeg
nTbfG70NvcfQcwGqsX1RRhandmQXbPSr0XEel8Wz3AHSrOv1jJOoYYg7L9gL
EEE7PBrhmDeAMcvNkedRqF+Kc43M9QVIsKMPM0qvkldOKP0B8PZtDcKI1+4K
fQBs7tc8pwoxBwNo8fPvR3cEXoOsUAApXp6nF0g0JYeOk3xvlY+/CBFf/6jt
zY0kdnP0k1ZFAwzifi6oDeo8DTEAQlzl6lPzBSZzPMkzG+svs8XETyaCuAFJ
xLH8phZRCoAZ738rmkk6el6aCuBJF432+gpFC1MlIfmwzvCnhnTib39bE0Yz
yXkWhgoX2dkAv/H7YKB9WQZ1QA4Any4X23Sdj+BEoozMzxwyTUkLiJ1do8tV
RcQv47rC2uXw/3u0LQuT5DHDo3cBXHG/Zd1KW4/c4T7JP5yLFwSWE0cJ+vsT
HxBbLohleUrY/B9Lqwa8qtUATrjfvE6deWDVTgPgjL2g+wf+dYBU
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQfSzlFWPTlQgHBihYMWvGlnXXIhwcQZwHYnu7Lril
374R4eAK4jeI781h+yrJcRuh3s9m8RmTuxEOQSDOAsm9BkWB9Yn3IxwiQfwD
UnuFVvw37HuIUP/l7tonux5HOOSAOAmye68Jx0x//hQmv2DPDk8uL5EXCPWz
6nf8cXiF4NdsTVuf+wbBj3stkjTrXYRDAogzQXmvg+JhkeMfIhwm/weC+yq2
SuGFxz9/Qqhn6ZWvUvga4TAVbL/G3meHzur4fo9wWA/iF2jtPfGj+n7lzwiH
yyC+gO7eVXpak5b9RujvSbnhcvkvwr35s9q+//+PkAcAg/xweA==
       
       "]]}, {}}, {{}, {}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000020204081632`, -1.9392468628766035`*^-12},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{1.0000020204081632`, 
   99.99999797959184}, {-1.9392468628766035`*^-12, 3.079945022130583*^-12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-1.999955756561757*^-12, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 0.999999999998, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.999778782803785*^-13, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 0.999999999999, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.000088900581841*^-12, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1.000000000001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.999955756557757*^-12, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1.000000000002, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.0000446571375978`*^-12, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1.000000000003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.0000446571465982`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.7999824681085646`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.6000313013730343`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3999691123350807`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.2000179455996304`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8000045898263863`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6000534230910558`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.3999912340533025`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2000400673180519`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.000267115452078*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.999645225076145*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.000133557725239*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.9995116673501069`*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.000621890374332*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.999023334699014*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.999645225072547*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.000267115445678*^-13, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1999290450141492`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3999912340513423`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6000534230884955`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.799893567520684*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.20001794559479*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4000801346317832`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5999202790638118`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.799982468100725*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.200106846174431*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.3999469906062996`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6000091796430525`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.800071368679766*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.9999115131115144`*^-12, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.748012734056623*^9, 3.7480127387782784`*^9}, 
   3.748012788141901*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXVl0lVWWvpKESVGpWtXV0+qql+6Xeuu2re5+6O6HXlVr1ep6KeupeklA
ZFSxGKowIRBImEdFEAQFlEmhVBSSEEgic4DIIEOYwqSAIEMKAVFisnt/55x9
7r7//e+Ue4NQi7sWCff8Z9jDt4cz/fl1nxED+73QZ8Sgvn1++sthfX4/cFDf
4T/9xYvDuCjvoUjkoYGRSOTkTyP4P/F/3Q/zGYQf7kuK//+v+ZXHP76lz98p
psEDB/O3wYMHR7rQsKkN9OfWFrq2ZyXNLBtLY8dOoDnrjtHNVor8h2nXjW43
zaWSaZ/SV20oCK/7pKn7CFHbHbrcsJJmjC2hUaNG0+TFdXTmdluidj+XZq1f
UWPFPCovKabiUWNoypKP6WziZv9qmj1OrdcbaMrohXT6NrlPaPVE5Z20fPL5
RxvdPDyfxszaTle/ozxT3IW+u7qVppXMoZ3N3zF356l6YgnNP3STK1Pk302d
7jEiSlLf0t2DWi7X0OTSt2g/VzGsv1tKY1acoVtJhrJtH+UfrfTVvrk0alIl
891m2h96ZwyNXnaabiZu/4Rp3jNOZImobUlCykNWbr923FDLNWpYMpZKXq2g
Q1fukIEJ/7y+ZyqNmnOEbpmCVrq2dSKNmn+Sbsdwc4uOzC6i4SOLqKioiF4a
8RwNfG44FU/5gI7WJ2z/hBJGc/0kKnn9FAkGvjmzhEZPqKGTuxM2j47OFrGy
lMorLzFCpPlibl5LpxI3D5dlIoab6FISQThZ/hC/8qh///7/5i3pNn2+YyVN
LxpN82rO0O22Frq4rozGrjpHdxytXx9/mYomN9D1VsXSd3R122s0cflhA/0o
MpM2jwr0Dn3x0RgaMnIR7b70LbW2NNOnK0ZTyVtH6fTaNEZnE2pcQmMnfkjH
brRSW8tV2ru0lCZ+cJrOpho9KNBEBNfTsY8SdhUj0IiRqPgG59C6U+utE7Ru
ejFNr71A5yvCuvqErrfRk4JvtrD9SybQwt3NdFOLM3HTSFSeLXSpqpxGzV1D
S18pp9HFpTR1EYPz1rfJ2vuh276hz9aMpRcGD6HhLwymoTO20JWWdIYOEWZo
m510PFSttq8kwnxSq/zIMlq45jxbk/3cPjmfSibvoLMNU6l4NgPRAP87urJ5
Ao163QBfPH/breO0evJsqqp/mUYZwVo7StDsCT3qIW4yc5+LSwg9X9H1m3eS
NRe53vniIyof8zZ9yu7qu9vnafvsEpq54xo1J24a+WfT9odGJxePHaT99e9R
aXGs9ce3tdafqM8k8v25kHqehxm1iPZca6E2xIp3YI0n6da1bTSteBZtvnSH
Wr8+RWvKimn+YeugfVjlb998XkmT//g8/X6KDU+tidtJeGq7cZAWlEyktae+
ptY7V2jPwhKaWHOZvk0ypJfsuVVUOnoZHWpuodZvL9HOOcU0cdMVupOkrZds
6006vnEFvTZhOD33x2iMSkRyS5I+U0r2EaPI89uW0LRSTjqKRtH4BdXUdKvV
GMuVPatoZmkRjSwqozlrG+mrVpJYj8eXN8+iYpUShVR/Uung9md19OaUMVQ0
YiSVLaylc9+0JWoWzYhuUVPl61T+0ggaMaKYJr+1mS4kbiYZUdvtk7R88qKY
jCikeqLyTomlZn4+lcPn+f7xb9Jr9Ygt48e/ww+bnzHPZLI31Qr/fySks0fT
LOuRRdtc93c/tg0r62J+PtDWvdf2gbbup7aZa+s/Q1r8d47LHAVp+X3zuJ+r
uWDNp7Tz0AXz7cvEnUj1XuMqaNn6w/dOddB/d6vHiC+LPke5slu3W2jzvs/p
/OUbkefb18WXzbdMeeWOU/dAF2u3NmXbxQebjt+DXSTU/P1B/oMuMurid66s
8fQVNKc7La2Rf2gvQqQzdIRyNvqUnWVAY1i3Z764nm2379Yc6Yhu4eJRzown
69bOhXrELzLfbKRpI0qp4iKWDMOXw/NDSHrWlcHhOrIi/5cmSQ+jrBMdPnWl
UBP3aDxxPKe9euky3WxpS7YQndcR9HHZqPlbqXjeFvOtl6Y0T1MascN3pRSr
xB1CZScQWZgObUkXTE01k2v1zZ4iFlm6FCVe+EtXWr91Zc03vjGGy/R4vGZM
b6QgbD0sTsEJ1r8yJVlI4XwlO5LjF5pcf12SrY9F0qF3zuq9uaVXIKGWdlxn
nSnBMk467mfWO5/E0blx95l20PnX7ikCCRzAjoPnI/9jaQ9zzY/ahpxv/jYN
kpAQZkeS9JKKpID7euqeIs54rXTkVZUpSVwGlsE6vv3YlbF6fD1NnKHt0ZCG
6cgrV8Tpeqklxz3cTcl1CHHtQ5qQybmj6R3fuueSzH9SnQEx+PYzV8bJSg5I
59bmKaJUh5D+4ZYTtGnvZ/cj6ZPf3kmvf7D/HiQ9Dd8gTPSfXI3v3zMTGbm1
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
             "\[Pi]"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["\[Pi]", "h"], ")"}], "2"], "x", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", " ", 
              FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", " ", "0.1"}]}], "/.", 
        RowBox[{"x", "\[Rule]", " ", 
         RowBox[{"h", "*", "n"}]}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
      RowBox[{"z", "\[Rule]", " ", 
       FractionBox["\[Pi]", "3"]}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "400"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.1\>\"", ",", "\"\<0.005\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7480129779260187`*^9, 3.74801298588909*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{65.64592645664763, 1.1038699082197425`}, {65.69840570939499,
          1.0029027614490704`}, {65.82921501613492, 0.7566275797084608}, {
         65.96002432287486, 0.5156614440161166}, {66.09083362961479, 
         0.27991994793174935`}, {66.22164293635474, 0.049319826399547455`}, {
         66.34366071860515, 0.16121969012242587`}, {66.46567850085557, 
         0.3674229661465929}, {66.587696283106, 0.5693549565044911}, {
         66.70971406535642, 0.767079790554024}, {66.83173184760685, 
         0.9606607812866008}, {66.92394341519443, 1.1038699082197425`}}], 
        LineBox[CompressedData["
1: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
b377ywVeEFeiJv/9o/Fhn+dP688L4H8OyyMU
         "]], 
        LineBox[{{61.81277637598731, 1.1038699082197425`}, {61.90493581393672,
          0.863888519546452}, {62.03574512067666, 0.5305475171266955}, {
         62.1665544274166, 0.20437637070693296`}, {62.297363734156534`, 
         0.1147374553912704}, {62.428173040896475`, 0.42690501049799195`}, {
         62.558982347636416`, 0.7322358742619649}, {62.68979165437636, 
         1.0308381731740892`}, {62.72251039115974, 1.1038699082197425`}}], 
        LineBox[{{69.41679295269059, 1.1038699082197425`}, {69.51612305711618,
          0.9638105211417417}, {69.6381408393666, 0.795210939747149}, {
         69.76015862161702, 0.6300100455811132}, {69.88217640386745, 
         0.468156858001831}, {70.00419418611787, 0.30960105229494966`}, {
         70.1262119683683, 0.15429295224124878`}, {70.24822975061872, 
         0.0021835227563611176`}, {70.37024753286914, 0.14677563739814872`}, {
         70.49226531511957, 0.29263230283279945`}, {70.61428309736999, 
         0.4354336286777534}, {70.73630087962042, 0.5752261576605942}, {
         70.85831866187084, 0.7120558271146051}, {70.98033644412126, 
         0.8459679759182412}, {71.10235422637169, 0.9770073513661542}, {
         71.22308892353557, 1.1038699082197425`}}], 
        LineBox[{{59.8788373186233, 1.1038699082197425`}, {59.94279621283762, 
         0.9061722153733174}, {60.07360551957756, 0.5146771558724058}, {
         60.2044148263175, 0.13156403356341606`}, {60.33522413305744, 
         0.24329757092123216`}, {60.46603343979738, 0.6100363798490984}, {
         60.59684274653732, 0.9687794368705788}, {60.647206002169106`, 
         1.1038699082197425`}}], 
        LineBox[{{67.54020261685649, 1.1038699082197425`}, {67.56383854110939,
          1.064658072696201}, {67.68585632335981, 0.8662794317295567}, {
         67.80787410561024, 0.6718885896782304}, {67.92989188786066, 
         0.481426092092918}, {68.05190967011109, 0.29483324193238414`}, {
         68.17392745236151, 0.11205209112713502`}, {68.29594523461193, 
         0.06697456777800484}, {68.41796301686236, 0.2423032099030081}, {
         68.53998079911278, 0.4139895862341627}, {68.6619985813632, 
         0.5820887317479622}, {68.78401636361363, 0.7466549734585284}, {
         68.90603414586406, 0.9077419383885387}, {69.02805192811448, 
         1.0654025614643603`}, {69.05847389873763, 1.1038699082197425`}}], 
        LineBox[{{63.73571149553416, 1.1038699082197425`}, {63.73626610829588,
          1.1026145251739263`}, {63.86707541503581, 0.8128458224844973}, {
         63.997884721775755`, 0.5292997718668698}, {64.1286940285157, 
         0.25187816584010164`}, {64.25950333525563, 0.019515891061644974`}, {
         64.39031264199558, 0.28497799733986084`}, {64.52112194873553, 
         0.5446024694450754}, {64.65193125547546, 0.7984823565534154}, {
         64.7827405622154, 1.0467094552066485`}, {64.81355309504892, 
         1.1038699082197425`}}], 
        LineBox[{{26.220653749460467`, 1.1038699082197425`}, {
         26.221927806804644`, 1.0555209250769506`}, {26.224345168304392`, 
         1.1038699082197425`}}], 
        LineBox[{{50.08319363523428, 1.1038699082197425`}, {50.12197229291568,
          0.8431255722840556}, {50.25521151726194, 0.03395618741978276}, {
         50.388450741608196`, 0.8925106809846141}, {50.42196402126448, 
         1.1038699082197425`}}], 
        LineBox[{{38.22392537245233, 1.1038699082197425`}, {38.29229867870638,
          0.6946316678618376}, {38.31754191626102, 1.1038699082197425`}}], 
        LineBox[{{46.12785723960332, 1.1038699082197425`}, {46.24888874218377,
          0.009946771797485508}, {46.37183467036995, 1.080069547095549}, {
         46.374571729665924`, 1.1038699082197425`}}], 
        LineBox[{{16.25349387277666, 1.1038699082197425`}, {
         16.261109021984975`, 0.7013660455593314}, {16.267519957762406`, 
         1.1038699082197425`}}], 
        LineBox[{{24.239860110741418`, 1.1038699082197425`}, {
         24.259381961704364`, 0.39712895902163103`}, {24.276209904917703`, 
         1.1038699082197425`}}], 
        LineBox[{{48.10734801698029, 1.1038699082197425`}, {48.21602359316257,
          0.26043735844209376`}, {48.338969521348744`, 0.675357318930749}, {
         48.396381044796755`, 1.1038699082197425`}}], 
        LineBox[{{57.93360578769911, 1.1038699082197425`}, {57.98065661173852,
          0.9350853804618229}, {58.11146591847846, 0.47577246446525273`}, {
         58.2422752252184, 0.026243637195490836`}, {58.37308453195834, 
         0.413651889035213}, {58.50389383869828, 0.8440629722860099}, {
         58.58460458870237, 1.1038699082197425`}}], 
        LineBox[{{54.020605358503126`, 1.1038699082197425`}, {
         54.119149023303386`, 0.623868258833922}, {54.25238824764965, 
         0.0112635859268208}, {54.3856274719959, 0.6327377719287247}, {
         54.48886850139863, 1.1038699082197425`}}], 
        LineBox[{{55.98042462426974, 1.1038699082197425`}, {55.98449816415098,
          1.0866487796407185`}, {56.11773738849723, 0.5354323641055604}, {
         56.250976612843495`, 0.003910509677119303}, {56.38421583718976, 
         0.5315641338467088}, {56.51745506153601, 1.0477104448819272`}, {
         56.53244302806551, 1.1038699082197425`}}], 
        LineBox[{{2.2183029070034292`, 1.1038699082197425`}, {
         2.2237311673707443`, 0.9231608536139054}, {2.2322472642672637`, 
         1.1038699082197425`}}], 
        LineBox[{{42.160335741866106`, 1.1038699082197425`}, {
         42.191673112040014`, 0.7146019754812782}, {42.31461904022619, 
         0.7842962242751781}, {42.34133005691857, 1.1038699082197425`}}], 
        LineBox[{{52.05455342844235, 1.1038699082197425`}, {52.12056065810954,
          0.7258350351716573}, {52.253799882455795`, 0.021079683531167875`}, {
         52.38703910680205, 0.7520693896962789}, {52.45256856820549, 
         1.1038699082197425`}}], 
        LineBox[{{34.20008686467161, 1.1038699082197425`}, {34.20843764575996,
          0.9172961060682849}, {34.23174789818918, 1.1038699082197425`}}], 
        LineBox[{{30.212146228362172`, 1.1038699082197425`}, {
         30.229584971819733`, 0.5927311004395612}, {30.2563784470223, 
         1.1038699082197425`}}], 
        LineBox[{{6.256135048246613, 1.1038699082197425`}, {6.262017148265629,
          0.7941260887889946}, {6.266667884753175, 1.1038699082197425`}}], 
        LineBox[{{40.186798761625916`, 1.1038699082197425`}, {
         40.26836046884175, 0.2602224616356197}, {40.32856177122084, 
         1.1038699082197425`}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 400}, {0., 1.1038699082197425`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.1\"", "\"0.005\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.748012979519101*^9, 3.7480129868012114`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                RowBox[{"Log", "[", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                   
                   RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
             "\[Pi]"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["\[Pi]", "h"], ")"}], "3"], 
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", " ", 
              FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
         RowBox[{"\[Lambda]", "\[Rule]", " ", "0.1"}]}], "/.", 
        RowBox[{"x", "\[Rule]", " ", 
         RowBox[{"h", "*", "n"}]}]}], "/.", 
       RowBox[{"h", "\[Rule]", " ", "0.01"}]}], "/.", 
      RowBox[{"z", "\[Rule]", " ", 
       FractionBox["\[Pi]", "2"]}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "400"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.1\>\"", ",", "\"\<0.005\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.748013001266427*^9, {3.748013685031218*^9, 3.748013693425147*^9}, {
   3.748013920055813*^9, 3.748013920233506*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1.0000081428571428`, 42.08456700813815}, {1.122380445308503,
          60.914594241998515`}, {1.244752747759863, 84.39214461168275}, {
         1.367125050211223, 89.25279063261712}, {1.4894973526625832`, 
         90.1512529698063}, {1.6118696551139433`, 87.50769407917522}, {
         1.7342419575653034`, 80.87752073225077}, {1.8566142600166637`, 
         69.84090485951953}, {1.9789865624680238`, 54.00199879437714}, {
         2.101358864919384, 32.98816999206364}, {2.2237311673707443`, 
         6.449254804145582}, {2.346103469822104, 25.943169102665973`}, {
         2.4684757722734645`, 64.4964920865006}, {2.590848074724825, 
         109.49776402432536`}, {2.7132203771761847`, 161.2143683473833}, {
         2.81772594965012, 211.32717438790363`}}], 
        LineBox[{{65.68739119842577, 211.32717438790363`}, {65.69840570939499,
          206.99675180905507`}, {65.82921501613492, 156.47707405168998`}, {
         65.96002432287486, 106.85512095603858`}, {66.09083362961479, 
         58.11991242297398}, {66.22164293635474, 10.260567061457957`}, {
         66.34366071860515, 33.602174757670404`}, {66.46567850085557, 
         76.72088678901287}, {66.587696283106, 119.10417039045983`}, {
         66.70971406535642, 160.76055351804604`}, {66.83173184760685, 
         201.69849105594005`}, {66.86093723348961, 211.32717438790363`}}], 
        LineBox[CompressedData["
1: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
kkkIS035wvqVRAdraZn/YnpBg0dg5cI3Ep3vh2WpqrnChDNlMFVIou6ht+Me
pT2QWN0WOVLM8K56Pf/K0wlgD30u3VvO8OPXtvqZPBuRNcrl3FFJ4uV1648c
muAk7Axd3rVUkyg67V3X/pibWJPRtFBXS6Lq6gVXWoCfKBEEzao6Eg/6H7zo
oSNI1G64/8FlnMRPkmvNcw/xEiKubDxWkyRWfMtReEtwE6blrhbHp5l5bjJ/
7iS4kojf3J+pMcv45zJpLa9/bMQAZcK5d57EJKcw7zvLWImdVaVnpBZJtEsX
T9NSnoMrUqpvhP4x9S0bcmmMHINst5RlK1gpTNNtMObU6oOlmvXGk8sotLro
2xReUgWaW4Nf9rJRuGlWjL9QsQzu3GBZbGCn8Li1P8i69UBN3WWDIk4KA7xs
nr9fNQrCsj8TslZRuCaIS88wbRpOexpNJ3FRuE5Z1SF85xI8bSw8HMnD3J9h
ekZYYxnRt33fEz8+CotVniR0nFlBbPd+MUoJUFhkNlW5YMFJuLSsPXReiELl
3MkUg7mVxPtdgQ9NRCh89nhwivcGO7HgszCovYZCTbW610cElxPqbU5qKuso
XL3Hq9nx2j/w390RJiNO4Z9MbcGh0Rmo8jfoW7uBQiM5F7VrwWMg1PFFZdWm
/69vK1tf/ACcUtwTNLeZwtgKnpQ/bc3wJDCx87ckhXN3xNk/codAT5fw3h9b
KGQ9XJ9XZdAIssp+fuVbKbybsjZSKagPLt2baf0oQ2G8VLR3eNMIZPXY70yR
o9BJuD397X9TML//x63oHRRewVsLXpHzgKF6DXd3UWjI2ylTbsVC+Pbnbbuh
QGHn054vqkPLiArY5e60h0LwqRQzsVlB8Ic/rTZTpNDzlveqnXxshPFvfsmj
+yjk/sIX1L+XlYhGb5JQoVA7ctMGzboF6I6YKN2pyujZ4yOvYDoN2/7YrN8I
zHkj1qs8bGPgrNF0iVeNQpfdP3ekhP+CjEfaBf+Qwr8uc7v4P/wPZv7miI6o
U2hx5YLIB89CILTkHDs1KVS9ETTrG/gFbkdH59doUchzgBbVbv0BZWPcAl+0
KQwsrHAIUesHPh0Pm7eHKTQfVAgN2jECJ2JHsuP0KPQfTrM8zczP40kLrrCj
FHYnCW96NjMDnbp1Z70MKFz7bdKlW2kRpOM1M1wMKVy0dIj9mspCXJh5x25l
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
         "]], 
        LineBox[{{61.8187544457494, 211.32717438790363`}, {61.90493581393672, 
         168.00911839113104`}, {62.03574512067666, 103.39895798233471`}, {
         62.1665544274166, 39.915112048681436`}, {62.297363734156534`, 
         22.455604750882298`}, {62.428173040896475`, 83.72627123496335}, {
         62.558982347636416`, 143.9098599212606}, {62.68979165437636, 
         203.019237260977}, {62.708513347969976`, 211.32717438790363`}}], 
        LineBox[{{69.51336557087194, 211.32717438790363`}, {69.51612305711618,
          210.48787266615676`}, {69.6381408393666, 173.97201225205612`}, {
         69.76015862161702, 138.07174272801046`}, {69.88217640386745, 
         102.77978019405377`}, {70.00419418611787, 68.08890683517377}, {
         70.1262119683683, 33.99197054108376}, {70.24822975061872, 
         0.48188452483442584`}, {70.37024753286914, 32.4483730597631}, {
         70.49226531511957, 64.80575950177501}, {70.61428309736999, 
         96.59716791772001}, {70.73630087962042, 127.82942763711054`}, {
         70.85831866187084, 158.50930458878733`}, {70.98033644412126, 
         188.64350168803156`}, {71.07385888720124, 211.32717438790363`}}], 
        LineBox[{{59.87225582216176, 211.32717438790363`}, {59.94279621283762,
          170.64658936950238`}, {60.07360551957756, 97.1333715157261}, {
         60.2044148263175, 24.883724938100304`}, {60.33522413305744, 
         46.1167375244046}, {60.46603343979738, 115.88229503544365`}, {
         60.59684274653732, 184.42711879275717`}, {60.64909807954003, 
         211.32717438790363`}}], 
        LineBox[{{67.60664317688966, 211.32717438790363`}, {67.68585632335981,
          184.20686160552697`}, {67.80787410561024, 143.12887811342344`}, {
         67.92989188786066, 102.74020320243675`}, {68.05190967011109, 
         63.032805509988755`}, {68.17392745236151, 23.9987240829082}, {
         68.29594523461193, 14.36993198017533}, {68.41796301686236, 
         52.08098388888851}, {68.53998079911278, 89.14218352344437}, {
         68.6619985813632, 125.56121379915014`}, {68.78401636361363, 
         161.34568903301974`}, {68.90603414586406, 196.50315531235861`}, {
         68.95840536906192, 211.32717438790363`}}], 
        LineBox[{{63.75770147119417, 211.32717438790363`}, {63.86707541503581,
          163.09290945314225`}, {63.997884721775755`, 106.41851621171648`}, {
         64.1286940285157, 50.744945509789055`}, {64.25950333525563, 
         3.9398131229997486`}, {64.39031264199558, 57.64766707311227}, {
         64.52112194873553, 110.39042100112674`}, {64.65193125547546, 
         162.17977720866114`}, {64.77836676396652, 211.32717438790363`}}], 
        LineBox[{{18.186491221074196`, 211.32717438790363`}, {
         18.189552329729995`, 201.1597011281302}, {18.31342640385192, 
         211.3230713344922}, {18.3134276333032, 211.32717438790363`}}], 
        LineBox[{{26.181915026204585`, 211.32717438790363`}, {
         26.221927806804644`, 86.95235271441874}, {26.2969165942817, 
         211.32717438790363`}}], 
        LineBox[{{50.04738194468952, 211.32717438790363`}, {50.12197229291568,
          132.76093017440837`}, {50.25521151726194, 5.361050520798655}, {
         50.388450741608196`, 141.28442890770174`}, {50.4582283898121, 
         211.32717438790363`}}], 
        LineBox[{{22.21238370018589, 211.32717438790363`}, {
         22.277396775753548`, 90.8684038772937}, {22.31377261504834, 
         211.32717438790363`}}], 
        LineBox[{{38.1438746111128, 211.32717438790363`}, {
         38.160561226030694`, 177.80453790603707`}, {38.29229867870638, 
         83.56335901580552}, {38.357512529298404`, 211.32717438790363`}}], 
        LineBox[{{46.0891509532244, 211.32717438790363`}, {46.1259428139976, 
         162.46799029851223`}, {46.24888874218377, 1.4452178903938786`}, {
         46.37183467036995, 157.34606006391425`}, {46.414221387092425`, 
         211.32717438790363`}}], 
        LineBox[{{3.9212970610943723`, 211.32717438790363`}, {
         3.936943401689786, 202.9745273512274}, {4.059315704141146, 
         129.83935755346647`}, {4.181688006592506, 48.760867577280685`}, {
         4.304060309043867, 40.38237615117204}, {4.426432611495227, 
         137.69832713360373`}, {4.5117690631718546`, 211.32717438790363`}}], 
        LineBox[{{20.229644448514044`, 211.32717438790363`}, {
         20.295411589802736`, 152.41352948995842`}, {20.31297011829646, 
         211.32717438790363`}}], 
        LineBox[{{36.15324648169397, 211.32717438790363`}, {
         36.184499435895326`, 142.65826855763413`}, {36.31623688857101, 
         143.41252739172626`}, {36.34788541805922, 211.32717438790363`}}], 
        LineBox[{{16.195525605325955`, 211.32717438790363`}, {
         16.261109021984975`, 35.82983195368271}, {16.31534622031255, 
         211.32717438790363`}}], 
        LineBox[{{24.193392260396415`, 211.32717438790363`}, {
         24.259381961704364`, 30.26642753846828}, {24.315640070716817`, 
         211.32717438790363`}}], 
        LineBox[{{48.0696800955748, 211.32717438790363`}, {48.09307766497639, 
         183.51589715415207`}, {48.21602359316257, 39.44977634762425}, {
         48.338969521348744`, 102.5606752187508}, {48.43450618501085, 
         211.32717438790363`}}], 
        LineBox[{{57.91748436431789, 211.32717438790363`}, {57.98065661173852,
          170.32730273388128`}, {58.11146591847846, 86.85823643491646}, {
         58.2422752252184, 4.801890254725621}, {58.37308453195834, 
         75.85732562361146}, {58.50389383869828, 155.13489422468876`}, {
         58.59823796418485, 211.32717438790363`}}], 
        LineBox[{{53.99143523215153, 211.32717438790363`}, {
         54.119149023303386`, 106.07028162250391`}, {54.25238824764965, 
         1.9197532445080805`}, {54.3856274719959, 108.10798610166123`}, {
         54.51735308667345, 211.32717438790363`}}], 
        LineBox[{{55.957131011721316`, 211.32717438790363`}, {
         55.98449816415098, 191.12031780799475`}, {56.11773738849723, 
         94.39622865131159}, {56.250976612843495`, 0.6910560995487399}, {
         56.38421583718976, 94.15927105957385}, {56.51745506153601, 
         186.0260411513778}, {56.555121199155614`, 211.32717438790363`}}], 
        LineBox[{{6.07981097758553, 211.32717438790363`}, {6.139644845814269, 
         139.6102636320181}, {6.262017148265629, 15.622609921108475`}, {
         6.38438945071699, 179.39611113320433`}, {6.4070691623913065`, 
         211.32717438790363`}}], 
        LineBox[{{8.133358714094115, 211.32717438790363`}, {8.219973987487393,
          55.30052151532444}, {8.342346289938753, 173.0501566171345}, {
         8.36217971926559, 211.32717438790363`}}], 
        LineBox[{{12.193344058191943`, 211.32717438790363`}, {
         12.281141063641698`, 85.29573499072653}, {12.326690197643345`, 
         211.32717438790363`}}], 
        LineBox[{{32.16786064119219, 211.32717438790363`}, {
         32.172691476069474`, 198.81060455430415`}, {32.29413563258508, 
         112.97954176098568`}, {32.33279918054375, 211.32717438790363`}}], 
        LineBox[{{42.12054767731363, 211.32717438790363`}, {
         42.191673112040014`, 94.71981318643526}, {42.31461904022619, 
         104.2606509737176}, {42.38163873360572, 211.32717438790363`}}], 
        LineBox[{{52.0214523951585, 211.32717438790363`}, {52.12056065810954, 
         118.8493685571531}, {52.253799882455795`, 3.4604440912165875`}, {
         52.38703910680205, 123.77463044392873`}, {52.48561600573125, 
         211.32717438790363`}}], 
        LineBox[{{40.13295899995112, 211.32717438790363`}, {
         40.136623016166055`, 204.63258097729434`}, {40.26836046884175, 
         32.91990711586666}, {40.3686199776421, 211.32717438790363`}}], 
        LineBox[{{34.161242764004726`, 211.32717438790363`}, {
         34.20843764575996, 98.58087357366485}, {34.33857418505401, 
         211.32717438790363`}}], 
        LineBox[{{14.199346850290548`, 211.32717438790363`}, {
         14.271125042813335`, 64.03339799740036}, {14.31942409482811, 
         211.32717438790363`}}], 
        LineBox[{{30.17362634247561, 211.32717438790363`}, {
         30.229584971819733`, 56.2911048129751}, {30.31472921409511, 
         211.32717438790363`}}], 
        LineBox[{{10.159312853510855`, 211.32717438790363`}, {
         10.291157084470061`, 96.58581686203401}, {10.339267210278832`, 
         211.32717438790363`}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 400}, {0., 211.32717438790363`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.1\"", "\"0.005\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.748013002177751*^9, 3.7480136944734*^9, 
  3.7480139209206753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "x"}], "-", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "x"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748016244369404*^9, 3.7480162748152246`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"h", "+", 
          RowBox[{"4", " ", "x"}], "-", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
       RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"h", "+", 
          RowBox[{"4", " ", "x"}], "+", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
       RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7480162501225986`*^9, 3.748016277615788*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"h", "+", 
           RowBox[{"4", " ", "x"}], "-", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
        RowBox[{"4", " ", "h"}]], "]"}], "]"}], "/.", 
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"h", " ", "n"}]}]}], ")"}], "//", "Expand"}], "]"}]], "Input",
 CellChangeTimes->{{3.74801628966418*^9, 3.748016294947517*^9}, {
  3.7480163916319847`*^9, 3.7480164421559477`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"h", "+", 
       RowBox[{"4", " ", "h", " ", "n"}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
    RowBox[{"4", " ", "h"}]], "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.748016295195077*^9, {3.748016395109232*^9, 3.748016442467147*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"h", "+", 
         RowBox[{"4", " ", "x"}], "-", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
      RowBox[{"4", " ", "h"}]], "]"}], "]"}], ",", " ", 
   RowBox[{"h", "\[Rule]", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748016325561686*^9, 3.748016332046152*^9}}],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"h", "+", 
         RowBox[{"4", " ", "x"}], "-", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
      RowBox[{"4", " ", "h"}]], "]"}], "]"}], ",", 
   RowBox[{"h", "\[Rule]", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.748016333320841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{"Sin", "[", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "-", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                    
                    RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
                 RowBox[{"Log", "[", 
                  RowBox[{"Sin", "[", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"h", "+", 
                    RowBox[{"4", " ", "x"}], "+", 
                    RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
                    
                    RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
              "\[Pi]"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["\[Pi]", "h"], ")"}], "3"], 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", " ", 
               FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
          RowBox[{"\[Lambda]", "\[Rule]", " ", "0.1"}]}], "/.", 
         RowBox[{"x", "\[Rule]", " ", 
          RowBox[{"h", "*", "n"}]}]}], "/.", 
        RowBox[{"z", "\[Rule]", " ", 
         FractionBox["\[Pi]", "2"]}]}], "/.", 
       RowBox[{"n", "\[Rule]", " ", "200"}]}], "]"}], ",", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[Pi]", "\[Placeholder]"], 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["\[Pi]", "h"], ")"}], "3"], 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", " ", 
               FractionBox["\[Lambda]", "h"]}], " ", "x"}], "]"}]}], ")"}], "/.", 
          RowBox[{"\[Lambda]", "\[Rule]", " ", "0.1"}]}], "/.", 
         RowBox[{"x", "\[Rule]", " ", 
          RowBox[{"h", "*", "n"}]}]}], "/.", 
        RowBox[{"z", "\[Rule]", " ", 
         FractionBox["\[Pi]", "2"]}]}], "/.", 
       RowBox[{"n", "\[Rule]", " ", "200"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "0.05"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.1\>\"", ",", "\"\<0.005\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74801649086544*^9, 3.748016548828661*^9}, {
  3.7480168691367407`*^9, 3.7480169089470243`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFUn0w03EY18TF9UInnOvqUkMWwnDS+d6RTsd1mmmOhB1tjbFR2hHVkvdb
Zt6Wl2a28StTke64NlF3JkVltEsXvTdRLOWP0lXn1/P743e/+9zz+Tyfz/d5
nh3MTFoqyczMjP73+/cvYD97f5gZhTJMttPrF+mowMSxmKDRCXzWnBwfGgsY
hTt1+W5OQjE49iuf6xYxUhDp6yqmjGp7jI1spP68iqsmusOfSNPRve+rOD9D
z42P4CEurjfV5s3/juNBnd3vzJVzeCgNr9Ns+OnGUgK7dW1IO6Mj9PrvB9mS
MD7o3fN7mSMoC3HwuqG8mRFEPQXYlSnfucAXQD/jL935vayzqB/XR7Xbzchj
z6N0vE5O8KJcyxaC3ufUVPAZTiH497EU9zvLi8A/T/PbpqOkBObl13zfSpVX
hhzw+XDildnW0grwN+Q6qqhVIvBLDtIr3sVVIkecP15wJFLNEoNfcraDIZZZ
Bfo9k2mNgVkS0NvNrgtbyawGHJhOdfkhrAH+lO+WhPnKWqhLO4IFQxV10L9G
8mNksqke3qOmLJsPN0qBH2KlFvfWXiH8YhYZ08oGmA+JVkD6JG9E9nh+T430
PbmnCfwnuZxtzMFmxMBxw9jFoAuaq3A/o1OU7glnGfQfG6vRzZ6QIS2e59lN
q4CPbBnk04vzlW85BN8QnSp8mSGDPDPPqftHc2Tgb5oev3GriODbL9jWCVQy
2P9xG1Gq5Qeifv1bkkcLswX0DhvzxJPGFqjbXuhlrbDksC93CnqhXZDDvp96
GLV8XivU/ce5o63zBBYMRO8q81Yg1v97uhGYyzutgPeFPvQuHbutAP6jd7vr
PZcUsK+VqGRacb4S8s0lZgckrlUhDa4/OYSJ3IQqyGtxwlVYYd0GfK+E4Y+v
S9vQXZzvuBwmuGPZDvztOislWdQO/J7FxdCi9Rjc936qi7hvIwbze5AT9+qL
DYbM8bz6n4MCxhYM+i1ZVKvdtmGQ38fJ32HEC4N5dYbkzm6KxmB//pc6Aw7E
EHrt0JtCAYPAjyMjtr+OJ/Dc0a30rhRC756m1dBzMLivfQsusZpcDOZ76PRl
E/kckYd9Lsl1uRiD9xaXeh/TVWJoAOerJCSxVIqhNXi/PyMDiBg=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.00127817398995832}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.1\"", "\"0.005\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.748016505134758*^9, 3.748016549410379*^9}, {
  3.748016872320203*^9, 3.748016877302493*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"h", "+", 
              RowBox[{"4", " ", "x"}], "-", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
           RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"h", "+", 
              RowBox[{"4", " ", "x"}], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "z"}]}], ")"}]}], 
           RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["\[Pi]", "h"], ")"}], "3"], 
   SuperscriptBox["x", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.748016814872438*^9, 3.74801683736959*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"-", "I"}], " ", "n", " ", "\[Pi]", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", "n"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", "n"}], "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", "n"}], "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", "n"}], "]"}]}]], "]"}]}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", " ", "n"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7480172360537577`*^9, 3.748017329168508*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAZ4rDwtQLMEDtQIiD5sLXPm5qvZwc
DTBAw485rTxE1z7ros8pgRUwQCV6egLfYNQ+aNvhtuUdMED6FLsJk8nRPuYT
9ENKJjBAz+0n99blzj5kTAbRri4wQGkful2Zp8o+4oQYXhM3MECXnQc5pMnG
PmC9Kut3PzBA0YIJtMY/wz7e9Tx43EcwQB/DVquf/78+2mZhkqVYMEBSjk7G
pni0Pp1dtbh5YDBAEym5d9lWrz5gVAnfTWgwQIjVvfBxXaY+I0tdBSJwMEDX
VGlq2umbPuZBsSv2dzBAAcds4Dg7iD6pOAVSyn8wQHtzZStCIGY+bC9ZeJ6H
MEDJ5+9b+NKQPi8mrZ5yjzBABv6b0DMlnj7yHAHFRpcwQL2QcxaZZ6U+tRNV
6xqfMED6sJj4GnKrPngKqRHvpjBAdaw6raadsD7+91Bel7YwQBhlKnGPFrY+
C9Og9+fVMEA9t72e1SHAPs7J9B283TBA7MSUfhxhwT6SwEhEkOUwQJMHCrmf
o8I+VbecamTtMEA8tr2+Cu3DPhiu8JA49TBAM94m28xBxT7bpES3DP0wQKWT
h+Vxp8Y+npuY3eAEMUCOEPdyLCXIPmGS7AO1DDFAlaWfkrfEyT4kiUAqiRQx
QENeQOTck8s+53+UUF0cMUCe+n56R6fNPqp26HYxJDFAOvDuFh8Q0D5tbTyd
BSwxQO9psuXjnNE+MGSQw9kzMUBJ60dCZbbTPvNa5OmtOzFABNyNex371j71
Z+sAgjwxQO1AiIPmwtc+QIES9w==
      "]], LineBox[CompressedData["
1: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
Yj6e8j8GhlZL
      "]], 
     LineBox[{{13.310984894790224`, 5.665142503122534*^-6}, {
      13.31306993065248, 5.355466830928215*^-6}, {13.34646321996232, 
      7.111970275330356*^-7}, {13.379856509272159`, 3.652402866413542*^-6}, {
      13.396191632906358`, 5.665142503122534*^-6}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {0., 5.665142503122534*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748017293969755*^9, 3.748017329715034*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Pi]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h", " ", "n"}], "+", 
         RowBox[{"I", " ", "z"}]}], ")"}]}], "h"], "-", 
     RowBox[{"\[Pi]", " ", 
      FractionBox["\[Nu]", "2"]}], "-", " ", 
     FractionBox["\[Pi]", "4"]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"\[Nu]", "\[GreaterEqual]", " ", "0"}], ",", " ", 
      RowBox[{"n", ">", " ", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "n"}], "-", " ", "\[Nu]"}], ">", 
       FractionBox["3", "2"]}], ",", " ", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", "n"}], "-", 
           RowBox[{"2", " ", "\[Nu]"}]}], ")"}]}], "]"}], "\[GreaterEqual]", 
       "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7480190315591183`*^9, 3.748019033022935*^9}, {
  3.7480191023256273`*^9, 3.74801915393744*^9}, {3.748019321863619*^9, 
  3.748019323847455*^9}, {3.748019357478971*^9, 3.748019358346384*^9}, {
  3.748019394115267*^9, 3.7480194310429583`*^9}, {3.7480196242634687`*^9, 
  3.748019643057719*^9}, {3.748019735061756*^9, 3.748019737294159*^9}, {
  3.7480198062156563`*^9, 3.7480198590145597`*^9}, {3.7480198982223063`*^9, 
  3.748019948912034*^9}, {3.748020750490726*^9, 3.748020775621841*^9}, {
  3.748020825589363*^9, 3.748020856577471*^9}, {3.748020990728139*^9, 
  3.748020994372575*^9}, {3.748021104221098*^9, 3.748021141846755*^9}, {
  3.748026868110447*^9, 3.7480268923090754`*^9}, {3.7480269232586*^9, 
  3.7480269325206738`*^9}, {3.7480269646769238`*^9, 3.7480269716121883`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "h", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "-", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "+", 
            RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "-", 
            RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
   "\[Pi]"]}]], "Output",
 CellChangeTimes->{
  3.748019667723598*^9, 3.748019761586567*^9, 3.748019847062675*^9, 
   3.748019883055728*^9, 3.748019963018712*^9, {3.748020757526924*^9, 
   3.748020782852291*^9}, {3.748020829443204*^9, 3.7480208610939827`*^9}, 
   3.7480210016924877`*^9, {3.748021107613756*^9, 3.7480211481338367`*^9}, 
   3.7480269165746937`*^9, 3.74802695642549*^9, 3.748027014103489*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Pi]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h", " ", "n"}], "+", 
         RowBox[{"I", " ", "z"}]}], ")"}]}], "h"], "-", 
     RowBox[{"\[Pi]", " ", 
      FractionBox["\[Nu]", "2"]}], "-", " ", 
     FractionBox["\[Pi]", "4"]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"\[Nu]", "\[GreaterEqual]", " ", "0"}], ",", " ", 
      RowBox[{"n", ">", " ", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "n"}], "-", " ", "\[Nu]"}], ">", 
       FractionBox["3", "2"]}], ",", " ", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", "n"}], "-", 
           RowBox[{"2", " ", "\[Nu]"}]}], ")"}]}], "]"}], "<", " ", "0"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748020715483959*^9, 3.748020717888463*^9}, {
  3.748021151655415*^9, 3.748021155185162*^9}, {3.748026977384659*^9, 
  3.7480269808184547`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "h", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "-", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "+", 
            RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "-", 
            RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
   "\[Pi]"]}]], "Output",
 CellChangeTimes->{3.7480207187511797`*^9, 3.7480211609118757`*^9, 
  3.748027057465006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "h", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "-", 
             RowBox[{"4", " ", "h", " ", "n"}], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "+", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "+", 
             RowBox[{"4", " ", "h", " ", "n"}], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "-", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.748027034869185*^9, 3.7480270365027103`*^9}, {
  3.748027113337356*^9, 3.748027115586817*^9}}],

Cell["\<\
-\\frac{i h \\left(\\log \\left(\\cos \\left(\\frac{\\pi  (2 h \\nu -4 h \
n+h+4 i y)}{4
   h}\\right)\\right)-\\log \\left(\\sin \\left(\\frac{\\pi  (-2 h \\nu +4 h \
n+h+4 i y)}{4
   h}\\right)\\right)\\right)}{\\pi }\
\>", "Output",
 CellChangeTimes->{3.748027057495078*^9, 3.748027116989669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  RowBox[{"Cos", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"h", "-", 
        RowBox[{"4", " ", "h", " ", "n"}], "+", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "+", 
        RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
     RowBox[{"4", " ", "h"}]], "//", "Expand"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.748021162780273*^9, 3.7480211719359417`*^9}, {
  3.7480276774621563`*^9, 3.7480277719163322`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}], " ", 
    RowBox[{"Cosh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}]}], 
   SqrtBox["2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}], " ", 
    RowBox[{"Cosh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Cosh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}]}], 
   SqrtBox["2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"Cosh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}]}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}]}], 
   SqrtBox["2"]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}]}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}]}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "y"}], "h"], "]"}]}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{{3.748021165626069*^9, 3.748021172311154*^9}, 
   3.748027680705196*^9, {3.7480277209065104`*^9, 3.748027772308461*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Pi]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h", " ", "n"}], "+", 
         RowBox[{"I", " ", "z"}]}], ")"}]}], "h"], "-", " ", 
     FractionBox["\[Pi]", "4"]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", " ", 
      RowBox[{"Element", "[", 
       RowBox[{"n", ",", " ", "Integers"}], "]"}], ",", 
      RowBox[{"n", ">", " ", "2"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7480193253054047`*^9, 3.7480193496729097`*^9}, {
  3.748019990139803*^9, 3.748020009118269*^9}, {3.7480204746616907`*^9, 
  3.748020478095532*^9}, {3.748020613321253*^9, 3.748020650259334*^9}, {
  3.748020697836102*^9, 3.748020698619411*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Tan", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h", " ", "n"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "z"}]}], ")"}]}], "h"]}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"n", "\[Element]", "Integers"}], ",", 
      RowBox[{"n", ">", "2"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7480193334224243`*^9, 3.7480193502377977`*^9}, 
   3.748020033688023*^9, 3.748020482519628*^9, {3.7480206181618*^9, 
   3.748020655380414*^9}, 3.7480207015781727`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.748019354506549*^9, 3.7480193552852707`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "h", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "-", 
             RowBox[{"4", " ", "h", " ", "n"}], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "+", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "+", 
             RowBox[{"4", " ", "h", " ", "n"}], "+", 
             RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "-", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.748020070590115*^9, 3.748020072650818*^9}}],

Cell["\<\
-\\frac{i h \\left(\\log \\left(\\cos \\left(\\frac{\\pi  (2 h \\nu -4 h \
n+h+4 i y)}{4
   h}\\right)\\right)-\\log \\left(\\sin \\left(\\frac{\\pi  (-2 h \\nu +4 h \
n+h+4 i y)}{4
   h}\\right)\\right)\\right)}{\\pi }\
\>", "Output",
 CellChangeTimes->{3.74802007412638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tan", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Pi]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h", " ", "n"}], "+", 
          RowBox[{"I", " ", "z"}]}], ")"}]}], "h"], "-", " ", 
      RowBox[{"\[Nu]", " ", 
       FractionBox["\[Pi]", "2"]}], "-", " ", 
      FractionBox["\[Pi]", "4"]}], "]"}], "/.", 
    RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", " ", 
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "\[Nu]"}], "}"}], ",", " ", "Integers"}], "]"}], 
      ",", 
      RowBox[{"n", ">", " ", "1"}], ",", 
      RowBox[{"\[Nu]", "\[GreaterEqual]", " ", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.748020381821331*^9, 3.748020384747396*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n", "-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
         "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n", "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
         "]"}]}], ")"}]}], "\[Pi]"]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "4"], "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}], 
    "\[GreaterEqual]", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7480203897942123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"h", "-", 
              RowBox[{"4", " ", "h", " ", "n"}], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "+", 
              RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
           RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"h", "+", 
              RowBox[{"4", " ", "h", " ", "n"}], "+", 
              RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}], "-", 
              RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
           RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], "\[Pi]"]}], 
   ")"}], "/.", 
  RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.7480204034341908`*^9, 3.748020409342115*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "h", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "-", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"h", "+", 
            RowBox[{"4", " ", "h", " ", "n"}], "+", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "y"}]}], ")"}]}], 
         RowBox[{"4", " ", "h"}]], "]"}], "]"}]}], ")"}]}], 
   "\[Pi]"]}]], "Output",
 CellChangeTimes->{3.748020409770337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Cosh", "[", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], 
      RowBox[{"2", " ", "h"}]], "]"}], 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox["\[Pi]", "2"], 
       RowBox[{"2", " ", "h"}]], "]"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748029157035224*^9, 3.748029210050303*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw91wk0VdsfB3BTJCERmUKGDBmfnjL9lOmVDF0q7xlCxkpFeCrPUxTqFVFU
KOFREglRySwqIkNmGe7suldRSsX//m7v76x11lmftdc5e599vnv/1lHyOUbw
4+Hi4vrGPvEqe1Cy8qCPE3BxjhlYTK6ZKVY8v+w2TfuKBJlry47d1hqQf+zf
ZZcEN+33uVGybPpr/ZRVreXLJm7P8IrSfbps8lKIYoZxLSxxDhYEOuqr0Fwb
ltvd3AnHGgSal9sJwpq/hCa0LLc/LxbR0oFXy948dy+jrqVt2dLzwY3Jlh3L
Ng+/nfR4oRO4/7OUW71VbsbbZc9YTH5NMu0Cvv+Pz2dl9RK9C0T+83CcdvSx
G92g858N3skVF1v1QOx/Tti0enSa1QO+3D/9XkmjKCepF1x4f/pXOZtT+3Xf
QZrATxcS/PcmDb+DW2I/vSHxvF5LYh98V/vplMCee2Fa/XDT4acFftuovLG9
H2jXf/r6wRP3CFEDwK3LzbHm3026sVqDQLDk4Vju1Xvl2L5BWFTm41h43Tep
2NghkHQT4JhL0Krwi/IwqFqt5vjj939MjzYNwxyXBMfc2gND/qEjsMZQieM1
HqqnDyiOAu/oFo4Vf71d1d4wCg68zhzriUp/NvF7DyqP/+K482JxpynPGCi9
e8LxymSn/KE9Y1BTIMKNdjAI4zG9Owb0S8kcX+tJ98xcHAOnPFsetLtdV6KR
4zjI+RrwopUbVld03R4HtdZgPvTlNrrwmdfjsGrfjhXoL+9a/XXnxyEkfhs/
+uB4fu3IxglI2OgqgH4zFbf+H4cJeBqeuxItdrZ399GTE0BgSK9Cu6xXO+OU
NwF8Di1C6PCDDhn1TyZAv7h8NTqtOKLCoGMCrL0eCaMHrFpoEgsTEJs6IYqW
sa6olBCZhKxn3GKc8VvnnpPYOAmLVwzWcvJg/beSxK5JGOJul+DMn00wS9xz
EtyTt0qifWzcnouHTsLLyidSaJKN0e/iNychSpdblpOX4uaExpJJEE78IIc+
LulSdaJ5EujtXApowi7ZTrvOSfg1UUIRvSV6gqI8NAlvMvSU0Auk41I9M5OQ
cuesMifP0lt1i75NwjDfExV0rf2STRw/Ecpuf1FFx1VcijCUI8LLwKvqaJFz
hb1XbYlA5bXWQcekutiW7yGCaEypLnr2zmJVtxsRFKs26aP7awiZa48T4buJ
gSE698uCT/J1IqyjNxujJQX+7SnJIQIh7bwpZ/2sc7TpKCJCZj/BHH3UIFdD
pJ4IqoqiO9Bbj9jNXKQR4fEP+V1oRtNllbNMIrD0NOzQ2fJdrpGzRDDMN9qN
Fuxwrff9QYThSE8H9KC+f4qZGAnsH/YQ0FHzMYasrSTI1DnszsmvU1MgyYwE
ljnFHpz96q5A1tAOErynfPJE2/9xeUXrbhIcF0325qzX5xnvsr1IsHV81h9d
f/ZxJCGBBOKuZ0PR+z55N5dfYvdHVQ/jjDdAeK1UKgkCqnrCOe9v73t/KIsE
Nx1NT6IPSa0d9S0jQePk7hi0RFGw5Z+jJOhyiElCe/o1BqmPk+Bf7Zhk9L0N
0skDkySQvXbmCmd/u9I0bEIjwdMVianooAjZCK459vvlFaajayxe3k0UJMPM
NeNsdECvikimIRlkr2Y84ozXenaVghEZzEqflaGtKuoFcraRwc9jpBy98Zon
911zMkwEqVZy8uNyfa7sNzLcOtf6DO3UIzT02p0M5R7uzWjj7o8F3+LIsHS5
ZQCtblmfFx1PBkVZ+SHO/luWdIf7AhmkQsOG0XMpmzMEksgQmKD+nlNPCP6X
xW+QYdvlfCJapWsgTOsBGYbqvrE4eXxbt92tlww5WtIrudmetm/cJdFPBoGv
7YLotlfNzu2DZGjVPSeEvtD0yg/GyBBNXBBB81f1JCpPkUH9Ca8keukW9e0U
FwV6L1xSQc8cWeMTtZkCPppplugO2trDW3QpIFORZY0u9l8XxtSnwBD/XVv0
ES+Z815GFBgQarZDU51VCq12UKDzo6ILetx468fVrhQo+OTjh+5a6XU2K5YC
/p5qF9B7TYe81c9TIFLT9x90/7F928sSKNBdnXcZPfpuN9fLSxQ4BzqpaHre
tui5dAooCh3MRPNuFz9lV0QBDcN9JWjDky9CvvZQYDPPn33oyqLte+L6KKCt
JD6INh6r1hMdpIDnwUfDaAvbMpbKewqc8lgYR9uvyw52olFAK/ohA+1fejKo
4AcFXFSreHjYTqdt9t6rRgVDWTt9dL/1gehudSpYhu8wRK/PuZKxR4sKNYZm
Ruibf3zutdejQuSMqRk683XtLhtjKgw/8tuJzn5AMDRyoMIqjQM+6MKQSAHp
CCp8DV+Zjqa3F6qkR1Lhj9LQm2gtzZHt605TQfDpWBa6aGJ7lFgMFXotWvPQ
xc5CHwQvUCEwtvkRumzLrcGFLCp4j5zuQFd/bXww3EyFUo8ZIV7Mj49mX3Ir
FeKk9NagN7Qlc1m/poJKR5gEOuaWh/ODTir8tUtYHm1lOf/lryEqMOdO6aDb
/tG0UvhABTVzewJ6ROHKoLccDUSOs7LQIonzvJIKNGBq9OegLT56aL9SosFM
1IsCdE6TZozBJhrc4ikvRfsHNanyGtBgVqa7Gc18NH88z5YGCj9UWehFa08B
SigN5OQtbfjY7vYzEwgOp0GSX4Id+u45OYHZP2kQotjthCY0D/IvRdFgx1Kk
Gzrfaj+/VDyNXc/5Q9COlk4rbDNocEFUNwudbbGDt6CR/XzLt1/R4V5KvNov
aPAmt30JvSuGi7eslQYjgp0rVuD6ra3hqW2nwfqvZDH0b2DC09dHg7c0D030
jJkhtwCDBjx2Ye7o7SZqS/4SdGjd6deM5g/cJqQsRYc69edt6Laru6XeS9Nh
rEuuB72fGaq7X4EOITmzE+jgO7UHbDXp0ENc4uJn+4bA73WbLOiw6tF1c/SH
7otnqIfpcE5woRb9mOv2pbyjdFiUcW1FR2k/uuEVQocb7TWdaIH4/tL+CDpM
6eePo+WNVSdaz9Ch5ckIrwDbO7NrdtxLp8M76qed6DtHPvAeaqRDRcb3YbRK
wzN76Rd0MJV1IqPzpc6nt7bSIaa1iIUuapDR2vSG3d56hmcl21XrrQjEfjoY
KWWoozub0rI9mXQIPnQlAs0lb2rmLD0F6Zk10oJse7WfjzA9NgWzJk+iV7Ed
P/Ay7XnIFByNak5EF5NWV5qHTcH8vqGr6O8/UuYtTk7B21nl++jrOrcjrWOn
IDpGox/dmVR5yiF9CjIuCRkKYR4J1Giv2ilosv59Fq3YtzM+TpQBN4tTrghj
/Z2pKzNZywCDZ17ZaEfBrWMfJRgQIWxago42UdvmLcMAnQKZdvTwbZ4pM1UG
HH4QKSiC+0XgM4d5YwZs4qmLQ4ssbJY85M+Auejqc6Js/5Bb86/jcwb0cf1d
Jobzw1gq6K9lwJqC4iZ0WDWr0LuBAd0zU71oulvHwxMtDEhKSvqC7r95uTr9
LQP+HD1tvpbt8vXCPe9JDKidYbWhj0is4j0uMg0683/PibM9JMTnnXxgGhZK
pI9Lsu3Cd//Oap9p6JW8GIdu+75nIsF3GvjzhG6ga6ZvHzwTNA3jBOMGdE6H
iX/oiWnYNu2wTgrrd+qJwy7x07D/hHsNekFmMnx9yTQE7LKSk2ZbWrPhQvbi
NLxR2Swox/ZZ3aw+AjcTqCp1ymiGYaTKCj4mfEoMNEfXgE5NkCATxEs/n0D7
7r35wUCCCa6VgmPohzGhrs0aTOjrkKiWZ9umb6Ma3YUJ353E4hRwvuJi63+5
zwTnXIt9ytifRR+x8gETXnSrhqGTvmuuNH3IhPveCinowrAuB6sKJljWOL5B
j/kqDbvUMiE7Ld9WhW0769rP4d1MiC7aYq7K9kb+b1pV35iQAUommzBP8aFp
prtZ8Pmv8AgttgM+MXKFHFnwTXQsC73oE1A6uIcFOdYBzWhtc/e2yP0sIPa9
ltiM9XnOmqfChwUZZqxytLW39FHtkyzwtSla0Gb7qXGd9YZ8FhyiBmXqsb3n
rrHz9F0WxLmcb0FT11V4Vd9nwfXd9R/RUh/unf6jlAWvN6Tu1Mf5KEgtTatm
wafFgi9oHYkAedFu9v2uee6/sN18ZlxztJcFtd0PE9HuLLetD/pZoN87/Bh9
8ZWTs90oCwbupYoZYn8xxonxNBb0ukS3omOY5Wn7GOz/1OqEz2gpd908VRYL
8tTLVLbg9zFSqW2cY4GfY+AZ9EjerbaUeRYUasyWoMPWSg96L7Ag9Ldbo+jV
MakUvR8sqHgWJPwr27nTwp/wPzgoda8p+n/I8O6v
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7480291968299217`*^9, 3.748029210520329*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"I", " ", 
     FractionBox["\[Pi]", "h"], " ", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"n", ">", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748030547367676*^9, 3.7480306357631397`*^9}, {
  3.748031065142581*^9, 3.748031080532346*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.74803057683138*^9, 3.7480306401275873`*^9}, {
  3.74803106729778*^9, 3.7480310812717648`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     RowBox[{"\[Pi]", " ", "n"}], " ", "+", 
     RowBox[{"I", " ", 
      FractionBox["\[Pi]", "h"], " ", "z"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"y", ">", "0"}], ",", 
      RowBox[{"n", ">", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}], "<", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7480306427222147`*^9, 3.748030643020527*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", "h", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"n", "-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
       "]"}]}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
      "]"}]}], ")"}]}], "\[Pi]"]], "Output",
 CellChangeTimes->{3.74803064771673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%32", "-", "%33"}]], "Input",
 CellChangeTimes->{{3.748030646848629*^9, 3.748030649002874*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.748030649300411*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
      "]"}]}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"n", "+", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
     "]"}]}], ")"}], "]"}]], "Input",
 CellChangeTimes->{{3.748030654140244*^9, 3.748030656104817*^9}, {
  3.748030694733121*^9, 3.748030701585395*^9}}],

Cell["\<\
\\log \\left(\\cos \\left(\\pi  \\left(n+\\frac{i \
y}{h}\\right)\\right)\\right)-\\log \\left(\\cos
   \\left(\\pi  \\left(n-\\frac{i y}{h}\\right)\\right)\\right)\
\>", "Output",
 CellChangeTimes->{3.7480306564260902`*^9, 3.748030702207858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"n", "-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
       "]"}]}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
      "]"}]}], ")"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Element", "[", 
      RowBox[{"n", ",", "Integers"}], "]"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748030918406103*^9, 3.748030932637528*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"n", "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], "]"}]}],
   "+", 
  RowBox[{"Log", "[", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"n", "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "y"}], "h"]}], ")"}]}], "]"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.748030933092276*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "[", "z", "]"}], "/.", 
     RowBox[{"z", "\[Rule]", " ", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "3"]}], ",", 
     FractionBox["\[Pi]", "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748041275852481*^9, 3.7480413818973513`*^9}, {
  3.74804247556329*^9, 3.7480425093547287`*^9}, {3.748042546431077*^9, 
  3.74804254668817*^9}, {3.748047125142357*^9, 3.748047135881913*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXucT9X6x+U6GHcpVKoZQk10ExotXYRUJElOnZ8kqY50kQpdELklly66
nFJHKumqlJqxvm4lt0ZkjIlG45rBII5D8WOv5/Ms67PnO/+sl/frsfban/2s
Z6317PVd+5zeA7reU7pUqVJ7ypcqVeZ4ednM6jnHjl2SeK5Suepd5xdbKU2i
Q9WzJ6dfFOOvrDytoMPkC2J8VuVaz/bPbxTjC6J6zonxTyP7OjH+ZcTLK28/
+ILHrz/OS0V/f2aBf7ngl3LX3temzTRn3xb8Omdv33P1t6X6bbZrT4x/4Nof
45Pd/cb4PKdPjIueyXiiQs3NB8+aW2SlVJ2ZQ2fm0Jk5dGYOnZlDZ+Udx/Zs
cJxDZ/DBRyu9MOCJpqozeIqzV52pftWZOXRmDp2ZQ2fm0DkJT5SvNm/Fa3u2
WSlVZ+bQmTl0Zg6dmUNn5tAZvF3ZbUtPcOgM/mC3d2d+N6u+6kz2qjPVrzoz
h87MoTNz6MwcOifhiXKpU6fXblRopVSdmUNn5tCZOXRmDp2ZQ2fwXqN/jjh0
Bj8yr/zOq6dUU53JXnWm+lVn5tCZOXRmDp2ZQ+ckPJES+fevVkrVmTl0Zg6d
mUNn5tCZOXQGP6XesohDZ/CViUpvzpteWnUme9WZ6ledmUNn5tCZOXRmDp2T
8ET5SPfVVkofN4hr3CCucYO4xg3iGjeIa9wQ/vDMtyOucUP4Q48s6GYuPZCp
cSO093EjrN/HDeIaN4hr3CCucYO4xo2SeaJC9O+FVko/DhLXcZC4joPEdRwk
ruMgcR0HhY9tOSXiOg4K79Y757xNdxSqzmTvx8Gwfj8OEtdxkLiOg8R1HCSu
42DJPOHuY2KWlJnQmTl0Zg6dmUNn5tCZOXQGf/n+ahGHzuD/bHlrk8H3f9oK
OpN9FnSm+rOgM3PozBw6M4fOzKFzEp4oI/4kpYXOzKEzc+jMHDozh87MoTP4
KPFP6AzexflzFnQmewOdqX4DnZlDZ+bQmTl0Zg6dk/BEWYmPUqrOzKEzc+jM
HDozh87MoTP4AIm30Bn8QRefVWeyV52pftWZOXRmDp2ZQ2fm0DkJT5SX8V5K
1Zm5joPEdRwkruMgcR0Hies4KPxYXTd/gM7gy918I1vHwdBedab6VWfmOg4S
13GQuI6DxHUcLJmL/xSK/oXkz56H/ux56M+eh/7seejPnof+XGj+T+bDoT8X
msNu/pwd+rPakz9r/eTPnof+7Hnoz56H/ux56M8xnign6zEpVWfmuk4hrusU
4rpOIa7rFOK6ThF+razvoDP4/W49qDqTvepM9avOzHWdQlzXKcR1nUJc1ykl
c+mnReLnRRQ3PA/jhudh3PA8jBueh3HD8zBuFBnJb1DcKDJPuPwGxY3j9Ug+
JIwbWj/FDc/DuOF5GDc8D+OG52HciHHkxwzyS5SvU075OuWUr1NO+TrllK9T
Tvk6I/k61Vnzei5fl035OiP5OkP5OtRvKF+nnPJ1yilfp5zydcopX+fto/oP
2tG1Hh+36cw9tt8njUb0qldkXnHcgGc6bmE/qvrNve/o9odduz77+p7fb1d7
8CWOe/sq57fKHbvFLhz+6G81jm729sIXOa72rn0FdlJq73v6LipQe/CXHVf7
ClH/zLV7ywzKyrxnndqDH3Fc7StFfrbctr3h58Hvvb5C7cFvdFztK0Zxdra9
cFdqjZq5s9Ue/HLH1f4Ux00j4bAHbyb1wN75/XLTRq4Le/CO0k7Yu3iUa/bI
fcEe/H+iA+lpRE9LehrR09u752Lmy3NRe+EL5DmSPxjxB0v+YMQf1P5551fm
XvEr2IOLv5nBT1Y71GHyxQn4oZQaH5irP0h8fKBL4efvPvWH9wfhXRy3Un9b
qkfXm8z1eck4d1fBH+t67N2q9YPf4bjaI89Vq9zQJvV2/6724Kc6rvbI17yw
6e8DmRU3qD34y4779sh8feqt3Xd1nL7at0f4NMd9f5F11HdTP2h86YqFXh/h
ixxXe6wDy7xyfuYbrxxfR4s9eCXHs2CP9czXUg/swRNyXdhjXv6KtBP24G/J
fYX95VczRnQI+8uvZoroFtZfaGqKzmH9haa2PJewf20zveQ5hv1rm/mHPPew
PUXmPvGrsD1FRvxN/Rl+/nzobzEO/ySOemLxHPXz+yay1/c1ZK/jHfyfr7uu
RvU+6R0vSaRfX3D/OY2LrZTgbYlbsjfE2xLXfBT62wV33vLMFdde0ubnSM+t
dsnkjKue3bnLNn7jru0PTP6v2mPc+fn67v3WbThX7b9/scLpR87ZYSfueuWr
t+/b7+1l3Lmmbe60ZvNqe/vxm3Y/1mOzveiFo+NWrt5F7+MK7BuLPpmXf2WK
2rt2/mb3D9vbou74LT6fJuPOoIw11X4f8Fcm7N11f7HNi6u/W+ohn0/GuDOy
5f0X/t1ot9qnRPX8YKt2ufzyUS+vVHuMO8PP3vFb/eKf1b5KxP9jH2wyo9NV
Z32g9hh3Bjv7LNiXja6bZXpfv6x6pYwFNG9cboa59qi90yHHDN0/evfsOb/Q
fD7XDHT3q/buuaw3t7WZe9eDizfRfKnAiJ7ZsL923E09Z+/fZEpduPCbjEk7
vL2MO23c8/L2EwaOaJm91ZzZJ5HfLX2v2mPcEX9Q++smvT4re9ROc/upBbc2
eOuA2sO/xd+yw3Gz2FRc+cUu+84uGjeLzcIVEadxttiKvcF14fd3D2izvtFf
h2g+U2ylHjvc2Ws/+dvZK4f/v+H839J9WbkvA3vwz+R+wdEvVrp+4etxetoG
Tk9fj/COorPWI/2ln+svlp6jleeo9YCny/MFRz9KGR71I61ntPMf28P5j9YD
fo/4FTj615Wuf2k9o5zf2mHOb7Ue8JHiz+DU77SeVNdfbD/XX7Qe4loP+mN/
1x+1nr8rR9z0FA574lo/+undcl3tv66dpoK0U+2Fp0jcAEf/HSE6aL92uplm
opvaC28t8Up1k37dR54L6nH96Dezz8VDrQdcni/7gxF/0HoWOb8yGeJXsAfv
I/FZ65E40F78luK/kfjP/m/E/7m/GOkvvh7X70ya9DutR/irMh5R/zXSf3W+
mmzc5HEZ42aycZnHTbK3vO7jcZnaExuXeV5BccxIHLPfRuvNGrF5Ata/+HfP
Bl3fKDhezonsT9H2t3x/a+U/6hSbRa6e2Hwe627wf0g9S109qmcrqQft4Xk7
2kP1WGqPlfZYtIfnY2gP3Zel9hhpj3LE7dsW3HTthRv9eAE+ZOBXD5fvvFP1
Ae/h7HXcAb/d2Wv98MNbxR71gz8h9qgfvLu0B/WD95D2QAfMrzCuQgfwdT23
PHmCoz0Yd/Ku691iwoid+lyoHn0uVI+2E/Xku3r8/cr49eONn7w18dwdvp0y
r5PSt1N4ot6Ll5/g2k4Z176d0u/wiHlbVX+qX/2c6vftl3/Pd/X79of1+/bL
uNm5bqc6t9++WduPeSbmR2HeqcC+tL1JxFEPxtM+I/ueUu7PTb79Yf3afqrf
hnkqrV/bT/VbaqfmY6idBvVQO02sHnlOUvp6hM8TPVEP4v+NJd+X5jPovtAe
Q/eF9qh/Unt8PWF7tB5qj38uMh59I8+d+pHmyagfGfg/+bmBH2r7w/q5f2ne
hfoX6mc/R/3cf430X+6PJp/6Nedvx0b5yVSNM0OnuDJ8Xn68gz3icM1OrsR1
MX/45sHnDvxwvEQ9vC8O9SBuZEqp7aT9XWov/VT7q9jzPiXYo1+ghD2/l4E9
/ASl1k/vF1Q3eS4oQ/tczfOF+vv3bqgHuqHc/VLVtceeie/D7Hzs9G+OHcuI
zR/AY/sw19RedOxY4/g+WOFs7+YbaUnmJ2kx+y7Rdc+M2YOzfYuonlpq/9jW
lU26HLcHh/0Pb6+oduJ9x+URL+Ptvzott1k75B9ydP/tDd2HrLplYWabS5y9
+tuvY3s1b9u0yF7q6o/54U2unTE/B2d7V09azB6c7ec7nWP24CW3JyNJezJi
9uInMXvwJPaxfaHwn9j+UvET5vAH5njuzPF8wbvfkBJxPC/wTkfunVDxs236
vDgO4Lkwh/7MoXPJ9WTEOHRLwmP7PKFbbL+o6MYcujGHbsyhG/gZH82IOHQD
f2HbX+XqnF6ounE8hG7MoRtz6FZyPRkxDt2S8Ni+TegW2/8pujGHbsyhG3Po
Bl5+zYaIQzfwrcteHdRoxa+qG9mrbrw/E7oxh27MoRtz6JaEx/Zhaj8lrv2U
uPZT4tpPiWs/Ff7O/tcirv1UeOatKw6+026176ehve+nYf2+nxLXfkpc+ylx
7acl89i+Sh0fies4SFzHO+I6rhHX8Ut449xXIq7jkfCpE6eO/LXzQj8ehfZ+
3Anr9+MLcR1HiOt4QVzHhZJ5gvYTZkI35tCNOXRjDt2YQzfw99aXiTh0A3/k
sTo/zWg4MQu6kX0WdKP6s6Abc+jGHLoxh25JeGzfI3SL7Z8U3ZhDN+bQjTl0
A08X/4Fu4C85fzPQjewNdOP9jdCNOXRjDt2YQ7ckPLaPEbrF9kOKbsyhG3Po
xhy6gb8t8Qq6gbd28U11I3vVjfcrQjfm0I05dGMO3ZLw2L5EHRd4fyPGBeI6
LhDXcYG4jgvCy8r4qOOC8M1uPFXdeL2j4wJxHReI67hQYj0ZMa7jQsk8ts8w
9LeT9isG/uZ56G+eh/7meehvhaa+m7+RvxWa8W7+Rv7m16ehv3ke+pvnob9x
PRkxHvpbjMf2Deq8l/cfYt5LXOe9xHXeS1znvcJvdesF1Q38erdeUN14na7z
XuI67yWu894S68mIcZ33lsxj+wDDfnrSfsKgn3oe9lPPw37qedhPi8z3bh1N
/bTIrHfrYuqnPi8U9lPPw37qedhPuZ6MGA/7aYzH3qdQ3sPvDwzzG/T+JS3G
KV+hnPISRvISqhv4g5J/gG5kbyifoO9lKG+gnPIDyikPoBz69P055c3OXXdZ
KXV+K3k8fZ8AfRrd0nXrZ8/ttlLq/HaUvC+RUue3W1e/0bzm13uslDqPxXU/
Gfmvn2Z02qXzWLquzmPpujqPpevqPHabXBcldEiTfCNK6HDPT78/snT0diul
6rBY3gtIqTo07HJB9vnf7bBSqg4jJc8rpeqwJeexCi/s+sNKqTr0keuW+3Dp
paeO2a46LJLrooQOdF3Vga6rOmyV66KEDsiXokQ/eu9me/PuBkUWJfTpszyr
YztbaKVUfSS/qe9voU/6jeVfmrF3s5XS5wMl74/8OvTZvKLzxgrpW62UXh+5
7tqcCRvmWJ+XoOuqPnRdn2cLr6v6bJHrooQ+km/HfhPVZ/pNrzW+r/s2ixL6
OH/dIH67QfUZJfscpFR9nP8ViB8WqD4j5P2KlKpP4dImXw3vuclKqfoskusu
uf3HByrt2qD6PCfXRQl96LqqD11X9dks10Wp+lA+HPr8p9OjxwrH/25RQh/3
nNbI81rj88+yfwP7DqCP032t6L9W9Skr+6ykVH1cP8mT/pLn88Oyb6TBoa7R
/gXotlDak9P25ZkbH1ujuo2Q9gz7KT0qoRu1R3Wj9qhui6U9KKHbSGkPSuh2
bdQP8y1K6Obas9hKqbrJfg/dDwLdRkT1LrVSqm5lZL+ZlKrbiMg/frJSqm7D
ZZ9MrYfKRvtHoNswac+jf5+7vuXCxarbKdKeFhvnRyV0Gy7tQam6SXtQQrdR
0h6U0G2EtAcldLs68r9VFiV0K4721UyxUqpuh91+Gyul6naoxol2zLJSqm5/
RXazrZSq219VT9zv11ZK1e1YDbcvSErVbaO0p1K0D3yK6lYs7RkY/T7xP6rb
QWkPSuh2TNqDErqVrubagxK6lZZ9Siih2zORjgmLEro97/5tpNT5UhXZjySl
zpequusZKXW+VDXV6SWlzpfq13T6SqnzpTqp7nm8JjpAtzHSnhopE7Mfzk3o
fKmmtAcldKsm7UEJ3SpLe1BCt+rSHpTQrYa0ByV0uyjV+RNK6Had8z8jpeom
+8103xl0Gy/9TUrVLVX6p5Sq23jpz1KqbpWk/7eVfgfd2kt7elX8uenmaj+r
bs9Le06Tfg3dqD2qm+xTxe8kVLcx0h6U0K2itAcldBsn8QsldOvg4p2RUnWT
/X667w+6LZH4LqXqliLjgZSqWwcZP6RU3UbLeDNK4jx06yjtGbbmsn6Npuer
bmOkPSihG7VHdaP2qG7tpT0oodvz0h6U0G2JjJcoodt7bnw1Uqpu7WSfg5Sq
2xaZN0ipuo2UeYaUqltDmZdIqfrMkOsWjjpjdeoLv6s+18l1UUIfuq7qQ9dV
fdLluiihzxiZP40J32u3XSrzLZTQZ4abnxkpVR9536/7W6HPVpl3Sqn6YF8R
9vtAn0Yyr5XS6yPXLbX8/d+r3ubzCXRd1Yeuq/rQdVWfhnJdlNBH9v9gf67q
01fm6yihz/tufm+kVH3ay34PKVWfbbJukVL1eV7WOVKqPufJukhK1ecDue6+
9oOWdD/L5w06yHVRQh+6rupD11V9Gsl1Uao+tL8C+twr6z2U0KfbzEey5w4s
NlKqPrx/EvrskPWtlKrPGFkPS6n6NJb1s5Sqz61y3cTEMVfV+5fPDzSU66KE
PnRd1Qf7KVFCH7qu6iP7DLHfUPdLLJP1xXK3vlDeTuL1YImT4D/KvHqNm1fr
/KeT2I9w9hb218h42VPGKfAJMs982s0ztZ6OYt/b2Ws9z8p8pYLME8A7uHHa
DnDzLq3nBbE/1dlrPY1lXO8s8zTwoTIPKSP2qGeezC//KHL1w36sjHNDZJ4M
fpWMyz2k/ajnKbEfIPcL+x8k7v8s6xTVTcapJ0RP1DNf7FeK/rBHfFwm60Ty
cwt/hz32eWyU/B72yYB33bupZXbnJm3Qj26RelCC3yd5HpSon/ZpaP36ezrz
8KycmXXbwJ72J6g9eM1KrYdfdE2q2uP9N94jwB582pOtq3SvV0rt8d73Cnlf
o+0RPndns4OdFu3NVH3k/dmr8l5M9cH7thXNXh2z7De1x3u+h937x0zYgw+q
suCCpm9+2Ar2eL81Rd7zwh68o6s/C/Z4r9NK3qfDHvxr1361x/uM32Xfgt6v
8LecPtlh/fp+geovNDWc/mpPeXW1B+/hnm922J4iI/5G7SkyXZy/ZWu+TvKV
Uqq/9ROOkvzToKT9TrG8KO9DQ3uwn/z1uUcOr59xcRtw7O8szq6R+s8l53gu
84Z9zw195M9tNZVjH+2eK7+6+LPO5ZTjd2TjP/l3n/82PaR+gt+Llf6y3vdz
D21Xjt+FpXxR+uDY3SuV4/dfhz+PeFao53JzdHZUj3LsLxzrrptF7TTSzmzl
Mi8pcvelHPtORQfl2D8vumXTfjwj+/FseN1iI/vxsil/bh8k+xHC57TYesnr
ra5QPcfi9+yr7v54Uu2LlFfEPranPut/X49G/nmJ/cYzZgxoeam3Lyf2vV/b
t+bgp95+tDz3McuG9LJNz1KeInFsS/ujN965qbZ/7mJfZUzKwK7F3r6s2Gde
lH7Gqlmn+vrFf1q0/iJ97NAq3k8k7r3frt/z357r/Qf5zfQK1TeurVxNeRmx
/2DMjjWPTCvv71f8cPpZaTefNvWo+k9liZMvHWrXuuWlB5UPF/vqpX4wrb4s
Rfr8as89UK1i4bqT/Fb8uebV/57/4tE95Ler7QWr7kh5+tmtypFHm5zW1m4a
si8zbP9qW1zj6//2vWyn8hrSL25c1vJ/S7dtUF5V4vBVn1a/47SbV/l6xH5B
xrtfvv9IoY/DYj+s8Q/j3im1Xnkd6V/ra1z5UFH+N8p3Hsj+38B7P8+atezy
mYc3fab9BfmivT3n3N96wAq1X7tzyP4dK9/NtM5e+Z+SV9ru7KmehWaoa49y
5FWWuPYoryTjQht3v8pdHmq5Sbj7VX4K9gE4PZVXkfjQwempvILYn++el/LS
EjcmueelvIyMI2c7f1CO9XB15w/KK4r9ROdvysXfjPibxpPSMu687/zZxx+x
F3/2cQ/2rr+o/XCJY3Vdf1FeRsaplq4/+vrF/nzXH5VXEPtNrr/7OCnxUPq7
8rIyrvVy8US5xBMj8UR5itjvcvFK+UiJqxKvlEs8NBIPlWM9IvEwG+uLxTLv
R4l4i7h96jXtXy51527leJ+3ec6Lt69/b4/mP+n9mvIf5X3ej7S+wHh6htQP
jnmklXUQ+B+yvtou16X1kUWJdqJ+aT+vs6yssyzdl5X70nwRrY8s3a/BfaOd
0K2+XJfuy8h9Kcf6Te5LOebNn7v3pKoD3oPmPpQzoMLT/rk0FZ7vuNaD+dBn
8r4VvKGsA9eKvb53E/tZcl1wrBvXy3WhQzvJF0ipfIm8v5RS26/nyQyuvzu/
2HN97yj5AfDtkndYn5PW48DOPzhvYFGinaj/F1c/5x/sfle/8s1S/zpXv9dN
3s9WdO9ntT3pktfovKbj+EHf7dD7pfeGyn+Q95RSeh3wO7VLR296794tyvF+
8egyl0dSHSQ/ZXKPTP34pPekjaU9XV179P1CB2kPStVHrrvAXdfrI9c9xeWv
vD5y3Ux3XdXnXnk/m+fez3p9JC9Wvt6uRqfv26w6XCN5SSmVj5P3lFLS7zUK
7JS9jzc8bUGBcrxfLJA8JPhWyW8ebbFk9EcnvSdtLO2p5NpjKW9pUYbzzAL7
krsu5z/tZndd5b/LdQ+762p8GCv3I6Xyq+X+pbR0v0buV/m7kneV+7V0v+Yo
XZfygcqvEb+U0l8Xv3cTfwBH3nCdvH8HP1fyj2VJzxFyvyhJTyN6GtLNiG7a
rxdgP4GUWo+000p/Ae8t7VwjfgiOPG0F8UP1H8nT/uX6l9dT8rBtxM+1/0r8
klL5tRLvpLQU34zEN99fJM+YIvs9KJ4YiSfer6Q9raS/0/4Qg5LinpG4x/tM
jOwz4bhhJG74+CN5WonDluKwkTjM8dOso/jMvyfS9++Sj+qx6LxBjx4vwfHe
4XC1QeXqHy9RzzB5L4IS58LdK+OjlPq7e+Y4L445zotjjvPimOO8OOY45424
npPMHOe8Mcc5b8xxzhtz6IDfLyO/DR2YQwfm0IE5dGAOHZhDB+KqA3PowBw6
MIcOzHHuAXPoI+9LbMNgP9IlMQ59mEMf5tCHOfRhDn2Iqz7MoQ9z6MMc+jCH
PszD8xX979DD8xg9D89d9Dw8d9Hz8NxFz8NzFz0Pz0v0v1sPz0v0PDwv0fPw
vETPw/MSPQ/PS/Q87F954ld51L88D/uX52H/8jzsX56H/ctz/H4cvGnO4dNO
cLe++zML/Knhm/M6zDiq57qTvQ37qdZP/dTzsJ96HvZTz8N+6nnYTz0P/TBH
z50K/dDz0A89D/3Q89APPQ/90PPwfIMcu6VRpYhDZ/DbfjhyYGPavszw/AG1
p+/1aP3kz56H/ux56M+eh/7seejPnoc6J4QnSGfPQ509D3X2PNTZ81Bnz0Od
E/bxVaUiHuqcsCv6590+q7CAdFZ70lnrJ509D3X2PNTZ81Bnz0OdPQ+/R+D/
SH9D9cTs6bmoffhdA/9Hz0vtw+8d+D96jmoffgfB/9HzVfvw+wj+j5672off
TYj+nt3xyJTW5A9mkDxf+INaj58+9pyZbeaG31PQer4lP0E9JvzOgv8j/0E7
Tfj9Bf9HfqX24XcZ/B/5m9qH32vwf+SHah9+x8H/kX+qffh9B/9Hfqv2FIdx
fpilOKyc4rByisPKKQ4rpzisnOKw2SxxleItOM0ftB46b9lzirfKKd4qp3ir
nOKtcpo/GBoHY5zmD8pp/qCc5g/Kaf6gnOYPBvMBmieA03xe6zE0T1BO8wTl
NE9QTvME5TRPUE7zVT2PiOarymm+qpzmq8ppvqqc5qvKab6q5xHRfFU5zVeV
03xVOc1XldN8VTmtdwzN/2Oc1jvKab2jnNY7ymm9oxz+Bn7ewd8mn+CI5+DV
OpSukzqslp6jTva8btL9b7RuUk7rJuW0blJO6ybltG5STutuPV+T1t3Kad2t
nNbdymndrZzW3crDfr3DTGjW99wTHDqDj/x29Vn1e56dHfZ3tef1u+6Xo/W7
clq/K6f1u3Javyun9btyyvMY5D0on6Oc8jnKKZ+jnPI5yqEn+JtXZs08waEn
+MBdD9/38NAM1ZPsOS+E+g3lhZRTXkg55YWUU15IOfRkvr/v6Tekd8yI5a8q
Tq9V1GHyeTHeYFPV8f3z43mw+zNr90jveHqMN+5/avP8ORWVvz9k8dYTfFt0
X2s1b7UjOj9zm9m5vsYHc/qfGstr9fqsypdz+p8d450erVl7cno8b3ZZi9MG
9s8/P8Zf/KvK/ek/No/x8v+sXm/y9EtivG90X41jea2h0bnZ58Z4enS/dWP8
LXcel/K+ld6sc4KXb15v4pz+DWJ5ql2RDg1jfN2/66RMTj8/xu+K9Gke47ly
nifzvIinxfJRG6P668d4taid1ZRnFtWO+MSra2Tmz0mP5ZGGlKvz5pz+TWP8
4j5Vjnao2TzGP1xc7ZM5uy6O8amRbmfE8kJnRTo3ieVnUqJ2Novx8Pxzz5+O
eE3Nn1z4QKVoXjHz1brp+XMujOUlOmVUuzq/xcUxfkbUL+LrbvQvXu+gfzFH
/2J+n/Qv5uhf4Fj/Fkn/Ap8enRv8hUX/4nk++hdz9K/YOkL6F/OJ0r+Yo3/h
3yOlRP/ieT76F3P0L+ZvSv8C7zbfrQvQv3gevlv6F3P0L+boX8xzg/NyPUf/
4vk2+hfzmtK/NA/453+jeTj6F8970b+Yo38xR/9iTv1L57HUv3Q+Sf1LOfUv
5ehHPF9CP2KOfsTj/uyonX9pXEi56bfBX3202bwbjXd7dX55Vsrcy4r77bDv
ij30HdixcqfLBueZfGev/Hrzp009tMHMlnrA73DcDnH1KB/q6rGL5ZxM+F/7
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
9/8HMWeOoQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mwf4T9Ufx+8999wvLYlSRkIqqZCQZJXRUiSV9h6UpBIqWmhQEk0RJdGm
0C5J2lpIg3ZCtPf4v969z/95nOe87vmd753nfLaGJw/sfU7IsqxlzLKCfp9K
ln3LwOZlls3Ls+xl2lzaItpLtIeY8zFzPmDyRI5PYu7DjP3D8ZTSc26kX5x+
+wx/ezD3sVgXe5Z+Y663BW1j+Hl+ezF/f4p2Ee3E4Otk/H0dx03AT5mzAH6B
thPHtye+Ta30b2+l/51+T/7+LfMP4zx3wjU4zx3c88aMrWHOrfDf/O0L+Bb4
V/hz+Db4H/hLeBJcMv8b+Gb4e8Y/hW+A18Ifwjemd/UxvJDrvkhrw/UmMr6B
8VWM3wR/B38CT4DXwyvh8fA6+CP4S3gePI3f3w7/C39V+r0/SXudc65hPOc5
JjJeg7/3YawT97cbY9vB9zJ+lJ4ZvpF+I+Z3pe9AX5P2NtxYz8r59mDORxwf
AW+c+zcl5+xG357xo2knwR3p+9J6w3unc14Kj+Cau9IawDO5bjO4ITwLPoHz
VaddxvFnzP+K321Jf0LhsSn0fbjWVPhP+Fv+thm/n89vatI/m/t7Xa71ovPQ
qjHncebOp386jW+k56R/njae9lzibRj/gL42/VJ+cyrtAfgn+lj4urr+afCD
8H30W+W+7q8cn6J1TD+D/kzGauWe15B7qk4/nWccx32s4RwfwNfBq+H34Qfg
HfjdH/CD8I7wn/D9cGP4d3gW3Aj+Fb4P3h7+DZ4J14d/ge+Ft4V/hmfAdeCf
4OnwNvAP8D1wbfhH+G54a/h7eBpcA94A3wXXgr+DH4Z3hv+CH4Ijz1OL/mT6
Y3muxYx/zvHXzJnMMx/P+JGMv8j4sfDh8AvwcfAR8EL4LPhU+A34RH53Pbwf
/cn6hrRxHB8TvVYXaG3AfeFF8Gnw8fAr8OnwCfCr8BnwifBr8CnwMfBL8F68
48vh/fVNGT8OflnvMMkmyYtHuP+m/P1vxmfDu8D/wGO0Dvn9MnisnhFeDl8L
fwkv1btK+1d78BrGv2D8Pcavhj+H34VHw5/Bb8Oj4E/ht+Ar4VXwm/BI+BN4
CXwFvDL4/VwGfxj8XJfDH8Ovw5PhTbjPtXB/nuuUzONTGN+U8XXwVHgLeD38
NHwWvCn9aOYPzix/nuK4LeMV+idobbTe6Z+k7QmX2kO01nBBfxrPuWXutT6P
4xcZr07/GG13OKefS2sJB/pHaS2kICrWFZLJ93PdORw3Z/xf+E7tZe1p+KTC
3/8u+ncYv1syheu9C98LD9Gage8PPs8J8IxgGXKqrie9orWh+4Zna83A8+FH
dH74EfgBrRN4jnQGfDI8G34QHgq/E7xWh8HvBq/nc+BF8BPwAD07/Dh8NrwQ
nq+1DT8Pz4Mvgt8LXrf94efgufCZ8DPwo3BTyUSe92f67aWjaPVpO3DcmPHv
6DdULINW610l+S4duXu0TP6NfhfabvAv9C1oLeFf6c+Q7ONac7QH4enBMr99
kj8bw3untb0R3C6t+apwP/hZ+DF4G3ic9B3nvBB+K3hvDpGOCN7jHZN82xTu
nPRUNbhT0n2bwV3hH+AacJek77aA9006rnrpdbeK+x/D8UGM/0lfW3oKbsjf
doKPhLeCd4D7wg3gHeGDYRkkdeEe8F/8tg7cDf4RrglfDC8Llg8Hwn/A28D7
w7/BteBz4Vfgp+Dz4NfgZ+BB8Kvw0/Bg+E34eXgg/BL8JHwB/Ab8HHw+/Lps
F/h4+J5g3bcf/DO8Fdwd/gneEj4GvjVYXwxN6+FTHulYxm9j/B7GD4B/h7fW
fMlN/n4z/RvRtpLWxoBg3lTrivl3BK+lRvAkeINkIb8ZJJuIvgnjdwWvw521
74LXUn34ZngtvC18E7xGtgN8C7xO6xd+AP4DvgReHqwXNtfa07eQfNX+DV6T
DeHb4fXwTvA0+Ce4NbwYLvjtjvBU+EetbXhm8Drfm7/9I/lA/wrjnTl/Fa1H
2hi4H+NL4KvgHrJT4G7SMfqGeg/wZvqGtC5wVX0fNbgG/XDa+8E6YgS8IljX
XAp/EKxr7ue8r+XWIa8mlr24A3PuZM4P3OfW8PXwZ3Ab+GU48tu2SUdU4J0K
22gXcfw1479wfAPjDWTjZv7WpzP2FBwYO0t2Cu1pjr9i/vf8bTrHV2tPZrYP
VzNevfC9nVF47kPaM/qume9tZ73TzO+8Ca1p5vc8jjYss825lvNU4fhR2cXw
Uu6xZPww2h+Zx4/lvOfK9qdvKZ0hh0B2HfwQ/JfkE/wUnEsXV6w3q8Ct4AVw
gHeDH4T/ZH5z+GH4b3h36ST4X7g2fINsb7gOPF72NrwJfCjXb0BfjzaR8W8k
A6WT4H+0VoP1477MO5zxmvTbS27zt9My69+TZb/ABxbWJ7vr/eTWUUvhK4Jl
Z3O9w9w6bRl8JWNXl/Ytrim9v1vofcre5FrtmLeL1jPH29Lq5barJdsl4+UP
jWPsncJrtil8bmF78GXmDOF8IxgbTquSWccupx8Z/A44dfYuf9uV8bfhS4Nt
mSXw8GBfbG7yBWTHvUl/SfC7kY74Jff7lg76XvYw99aBec058aP0nRm7mP5V
7vXJzLZfL8aa0VZzvDnjc+BKtP3WjvYT4yfy+11lD6Y1o3Wr9dsHrp3bbped
9Zb8guD1ojX5HePH6X3Bu2h/FX7+Zwrrz166ZrCOPRSuTv8p93Qf/X387hN4
Mnwrv+nM8ZeZWXqsJ1wtWB8eLNkYrIcPgTejX8lvp9DPKG2vDZV/Sz+Ba7fg
HOcXttG011oE22Va/7vQT+JvrZgzmP7S0v7EZaXtlLbwH/ztI85/I8d3l7b7
ZIM1D7bpzod3C17P28Lb8T6vlFzmdwML24MXMN6M/sxoP6tK0gnyob5i3gqt
eeZewvnfl50Dny3fWLaLvmPp9/9n5nHJS32jQYV1jvyyLzkeW9ofvU7yqrQ/
M7T0HpWs2MDxwbl/+5XWMX1BC7TtONcCxgYF+xbz4TPhutG+1epo32IefEaw
DtkM/jS37/IcPDDY11kEXxDsrzwB9w/2abQOzwr2aR6H+2n95I4XSOfJH3qe
/txgu/I++LhgPbYpvIp5Cwv7igsK+/f3Mn50sF/1Ejw4WM7fl3wEyR5uPXs7
t3/2Cjw02D9bDF8YbGs/Ap8c7EvNll8YrAckGt/IbbPPlH/DQPfc3/cz2X+M
3wP/SH8/rT08rLDNJfN5SW67fpZsAcnBwrGMz+gfpnXUdy6snzeRbZ9bvu4L
R/obOM5oX0hG0HdL19Uei7ROpdsXaWx/2n60zyXjGM/hDvQvc42R8EuFbfz3
+fuoYP0v/bKev70f/X7kF0zJ7Re20t4u7C+tpz+29P20py+YPxP+TfsrWo7J
T3lROlE6tLT+357xb5h3M+0m2ciZbYpGWle5Zb/iQh/m9mNWwtcG66V28N+5
ddHe8D+5dcte8F/wC1zrG45XlPZ1PpY85/glxguOvy4da1Kc6UPZWIxfF2yH
zOfv+zJ+Cf3F3P/AzH697EH5rbWCfQX5v1sG26GXwG2CYzzXwJ2DZbj2znnB
slKyV7pWcQ7J8U2i5epu8An0ldzcOnOc6VrpYsk25nXP7Jt0hztltuH3h/fJ
7JvsB3fO7I/0iI7hyH+5qbS98RpjPWn7Z7ZpA/d2HdyN8x+Uez1ItirmdDt9
z2Abc0v4vdyxlzfgj6LtzZrwO7l13fW0WtK1ufWd1pzsOsVJajH/aPgdyQT5
NFz3Bfh8zvF+4djNssK+oHTNUPqppe2vu6Njb9Pgw4N9x7bMGaK9zpxXGV/B
nMOi5b9s+D5wj8x2/kD4zMx++gD49Mz++CDZXpn9+r7Rekc2//lwfz2X5Kt8
rcx+/WD47MzxgQNo1aQ76C9j/LzM8Z8romW+4oEjo2W7YnrD4HMyxxmGwAMy
xx+OjNZ98ikOgffL7IceEa3X5F901z6HD+J59462YeQLt422W+Tbtou2T+Tz
doU7ZvZDu8EdMvuJe8HNMvvIinGOh/cLliOSJ6slb6LjpfKpO0XrOPna+5TW
CVqftyTZomPp4DLp5MOjda78KfnTihdtRb+k8B57orCf9yjjpzN+HvOOTe9Q
Nrj2V9NgX1/rOdCfw9+Okq6kXyYfSrYp3KJ0vPLs0jEAvbcqwXJIMRute9n7
es9Ngu19vf+d6b8pbOPsJT0pO4b5/enHFbZ/ziscP9A+yqXLJBMZv0B2ffT+
1T6WX1WPOZ/l9ntqaJ3k9o+2gutoPXLeH3St3LEExc1q0p9SOh6iccWNhsC7
B8c2tDerBscz9B3/zR1zugjeI9iHky3xBeNHR9+b3oPiHJIJUkoHRds2eq5n
ovXI0GQvSKb9ldnHlb1RP9ivPRHeNjgWfit8cHAMVvryL579Tlob+EL6ivYs
cw5gzvBoe0k+l+JI0nG/ZNZ78mNkf1dj/iT6Q4N9+jnwacF2hfTpqcE+lmyJ
j6SjuNdN03dXDP42xg8J9inrwp/k9r8VJ6xHX4XzTJDsgavCE7Vfgn2Cu+Aj
g+MZ8gsaBscYpsNHBcc8FLdsIDnH+N1wX+2P0rHip6PjRpIbjYL9YMmBnYJj
SJIP2wfHhCRnGgfH5mW7/FvY363D+Mrc8QnJnB3pN5Jeh3vAR1csE5uUjtt9
wvhYxvtU/O4aab3Td0nr9urCtvRh9FsopkH/YcW+8ejCvnKPJMu1Nw9L8/W3
mOw87d9B9I11n9IxSTe9ltkG1Bz9RjZF92RXaH/0SrrpMs5VVfuM42toByS7
4gzJQfkkFesB6YOtM3/PPXLHNVomXge3zm1jK2ahNbs7bU3mXIRY+Yg+hW2N
Lwv/rmU6z9rcPtrnsl8KX6enDKt0XemgTrnXv3xmxe875I7ht0+stap30CB3
DELPV0nPKP+mU/ptx8S/pfPMSL+Vv34HfW/ZS3rW3LmDWcH29m8cV6HdTfsm
c25HerwSbB/qPMpHaK9oz2jNrUnP2yfpwVck10r757on+V6Hlr6XPSVLaFOl
g0vHrRcmOdgpzdc82Wm6hw3J/9A31fdT3y3xsCQfPsi8FrQmZKvUSay1MaLw
3+fRD6etgBfTP5bbB/w98z1IFuv5Feu6IHe8Sz7FeZKR6ZyPp/NfWjiH8wJ9
79Ln2Es6pfB3uJa+ee711zWtQx1Ljvfib9W0BnL7SbrHfoXtt3Nz36d8JY1/
wL7smnv8b47r0g/I7TuNyS0fJRt7MH8LyTr6Fbn9vuXJJu+fO/bSNr1/fYex
6T51v8M47pf7/uVr6/xzCusMrSPpEL2n/uldSZdpH3STzVZYXipuMbHw2lce
b4BsBe0H+ptL+/6KGW9CfzhtLfOmFs6pKbemdV0rrc+z0jvWmjmiYhnXuLQf
qftRPEmx+B8lY0vz/+P00wvrqZOSXaZYgI5rJFZMoA2/+VnfofR126f9pTl7
pfmnl/79qTp/6fvcpLQdpznSkco/7J07B9G7sB+wovBvNX5aaXnQIsmEqmkN
aD1IVsUkryRLJFPWZ7bRWifZIt21J+27JOvq/H/tRf9d8cOOXKM+/G20/JAc
kUzRnj4j7Wvd52np3bZPPCW9u5q53598Pc1XPrFnkkuSiTMLz1VeUc+t55ct
0JT2NeP7Jvu/V1rbkkuS0bqVBwq/V+UqTy79LHqHynvLZ5QcVLxE9pvy3oqX
7JRkpM4zOLeM0x68MLdvr/jVkNwxLO37YWn9K1agXPodpfevYtbb0bqkOdr/
rbiPj+ivDh4flX6r/Lvy1LfQfxgdo1Iu/qniv3RRtpS/7VHY37oqOAZ5lGQt
/YjSPsRXipPk9kklX5TjVa5X+d9JpXO8iueckN7hD2mOfH/JEdmlnxSOG92R
nkVxpGcLx9uW544VXJFb5ig/cAXjewf7EvIpFDeWr6w50mvykfWMknWK01+p
7x8cyxqdWwdflZulK3fOfSxW/Ek5MtUvKGZ8oNZ/sG6W/SxdrRj5AdJ7wfEk
yRzJHvnSWgBXlI5Jjk/vQH691rzqLq7NLb/0/g8vvbYVFxpFe1PyWn4tY2OT
3BuY+1h8RGk5OLp0LEA+4Jn0Kwvb+qtkb+TW8XoPV5Xem99H+24TcstG/U4s
m0O5d/l02yRWPl73/W7h73tI4Xiavuft9GNK67vfOee1peMA4pVJDkgeTEt6
UPkyPbNkg2pPxP/pea23wjHYNYy9VdgOX5Y73rQI7l84biFfR/lt+RatkqwY
md6b3t8Tud+J9MLvzJ0lWVF47XdJ71kxJNUsrE4xdfnXiuvPzh071RqqWzh2
pbyNYqPK23ybYgzKBbyee1zXUQxPOR7Vxki2Kyevc5X07Th+OHe9x1YVx1Vk
l04oXWvzTcW1FXfktpEUB5SO6ZPW16Tc8kWyQnUz2g+KNWn88/ROFNORfXlJ
bh2ptaH8v3KRqhPZvLB98zf9vbnvQc88PK0frSPlOu6XDuL5dk4+o3xH5UT0
TqtHP6PiHsprKeem3H0d7Y/CsYWL4cml436qHVIOR+v7Dfp6heuFVDek/OEo
uGPwt1b8QXUtWvNj03pWDOqR3HkWybrztQYz20vrmPtFyhOOZKxDsN11J3PW
Fl6TikmpXkVrUjUyqypew4q7vVfYxlJtkWp2VO8km//Z6Hel+KJql+om22ij
lHepGp2HaZfsHNk7ykmq7qJ2sL2me5ZtIV2v2qh1Kf+j2irVWMlW/KFwviin
H8t41+Cclfw1xU0UYBxD1yV4DcuuVP2L5ii/pfWrPOpo7Z3geLhsCdULnZ67
Dkb67izuoQ+8m2RCdA5C9QOKAel7qX5A62124fi0bIZTOL5H3y3at1Xtk3Kt
qvGoq2sF733Vesn/li6XHpcvI/kwIslqxTSfK1yPIH2wqLA9LbtSduz06DiG
6rK6wAdlzkkNph2f236TXXQiPK2wrXJq7noDrQWtiUY6X3T8ULmt1tFxReWt
9qS1z5y3kp2pWLjyUrJhpUcb5tZryuMoJ9ohOpai/NQ5hePDBxfWvdLB/PvP
BtD7nVVYt0qvqjZgQGG/7+xkQz5Iv5z3sU+0XlC+TDFbyWLlGlqXtr96ltbF
imE+nuwK2V6KPchuvImxpcrxRtfMqLZNvpLifaPoW5XWn5o/mTlXZ66F65nO
L7vr3ejYXZNkq/TMnZOVbVUtyU/5pIdITxReM+Pp3+O6BxSuBToxrQvZSLIX
r4+OaaiOTt9H9rZs0O6F68qOT3aO6scOKp3jPQ6eLBnDb2/JXL+n+K6eSzVB
siskv56UbRIcl9uV/gLmbc74gXqv0bFN1aXIh1VM/HL6QRxvBu+va0XHb1X7
NyU6BqsaPPm28nOlHx+IjkuoJue+6JjJ2uQLHMqc6wrn/4czvqdibNF6X8k9
+V+yD2QbSIcrNi/bVXlt3bNiirqfo3PHuxRLki5TblQ5JMV/lKOvHx2D+i+P
Hx0bUR6/VXQMXLl7nVt+uPJvirfJDpYN3DRdV7qzXnSMQjnWY0rbq19H+0Hf
Z46fD0n7RfKzV7L5FT8/rOJYRkP40IpjMdtpjVQcX94W7lVxzKg+fEiSWfXg
3hXHaxrAB0bXFip33ChdS3nV7aNzAaor2Do6zqb8e+3ouLRyx7K9tXaUU9gm
Oi6tmpaGaZ9q3zaOzjWoRuIo5r0IH1m6fkr7T/tOuky2kXJt8sVk4yt3o9jl
xWldKRZ2f9KD2oPKLS+qOGbdLsk95QxkT8+l763Yd+Y6gS6lYxvKHTfT/oAv
Z22sis6Zql5LdTQXw60VTypsR1RTfDraTlYdhfxb+bPyK5VPap/kiWwD2SmL
K449PZT0juI7kj+KbxxZWNZeX9gP0PuRP67cjdakvnuz0j5l19K+u+SU6pj6
lrah3qi4vkG2vexL+a7yYZVfVg5pZNLXyjF3TrpBeY55yQZQXnlO0oXKbym2
Inmn8+ub67vIhpAtIT2nfJFi4IqFK+7fNslzxZDlu8mHU672mNx1L9rr4g2Z
c8wjkh5RXlsxB71P5eObJhmouLLiSaq7kY+p2JO+k2LFU5I9oJy/7CPF4bpz
3W8z++MfF7YTZCcr57prkoHKZ8gGlh+iOoBxyWZQ3rdJkjnPR+cWVef5XLR+
V53ngui4qOKjl8AjMtdxDY3OManWYlF0vlX1oo9E17KqJnB9xfpVOVnlQeUT
vVY4pyg/UXaPYrhtkiydGxwvV83vw9HvXPFG1eBIrqsOZI/SdRYLKs6Fy2a+
rXCtjWSJaouVT5PdoTrrR6NjvKrH2Ii5vXPHvrqmdSVbYte0F7QnFHvXHK3J
x6JzBIpR3JDWqtbsO9E5ROXTXoQXZq4ZWxidS1Kd2AvRuTa9t7nwY5lryRTD
75u7nmpUtO+murUJyc6cnGS/5ui7SufIt5ReVD6gWZLnLUvXWT9fcRxSMU2t
e+UGFJO8Kb1PPavyoaq5kExT3bTqDBS7kF5UXkPrrZ/uPbgmVnXcsltUE/12
xWtc93BZ5v2oWuxnK45Ly/5WTdFF0fpFdX0XRssN1SCpJls6VHWAzZN9pXjC
e9F+kOozZ8H3ZJbbU6Pj86qvWxJcV6P6mtHBuWDZXW+nd6v3vzy6jkW1oPdG
x8wl85dG59nl6C+LzqGrdvTKaP9aNYR3Rce4pBdmRMfnpRdmRsfkpQuUl5Jd
tyVjw4LzzvKDJkTnK1VTd2t0zF/1crdE5yNU46f6O+2XtvSzo/OGqn+WnaN6
5IWqr4jOEag+8MZo+1k1hLdHx+RVl7gkum5B9cPjo21p1Te+El23oFruN6P9
EdVRT4y2c1T791Z0rYLqjSfBN2euV7wOvipzbeS06Lix9OA10b6M/p/FS/Dc
zDXhLZOckbyRX1JJ33FxdA2Gashla1RJ++vx6DoE1YTPi65/UB34mGg7X3WY
8+EZmevAn4iuPVDd+Elwv8z1YFdF+0Sq81RMSr6jYsuSA5KpspGejK7BUC36
x9E1SKoxfjm6fkN172cH13X8mmxD+aI61/8A74xfnw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJxNm3nYVdPfxve0Tkml0qxoEiWhQipJpUGI0kCZkiiazNKgkJlChUhCSJEk
pWRIpSSZIrNkJvM8vfene73X9ftjPWd99trnnL33Wes73Ov71B80steILEmS
k/MkKfT6XEiS4/W6qw5eWEqSz8TXijuK7xDfJ64k3pAmyQDxZvFwcRONXyd+
QLyH+FONnyRurA/dWzxL4x+Ip4mniH8VvyB+UucfIS6JzxEP0Pjp4lfEz4qX
abyruKx4hPgD8YXiA8S3iN8XXyDeX3yz+EFxPfFn+v6TxW+IzxbvpfFrxG+K
zxHvLb5W/I74XPG+4pvEn4qvER8uvl38mniYuLH4KvF74vPF+4mnit8Vnydu
Lp4i/kQ8UdxGPEP8lniEuKn4evHH4jHiVuLp4qfE3cQ7iUeKPxRfJG4hvlX8
kfgScUvxNPH94srijbq/geJzxC3U/4ZnoP7baiPV30fn36DxV8VnifcUTxZv
E18t7iC+TVyt8OfdIH4xMvPhRv2pIV6o8w8W/6nvOEN8s8bHiX/WeBfx3eLr
xInmz9HiW8Tjhb9ovKt4ivhS8Y/izuKp4rHin8RHiKeLJ4l/F3fj9xNP43no
83ozn8S38vuLe3H/4puZL+JjxY+IZ4orio8XzxXfIi4jPk48W3y9OBUfI75H
fIM4E/cU/6b7aiW+S6+f69gdGp8s/lvXc5TGbxNfwf2LjxRXEi/TuX/p2M7q
P6+2SP16em9/jd+u1xM1/p2OXaD+eXp+A8Xfi7vz26idIN4u7qr+7Xr/ler/
pc/vofevEj8urq/3niB+XHyvuKq4r3iG+HLxHzq/u3ix+D5xNY33Ey8Sz2H9
ivuIr9Z574rHcJ869hrXzHznOjV+l15P0tgPOnah+t+q3SNepfaHWofC83Op
PmeIzn9W45fp+Aq1yhp7U69lND5Or8s1Vq/w+rsts334WMdu19hzzFG1r9T2
1Pg0vb6rsZY6v7X4YZ1/qs4/Wsf+5XlqfIT6DTReX3x75vn+po5N1dgzau+o
nSPeXa97qA1Xv5nO30/n35fZ/uwnPkA8V3yKuLl4f/H9me3DYYXty5OZ53d3
8XHiZ8Vni7uJjxU/Ix4mbi1uL14oPk3cWXy0eIX4THEb8WHix8SDxO3Eh4sf
Fw8WtxV3EC8Sny7uKu4pXikeKu4iPkb8tPgscW/xQPE68Siej7iPeFW0l8eK
+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
Zx+I8erY4Hj1iRi/8fnDib3Vhqp/Y+74kpj3JvV7qRWpcyTyn+m542U0nRnq
f63XkDrHISc4BuOTOucg/+ide5yYjt+/p1qaOka8IvfvQT7XKj6vrcGxb7fc
+hsxPLH8mRp/mFiWZ6j+rvi73DEy558WnyExNLH08Pi8iNOJ16vhL9Ufkzu3
GiZ+VP15uT+7htoZ6j+Se6wW/jky8W37/zmfeLZdvB5iXGLdo8RX8VmF9a13
9Cwm6PqHFNbXtojHi88Sj8Ifiy8Tn1FYn3xbPK5k/Yj4LeSOx3rkzh243y7k
6IX1wbfUH1uyvkR8VSG3/xtUWE/crPFLxQPFg8WbMuulRwbP/WbiG8XnFNYL
PxBPKtlfoce9IR4jPruwfvi+eKL4FPGZ4tfFl4hPEp8hfjX6l5PFQ7Cvcb0u
KBzflc9tv+cXjv92zu2/5xWOF8vlju9u1msfXd/OaifwfIP1KnQr8jPyBvKH
Mmp91D+POZj4Pbeof77at+L+cX5Ozv3bMAd7x/nLWAW1AXG+91J/J7V+uXM2
crdecf7PKux//s2st/bKnDuRY/2QW18k/vgvs/58Z+H45J/M+uWNhfXa7zPr
o+iN6NU/ZNZXf4/3Mjt1DobeSDz+W2Z9tluc35U1fkjma+Raj0+dAx5PzJE6
ZyP/DZnHuQfyPWzysNw+DVu9sWQ7gb04U8+2kfjV3PrKD4Vzyqm5Y1ZyTTRX
NK8ssfb6HD4itwY+rLANw5Zhby8I1sQPyx0To5XXw+fwfo1/W1gfWZRaA5kW
rM88pH51tePUX8H8SJ3jTw3WBFbk1u/QCsg5yD0W8HsHazgENOgxKwv7EHzJ
ExqfrvGbg89F05mF9l1Y//5SN/R8yZrQn7mvgWtZE9cc8R+5FjnQX7lj2oXx
+//NnfOQC5Ezf4MdS51L8/3lYo6Eb3smxoiniU8onGOgOZJjkHugEZWNz4Rn
Qw5Kzo/PJjclh0HzJEcht/m8ZA0EzWm5eDVrOvecnFPYZjJnuEf2MlaJu/L7
im8tnMNPy22/ye1ZU6wt7C9ayLfi8oX1r5f1+lnJmsLDxAiFc/gFue0huf3w
wvsbH+p5Xq6x24K1rKdYs8HPkGdJTE18PTyzbUXjQl87OTg+uC63HjBErzVT
a15oaCdpvGm0ra9ofCJxprhO6pjjE73WTz2/jhUPIH+LvpC5jk3Htg9NrUFg
0/l+NBc0iyuC9a8NufUubArrEQ0HvWdOsN7LGmAtjMnsK9HY0es+D7bPzBnm
DjYL29UvtWaChk5830H9dRqvknkcm0XOiL1DX9k/2q9TM18vGib6Ij4L34Wm
hb6DZszeVb3EWvKzwXowesEFJc8x5trGyMz/NTp/Nf45WMNDyyMHIhfi91qe
Ro2u8BpiLa2J62Vw7rXJ+viD61Orov7PxBy5fTC+CY0LvQy/gn8hBnqPmCxY
v78zt17LHgN7DZ3E68V7ZLbF2Gz21MiLyI9+FHdRf0bw3sDyOJ8G6VhV9X9N
rF+dkts2opmh55Hjvpc7xyX3HVl4v+pjffaVGhslvli8NfN+0+bov2/R+99W
/6086qv/w4wRs2xRmxus76Pzs1+4PfqLe3Xse/W/y91nDmHbYXLPOXGcNYXe
WyGuNTTZbaxNHXuH9wbrs+i06LtNyGGxfbnz7U9zMzYf239VsN7Le9+P+UKn
xJoo+h2aLPHt9alj4EnB8Rlx2rs6f0vu7ybGI9abF7wfgo3CVrGHRDz1ZLxm
NGi06KXMT/V/zq01oin+kltf5LeZG5nxudG+M5eqFM610dB3/f/5xvMtbMsz
vS5MbQOwBdh29HrWBGsD28S1sIaxJZyPFozPyAvr/GhdCyNXLHyttVNr2sx5
9oduybwWpgT7GmwqtpXrW5l6zfUmhspsy/An+BU+D318Ubx/9hiIT1fG+/kk
t/aAP9iWm2emjj+Ilbfm1jZnxnE0K7Qrcnq0THJEcsXK0d+Sk6P9kFOTq5PT
o/WRU5Lrk8OSy5KDk9uTs6PVkeOSy38RbHvRNdBj8Kdo7Wh6u5Tsn7elzsl3
LjnHR8vBP5H7oyns0NoSaw3EC+yRNSImLVkTQdshx0crQQPYoVUm1gbQANB6
0DTQBtAs0HrQUNAy0BB2aKWJtQU0HrQoNBe0HzQotCg0CLTfs4Jjl2vUDg3W
CNCy0ADQDtAY0N7Q4NAe0BTQwtDw0BrQbNCG0VTQctBY0ILRFNBeTstsK+el
1kDJidGOyYnJlQ8PXnusQdZmx+C1TkzaNFiDQBs8PLE2wXqbrLGr1NoFax5o
W+TcaCEUN6xNHaMQ15BzoxWTo5OLo/mgPbPHiRZETo/WzJ4auT45PbYfH0Cu
jyaCNo0GgFZCjl8zswZF7s8e7JDMe7jszbIHO5hcPfHe7CuF9YwmufPvVwvr
Hfvkzuc3FdZTmubO35cU1h+q59ZrlxbWJ2rk1n+XFdZXaubWe/kOvqtKbn36
qcL6Sq3c+u/qwrFqg9x6w9rCek7D3PrGWr1eqWfVSW1c7j0r9q449iI+urC+
0ii3PsL57DVdEceJOYk9i8L7desK6y175tZ/1hfev2qcW+95rrCesXtuPefZ
wvpF3dx6NzEYsVjt3Pr2xOD9rRdy73/hv7Af2JEnxe/r/PeZa7n1no/EH4lb
59aTiDWZe2iSx+s95xaux/hE/as1fmLwfvLZOm+F+EONf6jxg3PrWx+IP2Cu
5tajHiusR1XOrfe/SQzIWsitb20mBmTt5NbL3iLGw3fm1qfeFr9NrJpbj9on
WP9BB2K/ohPxfuaahOt07pZg/eWI3PH1fsH6KDEwsfCIwvUxH+k9V4g7qLXL
XDNwpcY6Ei9nrjm4pnBNRf/MNQbUWlBzcF7mGgFqEajBOCFzjQG1Gezpb4j2
k71+aj7QhsnRyNWa5dbumNPM7YHR3laJ9oeag8s0/mriWgRqNPplrlmgdoOa
DHLAOxPXalDzcEbmGgtqIaixOFf8XOLaC2pAduzFJM7t98itjTGnmFvHBvsa
NIqDgmtAjstcM0JtCDUj7J2Q45Prs8e7NbFNWa/++Tp2XuE6oNfVDtH5B2au
abmwcA1G98w1KdRmUMPCXg85JrkmNSNHZq5JoZakfcm1QRMT50rtxK0z18yM
FR8mbpu5Jubywhp259wxHdo2NSI9MtfEUDtCjcpRmWtmqF2hxoZaLXJgcuHW
JdcaMceZ62jk1AKhQaBFtBEflLkm52JxW/HBmWt8xhSu8emcuYaG2p/DxYdm
rom5qnANT6fMNUDU9lDzc0TmGhtqgdAEiYuIj64Mvh9i0Aka36lkn4nv5Hmx
t0GORK5EjcwInX+GWtvUMWlP9ScU1veoqTk3OD+elXu/Ge3vFLV9Y/yGL9mZ
HDj1exjvFhw7o3mMDs7XyCPIJ4YH5+c78n5sAHtTwWPkFF2wDcFzlTnH3GO/
Fi1whNoYje0RvJaY08ztHjEe5xoGBeuF7CVzT0OCNUM0NI4xRnzNXhL1MdeK
/yjcZ0/oOnF9tfsTr0nWJjkxsRAxJfsvxLDsHX2W2H+iOaA9EMMSy/ZVuyG1
RjkuOKYlRt0z8TgaKRog+/Nop0dGe0OOQa5RL9gWYDOwHXvznsRrmrVN/QKx
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
Z8MzQp/5P7fBsmY=
          "]], Polygon3DBox[CompressedData["
1:eJwt13fgjfUeB/Dfj9/vl+ydvWVlbyIjdGVVSjdKUSiVFqob3RtaQpJUKLJH
F9kSyh4Z2WUlmjJaInRfn3vOH2/O+/V8njOe8zzf5/xK9+h366OZUlJStkq6
nPZPnswpKT3gPH1+WkrKDyyd3c4msansV5mkH0lNSSnKKuodzeXXe5htK3X1
qfK2uZO8pLnS5qaxd9i3rBQrxX5mOexzN5/FPmQn5HV9V2rivRXWT8k49jXL
yUrqf9pY1r79+Xq2nj3HFrEHpajZQfp5KaM/ZW6duQ3mLrBybADbwDayg+wH
vaHksW87/Uc+Vj+sZzdXXP9J3mJHWQ5WQj8po9lulsGKxPGTN9lXLBsrFp/D
c2b3ut34TDY3no9lY13ZDDab/ciysrvYdDaHzWML9UzSjDVmv7Pi5vqxVWw1
W8g+0XNIe3Yjm8Pm6Be9l/qsFvuIrWTZpR1rxWbEd6f/Yq4aq8pmsensN1aD
VWML2DKWRdqwG9gitkrPKR1Ya7aErdFzSyd2E5vPlupXSWvWlC1la/V80pm1
Y8vYOj2/3M7as8VstZ5LOrI2bDlbrxeQO1gH9l/2kZ4qN7BGbAXboBeULqwj
+5AtiAtBmvqvAZvL5ut/+7xNWEN2huV1nHvy+WwB+4UVinONLWXL2G+sCOvL
lrMV7LG4FuL7lRye83H9VymsP2Rumbnl5qqzJuxOyWqulf6HlNAfM7fa3Bpz
59g1rA9bwpawj9lmvbB0ZZ3ZB2yEvs1z5Y7zRZ8p09ivrDq7ztwU9gY7yFJl
iF5FGnmNOyQLa6n/YvZ9c4f0IvatoJ/lBc305ovZ0jCZoO8xV4CV14fIC/KV
+Z/iO3GRnNbf9XinuXzmyurFbE/1fDfyEWwyK84ysVZsJPuAFY2FgbVkr3k4
iZVgGewfbAybzkqyq2JdYm+yGewqdlJ/1XsYqD8tpdnV5trxt8zNijUojj/r
zuay0bFmxFoX3xGbyhaZK8Qu6k1kGHuHFWZ/xTklL7J3WRF2KT67vMTGs/Ks
gOf7J5vGFrOyLB/rwqawhWxinOOO033sim1j9N/jO9aP8+LmKuuleBbbb+Zj
2cy0xAK/Qr9srrHagl2Ka4SdZdexevrlWGPYOVaV1dcz23cjyypt2S0sjW3S
s8nN7FZ2U3ri3C7JWnj92vH54/rSz/Aq5urqZXhO22/hE9g8djGuOf20ucqs
TqztMpP9wMqxmnqqfT+Oz8+uZy3Z33H9s0usEWuuZzL3KUuTlqwtuzG+37if
sOu9fjX9SqxZ+h+8trkm+vlYA9n3rCyroWeP+wAblZE4h+NczpE8j19nQ/Vh
MpvNZhfsu1Ym6CPlO89z3GueklH6Z/ZpFde4//9tv/9ITf6zuaf4WHkkzlvb
m3ncPK5/2/qYy8PPxLls22v6COmSnrivxf3toTg39YZygT2rfyjPxPdjnwke
T5R63t/z9s3Ltumfy1B2kH0vYzzXmniPnqOoXtBcmv/TZTPb4v/cbJ2Z9XKA
HUhLXOtxze9kuySfmZVpievngn5RCrCqcfzYk/roWC/13HI6rl3bX7XP8LTE
fT7u953inJFstuWNtchcXXkurkszV8dxjrXA9n/F7wDJwr5lw9kz+rPx2Via
5+nMt/i8k+M+K9/HemNukJnBMp29x06Z+VTGx3krp9hocy+aeUlyxffG3mAv
66/E549rkzWQ572/N+N3QKxrcb5mTnwvjeJ3gH366g/LMXbM9vz8N/vVl8Fs
TNxTZLJ+zPsoxirp18T3G+eyDGVvswtSx+Pz5g55zldjbZY/zTSWIbaNM5Mv
7j96PRnE3oj7m4zXv7BvflZOzzB3gr3iffbXB0jr+K1iJm+sY16jlv65HNGr
yZP27WtuGzusV5Un2ENsOzuqV5en2MNsJ/tarykD2KNsBzum15D+7BG2lX2l
V5F+rDc7wS7HbxwZxyayXey4XksGsn5sN/tGry3PxHXCNrEDekV5mN0f5zU7
qFeSR9gDbAv7Uq8sj7Je7Al5XPYkj08Dx+f9WCcdl/hRndW2t9ITxyuO297k
/aahuW89/jt+u8g7nu+9OM68gWP5GjvKjsaazWqwIWyvujfWZ/tWZoPYdrYj
rkdz9dlwdoQdYcdlpP556v9vkSnX6N/ZN7NyW/xO4p3imPBR+g49XrKQf67E
vd/c4PC4juNewSqx5+I52fZYs1l5NpBtZJvYX+xa9jTbxDbHmu391Yy1he1j
+2J9ZrXYMLaf7Wer4zzSi0t31iXuPebqmnslfnOwQ3H9mKvOXojfF2xPfN64
T+utJZ/P0iGucfvWi2uAHTZ3OI4V36sXkrvYfWwN266XkHvZnWwl26IXkW7s
NnYtK+X5HmAL2drkmh9r/6HkutAsI7EmxNpwOLkuNM9I/C0QfxN8bP+Vkisj
sebH2v9l8t7SlA32eLD3v8XMZsmTkVjHYj07kFyjro+1Jz3xt82zcR7EcdQH
yow49vJ73M/jmNhvipkTZkuwKnoFXtpML76IrWN90hO/+zrGcY3fcvqDMtzj
xzMn7l+V43xOT/xd1J29F393xW+hOKc9Ppk5sfYMZ6tkm+cvJvewO5LrYqyP
R5JrfAv7nYx7sMcd5G1zE2zfwPbp18a9jPVkG9l+vYL0ZT3YerZHLye9WXe2
ln2hl5EH2N3sU7ZTLyU9WVf2CduqF5W72e3sM7ZLLy33s27J+0/ch44m77kt
437n8W6Py0ovc/ck7ytxf9mfvAc1NnfM47NxTsjL5kbZXpFVdZyeZGvZ7rTE
b8/4Dbovea9qZN9vPD7vcZv4fWFurO1fs3NxPsV6zEamJa6HuC7qeM5lktO+
7c3l9R3dq7eJ70T/H0OSBPM=
          "]], 
         Polygon3DBox[{{1150, 1149, 1544, 835, 836, 1545}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rkvZWEcBuDv2vel0VkupdCKBA2ioBINKqYiYTDWArHv0VHIlCMRLdHo
3OhkMnNxGXvmD5l5ThTved5fbr7zne+cGx/82j0aCyFsy5QS9XGXfyzLCKGE
cVayjvVsZDPb2cUe9vMLh/mNkzKn73OT33nIUx7zgue8ZoK9mSGU23dGktE9
WC1LaSHcmpd5xxXec5UprvGB63zkfHoIrdb90Rf0Nn3Db0/mTT5ziy/RmfnK
Hb5xl+8csa7Suln5ME+yJuqe9bc5ySsmeMZz/uAJD3jEDe5xV2b1MQ5xgH3s
Zidb2cQG1rGWFWzxPtLtOS3F5gnG5a8UmT9YyDcW8IX5fGIeS93nUs/VF52n
Q3+QnOi7MSXZ+h2zojPRluEXLQ0/aVm4odcSRg1Vsc//yH/OFUP4
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1046, 1339, 1442, 1736, 1045, 1559, 1250, 1047, 1560, 1251, 
       1048, 1561, 1252, 1049, 1562, 1253, 1050, 1551, 1563, 1254, 1406, 1553,
        1755, 1410, 1340, 1372, 1255, 1371, 1742, 1383, 1384, 1341, 1411, 
       1443, 1756, 1408, 1407, 1434, 1774, 1256, 1051, 1564, 1257, 1052, 1565,
        1258, 1053, 1566, 1259, 1054, 1567, 1260, 1055, 1547, 1568, 1261, 
       1342}], 
      Line3DBox[{1057, 1444, 1627, 1056, 1445, 1628, 1058, 1569, 1262, 1059, 
       1570, 1263, 1060, 1571, 1264, 1061, 1555, 1572, 1265, 1415, 1757, 404, 
       1343, 299, 1373, 1743, 332, 1344, 408, 1760, 1417, 1416, 1435, 1446, 
       1758, 1062, 1573, 1266, 1063, 1574, 1267, 1064, 1575, 1268, 1065, 1576,
        1269, 1066, 1577, 1270, 1067}], 
      Line3DBox[{1069, 1447, 1629, 1068, 1448, 1630, 1070, 1449, 1631, 1071, 
       1578, 1271, 1072, 1579, 1272, 1073, 1759, 1418, 1273, 1419, 1556, 1762,
        1321, 1345, 1375, 1376, 1374, 1744, 1385, 1322, 1346, 1422, 1423, 
       1764, 1421, 1420, 1436, 1450, 1761, 1074, 1451, 1632, 1075, 1580, 1274,
        1076, 1581, 1275, 1077, 1582, 1276, 1078, 1583, 1277, 1079}], 
      Line3DBox[{1081, 1452, 1633, 1080, 1453, 1634, 1082, 1454, 1635, 1083, 
       1455, 1636, 1084, 1584, 1278, 1085, 1763, 413, 414, 1001, 232, 302, 
       882, 233, 1006, 418, 417, 1765, 1086, 1456, 1637, 1087, 1457, 1638, 
       1088, 1585, 1279, 1089, 1586, 1280, 1090, 1587, 1281, 1091}], 
      Line3DBox[{1093, 1458, 1639, 1092, 1459, 1640, 1094, 1460, 1641, 1095, 
       1461, 1642, 1096, 1462, 1643, 1097, 1588, 1282, 1098, 1725, 1323, 1347,
        1324, 1386, 1099, 1748, 1387, 1325, 1348, 1326, 1726, 1100, 1463, 
       1644, 1101, 1464, 1645, 1102, 1465, 1646, 1103, 1466, 1647, 1104, 1589,
        1283, 1105, 1590, 1284, 1106}], 
      Line3DBox[{1108, 1467, 1648, 1107, 1468, 1649, 1109, 1469, 1650, 1110, 
       1470, 1651, 1111, 1471, 1652, 1112, 1472, 1653, 1113, 1727, 1327, 1349,
        1328, 1388, 1114, 1749, 1389, 1329, 1350, 1330, 1728, 1115, 1473, 
       1654, 1116, 1474, 1655, 1117, 1475, 1656, 1118, 1476, 1657, 1119, 1477,
        1658, 1120, 1591, 1285, 1121}], 
      Line3DBox[{1123, 1478, 1659, 1122, 1479, 1660, 1124, 1480, 1661, 1125, 
       1481, 1662, 1126, 1482, 1663, 1127, 1483, 1664, 1128, 1543, 1737, 1351,
        1391, 1390, 1129, 1750, 1392, 1393, 1352, 1331, 1729, 1130, 1484, 
       1665, 1131, 1485, 1666, 1132, 1486, 1667, 1133, 1487, 1668, 1134, 1488,
        1669, 1135, 1489, 1670, 1136}], 
      Line3DBox[{1140, 1491, 1672, 1138, 1592, 1286, 1142, 1593, 1287, 1144, 
       1594, 1288, 1146, 1595, 1289, 1148, 1596, 1290, 1150, 1545, 1597, 1355,
        1378, 1291, 1377, 1745, 1397, 1398, 1356, 1497, 1730, 1153, 1598, 
       1292, 1155, 1599, 1293, 1157, 1600, 1294, 1159, 1601, 1295, 1161, 1602,
        1296, 1163, 1603, 1297, 1165}], 
      Line3DBox[{1164, 1684, 1503, 1162, 1683, 1502, 1160, 1682, 1501, 1158, 
       1681, 1500, 1156, 1680, 1499, 1154, 1679, 1498, 1152, 1546, 1678, 1354,
        1396, 1739, 1549, 1151, 1394, 1395, 1353, 1738, 1544, 1149, 1677, 
       1496, 1147, 1676, 1495, 1145, 1675, 1494, 1143, 1674, 1493, 1141, 1673,
        1492, 1137, 1671, 1490, 1139}], 
      Line3DBox[{1167, 1504, 1685, 1166, 1505, 1686, 1168, 1604, 1298, 1169, 
       1605, 1299, 1170, 1606, 1300, 1171, 1607, 1301, 1172, 1731, 1332, 1357,
        313, 1379, 1746, 353, 1358, 1506, 1732, 1173, 1507, 1687, 1174, 1608, 
       1302, 1175, 1609, 1303, 1176, 1610, 1304, 1177, 1611, 1305, 1178, 1612,
        1306, 1179}], 
      Line3DBox[{1181, 1508, 1688, 1180, 1509, 1689, 1182, 1510, 1690, 1183, 
       1613, 1307, 1184, 1614, 1308, 1185, 1615, 1309, 1186, 1733, 1333, 1359,
        1381, 1382, 1380, 1747, 1399, 1334, 1360, 1511, 1734, 1187, 1440, 
       1441, 1512, 1775, 1188, 1513, 1691, 1189, 1616, 1310, 1190, 1617, 1311,
        1191, 1618, 1312, 1192, 1619, 1313, 1193}], 
      Line3DBox[{1195, 1514, 1692, 1194, 1515, 1693, 1196, 1516, 1694, 1197, 
       1517, 1695, 1198, 1620, 1314, 1199, 1766, 420, 421, 1011, 246, 316, 
       889, 247, 1020, 427, 426, 1768, 1200, 1518, 1696, 1201, 1519, 1697, 
       1202, 1621, 1315, 1203, 1622, 1316, 1204, 1623, 1317, 1205}], 
      Line3DBox[{1207, 1520, 1698, 1206, 1521, 1699, 1208, 1522, 1700, 1209, 
       1523, 1701, 1210, 1524, 1702, 1211, 1767, 1424, 1425, 1212, 1557, 1735,
        1335, 1361, 1336, 1400, 1213, 1751, 1401, 1337, 1362, 1338, 1428, 
       1770, 1214, 1438, 1426, 1437, 1427, 1769, 1215, 1525, 1703, 1216, 1526,
        1704, 1217, 799, 1218, 1624, 1318, 1219, 1625, 1319, 1220}], 
      Line3DBox[{1222, 1527, 1705, 1221, 1528, 1706, 1223, 1529, 1707, 1224, 
       1530, 1708, 1225, 1531, 1709, 1226, 1558, 1710, 1429, 1227, 1771, 435, 
       1363, 363, 1228, 1752, 364, 1364, 439, 1773, 1229, 456, 1439, 1430, 
       1772, 1230, 1532, 1711, 1231, 1533, 1712, 1232, 1534, 1713, 1233, 812, 
       1234, 1626, 1320, 1235}], 
      Line3DBox[{1249, 1370, 1724, 1548, 1248, 1723, 1542, 1247, 1722, 1541, 
       1246, 1721, 1540, 1245, 1720, 1539, 1244, 1550, 1719, 1431, 1433, 1432,
        1243, 1754, 1413, 1414, 1366, 1405, 1404, 1753, 1242, 1402, 1403, 
       1365, 1412, 1740, 1554, 1241, 1409, 1718, 1552, 1240, 1717, 1538, 1239,
        1716, 1537, 1238, 1715, 1536, 1237, 1714, 1535, 1236, 1741, 1368, 
       1367, 1369}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{461, 654, 1559, 462, 1628, 665, 486, 1630, 677, 499, 1634, 
       689, 512, 1640, 701, 525, 1649, 714, 538, 1660, 727, 551, 1673, 740, 
       1592, 564, 1686, 753, 577, 1689, 766, 590, 1693, 779, 603, 1699, 791, 
       616, 1706, 803, 629, 1714, 815, 642}], 
      Line3DBox[{463, 655, 1560, 464, 666, 1569, 487, 1631, 678, 500, 1635, 
       690, 513, 1641, 702, 526, 1650, 715, 539, 1661, 728, 552, 1674, 741, 
       1593, 565, 754, 1604, 578, 1690, 767, 591, 1694, 780, 604, 1700, 792, 
       617, 1707, 804, 630, 1715, 816, 643}], 
      Line3DBox[{465, 656, 1561, 466, 667, 1570, 488, 679, 1578, 501, 1636, 
       691, 514, 1642, 703, 527, 1651, 716, 540, 1662, 729, 553, 1675, 742, 
       1594, 566, 755, 1605, 579, 768, 1613, 592, 1695, 781, 605, 1701, 793, 
       618, 1708, 805, 631, 1716, 817, 644}], 
      Line3DBox[{467, 657, 1562, 468, 668, 1571, 489, 680, 1579, 502, 692, 
       1584, 515, 1643, 704, 528, 1652, 717, 541, 1663, 730, 554, 1676, 743, 
       1595, 567, 756, 1606, 580, 769, 1614, 593, 782, 1620, 606, 1702, 794, 
       619, 1709, 806, 632, 1717, 818, 645}], 
      Line3DBox[{469, 955, 956, 1563, 470, 976, 977, 1572, 490, 987, 1759, 
       988, 503, 999, 1763, 1000, 516, 705, 1588, 529, 1653, 718, 542, 1664, 
       731, 555, 1677, 744, 1596, 568, 757, 1607, 581, 770, 1615, 594, 1009, 
       1766, 1010, 607, 1014, 1767, 1015, 620, 1710, 1028, 1029, 633, 1718, 
       964, 965, 646}], Line3DBox[CompressedData["
1:eJwVzsFKAlEUgOFrE1OrfIYeo6IoDCOJFkNEhEQMEa3sCXq0ahGlxbTRQFIy
EAzSpQnlqu8uPv5zz1y8rubXWaMUQjika7hLQrjnlhee6ae+a4c32vT4sH/X
jAGfccfQ/ktHHDFmwjdrHLMe33BvQ0/YjO86b+lpfNe8rTvU439xruhuvGs+
0yoP5j09Z59H55rmHDBlxg8X/DGn6d6vJoshLHBpXtKJ/bKmlFnhyrfCvtBX
nmjF3+CGf/07L6c=
       "]], Line3DBox[CompressedData["
1:eJwNyudKAlAcxuETgffRFQVFRESERoRfsm2LaKntva0s23vXRQTt0u7G58PD
7/B/T0UsUdVaFkKIUfQYLg9hhARjvEVCGNVKxknRRoZ3W1qrmWCSdqb5sE1p
DTPM0sE8c9SywI9/i9rJMkvUscKvbVW7WGeNejb4s21qN1m2aODVfVt36CHH
p9uuNrLHPkkO+LLlNcohR/RywrftWJs45Yw+LjinmUsK/l1pPzdc08ItRdud
DvDAPXEe+bc96SAvPDNECee4PJQ=
       "]], 
      Line3DBox[{475, 660, 1564, 476, 671, 1573, 493, 1632, 683, 506, 1637, 
       695, 519, 1645, 708, 532, 1655, 721, 545, 1666, 734, 558, 1680, 747, 
       1599, 571, 760, 1608, 584, 1691, 773, 597, 1696, 785, 610, 1703, 797, 
       623, 1711, 809, 636, 1720, 821, 649}], 
      Line3DBox[{477, 661, 1565, 478, 672, 1574, 494, 684, 1580, 507, 1638, 
       696, 520, 1646, 709, 533, 1656, 722, 546, 1667, 735, 559, 1681, 748, 
       1600, 572, 761, 1609, 585, 774, 1616, 598, 1697, 786, 611, 1704, 798, 
       624, 1712, 810, 637, 1721, 822, 650}], 
      Line3DBox[{479, 662, 1566, 480, 673, 1575, 495, 685, 1581, 508, 697, 
       1585, 521, 1647, 710, 534, 1657, 723, 547, 1668, 736, 560, 1682, 749, 
       1601, 573, 762, 1610, 586, 775, 1617, 599, 787, 1621, 612, 799, 625, 
       1713, 811, 638, 1722, 823, 651}], 
      Line3DBox[{481, 663, 1567, 482, 674, 1576, 496, 686, 1582, 509, 698, 
       1586, 522, 711, 1589, 535, 1658, 724, 548, 1669, 737, 561, 1683, 750, 
       1602, 574, 763, 1611, 587, 776, 1618, 600, 788, 1622, 613, 800, 1624, 
       626, 812, 639, 1723, 824, 652}], 
      Line3DBox[{483, 848, 849, 1568, 484, 675, 1577, 497, 687, 1583, 510, 
       699, 1587, 523, 712, 1590, 536, 725, 1591, 549, 1670, 738, 562, 1684, 
       751, 1603, 575, 764, 1612, 588, 777, 1619, 601, 789, 1623, 614, 801, 
       1625, 627, 813, 1626, 640, 1724, 875, 876, 877}], 
      Line3DBox[{641, 814, 1741, 874, 628, 802, 1705, 615, 790, 1698, 602, 
       778, 1692, 589, 765, 1688, 576, 752, 1685, 563, 739, 1672, 1671, 550, 
       726, 1659, 537, 713, 1648, 524, 700, 1639, 511, 688, 1633, 498, 676, 
       1629, 485, 664, 1627, 460, 653, 1736, 845, 878}], 
      Line3DBox[CompressedData["
1:eJwVzz1LgnEYhfHbtCBKEhsdoqnFrSkIBEERHIL6AuFe7S2NbQ7tfQA/gEMN
kSYtQm690SDlklo2hUNRP4eLc677/OHhWa8d7R4mImIHp3MRm8mIS1ygh+eF
iDt5bNuQmVTEEtL4sC3LA1vOtqj/yYQc2kLu21bcfvGDVbcs9tyT/Na7qizz
b3R4hW/p72jzEq/LPH9BSy+6rek9XPMCz87e44pv83m9iU/9CxNM/WzDbeDN
mL9igDeMbOe2vq3P7/GIBzzZzmbft3V5Czdo4wT/cA8v5Q==
       "]], 
      Line3DBox[{648, 820, 952, 1719, 635, 808, 1772, 1034, 622, 796, 1769, 
       1022, 609, 784, 1768, 1019, 596, 772, 1775, 1044, 583, 759, 1687, 570, 
       1598, 746, 1679, 557, 733, 1665, 544, 720, 1654, 531, 707, 1644, 518, 
       694, 1765, 1005, 505, 682, 1761, 993, 492, 670, 1758, 981, 474, 1774, 
       659, 960, 1041}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztXXk8VV33J5GhTKVJIiJEpSipa6ukUuYGQxlDKqWk0mCKEA2GiooKTURK
Ayo7NJCQUCKR4RoqNCjNv7POPdcrdZ96nvd5cp/fm3/O53w/y9prf/fa6+y1
zj77jrBdbWzfi4ODo5WHg4OLo/PPy75ks0P0ETpSjfUhrz2FZz0q56l15UcT
1hZKDiDuPVObT8ofpaPbz4M8D3W0IrVIg1J5meE0p+hLN+OuHkMJzeezbdbx
o7jb4hKEPM5Ri04A+W76MYt2fzl+Z4onec+89hS+93jYusibxRk6WuazDhP3
27lj/KKIq9UIv3fnK1rRLpELsQKnBtGsppWISIqmIk0nmYzYrOKMNbrXZxPy
WOLjJN+ob/VjFu32FN7jPL/iHCV499xOzUW1gR5w/yJ0nT5cFTUMXbdsbUVV
qlNVYw/2p533dl79JPMmcg04YDf65U7N+Qx53ELJswmf7Muzi01VfKJBxudR
CXZwH2Fg4gTXgtUB8ue8W9AJtZOFOfwiNJ59HRdSjYtRROFxieQiI6Y8Zsqz
CZ9sy3ObvNOj+ERJzfKJt+3h/pqWqiNc1fJanohNeIaGveTLNZwkRJtnsPrl
fK3HSEAB5Mcy5TFTnk34ZFueIy6vqIhPFMrojmda+p0ym9WAFs/bVtTbUJC2
buGDyBev69mFt38dz0zcJG0kea+T8ZC8Ji9eFXaopgId4DKZr1ghSGsyDdHy
z3+GrNY2E+PyhUbJY6Y8m/DJtjwnblxM8FaV7ia9g7wfuWAdeR2krD3/w4hT
U23UFyhsWi5EY/x7G7pFyhcy5TFTnk34ZFueWeHxDH/GQ+MnW4I/N1P+nELG
mS9X2ZRPtuWZis+a3XHMiM84lPPDE4jP63/H5/8Kn6a/qpxYb2Qw1w0PqXWH
KmO9gUVn6TbAesOQWm8sJuXHMuUxU55N+GRbnqn1syaL9TPeb2pd8531s+bv
9fOf5JmRD2Z0zwcVGPkgFriSpgP54MWv88GM3/ngn8Ob6GoHo68Xa2ZObJsJ
9Y19Qn39oV6xhFHfwCtHCWR2rW+IRL2LBHkPRj0EZ1D1EDbh8xucXep1Ev7n
uGpd+bG02DZpqNftnTjpeJd6HQ6KmMin0KVet/jKlHSbdfx4VcpEWajX8Sdv
i2XHet2cZRwXX58pR+PK3k5b8qgKORu1G8YuaETGs3ddA3xLsyEicJxxvUUf
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
mIKeLS2PReQJPfN7jeYj9GCfuffugJ6W9LnX5u11wn2q1o/jiKAjW5uQOsVT
rNfPvVolp989t0SzpKBtIdxfPNlvPVzfGV2fL9fbChtKvNd5S9yXHx6oqkVc
z1V4iusS+oWXbAT9eGd16Pf0d9o/OEtbC/RfLTM3BbwwOnYd4C+NxgqNIPR/
EQiZSejHg4K81UD/0537c04mzMYuug/e2MYS+X6g3MmyKNb2P612eQh1/pSZ
TeQ8pauIkfPU9KbEKClzYcx/S1KoPYaOikd6esyKpiN7jV1CSYR+22GkfrzT
4rv6O+3neQL6JZn6MVO/b1SslS6hXyOb1I+5RjD0s7JTk2f9A9j/EMmsj8sz
6uuUnai7nT8Yr4zu41XYKzGP4A25avV+Dby5ar+P/6N+mZH2SDLtwUx7qH6h
H/SrU8+YERNexCdaMe3BTHtenIkVJXhG9qKkPXjNQIY98sGv9Am/Qty86nPB
r+6Gl43V+oP8TjDTNJ+YR5qeDP9HTyj//3TN8zLh54ijOE0V/Hx2olE1+OFF
/iYsTuhXeTAZ9OMWu/Lv6e+0v38RfTMxvzQLGPMUp1HzFNWkDCT8HPEZXQb9
2FXJhNRvxHFwOTF/0Ws3JZh36ENWMTnvCnU+DCDmI1qWOhfmNV7KH/+H8/pH
OKvnXffnlK2y+GPXt6Nxe0D8x6tH6fhDaVayx+Ger0v/y3GOfOo+vxvOYv3A
9vK1YcZ9al2bNVdJTyrdTNwvFN729ho8l0pg/2dKxj6Vi9EgVy89ewxcvfsd
sb5Iz0Y7tqe42U+rR7x59XKF9g0ol9p/O7xWT271y2E0k8OMer4CT69U19hk
JDrArKEyrB5f9Tnt/Tawobs9mIX93f38/608q3H8p3DtXvCe0VmzsN57Jdxf
CNliDdeDR/qIj/4UjMQbyhSGttdjXUO/EFGdH49XD+O/jDfJNfAefGzGw277
G1uHcQpmyW7APnyVd9br0HGGl2GU2ju24afHeRMn93l+oe15b0Te8289TV5d
95TkzjPxwzOiLoks9KTjIFEPpYGZdPSI3EcqpEnJYz5K/n+Nt2xyH1Hr1e54
8Ilifz1hHzwptch3E7EeWxRul6YfzTb89DhvTHzMwWXk/YpHe8lr0u1NaZfj
XPGcsfdSPp4n1rdipzcKBNORCrlvs4o2liGPmfL/a7yVkfsqcfqGdm/yXsZn
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
iHbj5WZDu9jLj9Fu7bSRV4m4gWrr9/FD3NDfvn0+4PUVt7iEnpsiw3VfyDhc
6ziYjMPKFY2lRBxGK7nPQ5xENhsYcXLGykofIn6ixgNkfMZxB7+Oz93z61Tv
43vC3orjqsgnamOIcdcJVN8tCHFMVa7vUgKnj3gxEXDXXgq7BH8ir68uYOxT
Sj/5c3VpVvJ/M45/Nf6r6/k/ibNNPf83P7/5+f/AT07fKd7tlwQ0LwwWJO/r
LNvIa5ag9NiYS81obPDkxEAsSPMP7OeYfOgJik3LzN1xR4Ypj5nybMIn2/Kc
dGfPSK2sPhnd90HN/SDie8q0HpkWWExO9RSkabdPU35/n8hbqf08Y9hzPw/b
8pzP3M/joELeS4vkk9f3E3vrX7lQhu5aRIXXDxKifVbwVsnzfY6ERjp7tV/6
QKPkMVOeTfhkW57ZDY9n8bsJzP1dMRGMekrHY6q+siNcYd5Fg29+T8Hz49zk
BtHKb35PQUv7syfhJ1cpPZiph0384d+C97ifXGDEYc3ueCJ772djWz69Nmd6
EOuHjHpqHXCeWkd8bPPNIdYJTBwzcTbhjW35ZBMe2JYf9RsJpQ6GxhlS9pLm
cL9GtGotXEX6vc3o9a4Fh+wKrzCuF6GVKdtYiQ28i0SObVEu0TPJkGTIYxdK
nk34ZFueW3wOeWuXWGcoTQ57B/fxGiuK4dynnGjb9s1RrVhIzuXejW0DaMM0
Xvrtvp2NXq12LDxbZJOhr/q4A/q1B0mVRLEPn9/gv6hu04nvPrd47CmFx5p9
npjfiCTu10dF9Yklrkmetjkjn7RiF74+Yi8sB9O+CCVl54+/iBbNDKkfpfhY
02fZ8puEPJ42cBdP7Lf6e6ou9A2fVf8Qb20ZlWPop/IzSlJkhOB8s2z/h1fB
ryYumGc4ha8AyTptRut5GpBCRBr/wua6nx33X87PfzsfR5PfHW/VvLLbl4xf
AQ3u5uwwj37WfgkW5wWxiZ1/WX8auZ58+813YT3F89+Fz2s8uVn1eCG+sS8h
ojriEYqqyCqYuu0pOk/mU4eZ+RR+y1550N+eF/xb+tVMrrf7d67DL/TMepvd
eOvET5z2exWi4YA2z49rdj1cj0Q2v1qSv68Bca2KVlo65QZW8DjlWqTbiB3q
Zs5YObIOJTwIzxn9JRp71FdmFqynoxkzvaMrrtPRtMnvbx6clIw/2/bzHXG2
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
urh9NcjjRdtT/lCeFf5/Uz7Tlg==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 298.8320805548623},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{-20, 20}, {
     Rational[-1, 3] Pi, Rational[1, 3] Pi}, {-1.5615604901313411`, 
     1.5615604901313411`}}, {{-20, 20}, {-1.0471975511965976`, 
     1.0471975511965976`}, {-1.5615604901313411`, 1.5615604901313411`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.13240966930370868`, -3.29695240379709, 0.7500483494892175},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.748041311583515*^9, 3.748041388337841*^9}, {
   3.748042494958209*^9, 3.7480425213599443`*^9}, 3.7480425584387608`*^9, {
   3.748047131907486*^9, 3.7480471425410633`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "z_", "]"}], "  ", "=", " ", 
  RowBox[{"z", " ", 
   RowBox[{"Tanh", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.748042433899489*^9, 3.74804245387945*^9}}],

Cell[BoxData[
 RowBox[{"z", " ", 
  RowBox[{"Tanh", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Pi]", " ", 
    RowBox[{"Sinh", "[", "z", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.7480424552765093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "'"}], "[", "z", "]"}], "/.", 
  RowBox[{"z", "\[Rule]", " ", 
   RowBox[{"x", "+", 
    RowBox[{"I", " ", "y"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748042456503907*^9, 3.748042458489869*^9}, {
  3.748042535651355*^9, 3.748042539366561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"x", "+", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sech", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Pi]", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}], "2"]}], "+", 
  RowBox[{"Tanh", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Pi]", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.7480424587924757`*^9, 3.748042540076767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], 
     FractionBox["3", "2"]], 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "h"], 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}], "-", " ", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "-", " ", 
      FractionBox["\[Pi]", "4"]}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], ")"}], 
     FractionBox["1", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", "\[Lambda]"}], " ", 
      FractionBox["\[Pi]", "h"], 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"%151", "/.", 
    RowBox[{"x", "\[Rule]", " ", 
     RowBox[{"h", " ", 
      RowBox[{"(", 
       RowBox[{"n", "+", " ", 
        FractionBox["\[Nu]", "2"], "+", 
        FractionBox["1", "4"]}], ")"}]}]}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.748044812707281*^9, 3.7480449214383707`*^9}, {
  3.748045004375745*^9, 3.7480450154253807`*^9}, {3.748045081917193*^9, 
  3.748045097575115*^9}, {3.748045131156315*^9, 3.748045143780403*^9}, {
  3.7480451978428698`*^9, 3.748045206340061*^9}, {3.748045247760301*^9, 
  3.748045292239917*^9}, {3.748045344542808*^9, 3.748045349072178*^9}, {
  3.7480454041974087`*^9, 3.748045405700246*^9}, {3.74804561812888*^9, 
  3.748045623018243*^9}, {3.748045654759457*^9, 3.748045663452536*^9}, {
  3.748045832319831*^9, 3.748045836338106*^9}, {3.748046081258327*^9, 
  3.7480460829254837`*^9}, {3.748046203294142*^9, 3.7480462045481367`*^9}, {
  3.748046541699445*^9, 3.748046547099114*^9}, {3.748046883824395*^9, 
  3.748046892305422*^9}, {3.748048973171321*^9, 3.7480489777026567`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "-", 
    FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"]}]], " ", 
  SqrtBox[
   FractionBox["1", "h"]], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "x"}], "+", 
            RowBox[{"2", " ", "z", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}]}], 
            "+", 
            RowBox[{"h", " ", "\[Nu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "h"}]]}]], " ", 
      SqrtBox[
       RowBox[{"x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
           RowBox[{"2", " ", "z"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "z", " ", "\[Lambda]"}], 
           "-", 
           RowBox[{"\[ImaginaryI]", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "h"}]]], " ", 
      SqrtBox[
       RowBox[{"x", "-", 
        RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "x"}], "+", 
           RowBox[{"2", " ", "z", " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "+", 
           RowBox[{"h", " ", "\[Nu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "h"}]]], " ", 
      SqrtBox[
       RowBox[{"x", "-", 
        RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
     RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "x"}], "+", 
            RowBox[{"2", " ", "z", " ", 
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "-", 
            RowBox[{"h", " ", "\[Nu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "h"}]]}]], " ", 
      SqrtBox[
       RowBox[{"x", "+", 
        RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
     RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]], " ", 
      
      SqrtBox["h"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], 
        SqrtBox["h"]], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]], " ", 
      
      SqrtBox["h"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{"x", "+", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], 
        SqrtBox["h"]], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]], " ", 
      
      SqrtBox["h"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]]}], 
        SqrtBox["h"]], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]], " ", 
      
      SqrtBox["h"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{"x", "+", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]]}], 
        SqrtBox["h"]], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7480449067867727`*^9, 3.748044918013728*^9}, 
   3.748044959670236*^9, 3.7480450669293327`*^9, 3.7480451233614197`*^9, 
   3.748045192362958*^9, {3.7480453214271812`*^9, 3.748045341865803*^9}, 
   3.74804539983524*^9, 3.7480456097125387`*^9, 3.748045652758189*^9, 
   3.748045726306218*^9, 3.748045894929823*^9, 3.748046145029262*^9, 
   3.7480462667086554`*^9, 3.748046609657023*^9, 3.7480469722766733`*^9, 
   3.748049046017419*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"24", " ", 
    SqrtBox["h"]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "4"], "+", "n"}], ")"}]}], " ", "\[Pi]"}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "h"}], "+", 
           RowBox[{"12", " ", "h", " ", "n"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", 
              RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", "\[Pi]"}]}], 
          ")"}]}], 
        RowBox[{"12", " ", "h"}]]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"9", " ", "h"}], "+", 
        RowBox[{"36", " ", "h", " ", "n"}], "-", 
        RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", "\[ImaginaryI]", " ", "h", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"4", " ", "n"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", 
              RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", "\[Pi]"}]}], 
          ")"}]}], 
        RowBox[{"12", " ", "h"}]]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"9", " ", "h"}], "+", 
        RowBox[{"36", " ", "h", " ", "n"}], "-", 
        RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "h"}], "+", 
           RowBox[{"12", " ", "h", " ", "n"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", 
              RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", "\[Pi]"}]}], 
          ")"}], " ", "\[Pi]"}], 
        RowBox[{"12", " ", "h"}]]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"9", " ", "h"}], "+", 
        RowBox[{"36", " ", "h", " ", "n"}], "+", 
        RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", "h"}], "+", 
           RowBox[{"36", " ", "h", " ", "n"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", "\[Pi]"}]}], 
          ")"}], " ", "\[Pi]"}], 
        RowBox[{"12", " ", "h"}]]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"9", " ", "h"}], "+", 
        RowBox[{"36", " ", "h", " ", "n"}], "+", 
        RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}]]}], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "n", " ", 
         "\[Pi]"}]}]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "h"}]], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", "n"}], "-", 
          FractionBox[
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
           RowBox[{"3", " ", "h"}]]}]]}], "]"}]}], "-", 
     RowBox[{"3", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "n", " ", 
         "\[Pi]"}]}]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "h"}]], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", "n"}], "-", 
          FractionBox[
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
           RowBox[{"3", " ", "h"}]]}]]}], "]"}]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "n", " ", 
         "\[Pi]"}]}]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "h"}]], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", "n"}], "+", 
          FractionBox[
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
           RowBox[{"3", " ", "h"}]]}]]}], "]"}]}], "+", 
     RowBox[{"3", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "n", " ", 
         "\[Pi]"}]}]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "h"}]], " ", 
      RowBox[{"Erf", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}]], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", "n"}], "+", 
          FractionBox[
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
           RowBox[{"3", " ", "h"}]]}]]}], "]"}]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7480449067867727`*^9, 3.748044918013728*^9}, 
   3.748044959670236*^9, 3.7480450669293327`*^9, 3.7480451233614197`*^9, 
   3.748045192362958*^9, {3.7480453214271812`*^9, 3.748045341865803*^9}, 
   3.74804539983524*^9, 3.7480456097125387`*^9, 3.748045652758189*^9, 
   3.748045726306218*^9, 3.748045894929823*^9, 3.748046145029262*^9, 
   3.7480462667086554`*^9, 3.748046609657023*^9, 3.7480469722766733`*^9, 
   3.7480490478375063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "4"]}], "-", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"]}]], " ", 
        SqrtBox[
         FractionBox["1", "h"]], " ", 
        SqrtBox[
         FractionBox["\[Pi]", "2"]], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "x"}], "+", 
                  RowBox[{"2", " ", "z", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], 
                    ")"}]}], "+", 
                  RowBox[{"h", " ", "\[Nu]"}]}], ")"}]}], 
               RowBox[{"2", " ", "h"}]]}]], " ", 
            SqrtBox[
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}]], "-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
                 RowBox[{"2", " ", "z"}], "+", 
                 RowBox[{
                 "2", " ", "\[ImaginaryI]", " ", "z", " ", "\[Lambda]"}], "-", 
                 RowBox[{"\[ImaginaryI]", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
              RowBox[{"2", " ", "h"}]]], " ", 
            SqrtBox[
             RowBox[{"x", "-", 
              RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]], "-", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "x"}], "+", 
                 RowBox[{"2", " ", "z", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "+", 
                 
                 RowBox[{"h", " ", "\[Nu]"}]}], ")"}]}], 
              RowBox[{"2", " ", "h"}]]], " ", 
            SqrtBox[
             RowBox[{"x", "-", 
              RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "x"}], "+", 
                  RowBox[{"2", " ", "z", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}]}], "-", 
                  RowBox[{"h", " ", "\[Nu]"}]}], ")"}]}], 
               RowBox[{"2", " ", "h"}]]}]], " ", 
            SqrtBox[
             RowBox[{"x", "+", 
              RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], 
           RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]],
             " ", 
            SqrtBox["h"], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"x", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], 
              SqrtBox["h"]], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]],
             " ", 
            SqrtBox["h"], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], 
              SqrtBox["h"]], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "+", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]],
             " ", 
            SqrtBox["h"], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"x", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
               SqrtBox[
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]]}], 
              SqrtBox["h"]], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], 
            RowBox[{"3", "/", "2"}]]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Pi]", " ", "x", " ", "\[Lambda]"}], "h"], "+", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Nu]"}], "2"]}]],
             " ", 
            SqrtBox["h"], " ", 
            RowBox[{"Erf", "[", 
             FractionBox[
              RowBox[{
               SqrtBox["\[Pi]"], " ", 
               SqrtBox[
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
               SqrtBox[
                RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}]]}], 
              SqrtBox["h"]], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "\[Lambda]"}], ")"}], 
            RowBox[{"3", "/", "2"}]]]}], ")"}]}], ")"}], "/.", 
      RowBox[{"x", "\[Rule]", " ", 
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox["\[Nu]", "2"], "+", 
          FractionBox["1", "4"]}], ")"}]}]}]}], "/.", 
     RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}], ")"}], "/.", 
   RowBox[{"\[Lambda]", "\[Rule]", " ", "0.1"}]}], "/.", 
  RowBox[{"z", "\[Rule]", 
   RowBox[{"100", " ", "h", " ", "\[Pi]"}]}]}]], "Input",
 CellChangeTimes->{{3.748049452750725*^9, 3.748049503495675*^9}, {
   3.748049543848949*^9, 3.7480496443263817`*^9}, {3.7480497187290287`*^9, 
   3.748049719047639*^9}, {3.7480497691237383`*^9, 3.748049769272938*^9}, 
   3.748049848499683*^9, 3.7480504419329147`*^9, {3.748050607903743*^9, 
   3.74805061283374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], "-", 
    FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.3141592653589793`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "4"], "+", "n"}], ")"}]}]], " ", 
  SqrtBox[
   FractionBox["1", "h"]], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.19801980198019803`"}], "+", 
       RowBox[{"1.9801980198019802`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"62.83185307179586`", "\[VeryThinSpace]", "+", 
             RowBox[{"628.3185307179587`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", "h"}], "-", 
          RowBox[{"2", " ", "h", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n"}], ")"}]}]}], ")"}], " ", 
        "\[Pi]"}], 
       RowBox[{"2", " ", "h"}]]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "4"], "+", "n"}], ")"}]}], "-", 
       RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.9801980198019802`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.19801980198019803`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"628.3185307179587`", "\[VeryThinSpace]", "+", 
             RowBox[{"62.83185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
           " ", "h"}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "h", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n"}], ")"}]}]}], ")"}], " ", 
        "\[Pi]"}], 
       RowBox[{"2", " ", "h"}]]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "4"], "+", "n"}], ")"}]}], "-", 
       RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
    "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.9801980198019802`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.19801980198019803`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"62.83185307179586`", "\[VeryThinSpace]", "-", 
              RowBox[{"628.3185307179587`", " ", "\[ImaginaryI]"}]}], ")"}], 
            " ", "h"}], "-", 
           RowBox[{"2", " ", "h", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "4"], "+", "n"}], ")"}]}]}], ")"}], " ", 
         "\[Pi]"}], 
        RowBox[{"2", " ", "h"}]]}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "4"], "+", "n"}], ")"}]}], "+", 
       RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.19801980198019803`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.9801980198019802`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"62.83185307179586`", "\[VeryThinSpace]", "+", 
              RowBox[{"628.3185307179587`", " ", "\[ImaginaryI]"}]}], ")"}], 
            " ", "h"}], "+", 
           RowBox[{"2", " ", "h", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "4"], "+", "n"}], ")"}]}]}], ")"}], " ", 
         "\[Pi]"}], 
        RowBox[{"2", " ", "h"}]]}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "4"], "+", "n"}], ")"}]}], "+", 
       RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
    "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5894823502918503`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.7985586362540761`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.3141592653589793`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "4"], "+", "n"}], ")"}]}]], " ", 
     SqrtBox["h"], " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.317463625197947`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.192288194339245`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n"}], ")"}]}], "-", 
          RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
       
       SqrtBox["h"]], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5894823502918503`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.7985586362540761`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.3141592653589793`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "4"], "+", "n"}], ")"}]}]], " ", 
     SqrtBox["h"], " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.317463625197947`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.192288194339245`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n"}], ")"}]}], "+", 
          RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
       
       SqrtBox["h"]], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5894823502918503`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.7985586362540761`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.3141592653589793`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "4"], "+", "n"}], ")"}]}]], " ", 
     SqrtBox["h"], " ", 
     RowBox[{"Erfi", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.192288194339245`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.317463625197947`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n"}], ")"}]}], "-", 
          RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
       
       SqrtBox["h"]], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5894823502918503`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.7985586362540761`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.3141592653589793`", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "4"], "+", "n"}], ")"}]}]], " ", 
     SqrtBox["h"], " ", 
     RowBox[{"Erfi", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.192288194339245`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.317463625197947`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "4"], "+", "n"}], ")"}]}], "+", 
          RowBox[{"100", " ", "\[ImaginaryI]", " ", "h", " ", "\[Pi]"}]}]]}], 
       
       SqrtBox["h"]], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.748049504904599*^9, {3.7480495589002132`*^9, 3.7480495737863827`*^9}, {
   3.7480496043743773`*^9, 3.7480496449489813`*^9}, 3.748049719776948*^9, 
   3.748049769776966*^9, 3.748049849112104*^9, 3.7480504427418528`*^9, 
   3.748050616352496*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Log10", "[", 
    RowBox[{"Abs", "[", "%176", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0.005", ",", "0.01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10", ",", "500"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748049650567833*^9, 3.7480497246463203`*^9}, {
  3.748049772946575*^9, 3.748049853337441*^9}, {3.748050445575892*^9, 
  3.7480504457833548`*^9}, {3.748050633471203*^9, 3.748050663227272*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
YOrP+Cx2wKwR87cqpv4WRxkJbV3MOVWY+ufUbbwvXIn525vObTasAkfizjvR
yuUb5kL7xijYs1IciKTBs8yn0uh5mcwtR1akPTHYusvhfjjmbwOari4sth2J
l8n4JjwWPReu+MtmrbQl2vebeeLuYP7GdjnuztK0IWLhzWt8czB/kwhf4sWS
tiY2eT+yP6Rh/vaIyQ+HR+WcPUz9yV9PmZdPRc9HmPr902Xv6lqhZ1Om/jfn
955V24P52x+m/jHKISV732L+doapX2L/190FxujZnql/+IE52yEf8zchpn6d
bzMNtqug54Kjd+VZ2m5klvS1SicL9Mw7c/IMVgGH5D42OSUZj/mb00V3RdY/
3zfJ6XbfhVswF7qy9JISK4VNdBy8N54LwfxN7CGvCmssmyS+PR0/rIaeXxec
WsPqcSEKXepG+uPQ895Ko/WsN85kU9u99ntDmL8ZMvnhu1E552WmftPjl+6O
bMf8bRxTf19FocCNCszf2Ez9W2d8mdPbj7lQOVP/Y+tIa4cV6HkiU38JK+dn
/DnM354y9b/sKpsxQQw9b2Pq14nwkZNPxvytlayUZKV7kdkSU/3Nr2EutPRx
hhRL0ItoFTwqHPmGudBh2y/SrBhPcq1tgdLc1ej5R6uODKvHg8RK/YxxbcT8
zSwocSrLw4N0e5YbZh3C/O3075fTWG/cyQ9u24zXoZi/8exQlmWZuRNZq0K7
M+7o2YnJD7+Myjm7mfrnzFYPfd6FuZAxU/+J6K62ccro+RhTv9Kxyav3u6Ln
Pqb+0HenOYcuYP62mqk/6eKYKlFJ9HySqX/mncMKxZsxfxve/m/9vrbaLkc6
XKln2c81wqw+P+L1cGiD5gz0HBU6VYTl40c2vyu1y7ZEz8+H/SawmnzJQP/i
qycuY/6mnnRNlLXOl4Se8NSXX/6fnFNcSIz1z/fW/qqxFVe5mAu1ZtlPYi3y
IY+KfyoYvMX8bemcM+KsIm/SLTg1ZEcN5m8ZTH4YMyrnVGXqv2o5z8fZBj3H
MfVn35V9qbEP87fXTP1LpOrL06sxf9Ng6o/X7uBrlkHPO5n6N3HaZnlvxfzt
PVN/aOLJK/4PXKnnhUz9AnvM/nCvYc7psGctD8sqmCx/65PLvxvzt1LJbF5W
dRBp2u6VPb4C8zfR3O9jWEuCyIqa19PzpqNnv7n6fKySQDK5c+zAuuL/5Jzl
+/hZSoFkuVSFcLQPepY1fifAOhxAmpYU3I9dhp6j6tTGscYHkIvRBj2289Hz
cyY/PDcq5/Rm6v+i377xwk3MhSqY+uv3/FqzqB9zIXGm/tn+714tmYee/Zn6
hWXT5AoSMH+rYup/O9ZaTb0W8zcZpv5j89oMbhzGnHMjU//g0x3lHrsx51x9
2HeI2xBK/soXizzrxVxo0FlsmJsWSua7NeqvV0LP+YpXh7nmoUTAoszEPhHz
N8t29ghXIJTI1eVZzJD6T855XvAv93YImbXxvubwU8zfzoWV/OVGhxArXuWi
nLOYvzkstuNyF4SQi+Zz7eWPYv4myuSH30flnOuZ+rM0hOLeqaDnYab+md/O
Fcx2Rs8FTP0b71Qo5Gdi/mbF1O9/42Pq8jeYv3GL/60/+amE2vrjLtRzIVN/
dmBqSLIv5px2TP3fVCLC79hjztnupzrAHRdGWmcea0ixR8+HNJ8PcKs2kgf1
lSfC92L+Zjyw+Rd3y0ZyT/+m/fPvmAv1Xp8xyF24keSemGNREvufnHPbo0Fu
7wZidbbokrkuel69YsNvbuEGkv9z/M3Tk9Dz4HiZP1zPDWSJZz6rmRc950H+
OSrn7Gbqn1N38v23ZMzfjjD1v4j65CB4D3MhE6b+tjHb1rbyoOcfTP0T9dLv
PC3A/O04U7/qIpd3RoGYc65i6n/17vzVMYsx5xxg6nec0+QrORtzzp1Lu3q4
upuIzN35cituYy6kPeZgL/dnOOn45fQ7tg9zodbqJT+458LJ72vD6xVs0fP+
5E8/uN7h5NNw8dbxXzEXWmK19ydXIZxcvvywcPMJzN/ap2j3cRvDSNRmi9TM
zZi/HWpu7OMeDCO9C+0OpvthzmnE5If6o3LOfUz9xul3RD4MYC60iKn/pZdC
8Ws19PyJqT+8okLh93PM31KY+qv3BnuJRjlTz3pM/Zd8U21El2LO+YWpX5jX
TF9bCHPOdKb++Clyqa6D9tSz8sTzHVzfSDLFObi5bxZ6rn9p08lVjCTl4+d+
D3NCz3FH/3Zy30WQ7Ks7GswqMX+by8nv4mZEkMVkWcKydf/JOVXWfOeujyA/
RO437B6Hnnd29n/nCkeQB5bJpVGtmL9pXzzezb23idTqa7YY1mP+1sLkhwmj
ck5Vpn6ewaxrt13Q8yum/jLz2Uu1Z7tSz/FM/S551fWDJzF/U2fqt30QuWjy
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Jze/Bw==
          "]], Polygon3DBox[CompressedData["
1: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
hT0Pa81hjfBW7EkdlsKjtVdlzWrtan6tV2kPy16WHrS9MT0aa4Mpjci9v69/
f1C9H/YcNkjRY7EXoWf0YArPUi9JT+f2FJ6SXo8e1A0pPBK9KffUifX5udcu
KpH7mTOaO15cIlaYE5obXuJrGhFDjCUP8Ddbwx/BB8Bv+Nzg/5mzwvdz/faN
WKOu1ftKrFXXsGvZmLgWvHCOWHlviVjpd/K75cq9c8TmS0usXde0a/vyEnvb
GGYsu6JELuued+8Pa4ZeTk2hf7s1Q7+eSRGfLiyRG5sTmxvv3Ay9fjxFfDu/
RG5tzmvuO7QZ8eOpFPnUZSVip3vKvXVBidzanNzc/IESuYRrwLVwT4ln5Zp2
bd9WohZwz7n31HxrQ3NuY4Gab+2oBhgL1NhJdT2ovWqwteJjjdBmPUu9HGOi
sdH8Qi/FGmqPZsQMa0XXqLHEGKX3oQdi7DJm2PtS44wlavLkup7UajXG2Nq9
as/4ErFQTVVbby+hdWqEWjGuhFZY81j73Fli7bqG3Ut3+DcboZFq5V0l9pJ7
2r19d4n14R5zr00o8feNwcbiifCGjYj5xv4ZxkXXB8dz1NZmxM+nU8Qzh+eu
AWPd8GbEr2kp4veN/F+/RtSw1rLflvju3gP34vclakvXh379RyX83YtT+Mnf
lKgVJ6bwH7+Dn2jEnnRvflViL5qzm7t/Dd/TiD3qXv0MvtH4ncI/nlHCn70q
hb/8SQn/02fss55Von+g36P/uVMz9G5Kinxnaona0prU2vT5Etqi5qq9z5XQ
XjVJbbLGtbY9JUft+2wJrVID1cJnSsQ2Y5ixbFoJbTTmGfs+LOFHX5TCT38a
PrIRNa617qcl/NwrU/jnX5aoXaxBrEU+LlF7X5LCr7++hDegx6DXMLaE9hsD
9CauLuElWANaC15VIlcxZ7E2vaVErWlNam16U4lYb8y3try1xHqxJrU2vaGE
d6EnoTdxc4la1prS2vK6El6HHoRexDUlvA09Db2NMSX0Tw9DL+OLej/VXLV3
x/r9DsvhJegxWJvskcN7mFlCm63hrOU+L1HL6b/q908uEYvNGcwdri3hleix
6LVMzaHP35pjwJOY37sROYW5xegStbA1v7W/OdhJNV6bm6mJaqN7wlxezVQ7
3UPmknreet96gN1L9CStL8y5zL30BIfW/KVniZ6uvd2h/s0SHqt680rVE3tk
1puj69/3O/pdzZHNle1R2qu0h9G2RA9ivZoPaPTZA/K7+R0XLdHT2rXmK+ZX
9mz9bYE9G3u59njt9VoP2Uu2pzykxucFS2i62m7MsHbW89X73R3uXGLPu/eN
Eeb29rj9rYQ9H3vf9gjsFdgj6FrCY1b7jQH6DH/VfMYYYD5gj8rerD0ye1f2
SIyNxkjzP3/z4m9f/M3KPCV6fMYKY8YXtWY5s95/axl7Sv7WRn/GXpMapBap
EfZG/usBpuiJ2hu0R2tsM8bp39gjsnduz83ekT1fe7/21NqU6AnbG7bHM3eJ
Ho+/FbBnae/HHpy/LbFnaW/Onou/pbEHai/Gnou9eHug9mLs8djrt4dk70cN
U8vMyczNNGf9bYH5rr0ie9T2qu35zVviNwX+FsUenL81sCfqb2H0i+yV6uHr
5Q93j5TQxCn1+VkbqlFqlX6HvUA1Vq1Vo+ztqcFqsRpsb08PTO/dHFNvTI9K
L92cUe9Kj1Kv3hxT71INU8uMEfYi1Ty1Tw23l2gOaq/Emtbc1JxzbF3/5qLm
pO6HcfV+WHPo1ZsjW4tYU06oz9f1aM5sr8ia2VzaHMb1asyydjcnttdkTW+u
bMwydqnZ9kbNWfXGrdHNZfXs7B1YY+nl2d+YwflnjJ9KeBZ6FzMZv6hljG8a
UQObT5gTzp5Ck8wV9ePG5XgP30uN6pxCM6dWT8DfCoxphFdgTTe63i9rPT1n
Y4Uxw3zYGL9KihxhRs3xx9f1Y+5vTetvZYyJ1rrG+GlVf6zdran06vUorLWs
ie196EFaK5vD9ksRI8xtJ1iDNMIT+LGEp2GvbWwjvI7/AxKezQA=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt2HfcjXUfB/DjnPuQmRAqpKzMlJm9yc4uq8yGkayGURml0FChgZLW03oe
iTJLSFnJDKW993oK6f19Xf74vH6/7/v63ee+Xdf1G8d5g0Z3G5VOpVJHJSsv
Z1Kp/KBarlSqjvoz/ZdYPm1VVpt9qr+cFdXWZo3Yt/r/ZWdoL2YN2Nf6L7K8
2iqsFvtEv3dOKrVA+zbbyaYY048tZjvZfjaD9WEL2Va2i01ll7NH2Ta2h93O
rmCPse1sL5vG/idFWC3WkH2j/wo7S9uAtWS/6Pf3s0u0u9gBNtOYFXI2a8ha
sV/1exk3X7uF7WCTjVks36lzpDjb5Hpf4xZpd7B9bLoxJaS4VHKtvmuLtE+q
fzOmmJQ2bhtvySdrX2Ar2FBjWrEpcR/Zq2wIu5TNZK+ytWwEa8omsKfYMtmm
bi93sJXqdcaNNK4JG8MeZ8+yPqwFu4k9y15mA1kt1ofdye6Q19W15XI2S32v
cU2Na85uZM+wl9gA1oxNZE+zF1l/dk7cU6nsWkPXntC2lqnxfhm30rhhrrdl
t8W7xF5jV7P6bDibzx6St9QN5Bq2UL3EuC7GXcKuZgvYYtaZNWTxgi9iT7Fe
rB2bwVawV2S3upGMZovVTxvX07g6bCC7h81nbVkbdit7ma1iw1ljdj1bwp5h
vVk9dhW7jy1k7VhddiW7ly1gbVhpKSVV4m9wban2XHUZqarfmD2pPU9dVqrp
N2HLtC+oc/Qr+LzqPu9wPEN2PN4pqcj2sv+wtLYcq8o+0H+eZbTlWTV2SP85
lkt7PqvCDsZzZcfUpaQC2xPvGPtLfbaUY7vjfWI/qwuFs63xjNkv6sJyDnsn
/n3sV3WR+Ez2brwn7O8YI+XZ+6yjf98s7WtsAxttTE12KbuJ3RjvlvpCac7G
qG8yrnKsQVJYyrtWx7VHtD3lIf3Nxm03bpLrS2LNkQvifYp/g/Z0XkjKxfvO
HtYWjbVEKujXZY9qz1QXk4r69dhj2nLq86W6ftO4T9oOcqf+Kr93vd87yvVl
8nusGVKGbY8107jLtLexWaxe/L74N0gN15rFfdJeJF31bzXuTuPqu96DPcg2
xbxnt7D/y8fqfJJXRhnTWeYYt1a9ybixxuyUDmwEG8cuVh+K9ZhNZjNYS/X2
mJvsajaGXajeIe3ZdWwsu0i9R7qxsWwSa6B+TzqxUWwCq60+GOs2u4VNY83V
u6QjG8nGs1rq3dKZjWYTWR31F3IDm8ceZVeoP5MRbA57kHVXfy4j2dxYN1gP
9REZwKbGusZaqw9LfzaFzWSt1O9LF3Z9vGusrvoD6csmsemshXqvdGfj2GTW
UH1AerGJ7FbWJOaVe39SfaHUZftcT7OUtiarp7s/NmL2j7pGzOn4PVH7+T/1
K8XPG7LDuJPxjNUXSE22i51gf8S8j59nO9kx9qP63HjX5Gafd5z9pF82PtO4
LenkfTmqziOnyUHj9rOerk1QTzWusXpfvG9sPJvCGqm/knHsQbaI9VO/kUnm
VN5ssu7H+r8y5kfsc8Z1MO7v2MPYedoWrD37S3+dFNJ/LtYuGepv+dK4sfoP
GPeYa33V22I9ZsPZ9ayG+lO5js1mD7Bu6jczyZ6TL5ustbHmbsgke/FprKT+
WbIxk6zB+bPJ+hvr8LpMMudzZ5P5HvN+fSaZ83myyb4e+/sPclf8vX7vcr93
TNx3uTvW2thn2A3q72VarOnsBXad+ju5PdZG9jy7NpOca+J880j8vAxzD35m
D+uvNm6ja7ep35FWcY9ijrNq8WzlfracrWE3q7+RW2LtYk+yQepvZVKsXXFm
YIPVX8vNsWaypeyqWJvjGatLxjvD1rv+NmuhHcxGsCrqzZlk3SuUTdatWL+O
yhA2w7i5xnWMdUmGspnsHtZJ/ZEMZtPZHNZB/Ylcy+5m89hl6g9lEJvGZrP2
6nelddwjNppVV2+VlmwIG8mqql+Ti1g3dgXLq35dLo656G/Op59f3sok+26B
bLLnxt67KZPsuwWzyRofa/2WTLIun84q6leStZlkz8lmkz0j9o41mWQvyckm
+1LsT6ulFstkk/0m9p1VUpm19/d1j6Uh1iDPfW7MCbaZjY+1QA6q/1YXjnOs
urhx5Y3rwfuxY/r3x9qmPnnqbL8izh6xjrFjat3UcjbIzz6l3cePsLvjWbCn
2X72IZsdz5E9ww6wj9gcdp8cUp9Ilq7UK7EOxPNk2VhL2KqYt/Hs1JlYY9jK
dHKv456fn5Pci4Vx3pIn9DfGOU+axz1j57BG6sbyc05yhpueTs66ceatbFwe
ViCdrJuxfn6lLujzC8QzzEme8wLtPPUR13NJbn/Lq/yheN/U+WPPZK+zJTFf
Y4yUYJtjrsRcUqekmGYju8xn3qvdwN5mE43pxu5jb7Ct7EbWld3D1rMtbAIb
wB5n78Way+5gndhstibuARvHurMH0sk9iXuz79S9WsreV++WA3G+jO8WbI/6
kJ+d5WevYsvYXnaY3cUWxfxXp+VM9lasDTH/1f+oi8qb6eT3zksn5+Q4L9d2
n+fHOqtfMO6Xcavj2bHP1WeEs7VxdmJfqIvmStbzWNcXsM/Up0sBtiadfNfo
nU7OdHG2K5ZNXqYTp/as2Ls+zkm+44xPJ98B4rtAWePOjTMgG6ge5sdy+/yy
rCa7kg1neVgZVoMNYENjPsSexKqyvrEexBlBXUqqsX7qwTFHTo2rwjqwjnI8
J9lXf8iVnK3ijHWYnR1nSeP6qK9MJROsJKvIerEB6B/9EqyCtifrz07onxnn
x7jfrC87rl+aVdf2Z0PilsQ+xSqx3mwgO6lfNL4zaLuwXuwP/WKsrLYr683+
1C/Cymg7s57sd/2/fOaX8X7HfWYb2BnGldZ2Yj3Yb+lkbhVMJ/Mv5uHsmGtx
Dmat1Z2M+y7mNCumbRX3in2fTs7t7bTXsGvjHckm3+mGpZPvlvEd86xscg6/
JJ08i3gmcXYoyIqzNurOPu+HWG9ZSW071pX9FHsOK6Fty7qwH2O/Z4W1zVhb
9mXs4+w0bX3WjB2NNZhltXVifWEfppM1p1Q6ed7x3O9X50huVlfdxLgjcX5g
hbRNWGv2uX7e+B6hbcrasC9iP2B5tPVYU/aR/vD4Dqd9MZ38/8tcz+Jf0TX9
Tw==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrhWEcwPGX485xSVaykIFRBkYZmCQDGxkYKBkYDWKz8RewktgVm/v9
fkuS2+J+jc9Thu/7+b2dp87v6Zzitp7G7oQoiob0qjA/6lIziVGUy3kWcY0V
PGUNH9jAb7YyKxZFcXWZyzjAKo6wjuNs5iQ7OMc+LvKF13zXlp51ryULbXOZ
O1zhLle5F3biPtd5wA0ecpNbOjJv85g7POEuT7nHM+7znFPuccMPXYSdwh01
ardNDnKBvZxlOyfYxDHWcpiV7GcpS9RpTmcLP31HPe9YzWOWh3uxkE/OXfFN
OeE9nFWBHbOZzzjzmBXOMJNxZjCT6UxjqtLMyWFmjCnhN2Yyf5Wkn/CZvmSN
aNrj9v//8AfXm0sB
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1010, 1015, 1352, 689, 1128, 912, 691, 1129, 913, 692, 
       1130, 914, 693, 1131, 915, 694, 1132, 916, 695, 1133, 917, 696, 1134, 
       1016, 1241, 697, 1135, 918, 698, 1136, 919, 699, 1137, 920, 700, 1138, 
       921, 701, 1139, 922, 702, 1125, 1140, 923, 1011}], 
      Line3DBox[{704, 1017, 1242, 703, 1018, 1243, 705, 1141, 924, 706, 1142, 
       925, 707, 1143, 926, 708, 1144, 927, 709, 1145, 928, 710, 1146, 1019, 
       1244, 711, 1020, 1245, 712, 1147, 929, 713, 1148, 930, 714, 1149, 931, 
       715, 1150, 932, 716, 1151, 933, 717}], 
      Line3DBox[{719, 1021, 1246, 718, 1022, 1247, 720, 1023, 1248, 721, 1152,
        934, 722, 1153, 935, 723, 1154, 936, 724, 1155, 937, 725, 1156, 1024, 
       1249, 726, 1025, 1250, 727, 1026, 1251, 728, 1157, 938, 729, 1158, 939,
        730, 1159, 940, 731, 1160, 941, 732}], 
      Line3DBox[{734, 1027, 1252, 733, 1028, 1253, 735, 1029, 1254, 736, 1030,
        1255, 737, 1161, 942, 738, 1162, 943, 739, 1163, 944, 740, 1164, 1031,
        1256, 741, 1032, 1257, 742, 1033, 1258, 743, 1034, 1259, 744, 1165, 
       945, 745, 1166, 946, 746, 1167, 947, 747}], 
      Line3DBox[{749, 1035, 1260, 748, 1036, 1261, 750, 1037, 1262, 751, 1038,
        1263, 752, 1039, 1264, 753, 1168, 948, 754, 1169, 949, 755, 1170, 
       1040, 1265, 756, 1041, 1266, 757, 1042, 1267, 758, 1043, 1268, 759, 
       1044, 1269, 760, 1171, 950, 761, 1172, 951, 762}], 
      Line3DBox[{764, 1045, 1270, 763, 1046, 1271, 765, 1047, 1272, 766, 1048,
        1273, 767, 1049, 1274, 768, 1050, 1275, 769, 1173, 952, 770, 1174, 
       1051, 1276, 771, 1052, 1277, 772, 1053, 1278, 773, 1054, 1279, 774, 
       1055, 1280, 775, 1056, 1281, 776, 1175, 953, 777}], 
      Line3DBox[{781, 1176, 954, 779, 1177, 955, 783, 1178, 956, 785, 1179, 
       957, 787, 1180, 958, 789, 1181, 959, 791, 1182, 960, 793, 1184, 1185, 
       961, 795, 1186, 962, 797, 1187, 963, 799, 1188, 964, 801, 1189, 965, 
       803, 1190, 966, 805, 1191, 967, 807}], 
      Line3DBox[{806, 1295, 1070, 804, 1294, 1069, 802, 1293, 1068, 800, 1292,
        1067, 798, 1291, 1066, 796, 1290, 1065, 794, 1289, 1064, 1183, 792, 
       1288, 1063, 790, 1287, 1062, 788, 1286, 1061, 786, 1285, 1060, 784, 
       1284, 1059, 782, 1283, 1058, 778, 1282, 1057, 780}], 
      Line3DBox[{809, 1071, 1296, 808, 1192, 968, 810, 1193, 969, 811, 1194, 
       970, 812, 1195, 971, 813, 1196, 972, 814, 1197, 973, 815, 1198, 1072, 
       1297, 816, 1199, 974, 817, 1200, 975, 818, 1201, 976, 819, 1202, 977, 
       820, 1203, 978, 821, 1204, 979, 822}], 
      Line3DBox[{824, 1073, 1298, 823, 1074, 1299, 825, 1205, 980, 826, 1206, 
       981, 827, 1207, 982, 828, 1208, 983, 829, 1209, 984, 830, 1210, 1075, 
       1300, 831, 1076, 1301, 832, 1211, 985, 833, 1212, 986, 834, 1213, 987, 
       835, 1214, 988, 836, 1215, 989, 837}], 
      Line3DBox[{839, 1077, 1302, 838, 1078, 1303, 840, 1079, 1304, 841, 1216,
        990, 842, 1217, 991, 843, 1218, 992, 844, 1219, 993, 845, 1220, 1080, 
       1305, 846, 1081, 1306, 847, 1082, 1307, 848, 1221, 994, 849, 1222, 995,
        850, 1223, 996, 851, 1224, 997, 852}], 
      Line3DBox[{854, 1083, 1308, 853, 1084, 1309, 855, 1085, 1310, 856, 1086,
        1311, 857, 1225, 998, 858, 1226, 999, 859, 1227, 1000, 860, 1228, 
       1087, 1312, 861, 1088, 1313, 862, 1089, 1314, 863, 1090, 1315, 864, 
       1229, 1001, 865, 1230, 1002, 866, 1231, 1003, 867}], 
      Line3DBox[{869, 1091, 1316, 868, 1092, 1317, 870, 1093, 1318, 871, 1094,
        1319, 872, 1095, 1320, 873, 1232, 1004, 874, 1233, 1005, 875, 1234, 
       1096, 1321, 876, 1097, 1322, 877, 1098, 1323, 878, 1099, 1324, 879, 
       1100, 1325, 880, 1235, 1006, 881, 1236, 1007, 882}], 
      Line3DBox[{884, 1101, 1326, 883, 1102, 1327, 885, 1103, 1328, 886, 1104,
        1329, 887, 1105, 1330, 888, 1106, 1331, 889, 1237, 1008, 890, 1238, 
       1107, 1332, 891, 1108, 1333, 892, 1109, 1334, 893, 1110, 1335, 894, 
       1111, 1336, 895, 1112, 1337, 896, 1239, 1009, 897}], 
      Line3DBox[{911, 1014, 1351, 1127, 910, 1350, 1124, 909, 1349, 1123, 908,
        1348, 1122, 907, 1347, 1121, 906, 1346, 1120, 905, 1345, 1119, 1240, 
       904, 1344, 1118, 903, 1343, 1117, 902, 1342, 1116, 901, 1341, 1115, 
       900, 1340, 1114, 899, 1339, 1113, 898, 1126, 1338, 1012, 1013}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1128, 252, 1243, 488, 280, 1247, 503, 295, 1253, 
       518, 310, 1261, 533, 325, 1271, 548, 340, 1283, 563, 1177, 355, 578, 
       1192, 370, 1299, 593, 385, 1303, 608, 400, 1309, 623, 415, 1317, 638, 
       430, 1327, 653, 445, 1339, 668, 460}], 
      Line3DBox[{253, 475, 1129, 254, 489, 1141, 281, 1248, 504, 296, 1254, 
       519, 311, 1262, 534, 326, 1272, 549, 341, 1284, 564, 1178, 356, 579, 
       1193, 371, 594, 1205, 386, 1304, 609, 401, 1310, 624, 416, 1318, 639, 
       431, 1328, 654, 446, 1340, 669, 461}], 
      Line3DBox[{255, 476, 1130, 256, 490, 1142, 282, 505, 1152, 297, 1255, 
       520, 312, 1263, 535, 327, 1273, 550, 342, 1285, 565, 1179, 357, 580, 
       1194, 372, 595, 1206, 387, 610, 1216, 402, 1311, 625, 417, 1319, 640, 
       432, 1329, 655, 447, 1341, 670, 462}], 
      Line3DBox[{257, 477, 1131, 258, 491, 1143, 283, 506, 1153, 298, 521, 
       1161, 313, 1264, 536, 328, 1274, 551, 343, 1286, 566, 1180, 358, 581, 
       1195, 373, 596, 1207, 388, 611, 1217, 403, 626, 1225, 418, 1320, 641, 
       433, 1330, 656, 448, 1342, 671, 463}], 
      Line3DBox[{259, 478, 1132, 260, 492, 1144, 284, 507, 1154, 299, 522, 
       1162, 314, 537, 1168, 329, 1275, 552, 344, 1287, 567, 1181, 359, 582, 
       1196, 374, 597, 1208, 389, 612, 1218, 404, 627, 1226, 419, 642, 1232, 
       434, 1331, 657, 449, 1343, 672, 464}], 
      Line3DBox[{261, 479, 1133, 262, 493, 1145, 285, 508, 1155, 300, 523, 
       1163, 315, 538, 1169, 330, 553, 1173, 345, 1288, 568, 1182, 360, 583, 
       1197, 375, 598, 1209, 390, 613, 1219, 405, 628, 1227, 420, 643, 1233, 
       435, 658, 1237, 450, 1344, 673, 465}], 
      Line3DBox[{263, 480, 1134, 265, 494, 1146, 286, 509, 1156, 301, 524, 
       1164, 316, 539, 1170, 331, 554, 1174, 346, 569, 1183, 1184, 361, 584, 
       1198, 376, 599, 1210, 391, 614, 1220, 406, 629, 1228, 421, 644, 1234, 
       436, 659, 1238, 451, 674, 1240, 466}], 
      Line3DBox[{267, 482, 1135, 268, 1245, 496, 288, 1250, 511, 303, 1257, 
       526, 318, 1266, 541, 333, 1277, 556, 348, 1290, 571, 1186, 363, 586, 
       1199, 378, 1301, 601, 393, 1306, 616, 408, 1313, 631, 423, 1322, 646, 
       438, 1333, 661, 453, 1346, 676, 468}], 
      Line3DBox[{269, 483, 1136, 270, 497, 1147, 289, 1251, 512, 304, 1258, 
       527, 319, 1267, 542, 334, 1278, 557, 349, 1291, 572, 1187, 364, 587, 
       1200, 379, 602, 1211, 394, 1307, 617, 409, 1314, 632, 424, 1323, 647, 
       439, 1334, 662, 454, 1347, 677, 469}], 
      Line3DBox[{271, 484, 1137, 272, 498, 1148, 290, 513, 1157, 305, 1259, 
       528, 320, 1268, 543, 335, 1279, 558, 350, 1292, 573, 1188, 365, 588, 
       1201, 380, 603, 1212, 395, 618, 1221, 410, 1315, 633, 425, 1324, 648, 
       440, 1335, 663, 455, 1348, 678, 470}], 
      Line3DBox[{273, 485, 1138, 274, 499, 1149, 291, 514, 1158, 306, 529, 
       1165, 321, 1269, 544, 336, 1280, 559, 351, 1293, 574, 1189, 366, 589, 
       1202, 381, 604, 1213, 396, 619, 1222, 411, 634, 1229, 426, 1325, 649, 
       441, 1336, 664, 456, 1349, 679, 471}], 
      Line3DBox[{275, 486, 1139, 276, 500, 1150, 292, 515, 1159, 307, 530, 
       1166, 322, 545, 1171, 337, 1281, 560, 352, 1294, 575, 1190, 367, 590, 
       1203, 382, 605, 1214, 397, 620, 1223, 412, 635, 1230, 427, 650, 1235, 
       442, 1337, 665, 457, 1350, 680, 472}], 
      Line3DBox[{277, 682, 683, 1140, 278, 501, 1151, 293, 516, 1160, 308, 
       531, 1167, 323, 546, 1172, 338, 561, 1175, 353, 1295, 576, 1191, 368, 
       591, 1204, 383, 606, 1215, 398, 621, 1224, 413, 636, 1231, 428, 651, 
       1236, 443, 666, 1239, 458, 1351, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1338, 444, 652, 1326, 429, 637, 1316, 414, 
       622, 1308, 399, 607, 1302, 384, 592, 1298, 369, 577, 1296, 354, 1176, 
       562, 1282, 339, 547, 1270, 324, 532, 1260, 309, 517, 1252, 294, 502, 
       1246, 279, 487, 1242, 250, 473, 1352, 681, 688}], 
      Line3DBox[{467, 675, 1345, 452, 660, 1332, 437, 645, 1321, 422, 630, 
       1312, 407, 615, 1305, 392, 600, 1300, 377, 585, 1297, 362, 1185, 570, 
       1289, 347, 555, 1276, 332, 540, 1265, 317, 525, 1256, 302, 510, 1249, 
       287, 495, 1244, 266, 481, 1241, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
2hByfQJ8nEf0t7yHbzwaPrVSnQEu/GsLafCGENFz9N+E1MfPxM1/Wtr3RKn9
b52zz8qNzOcDQ4Y/1g9Tx12iJXfv4IZqeeTehJ5pcO8b/zCQNq7T1izngz45
oZgfz2B1LXslISRx73Ou8TNeaLWXvP8aWVE4yLWRC5XtzBRiezBgpdusznl3
a2XXje+Ufs6QpuoTJiz+QOqvpO/+fXv1LydarTK33zVMCBpcFcI8d5xVvGbQ
pwAXpW/ZEbdSHPr9Jvngs6ies5uTfoAhzx36Rh0zcdoNor8dvXNimGvHMLUr
djPfbUs2UC+3w7gxF69z8UJepAV6l8w3HQKFsaTezy1LB8XU8yPJL43cWY9G
QAI/0W3Oi1RvLnbiREJrW5vrkybAXRrZ/6e/Im590RbK6Nc8N/0yGlyGlmPc
om2ZD/ccOrzaqN1Yp/dfnVPl/+ic5XTyHau1Phx4U8+iAhwO0yLduGE+JDqV
eGG158tdI0BS5qPxpXo+WH+U1EtTQnEHw38LopR19/IrCnnhja3TGHfzC4dS
oxxoUUijgGogA1pYEJ6Nth08aRz1idpkpFPY9JYJi+58wvZdWzsvlYZzoJT+
2/v3pwrBrBOV+BxZpSr2bOrrXDjQfvpsm4k4FNElPF+o2Kb30vMXUE9Ztxuy
Z/KRQKK/vVEfeRpxe4j6xJjO1dvDBhdUSJ7Y8+CvVeM5HmTgZDcUv28IpNQS
vatWvsfQWpEfua3Zonnowwi48eYMxk2Puq9Vr+JADyY952m8mQBbHxGe3QVr
Npy+20RFSimOcf+iQRkWqYON5MlWejVBh1EHrszx2/S/dc53Z4le/eqR27LY
1wOUZm3pKe/z3LBPm9TbW97N+7zs3CjIFRP8saiLD/qmZpD1Dl+gsk8CaOLg
kUc3a3nhi5ckjgphtobFNtPQkpCN2ovuMqBdL9mfV+x2MI2Tz6GsKzovbili
wi/8pdhP0O/DF6s8acjeIdr0+DsheLg3EfOss7Rnjl+oIvwcOKmzyFoczn1E
9uctg0u38nR+BKnuq84UvGSBx4uI/sb8E5txc5hNiXAuXNvnwgZV88h9hNvv
UuXFfdzI84H/OVvfIRDkTHTyHp0LK/P8+FDes7LPaTUj4MEtcu/Px7G4XO4A
B2qRqHC2Lp4A3ZpEf7PLOhJ3zraRMtq+U7G+lgY3JpFxPbDOC2QVc8P9VmJH
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
LMoDdgV9Iq43WR4gKDEgAI5YOTgX7aCC0x1IJ8HB9bGii0LwMsY8284WAqxj
6L7bFlgEf9eiwOI0k9mRbiIgKSeBaJe7vjJBraUf028LiMjuEgM/k9D43PJl
Jp/72Y0bXp1vtvYdBSweGiOuL1wqJ8dcxwBg4/LWuvG/8X0o0qMeTcS+WXWS
Dr+Y1ew8/zfus2YibjNuTiwYNWOAU3ZCVY1L2aCPo4/i6FvLjytw+IBK3ILP
cvv4QbjJemI8sZUs3ivH2eDLl/GmP6Fs8I/OcORffPZ6/sVnr+xffPbyyHi/
nIz3/4nrmXv/Z589azJ+9yLj93/idEjG6VvJOP2fePwNGY+7TfPZsyfjbvo0
n73XZHzNN81nL52Mo22m+ezxkPHy3Gk+e3fIuDhhms+e87T4t3wYrW9xa/z7
3CsmcK7bXKXtolxssdwfNK+E+s9azBWBKYpdzz60cTG2JPLFSvF9kFJKEYKv
vFLfPbg0hO3QQPFUn3ZqLGdoGO/OescbJT6BxYejc2+9R9ETsZIWLOfVjJYX
N3lBctll4jk9ruR/fB6iDGyerK8yX8EE+qPIx1jvGiZieG4cS/pRl5rixARe
iqj+unth/IXiTQowE0StdZlHA+Au0scMXcfj40e42FDoE5eD/ixAv+tFzJ9k
8L3h8D1JeIP6gDbRLggOCOsS/QSL3llZpyALAhSOxb4NZ4MR4efE711dHiMt
Zd+IazxMOy38RQz8Oofqoyt8RNfB94KwpuRxddoEF+vVRL67iSV7jOUDBaHl
SR+/iGVD2MRl5EP14+Zv64igMVyw5NdT9UPjWI4yOuccL3UNepP0CfMqsY2q
sOQFY18MifXkrs5v4a2bZwJFH/m4o9kMMBgVSjy/ftGLHiN7KZjxsX/un04a
2J6NfHT/iKk10/bkYhOJZba39ggBA0U9xD/AtyP7lUXhzYuNqtpeQkD3lhPR
j8/SvVhiHRsU1ylbd/f8PVebovpT+gksZGnXT2wFflB8hiwbmL5BedLdDh7v
TksLwlAzb+WktkEscf9ZpMu9NttwkzOBO+KavEoNY9gXQ8RBAe0CtYDFL7GY
92vDw7p5wNeWCeJ3xfTHRmulK4AVwhKtwbwMgL9BfhcKduu3qpf14hwX//It
uwSBzAy0r2FuQg4tGVQ41K9atLBRCAxTUF1n2PuxW+lPGYAnYL5M63oxIOPv
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
rm3bbWQ6IuZB87w1NmvseIBmRGjLnuRvQNdavKjl/DfAU2W4NyLlLihapkr0
o+Ou1EjhE4MqiY/TFrsJgmADXuJ8Ljb/5f2HimrQr+aKkLKiANB8j74/olT4
baF5LxOs6NzSoDEoBqoL5JBv3m6Ze7ELlOAeSX5pf7c+zDUX1Ytx74HzJpfF
YXJ7pqD6zSHs8QG0z3r0Cakejx7DTUa/0vfKUYDTK5Tv/nY9ZLxL+Qd22vGz
xDE9vknO0ILkDAtIzpBZ0EOM86ocHdN9Z9Wg7j7ehA9tVGD8HeldjsJiUqua
6HCzw+fIKnkh8LCynXhf+YHv8wcsFaBbofx5tVxBEJ6XSfQvFunW16ItCqD+
6iarBWywQr+A6Kd53SZ/5XhR2Ldr1DY+aBg7dwTpPHW3qgWkZIZwBlP+ToQJ
BdjFo/V5zFdSReBNN2alKKh4azPfJL/Xmoj4vU8kv6frj+pommstVSSe8cC8
F4MmgheEQMAsReL6y8b3KGIy0rAnf20l+5oQoJ9dRbSPXlnCpnaygVr8hGOY
FxuUR14n7ksVPZMrc4OLq14IW0vZSgG7rE8T7UPSbR4nezhYVr9a8v3TfJOc
2/e3iHP7THJuFsbPif4/xdWbGSqLw4AS86sdc1lgdVIbcf3BrsyzvxdJgo1D
ddotl9jgy6kAov+bdXdqshIHsb1QPFT1Nt8k36VF8l1SJN/Vk4a4QQk561q/
udLgsIJgR+ijKT+0t/9Hfmgx/+KHZvwvfmg2/0s/tH84paefEaeUOY1T+jef
tP5/8UkTmeaTVk/6pBWTPmk103zSzv+LT5rWNJ80J9InzZz0SZv5//FJk6pE
54EPnzfPqW0fwZ8qC8wWHeNgLyZQvFNs/ctz11ZB+OtkWlXJPS5mbj2AdLbd
RwNklgnDToU4/zDGIKadh3SGhsx4IG5NhY0PnvkfWzKKbSxEPuH1ta7ba81/
4ql+1rdjsyjg1Sl0fYqU+865NAqQiEpIhb+nOJ99JOezkuR8pI+ifN+R7pPe
cmU9GHXAZrtGMgPo96F6YcVTgO3UKAalTR9cT1tNB14yaD+t39v1WHWIDld3
ttfIyggA5gslop/MQM6v3nvteHG2Pbx8gAWoG1He52XMRynHQDocX7RnY8ky
YVDRlEiMm6X3qcW252YAWd3VbXeY4sARoni2dujIj180Aegi/tDZo5GLnVdC
5xxlh4l1ZvVCMFq0d1HskkGsoAnV38WLuElrb+GHEmJ5X5+5jGJzLZGPWaZ3
Upv6yA+cvqPovt1TCggk69rEOKvS7xrwgDXe7++M8vFP8jlSJJ9TTfI5W+w2
o/yvw5Wx9GeisOeMg8upA3Tglop8PjWDlWfJz6RByaONwTZGAn/nLzrnDNS2
+RkmNeH+Fn04I5wFkkvR/otFClfsiqLCV18TRBZtEQbFv7ag+tO3UaKzr8iD
FGzedhkFcfDoNqoXVj48wJnxRBA2svay920dxLbqo3gz0TGBHRTHB0vWzim1
OjyKyRxC566gHSyjldTvePPG1DcBhRSQ44x0No3it3aNlrzAs30MLpbhn+Rk
EiDiZJ6RnExXGuKW46xGCnqv8MOtm0p8Wu0EQIo+Om8LX9iVf665Fl/zybT5
8HUWSH2I6nCFNs43uDzMBwUO+Lj9Oi4M3AM1id+16Iz6uyXHFIDcrPqNetri
IE4N+U8eCZPZV87hhUMx1BjXS6PYmCvSUd1+Hrpta9eO5x38LryuhAKS7BDf
vnb2KUdtCz6Qk2za+VCTf5I/GbyF+JMGkj9p8UXPGXjdZcP6yo+4SXZgXGMW
Cxx2RPyqoNtr+YEEXmi9vLJVKVYYuFEHiXVm5PKRP6mWiuDHmas0+2XiwEwa
/X/divVC5zW34uV162zlKihg4UOUV1pxqGDotC4/mPVsr/7dJfyTnIYoyWlE
kJxGajTKi53cn2D6ex8PnHNSKfR5hjB4zy0m7suX7uIcyKcEcg1VSipXi4PB
I+T3FDppI9voVDBz4XiaqSX/JJ/gR/IJaiSfEFJ1nejHwfzrE/XbSmCuSc/9
73bik/n3GWT+naOP8u//6KI3SP+cr6QuGluKeHLn4Ttmn/hbcUlj1ke9j1O6
6FtSFxUmddHRN9HEvibhuD49Y1QKSvQX7tep453UReeTvjHapC468BHFHVWv
z83xvt2ADzLZp+TG+jDN32jddkr4is2qo0O9E0I7/oRP6aJ5pC76htRFZ2ai
fLpKqf8qozNsKJLi2D1xnA8Y6SLuuu/EsHLijWZ8VSonePz2lI9KJqmL+pG6
aBAN7Y/e/GoJ5h5VeNf2rq9lqhxMZCXaf+tacCdzLj88ePqYZdhgH2b5Xoi4
7weXDQt3lkvCvQ31idc2TOmiI6TPyTVSF/2ehniGc6OtyXm1wjDGWmGdfS8f
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
N1L//CcvLzHNZ/K/AFfFwuk=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 274.53593197553937`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.005, 0.01}, {10, 500}, {76.20627720177471, 
    285.69749333543547`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.2909204117451956`, -0.04333174816041216, 0.786107628229235},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.748049687278512*^9, 3.748049726911879*^9}, {
   3.7480497759896507`*^9, 3.7480498550302563`*^9}, 3.748050447107188*^9, {
   3.748050644332512*^9, 3.748050664932996*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], 
     FractionBox["3", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"I", 
       FractionBox["\[Pi]", "h"], 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}], "-", " ", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "-", " ", 
      FractionBox["\[Pi]", "4"]}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], ")"}], 
     FractionBox["1", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "  ", "\[Lambda]"}], " ", 
      FractionBox["\[Pi]", "h"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}], "2"]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"%187", "/.", 
    RowBox[{"x", "\[Rule]", " ", 
     RowBox[{"h", " ", 
      RowBox[{"(", 
       RowBox[{"n", "+", " ", 
        FractionBox["\[Nu]", "2"], "+", 
        FractionBox["1", "4"]}], ")"}]}]}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7480469717868977`*^9, 3.748047016820633*^9}, {
  3.748048988109761*^9, 3.748049011375291*^9}, {3.748051219957981*^9, 
  3.748051265117426*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}]}], "h"], "-", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "+", 
           RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], "2"], " ", 
        "\[Lambda]"}], "h"], "-", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", "h"], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]], " ", 
    SqrtBox[
     RowBox[{"x", "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7480469835185423`*^9, 3.748047020915839*^9, 3.748049379481667*^9, {
   3.748051229593384*^9, 3.7480512610403*^9}, 3.7480513321394463`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.7480469835185423`*^9, 3.748047020915839*^9, 3.748049379481667*^9, {
   3.748051229593384*^9, 3.7480512610403*^9}, 3.748051342563869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], 
     FractionBox["3", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"I", 
       FractionBox["\[Pi]", "h"], 
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}], "-", " ", 
      FractionBox[
       RowBox[{"\[Pi]", " ", "\[Nu]"}], "2"], "-", " ", 
      FractionBox["\[Pi]", "4"]}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], ")"}], 
     FractionBox["1", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "  ", "\[Lambda]"}], " ", 
      FractionBox["\[Pi]", "h"], 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74804737455439*^9, 3.748047376512856*^9}, 
   3.748047476006913*^9, {3.7480488339246597`*^9, 3.74804883493749*^9}, 
   3.748048876572805*^9, {3.748048922951564*^9, 3.7480489251874123`*^9}, {
   3.748051348319757*^9, 3.748051355209038*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"3", " ", "x", " ", "\[Lambda]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "z", " ", "\[Lambda]"}]}], ")"}]}], 
         "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"6", " ", "\[Nu]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"4", " ", "h"}]]}]], " ", 
   SqrtBox[
    FractionBox["1", "h"]], " ", 
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"h", "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}], "+", 
           RowBox[{"4", " ", "x", " ", "\[Lambda]"}], "+", 
           RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "h"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "z", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"\[ImaginaryI]", " ", "\[Lambda]"}]}], ")"}]}], 
            "h"]]}], " ", 
         SqrtBox[
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], "+", 
        SqrtBox[
         RowBox[{"x", "+", 
          RowBox[{"\[ImaginaryI]", " ", "z"}]}]]}], ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"h", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           RowBox[{"6", " ", "x", " ", "\[Lambda]"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "z", " ", "\[Lambda]"}], 
           "+", 
           RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "h"}]]], " ", 
      SqrtBox["h"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{"x", "-", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], 
        SqrtBox["h"]], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"h", "+", 
           RowBox[{"2", " ", "z"}], "+", 
           RowBox[{"6", " ", "x", " ", "\[Lambda]"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "z", " ", "\[Lambda]"}], 
           "+", 
           RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "h"}]]], " ", 
      SqrtBox["h"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{"x", "+", 
           RowBox[{"\[ImaginaryI]", " ", "z"}]}]], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "+", "\[Lambda]"}]]}], 
        SqrtBox["h"]], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.748047361396559*^9, 3.7480473771370792`*^9}, {
   3.7480488270615807`*^9, 3.748048835277611*^9}, 3.748048877608818*^9, 
   3.7480489260649357`*^9, 3.748051377503758*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%189", "/.", 
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"h", 
       RowBox[{"(", 
        RowBox[{"n", "+", 
         FractionBox["\[Nu]", "2"], "+", 
         FractionBox["1", "4"]}], ")"}]}]}]}], "/.", 
    RowBox[{"z", "\[Rule]", " ", 
     FractionBox["\[Pi]", "3"]}]}], "/.", 
   RowBox[{"\[Lambda]", "\[Rule]", " ", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748051450061809*^9, 3.748051461697159*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox["2", 
     RowBox[{"3", "/", "4"}]]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", "\[Pi]", " ", 
     RowBox[{"Re", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "3"], "+", 
              FractionBox["\[ImaginaryI]", "3"]}], ")"}], " ", "\[Pi]"}], "+", 
           RowBox[{"3", " ", "h", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "4"], "+", "n", "+", 
              FractionBox["\[Nu]", "2"]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"6", " ", "\[Nu]"}]}], ")"}]}]}], "h"], "]"}]}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Abs", "[", 
    RowBox[{
     SqrtBox[
      FractionBox["1", "h"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "\[ImaginaryI]"}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "+", 
                RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "4"], "+", "n", "+", 
                FractionBox["\[Nu]", "2"]}], ")"}]}], "+", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"2", " ", "h"}]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["2", "3"], "+", 
                 FractionBox[
                  RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}], ")"}], " ", 
               SuperscriptBox["\[Pi]", "2"]}], "h"]]}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "4"], "+", "n", "+", 
                FractionBox["\[Nu]", "2"]}], ")"}]}]}]]}], "+", 
          SqrtBox[
           RowBox[{
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "4"], "+", "n", "+", 
               FractionBox["\[Nu]", "2"]}], ")"}]}]}]]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["2", "3"], "+", 
                FractionBox[
                 RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}], ")"}], " ", 
              "\[Pi]"}], "+", 
             RowBox[{"6", " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "4"], "+", "n", "+", 
                FractionBox["\[Nu]", "2"]}], ")"}]}], "+", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"2", " ", "h"}]]], " ", 
        SqrtBox["h"], " ", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}]], 
           " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "4"], "+", "n", "+", 
                FractionBox["\[Nu]", "2"]}], ")"}]}]}]]}], 
          SqrtBox["h"]], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"h", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["2", "3"], "+", 
                FractionBox[
                 RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}], ")"}], " ", 
              "\[Pi]"}], "+", 
             RowBox[{"6", " ", "h", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "4"], "+", "n", "+", 
                FractionBox["\[Nu]", "2"]}], ")"}]}], "+", 
             RowBox[{"2", " ", "h", " ", "\[Nu]"}]}], ")"}]}], 
          RowBox[{"2", " ", "h"}]]], " ", 
        SqrtBox["h"], " ", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", "\[Pi]"}]], 
           " ", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", "4"], "+", "n", "+", 
                FractionBox["\[Nu]", "2"]}], ")"}]}]}]]}], 
          SqrtBox["h"]], "]"}]}]}], ")"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.74805144177787*^9, 3.74805146284074*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nvals", " ", "=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"yvals", "=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "70"}], ",", " ", 
   RowBox[{"i", "\[LessEqual]", " ", "100"}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"nvals", ",", "i"}], "]"}], ";", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"yvals", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"%95", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", " ", "0.1"}]}], "/.", 
           RowBox[{"h", "\[Rule]", " ", "0.1"}]}], "/.", 
          RowBox[{"z", "\[Rule]", " ", 
           FractionBox["\[Pi]", "3"]}]}], "/.", 
         RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}], "/.", 
        RowBox[{"n", "\[Rule]", " ", "i"}]}], "]"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7480457391850986`*^9, 3.748045774321188*^9}, {
   3.748045846507023*^9, 3.748045975310692*^9}, {3.748046014035887*^9, 
   3.748046089181953*^9}, {3.748046189017193*^9, 3.748046209249874*^9}, {
   3.748046337762516*^9, 3.748046349856298*^9}, {3.748046619823386*^9, 
   3.7480466219779263`*^9}, {3.748046954825677*^9, 3.748046966875931*^9}, 
   3.748047025629867*^9, {3.748047217085235*^9, 3.748047393908317*^9}, {
   3.748047482119873*^9, 3.748047493784863*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.748045746970831*^9, 3.74804577571065*^9}, {
   3.7480458996956797`*^9, 3.7480459778606033`*^9}, {3.748046014876751*^9, 
   3.748046062448533*^9}, 3.748046145280925*^9, 3.748046191736972*^9, 
   3.748046268827973*^9, {3.748046339854322*^9, 3.748046350659544*^9}, 
   3.748046625217298*^9, 3.748047396108135*^9, {3.748047482723427*^9, 
   3.7480474941729383`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.748045746970831*^9, 3.74804577571065*^9}, {
   3.7480458996956797`*^9, 3.7480459778606033`*^9}, {3.748046014876751*^9, 
   3.748046062448533*^9}, 3.748046145280925*^9, 3.748046191736972*^9, 
   3.748046268827973*^9, {3.748046339854322*^9, 3.748046350659544*^9}, 
   3.748046625217298*^9, 3.748047396108135*^9, {3.748047482723427*^9, 
   3.7480474941777477`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"nvals", ",", "yvals"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.748045794277729*^9, 3.748045797466172*^9}, {
  3.748047400271822*^9, 3.7480474025549593`*^9}, {3.748047443525223*^9, 
  3.748047455718364*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtzVsowwEUx/F/eLTyYm/a8ECijBpq2S/ShDH/2/7Ci1DIJSMrpdVyCU2k
NZoiSh7Eg2uiybKa1L9WpoTcJw8URTy4/c+p0+n78Okk1rWzDVEMw2h+9+/+
j6MS4ful6pc3Gf/tq8RFgktnuwwozbCIUTXZe4I+pcFixvn5nTu1qbSDxbm6
2Zk9vkqeRV9vZO7MsEiew7K5drfONEuew9Zovd4fcJPncMGkFeedjJHnkL6S
v5OUM0CeR+TJY5h56yPPo6glK+NxsJs8j6+WvVDHXSt5Hs9rZebDjXryAgYs
hS55voa8ALVXjtb+/lG8AJ5r22xNKyUv4DVok1SzBeRF+NWMq9+WR15ETpzw
XsHqyIvIN3gPwvYU8iIaE687pxc05K2QPixF3ux48laENctmlT6WvBWe7Wij
3RtF3orTkRI5ufzDqHgJBR3y5K34rDQkeGotudqrG6UdElLd7s6jlVOlfRIe
htfVE/5j8lUY6jKFHjP3jT+RB5Sw
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{69.53125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{70., 100.}, {0, 7434.603388525684}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748047456480834*^9, 3.748047496437269*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "h"], ")"}], 
     FractionBox["3", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{"I", 
      FractionBox["\[Pi]", "h"], 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"I", " ", "y"}]}], ")"}]}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}], ")"}], 
     FractionBox["1", "2"]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "2"], 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Sigma]", "2"], 
         SuperscriptBox["h", "2"]}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}], ")"}], "2"]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "z"}], ",", "z"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"z", ">", "0"}], ",", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7480475410812902`*^9, 3.7480475678957357`*^9}, {
  3.74804761705582*^9, 3.748047617244432*^9}, {3.7480477498346148`*^9, 
  3.7480477647499533`*^9}, {3.748047868075407*^9, 3.748047881114809*^9}, {
  3.748051207626609*^9, 3.748051212614192*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7480476075075502`*^9, 3.748047641627616*^9, 
  3.748047861562543*^9, 3.7480483510966873`*^9, 3.748048617256987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       FractionBox["\[Pi]", "0.01"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.01", "*", "200000"}], "+", 
         RowBox[{"I", " ", "y"}]}], ")"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "10"]}], ",", 
     FractionBox["\[Pi]", "10"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748048353785853*^9, 3.748048457974012*^9}, {
  3.748048772696123*^9, 3.748048795673086*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
WUW3EkBfAYyBt4tYWrtIN9isi79slEPYKqd0165OUs3NHpcLX8rB6hbd8qJx
O4mnTu5k3vtyaGFiTEobopA8OSI3WHrLoSeUaeO8RStp0uZPhWNDOZCbtIeI
fS2kxAPtygpp5WARL+N/93UjifaO1O/Xb8rhS8pVid9uDSTz5tC6zWflMJ4k
Irk9Xk9qPrzldd2jHAI5ro5lf6klCTsaITX25dCQZuTyhauG5E9pouU1K4dC
wsS9wqSK9IlHrNlLpxzSB9SKTrVWkDI7VglUsRzqdDh2LMdLSfsE9BlSj5eD
1KaTwnxgCen2vbr23bzl4LIYZF2nWUzq6j4aeIu1HNyna1+8FC0iSQo9vdBB
Ww4VaalWB/cXkl64f2WWWCsD7vyGc9rc+aRvfdq9zz+VwVQiL7eWfC6p0IP3
ilZXGRwofBKTD5mk/YM+7MV1ZVD2/vlHDekMkrP450GOwjLomf5Rr1CZRhp8
dOn13eQyGNkI6RvQTyUpvCvWGw4vg/uLY1FprCmk15KHDikFlIElj+UE8T6J
tOHjORrtXgbTZm3/WVQnkqqk1Q2NjcsgbVR1zz3DOJIxjZ955pUyCGOOyxVO
jCHR94P1Kl4GS5MmPAd3okhZSb/szyqWQYDsmylwjSRpOp+++0SiDPa37/mb
SfeGtIa6PKTylYFxbUy8c/prUhRHwWNu9jI4pz+X328cTvpYKvoyf6sUbu5w
vvbbG0oK9DcP31oshSkb24iEzRCStF58NDpVCrLyrP6VX4NJQ6Jjic8HSmGe
tWTzOeNL0oNNrox3raVQmPNDZAV7ThJov5InUFUKmPXrEYXIQFJr5IuS27ml
oN9EZ9W4+xmJTXl3w05oKfy2UDjWL/qEVM5Ioqg/KQWFblJi1LAfyeC9R3eo
eynQWhnMyMX6kmhyKwfG7UqBXuoHs5OLDyndY21E1LQUXO9d+Ktk+Jh04ZLM
lKNOKdAsKaJ+ut6kZV67uWpyKTwvfSSYW+tFOgMfVjSlSiFHKs/k48mHpOlg
/q1IgVKwDmIq4ot2Jz0xNdiZ5SiF3In9GoUH3EgSsm/opRhKwWl9qF8s+x6J
SjvIeH+7BMolXpRJ6dwl3Rtg2d/4tQQMJ7mm3NhcSUdSNA4yzZRAn+K81/C0
M+km3iSU0FYCRv3mj4zKHUnMXDviX6pL4JbAd9tFZwdS0ZySjHx+CWx3fpOj
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
9Apxr0he4IMmGl6z9g1/qyvE/wevVUHG
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 10] Pi, Rational[1, 10] Pi}, {0., 
     2.813374873617092*^32}}, {{-0.3141592653589793, 0.3141592653589793}, {0.,
     2.813374873617092*^32}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.748048387691547*^9, 3.748048458564454*^9}, {
  3.748048773720892*^9, 3.7480487963567667`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HankelH1", "[", 
       RowBox[{"0", ",", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}]}], "]"}], 
      RowBox[{"HeavisideTheta", "[", "y", "]"}]}], "+", 
     RowBox[{
      RowBox[{"HankelH2", "[", 
       RowBox[{"0", ",", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}]}], "]"}], 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"-", "y"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748051160367876*^9, 3.748051161958405*^9}, {
  3.74805236255409*^9, 3.748052408056916*^9}, {3.748052481231846*^9, 
  3.748052498059421*^9}, {3.74805254597079*^9, 3.748052586609416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"HankelH1", "[", 
       RowBox[{"0", ",", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}]}], "]"}], 
      RowBox[{"HeavisideTheta", "[", "y", "]"}]}], "+", 
     RowBox[{
      RowBox[{"HankelH2", "[", 
       RowBox[{"0", ",", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}]}], "]"}], 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"-", "y"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7480526158951473`*^9, 3.7480526321513977`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"HankelH2", "[", 
      RowBox[{"0", ",", "x"}], "]"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "y", " ", 
      RowBox[{"HankelH2", "[", 
       RowBox[{"1", ",", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"HankelH2", "[", 
         RowBox[{"0", ",", "x"}], "]"}], "-", 
        RowBox[{"HankelH2", "[", 
         RowBox[{"2", ",", "x"}], "]"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{"-", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"HankelH1", "[", 
      RowBox[{"0", ",", "x"}], "]"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "y", " ", 
      RowBox[{"HankelH1", "[", 
       RowBox[{"1", ",", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"HankelH1", "[", 
         RowBox[{"0", ",", "x"}], "]"}], "-", 
        RowBox[{"HankelH1", "[", 
         RowBox[{"2", ",", "x"}], "]"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"HeavisideTheta", "[", "y", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.748052625446295*^9, 3.748052633038395*^9}}]
}, Open  ]]
},
WindowSize->{1084, 807},
WindowMargins->{{0, Automatic}, {34, Automatic}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1299, 39, 106, "Input"],
Cell[CellGroupData[{
Cell[1882, 63, 977, 26, 52, "Input"],
Cell[2862, 91, 12255, 215, 235, "Output"]
}, Open  ]],
Cell[15132, 309, 622, 16, 52, "Input"],
Cell[CellGroupData[{
Cell[15779, 329, 469, 12, 32, "Input"],
Cell[16251, 343, 210, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16498, 351, 535, 14, 32, "Input"],
Cell[17036, 367, 585, 11, 41, "Message"],
Cell[17624, 380, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17738, 386, 1266, 34, 99, "Input"],
Cell[19007, 422, 651, 12, 23, "Message"],
Cell[19661, 436, 1122, 19, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20820, 460, 95, 1, 32, "Input"],
Cell[20918, 463, 497, 9, 32, "Output"]
}, Open  ]],
Cell[21430, 475, 539, 14, 55, "Input"],
Cell[CellGroupData[{
Cell[21994, 493, 129, 2, 32, "Input"],
Cell[22126, 497, 69, 1, 32, "Output"]
}, Open  ]],
Cell[22210, 501, 1881, 52, 144, "Input"],
Cell[CellGroupData[{
Cell[24116, 557, 1198, 32, 121, "Input"],
Cell[25317, 591, 342, 7, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25696, 603, 118, 2, 32, "Input"],
Cell[25817, 607, 353, 7, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26207, 619, 1682, 38, 85, "Input"],
Cell[27892, 659, 22110, 414, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50039, 1078, 1575, 49, 152, "Input"],
Cell[51617, 1129, 5952, 139, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57606, 1273, 86, 2, 32, "Input"],
Cell[57695, 1277, 3418, 79, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61150, 1361, 1231, 29, 93, "Input"],
Cell[62384, 1392, 17725, 361, 281, 9321, 223, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80146, 1758, 448, 12, 32, "Input"],
Cell[80597, 1772, 103, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80737, 1778, 148, 3, 32, "Input"],
Cell[80888, 1783, 116, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81041, 1792, 666, 17, 52, "Input"],
Cell[81710, 1811, 4928, 95, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86675, 1911, 283, 7, 32, "Input"],
Cell[86961, 1920, 96, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87094, 1926, 355, 9, 32, "Input"],
Cell[87452, 1937, 153, 2, 32, "Output"]
}, Open  ]],
Cell[87620, 1942, 1625, 44, 140, "Input"],
Cell[CellGroupData[{
Cell[89270, 1990, 773, 20, 83, "Input"],
Cell[90046, 2012, 21424, 530, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111507, 2547, 221, 5, 32, "Input"],
Cell[111731, 2554, 580, 14, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112348, 2573, 616, 18, 37, "Input"],
Cell[112967, 2593, 306, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113310, 2609, 449, 13, 32, "Input"],
Cell[113762, 2624, 18092, 309, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131891, 2938, 393, 11, 96, "Input"],
Cell[132287, 2951, 192, 3, 32, "Output"],
Cell[132482, 2956, 192, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132711, 2964, 477, 15, 96, "Input"],
Cell[133191, 2981, 233, 5, 32, "Output"],
Cell[133427, 2988, 237, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133701, 2997, 413, 12, 96, "Input"],
Cell[134117, 3011, 168, 3, 32, "Output"],
Cell[134288, 3016, 168, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134493, 3024, 774, 23, 87, "Input"],
Cell[135270, 3049, 318, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135625, 3065, 182, 3, 32, "Input"],
Cell[135810, 3070, 135, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135982, 3076, 569, 15, 32, "Input"],
Cell[136554, 3093, 305, 8, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136896, 3106, 575, 16, 32, "Input"],
Cell[137474, 3124, 552, 16, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138063, 3145, 678, 19, 32, "Input"],
Cell[138744, 3166, 706, 20, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139487, 3191, 426, 11, 32, "Input"],
Cell[139916, 3204, 953, 28, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140906, 3237, 961, 28, 66, "Input"],
Cell[141870, 3267, 171, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142078, 3274, 896, 26, 65, "Input"],
Cell[142977, 3302, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143113, 3308, 976, 26, 63, "Input"],
Cell[144092, 3336, 173, 2, 32, "Output"]
}, Open  ]],
Cell[144280, 3341, 95, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[144400, 3346, 314, 9, 37, "Input"],
Cell[144717, 3357, 663, 23, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145417, 3385, 258, 7, 37, "Input"],
Cell[145678, 3394, 125, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145840, 3402, 436, 13, 96, "Input"],
Cell[146279, 3417, 218, 4, 32, "Output"],
Cell[146500, 3423, 216, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146753, 3432, 473, 15, 96, "Input"],
Cell[147229, 3449, 235, 5, 32, "Output"],
Cell[147467, 3456, 237, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147741, 3465, 1073, 32, 96, "Input"],
Cell[148817, 3499, 2887, 60, 240, "Output"],
Cell[151707, 3561, 2893, 60, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154637, 3626, 1081, 32, 96, "Input"],
Cell[155721, 3660, 3236, 67, 241, "Output"],
Cell[158960, 3729, 3301, 68, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162298, 3802, 321, 9, 52, "Input"],
Cell[162622, 3813, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162758, 3819, 432, 11, 32, "Input"],
Cell[163193, 3832, 18489, 475, 1134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181719, 4312, 373, 9, 52, "Input"],
Cell[182095, 4323, 148, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182280, 4330, 866, 24, 84, "Input"],
Cell[183149, 4356, 4652, 91, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187838, 4452, 725, 22, 87, "Input"],
Cell[188566, 4476, 323, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188926, 4492, 332, 9, 32, "Input"],
Cell[189261, 4503, 299, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189597, 4519, 5702, 160, 447, "Input"],
Cell[195302, 4681, 193, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195532, 4689, 844, 26, 184, "Input"],
Cell[196379, 4717, 218, 4, 32, "Output"],
Cell[196600, 4723, 217, 4, 32, "Output"],
Cell[196820, 4729, 232, 4, 32, "Output"],
Cell[197055, 4735, 232, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197324, 4745, 1422, 40, 135, "Input"],
Cell[198749, 4787, 27137, 723, 1232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225923, 5515, 976, 30, 102, "Input"],
Cell[226902, 5547, 6633, 189, 323, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233572, 5741, 523, 13, 32, "Input"],
Cell[234098, 5756, 59228, 983, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293363, 6744, 412, 11, 32, "Input"],
Cell[293778, 6757, 6717, 122, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300532, 6884, 1140, 34, 102, "Input"],
Cell[301675, 6920, 128, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301840, 6927, 973, 30, 102, "Input"],
Cell[302816, 6959, 8879, 249, 590, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311732, 7213, 371, 9, 32, "Input"],
Cell[312106, 7224, 12163, 314, 860, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324306, 7543, 12069, 312, 1310, "Input"],
Cell[336378, 7857, 12114, 313, 860, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348529, 8175, 2257, 56, 158, "Input"],
Cell[350789, 8233, 504, 11, 23, "Message"],
Cell[351296, 8246, 504, 11, 23, "Message"],
Cell[351803, 8259, 154736, 2619, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506576, 10883, 1310, 30, 126, "Input"],
Cell[507889, 10915, 56007, 1025, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563933, 11945, 529, 14, 32, "Input"],
Cell[564465, 11961, 229, 7, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564731, 11973, 1053, 29, 98, "Input"],
Cell[565787, 12004, 761, 22, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566585, 12031, 891, 26, 98, "Input"],
Cell[567479, 12059, 638, 19, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568154, 12083, 928, 28, 98, "Input"],
Cell[569085, 12113, 671, 21, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569793, 12139, 901, 28, 98, "Input"],
Cell[570697, 12169, 650, 21, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571384, 12195, 394, 10, 32, "Input"],
Cell[571781, 12207, 973, 31, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572791, 12243, 484, 12, 32, "Input"],
Cell[573278, 12257, 17457, 299, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590772, 12561, 1228, 36, 117, "Input"],
Cell[592003, 12599, 1159, 33, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593199, 12637, 334, 9, 32, "Input"],
Cell[593536, 12648, 109528, 1855, 227, 69201, 1192, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703101, 14508, 426, 11, 32, "Input"],
Cell[703530, 14521, 221, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703788, 14532, 292, 8, 32, "Input"],
Cell[704083, 14542, 11290, 197, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715410, 14744, 214, 5, 52, "Input"],
Cell[715627, 14751, 711, 27, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716375, 14783, 1004, 30, 105, "Input"],
Cell[717382, 14815, 902, 26, 61, "Output"]
}, Open  ]],
Cell[718299, 14844, 68, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[718392, 14849, 892, 28, 105, "Input"],
Cell[719287, 14879, 855, 25, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720179, 14909, 4365, 109, 351, "Input"],
Cell[724547, 15020, 117213, 1972, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[841797, 16997, 1275, 36, 117, "Input"],
Cell[843075, 17035, 816, 24, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843928, 17064, 1919, 51, 195, "Input"],
Cell[845850, 17117, 859, 25, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846746, 17147, 1678, 45, 165, "Input"],
Cell[848427, 17194, 1079, 30, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849543, 17229, 2157, 57, 195, "Input"],
Cell[851703, 17288, 22269, 401, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874009, 17694, 2166, 57, 195, "Input"],
Cell[876178, 17753, 22231, 400, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898446, 18158, 1641, 45, 130, "Input"],
Cell[900090, 18205, 1106, 33, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901233, 18243, 1577, 43, 130, "Input"],
Cell[902813, 18288, 1109, 33, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903959, 18326, 2301, 63, 195, "Input"],
Cell[906263, 18391, 1813, 52, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[908113, 18448, 2162, 58, 187, "Input"],
Cell[910278, 18508, 67528, 1268, 236, 55922, 1077, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977843, 19781, 2113, 56, 195, "Input"],
Cell[979959, 19839, 64295, 1077, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044291, 20921, 2221, 59, 195, "Input"],
Cell[1046515, 20982, 67107, 1122, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1113659, 22109, 958, 27, 57, "Input"],
Cell[1114620, 22138, 801, 23, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115458, 22166, 636, 17, 57, "Input"],
Cell[1116097, 22185, 405, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1116539, 22201, 481, 13, 56, "Input"],
Cell[1117023, 22216, 448, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117508, 22234, 3114, 81, 273, "Input"],
Cell[1120625, 22317, 8332, 170, 214, "Output"]
}, Open  ]],
Cell[1128972, 22490, 1076, 30, 71, "Input"],
Cell[CellGroupData[{
Cell[1130073, 22524, 916, 27, 82, "Input"],
Cell[1130992, 22553, 16607, 285, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1147636, 22843, 2042, 48, 105, "Input"],
Cell[1149681, 22893, 1329, 32, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151047, 22930, 1392, 40, 105, "Input"],
Cell[1152442, 22972, 1040, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153519, 23005, 1120, 29, 71, "Input"],
Cell[1154642, 23036, 309, 7, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154988, 23048, 531, 13, 56, "Input"],
Cell[1155522, 23063, 2810, 91, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158369, 23159, 1023, 27, 56, "Input"],
Cell[1159395, 23188, 938, 27, 49, "Output"]
}, Open  ]],
Cell[1160348, 23218, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[1160467, 23223, 1069, 28, 71, "Input"],
Cell[1161539, 23253, 286, 7, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1161862, 23265, 1107, 33, 88, "Input"],
Cell[1162972, 23300, 1086, 33, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164095, 23338, 1148, 30, 82, "Input"],
Cell[1165246, 23370, 875, 25, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1166158, 23400, 560, 17, 90, "Input"],
Cell[1166721, 23419, 5359, 100, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1172117, 23524, 605, 17, 52, "Input"],
Cell[1172725, 23543, 145, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1172907, 23550, 731, 22, 52, "Input"],
Cell[1173641, 23574, 692, 22, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1174370, 23601, 119, 2, 32, "Input"],
Cell[1174492, 23605, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1174599, 23611, 710, 22, 58, "Input"],
Cell[1175312, 23635, 256, 5, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1175605, 23645, 840, 26, 58, "Input"],
Cell[1176448, 23673, 544, 19, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177029, 23697, 707, 19, 52, "Input"],
Cell[1177739, 23718, 63976, 1050, 314, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1241752, 24773, 296, 8, 52, "Input"],
Cell[1242051, 24783, 219, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242307, 24794, 300, 8, 32, "Input"],
Cell[1242610, 24804, 794, 23, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1243441, 24832, 2611, 68, 111, "Input"],
Cell[1246055, 24902, 6839, 200, 175, "Output"],
Cell[1252897, 25104, 7388, 211, 163, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1260322, 25320, 8378, 215, 502, "Input"],
Cell[1268703, 25537, 8417, 242, 644, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277157, 25784, 502, 11, 32, "Input"],
Cell[1277662, 25797, 81550, 1334, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1359249, 27136, 2015, 61, 141, "Input"],
Cell[1361267, 27199, 1532, 45, 88, "Output"],
Cell[1362802, 27246, 196, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363035, 27254, 1543, 45, 93, "Input"],
Cell[1364581, 27301, 3854, 112, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1368472, 27418, 493, 14, 58, "Input"],
Cell[1368968, 27434, 5796, 167, 362, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374801, 27606, 1463, 34, 128, "Input"],
Cell[1376267, 27642, 430, 7, 32, "Output"],
Cell[1376700, 27651, 430, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1377167, 27663, 377, 9, 55, "Input"],
Cell[1377547, 27674, 1915, 43, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1379499, 27722, 1547, 46, 94, "Input"],
Cell[1381049, 27770, 172, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1381258, 27777, 607, 18, 52, "Input"],
Cell[1381868, 27797, 49539, 825, 244, "Output"]
}, Open  ]],
Cell[1431422, 28625, 979, 27, 55, "Input"],
Cell[CellGroupData[{
Cell[1432426, 28656, 674, 20, 32, "Input"],
Cell[1433103, 28678, 1316, 39, 123, "Output"]
}, Open  ]]
}
]
*)

